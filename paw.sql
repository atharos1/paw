INSERT INTO public.actor (id, name, created, updated, status) VALUES (1, 'James Farentino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (2, 'Brandon Jay McLaren', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (3, 'Steve Byers', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (4, 'Jessica Sipos', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (5, 'Katie McGrath', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (7, 'Dean McDermott (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (8, 'Erin Karpluk (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (9, 'Rob Stewart (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (10, 'Enuka Okuma (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (11, 'Mark Ghanime (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (12, 'Mayko Nguyen (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (13, 'Patrick Garrow (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (14, 'Jefferson Brown (Season 1)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (15, 'Christopher Jacot (season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (16, 'Jefferson Brown (season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (17, 'Jim Watson (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (18, 'Joanne Vannicola (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (19, 'Kaitlyn Leeb (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (20, 'Leslie Hope (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (21, 'Lovell Adams-Grey (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (22, 'Madison Cheeatow (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (23, 'Melinda Shankar (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (24, 'Paula Brancati (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (25, 'Paulino Nunes (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (26, 'Rebecca Liddiard (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (27, 'Sebastian Pigott (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (28, 'Ty Olsson (Season 2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (29, 'Salvator Antonio (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (30, 'Mercedes Morris (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (31, 'Robert Cormier (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (32, 'Baraka Rahmani (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (33, 'Ishan Dave (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (34, 'Lisa Berry (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (35, 'Genevieve DeGraves (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (36, 'Rosie Simon (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (37, 'Dean McDermott (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (38, 'Gabriel Darku (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (39, 'Paula Brancati (Season 3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (40, 'Peter Berg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (41, 'Esben Smed Jensen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (42, 'Nikolaj Lie Kaas', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (43, 'Thomas Bo Larsen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (44, 'Natalie Madueño', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (45, 'Lucas Hansen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (46, 'Thomas Hwan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (47, 'Charlotte Munck', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (48, 'Line Kruse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (49, 'Waage Sandø', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (50, 'Claes Ljungmark', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (51, 'Anders Heinrichsen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (52, 'Kim Byung-man', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (53, 'Yook Joong-wan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (54, 'Park Chul-min', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (55, 'On Joo-hwan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (56, 'Kim Poong', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (57, 'Lee Jung-shin (CNBLUE)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (58, 'Ha Jae-sook', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (59, 'UEE (After School)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (60, 'Fei (miss A )', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (61, 'Goo Hara (Kara)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (62, 'Choi Jung-yoon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (63, 'Im Soo-Hyang', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (64, 'Oh Jung-yeon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (65, 'Victoria Song', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (66, 'Amber', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (67, 'Luna', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (68, 'Krystal', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (69, 'Lee Kwang-Soo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (70, 'Jung Hae-Kyun', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (71, 'Kwak Dong-Yeon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (72, 'Son Soo-Hyun', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (73, 'Jang Na-Ra', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (74, 'Jung Kyoung-Ho', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (75, 'You Da-In', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (76, 'Yoo In-Na', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (77, 'Kwon Yool', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (78, 'Seo In-Young', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (79, 'Abz Love', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (80, 'Vicky Fallon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (81, 'Nikki Glaser', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (82, 'Lucy Worsley', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (83, 'Tyler Henry', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (84, 'Tracey Ullman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (85, 'Winona Ryder', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (86, 'Matthew Modine', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (87, 'David Harbour', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (88, 'Millie Bobby Brown', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (89, 'Gaten Matarazzo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (90, 'Caleb McLaughlin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (91, 'Finn Wolfhard', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (92, 'Natalia Dyer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (93, 'Noah Schnapp', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (94, 'Charlie Heaton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (95, 'Dacre Montgomery', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (96, 'Sean Astin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (97, 'Sadie Sink', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (98, 'Joe Keery', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (99, 'Maya Hawke', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (100, 'Priah Ferguson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (101, 'Ethan Klein', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (102, 'Hila Klein', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (103, 'Jimmy de Ville', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (104, 'Adrian Chiles', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (105, 'Juliet Berto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (106, 'Michèle Moretti', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (107, 'Michael Lonsdale', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (108, 'Bernadette Lafont', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (109, 'Jean-Pierre Léaud', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (110, 'Françoise Fabian', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (111, 'Hermine Karagheuz ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (112, 'Bulle Ogier', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (113, 'Jillian Bell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (114, 'Charlotte Newhouse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (115, 'Jennifer Elise Cox', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (116, 'Stephen Root', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (117, 'Steve Berg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (118, 'Song Joong-ki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (119, 'Song Hye-kyo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (120, 'Jin Goo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (121, 'Kim Ji-won', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (122, 'Onew', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (123, 'Ivete Sangalo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (124, 'Victor Pimentel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (125, 'Leo Pimentel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (126, 'Tiago Leifert', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (127, 'Kika Martinez', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (128, 'André Marques ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (129, 'Thalita Rebouças', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (130, 'Carlinhos Brown', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (131, 'Claudia Leitte', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (132, 'Simone Mendes', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (133, 'Simaria Mendes', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (134, 'Fatima Al Taei', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (135, 'Aiham AlSubaihi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (136, 'Paul Rust', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (137, 'Gillian Jacobs', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (138, 'Claudia O''Doherty', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (139, 'Briga Heelan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (140, 'John Ross Bowie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (141, 'Charlyne Yi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (142, 'Iris Apatow', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (143, 'Jordan Rock', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (144, 'Mike Mitchell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (145, 'Brett Gelman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (146, 'Bobby Lee', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (147, 'Tracie Thoms', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (148, 'Chris Witaske', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (149, 'Amanda Abbington', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (150, 'Rebecca Callard', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (151, 'Saskia Reeves', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (152, 'Richard Lintern', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (153, 'David Ryall', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (154, 'Jamie Glover', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (155, 'Peter Lusse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (156, 'Mary-Lou van Steenis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (157, 'Kam Woo-sung', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (158, 'Son Ye-jin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (159, 'Gong Hyung-Jin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (160, 'Lee Ha-NA', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (161, 'Oh Yun-A', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (162, 'Lee Jin-Yook', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (163, 'Moon Jeong-Hee', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (164, 'Eva Röse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (165, ' Reuben Sallmander', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (166, 'Allan Svensson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (167, 'Peter Perski', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (168, 'Ulf Friberg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (169, 'Nicholas Tse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (170, 'Gillian Chung', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (171, 'Annie Yi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (172, 'Patrick Tam', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (173, 'Qiao Zhen Yu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (174, 'Yang Rui', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (175, 'Zhao Hong Fei', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (176, 'Ji Chun Hua', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (177, 'Zhou Li', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (178, 'Xu Xiang Dong', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (179, 'Robert Bartlett', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (180, 'J.D. Roth', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (181, 'Kazuhiro Yamaji', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (182, 'Yuji Ueda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (184, 'Shigenori Yamazaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (185, 'Gin Fujii', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (186, 'Hari Kaneko', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (187, 'Masako Iwasaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (188, 'Takashi Matsuyama', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (189, 'Michael Härle', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (190, 'Oliver Muth', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (191, 'Victor Schefé', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (192, 'Ingrid van Bergen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (193, 'Benedict Allen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (194, 'Carlo Lucarelli', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (195, 'Brendan Moar', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (196, 'Margaret Rutherford', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (197, 'Stringer Davis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (198, 'Charles Tingwell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (199, 'Gérard Depardieu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (200, 'Christian Clavier', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (201, 'John Malkovich', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (202, 'Virginie Ledoyen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (203, 'Enrico Lo Verso', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (204, 'Charlotte Gainsbourg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (205, 'Asia Argento', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (207, 'Jeanne Moreau', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (208, 'Vadim Glowna', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (209, 'Silje Sandmæl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (210, 'Cecilie Lynum', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (211, 'Magne Gundersen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (212, 'Christian Vennerød', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (213, 'Hallgeir Kvadsheim', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (214, 'Elin Ørjasæter', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (215, 'Lena Heimstad', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (216, 'Christian Moe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (217, 'Robert Speare', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (218, 'Jonas Bakkevig', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (219, 'Lene Drange', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (220, 'Armin Mueller-Stahl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (221, 'Monica Bleibtreu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (222, 'Jürgen Hentsch', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (206, 'Veronica Ferres', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (223, 'Sebastian Koch', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (224, 'Sophie Rois', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (225, 'Stefanie Stappenbeck', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (226, 'Philipp Hochmair', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (227, 'Katharina Eckerfeld', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (228, 'Rüdiger Klink', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (229, 'Elisabeth Mann-Borgese	', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (230, 'Tom Beck', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (231, 'Gedeon Burkhard', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (232, 'René Steinke', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (233, 'Dietmar Huhn', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (234, 'Charlotte Schwab', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (235, 'Gottfried Vollmer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (236, 'Katrin Heß', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (237, 'Daniela Wutte', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (238, 'Niels Kurvin ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (239, 'Erdoğan Atalay', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (240, 'Vinzenz Kiefer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (241, 'Katja Woywood', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (242, 'Daniel Roesner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (243, 'Carina Wiese', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (244, 'Christian Oliver', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (245, 'Lion Wasczyk', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (246, 'Gizem Emre', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (247, 'John Marsden', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (248, 'Jamie Theakston', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (249, 'Phill Lewis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (250, 'Debby Ryan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (251, 'Brenda Song', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (252, 'Dylan Sprouse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (253, 'Cole Sprouse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (254, 'Doc Shaw', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (255, 'Erin Cardillo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (256, 'Ashley Tisdale', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (257, 'Matthew Timmons', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (258, 'Peter Dinklage', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (259, 'Francesco Da Mosto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (260, 'Klaus J. Behrendt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (261, 'Dietmar Bär', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (262, 'Tessa Mittelstaedt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (263, 'Götz George', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (264, 'Harald Krassnitzer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (265, 'Mehmet Kurtuluş', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (266, 'Simone Thomalla', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (267, 'Martin Wuttke', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (268, 'Axel Prahl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (269, 'Jan Josef Liefers', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (270, 'Miroslav Nemec', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (271, 'Udo Wachtveitl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (272, 'Axel Milberg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (273, 'Sibel Kekilli', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (274, 'Jörg Hartmann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (275, 'Anna Schudt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (276, 'Aylin Tezel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (277, 'Stefan Konarske', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (278, 'Devid Striesow', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (279, 'Manfred Krug', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (280, 'Charles Brauer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (281, 'Walter Richter', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (282, 'Peter Sodann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (283, 'Bernd Michael Lade', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (284, 'Dominic Raacke', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (285, 'Boris Aljinovic ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (286, 'Maria Furtwängler', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (287, 'Ingo Naujoks', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (288, 'Sabine Postel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (289, 'Oliver Mommsen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (290, 'Ulrike Folkerts', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (291, 'Andreas Hoppe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (292, 'Jörg Schüttauf', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (293, 'Andrea Sawatzki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (294, 'Joachim Krol', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (295, 'Nina Kunzendorf', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (296, 'Richy Müller', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (297, 'Felix Klare', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (298, 'Maximilian Brückner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (300, 'Klaus Schwarzkopf', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (301, 'Hansjörg Felmy', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (302, 'Willy Semmelrogge', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (303, 'Fritz Eckhardt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (304, 'Klaus Wildbolz', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (305, 'Hans Peter Korff', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (306, 'Dietz Werner Steck', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (307, 'Eva Mattes', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (308, 'Hans Häckermann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (309, 'Knut Hinz', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (310, 'Horst Bollmann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (311, 'Ulrich von Bock', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (312, 'Gustl Bayrhammer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (313, 'Klaus Höhne', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (314, 'Herbert Bötticher', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (315, 'Gunther Beth', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (316, 'Stefan Gubser', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (317, 'Ralph Gassmann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (183, 'Rie Tanaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (318, 'Sebastian Bezzel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (319, 'Delia Mayer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (320, 'Elisabeth Brück', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (321, 'Wotan Wilke Möhring,', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (322, 'Franziska Weisz', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (323, 'Petra Schmidt-Schaller', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (324, 'Martin Brambach', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (325, 'Alwara Höfels', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (326, 'Friedrich Mücke', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (327, 'Benjamin Kramme', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (328, 'Alina Levshin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (329, 'Margarita Broich', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (330, 'Wolfram Koch', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (331, 'Roeland Wiesnekker', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (332, 'Bruno Cathomas', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (333, 'Isaak Dentler', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (334, 'Till Schweiger', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (335, 'Fahri Yardım', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (336, 'Eva Löbau', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (337, 'Hans-Jochen Wagner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (338, 'Fabian Hinrichs', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (339, 'Dagmar Manzel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (340, ' Eli Wasserscheid', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (341, 'Stefan Merki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (342, 'Matthias Egersdörfer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (343, 'Christian Ulmen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (344, 'Nora Tschirner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (345, 'Ulrich Tukur', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (346, 'Barbara Philipp', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (347, 'Adele Neuhauser', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (348, 'Winfried Glatzeder', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (349, 'Robinson Reichel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (350, 'Maren Eggert', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (351, 'Tilo Prückner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (352, 'Robert Atzorn', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (353, 'Werner Schumacher', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (354, 'Jochen Senf', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (355, 'Karl-Heinz von Hassel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (356, 'Michael Janisch', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (357, 'Karin Anselm', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (358, 'Günter Lamprecht', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (359, 'Lisa Wagner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (360, 'Sieghardt Rupp', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (362, 'Heinz Drache', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (363, 'Stefan Jürgens', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (364, 'Volker Brandt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (365, 'Heinz Schimmelpfennig', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (366, 'Manfred Heidmann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (367, 'Martin Hirthe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (368, 'Nicole Heesters', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (369, 'Klaus Löwitsch', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (370, 'Martin Lüttge', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (371, 'Roswitha Schreiner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (372, 'Karin Hanczewski', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (299, 'Gregor Weber', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (373, 'Christina Große', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (374, 'John Waters', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (376, 'Tasos Kostis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (377, 'Niki Sereti', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (378, 'Anna Panagiotopoulou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (379, 'Katiana Mpalanika', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (380, 'Thanasis Eythimiadis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (381, 'David Dimbleby', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (382, 'Victoria Coren Mitchell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (383, 'Victoria Coren', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (384, 'Ray McAnally', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (385, 'Keith Allen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (386, 'Tim McInnerny', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (387, 'Oliver Ford Davies', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (388, 'Bernard Kay', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (389, 'Jim Carter', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (390, 'Anna Walton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (391, 'Philip Winchester', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (392, 'Tongayi Chirisa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (393, 'Mia Maestro', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (395, 'Joaquim De Almeida', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (397, 'James May', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (398, 'David Walliams', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (399, 'Matt Lucas', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (400, 'Tom Baker', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (401, 'Charlie Cox', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (402, 'Warren Brown', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (403, 'Steve Pizzati', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (404, 'James Morrison', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (405, 'The Stig', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (406, 'Shane Jacobson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (407, 'Ewen Page', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (408, 'Robert Carlyle', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (409, 'Louis Ferreira', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (410, 'Ming-Na Wen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (411, 'David Blue', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (412, 'Alaina Huffman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (413, 'Brian J. Smith', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (414, 'Jamil Walker Smith', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (415, 'Elyse Levesque', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (416, 'Lou Diamond Phillips', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (417, 'Julia Benson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (418, 'Peter Kelamis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (419, 'Mark Burgess', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (420, 'Jennifer Spence', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (421, 'Haig Sutherland', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (422, 'Patrick Gilmore', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (423, 'Richard Dean Anderson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (424, 'Bruno Solo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (425, 'Yvan Le Bolloc''h', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (426, 'Alexandre Pesle', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (427, 'Jeanne Savary', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (428, 'Alain Bouzigues', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (429, 'Valérie Decobert', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (430, 'Armelle', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (431, 'Gérard Chaillou ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (432, 'Shirley Bousquet', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (433, 'Sylvie Loeillet', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (434, 'Sophie Renoir ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (435, 'Karim Adda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (436, 'Philippe Cura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (437, 'Noémie Elbaz', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (438, 'Chantal Neuwirth', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (439, 'Tom Novembre', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (440, 'Lee Ingleby', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (441, 'Emma Cunniffe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (442, 'Philip Jackson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (443, 'Juliet Stevenson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (444, 'Tony Maudsley', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (445, 'Marco Lettosalo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (446, 'Katsuaki Arima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (447, 'Kotomi Muto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (448, 'Yuki Masuda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (449, 'Akira Negishi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (450, 'Fumio Yoshioka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (452, 'Kenji Nomura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (453, 'Naoko Miura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (454, 'Ryoko Nagata', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (455, 'Sanryo Odaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (457, 'Emiko Itou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (458, 'Sumi Mutoh', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (459, 'Mel Smith', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (460, 'Griff Rhys Jones', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (461, 'Sarah Alexander', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (462, 'Simon Greenall', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (463, '	Peter Blake', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (464, '	Robin Driscoll', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (465, 'Chris Langham', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (466, 'Håkan Hallin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (467, 'Ad-Just Bouwman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (468, 'Justus van Oel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (469, 'Arjen Lubach', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (470, 'Ellemijn Veldhuijzen van Zanten', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (471, 'Alexander Nijeboer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (472, 'Patrick Lodiers', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (473, 'Filemon Wesselink', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (474, 'Val Kilmer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (475, 'Jessalyn Gilsig', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (476, 'Greg Bryk', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (394, 'Sam Neill', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (451, 'Junpei Morita', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (361, 'Helmut Fischer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (456, 'Yumiko Kobayashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (477, 'Mimi Kuzyk', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (478, 'Ted Atherton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (479, 'Stephen Dorff', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (480, 'Lucinda Davis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (481, 'Stephen McHattie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (482, 'Caterina Murino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (483, 'Cedric Smith', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (484, 'Julian Richings', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (485, 'Jonathon Higgins', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (486, 'Barbara Gordon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (487, 'Kouji Nakata', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (488, 'Kooichi Kitamura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (489, 'Kiyoshi Kawakubo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (490, 'Noriko Hidaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (491, 'Akio Ohtsuka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (493, 'Mako Hyoudou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (494, 'Shinichiro Miki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (495, 'Rokurou Naya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (496, 'Rihoko Yoshida', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (497, 'Nobuo Tanaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (498, 'Kousei Yagi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (499, 'Toshihiko SEki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (500, 'Shunsuke Shima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (501, 'Moran Atias', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (502, 'Nick E. Tarabay', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (503, 'Luis Chavez', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (504, 'Jocko Sims', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (505, 'Arlene Tur', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (506, 'Brian Tee', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (507, 'Ross McCall', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (508, 'Clare Carey', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (509, 'Dennis Hopper', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (510, 'Federico D''Elía', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (511, 'Antonio Garrido', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (512, 'Bruno Lastra', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (513, 'Cesar Vea', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (514, 'Matthew Wood', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (515, 'Dee Bradley Baker', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (516, 'Nika Futterman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (517, 'Tom Kenny', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (518, 'Tom Kane', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (519, 'Catherine Taber', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (520, 'Matt Lanter', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (521, 'Ashley Eckstein', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (522, 'James Arnold Taylor', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (523, 'Terrence C. Carson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (525, 'Ian Abercrombie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (526, 'Stephen Stanton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (396, '', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (527, 'Phil LaMarr', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (528, 'Samuel Witwer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (524, 'Corey Burton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (529, 'Jim Cummings', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (530, 'Miranda Richardson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (532, 'Helena Bonham Carter', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (533, 'John Gielgud', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (534, 'Martin Short', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (535, 'Paul Curran', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (537, 'Rutger Hauer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (531, 'Isabella Rossellini', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (536, 'Jason Done', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (538, 'Jeremy Sheffield', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (539, 'Jamie Oliver', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (540, 'Erwin Steinhauer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (541, 'Florian Scheuba', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (542, 'Thomas Maurer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (543, 'Rupert Henning', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (544, 'Lars Mjøen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (545, 'Knut Lystad', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (546, 'Trond Kirkvaag', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (547, 'Tom Mathisen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (548, 'Mitsuko Horie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (549, 'Chie Satô', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (550, 'Saori Gotou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (552, 'Momoko Ishikawa ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (554, 'Nobuaki Kanemitsu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (555, 'Mami Fujita', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (556, 'Fuyuka Ooura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (557, 'Ryouko Shiraishi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (558, 'Minori Chihara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (559, 'Kazuyuki Okitsu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (560, 'Ai Nonaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (561, 'Hiroyuki Yoshino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (563, 'Sayaka Oohara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (564, 'Eri Kitamura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (565, 'Hirofumi Nojima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (569, 'Rodrigo Noya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (570, 'Oski Guzmán', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (571, 'Rodrigo de la Serna', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (572, 'Carlos Moreno', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (573, 'María Marull', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (375, 'Γιάννης Μπέζος', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (574, 'Κατερίνα Λέχου', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (575, 'Δημήτρης Μαυρόπουλος', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (576, 'Antonio Gil Martínez', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (578, 'Carolina Bang', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (579, 'Manuel Tallafé', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (580, 'Enrique Villén', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (581, 'Enrique Martínez', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (582, 'Mariano Venancio', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (583, 'Gracia Olayo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (584, 'Gene Galusha ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (585, 'Hannah Job', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (586, 'Ceri Phillips', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (587, 'Anabel Barnston', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (588, 'Tony Bignell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (589, 'Joe Tracini', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (590, 'Victoria Stillwell', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (591, 'Sean Chapman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (592, 'Sam Lerner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (593, 'Phil Morris', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (594, 'Nicole Sullivan', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (595, 'James Bolam', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (596, 'Barbara Flynn', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (597, 'Ayahi Takagaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (598, 'Ryosuke Sakamaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (599, 'Takashi Taniguchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (600, 'Yuusaku Yara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (601, 'Banjou Ginga', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (602, 'Chigusa Ikeda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (603, 'Haruhi Terada', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (604, 'Hidetoshi Nakamura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (605, 'Masashi Ebara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (607, 'Satsuki Yukino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (609, 'Chafurin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (492, 'Daiki Nakamura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (610, 'Daisuke Gouri', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (611, 'Fumihiko Tachiki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (612, 'Hiroshi Naka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (568, 'Junji Majima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (613, 'Katsuhisa Houki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (614, 'Kazuhiro Nakata', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (615, 'Kenyuu Horiuchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (616, 'Koichi Sakaguchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (617, 'Kouzou Mito', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (618, 'Kurumi Mamiya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (619, 'Mitsuki Saiga', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (606, 'Miyako Itou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (567, 'Rie Kugimiya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (620, 'Saki Nakajima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (621, 'Souzou Iizuka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (622, 'Takako Honda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (623, 'Tesshou Genda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (624, 'Toshiko Fujita', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (625, 'Mikael Persbrandt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (626, 'Sofia Ledarp', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (627, 'Helena af Sandeberg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (628, 'Francisco Sobrado', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (629, 'Leonard Terfelt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (630, 'Christian Potenza', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (631, 'Megan Fahlenbock', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (632, 'Scott McCord', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (633, 'Sarah Gadon', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (634, 'Lauren Lipson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (566, 'Yui Horie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (562, 'Yuuko Kaida', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (553, 'Nobuhiko Okamoto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (577, 'Carlos Areces', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (608, 'Yasunori Matsumoto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (635, 'Dan Petronijevic', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (636, 'Julia Chantrey', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (637, 'Drew Nelson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (638, 'Clé Bennett (2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (639, 'Kristin Fairlie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (640, 'Carter Hayden', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (641, 'Stephanie Anne Mills', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (642, 'Novie Edwards', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (643, 'Katie Crown', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (644, 'Rachel Wilson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (645, 'Peter Oldring (2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (646, 'Emilie-Claire Barlow', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (647, 'Peter Oldring (3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (648, 'Clé Bennett', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (649, 'Scott McCord (2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (650, 'Brian Froud', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (651, 'Peter Oldring', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (652, 'Adam Reid', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (653, 'Stephanie Anne Mills (2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (654, 'Carla Collins', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (655, 'Marco Grazzini', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (656, 'Cory Doran', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (657, 'Barbara Mamabolo', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (658, 'James Wallis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (659, 'Kevin Duhaney', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (660, 'Jon Cor', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (661, 'Athena Karkanis', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (662, 'Ashley Peters', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (663, 'Zachary Bennett', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (664, 'Sarah Podemski', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (665, 'Rochelle Wilson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (666, 'Katie Bergin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (667, 'Bruce Dow', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (668, 'Kristi Friday', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (669, 'Daniel DeSanto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (6, 'Christopher Jacot', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (670, 'Sunday Muse', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (671, 'Bryn McAuley', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (672, 'Ian Ronningen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (673, 'Bryn McAuley (2)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (674, 'Clé Bennett (3)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (675, 'Clé Bennett (4)', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (676, 'None', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (677, 'Claudia Pandolfi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (678, 'Giorgio Tirabassi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (679, 'Diane Fleri', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (680, 'Ivano Marescotti', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (681, 'Massimo Poggio', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (682, 'Jay R. Ferguson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (683, 'Jeff Hephner', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (684, 'Judge Reinhold', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (685, 'Katie Lowes', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (686, 'Laurie Metcalf', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (687, 'Anna-Lena Brundin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (688, 'Gustaf Åkerblom', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (689, 'Linn Bülow', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (690, 'Hanna Malmberg', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (691, 'Peter Fridh', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (692, 'Pierre Lindstedt', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (693, 'Sven Ahlström', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (694, 'Andreas Andersson', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (695, 'Anagil de Melo Nascimento', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (696, 'Rune Bergman', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (697, 'Tokuyoshi Kawashima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (698, 'Yumi Touma', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (699, 'Sanae Kobayashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (700, 'Akio Nojima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (701, 'Yuuji Ueda', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (702, 'Taeko Nakanishi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (703, 'Hiroki Touchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (704, 'Kaori Mizuhashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (705, 'Kikuko Inoue', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (706, 'Kouki Miyata', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (707, 'Noriko Shitaya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (708, 'Sayaka Ohara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (709, 'Sumi Shimamoto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (710, 'Junko Iwao', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (711, 'Shawn Sides', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (712, 'Kaoru Shimamura', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (713, 'Sian Rees-Cleland', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (714, 'Kazusa Murai', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (715, 'Camille Chen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (716, 'Ai Kobayashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (717, 'Andy Holyfield', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (718, 'Ayaka Takano', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (719, 'Chiharu Tezuka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (720, 'Kazunori Ishizuka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (721, 'Masaru Hachinohe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (722, 'Naoya Uchida', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (723, 'Nozomu Sasaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (724, 'Ryouichi Tanaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (725, 'Ryusei Nakao', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (726, 'Souichirou Tanaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (727, 'Takako Fuji', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (728, 'Yutaka Yae', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (729, 'Yuuji Takada', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (730, 'Kate Humble', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (731, 'Mike deGruy', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (732, 'Peter Dalton', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (733, 'David Ajala', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (734, 'Rich Fulcher', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (735, 'Nami Kurokawa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (736, 'Erika Narumi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (737, 'Maki Kobayashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (738, 'Emi Motoi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (739, 'Hiroka Nishizawa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (740, 'Kugimiya Rie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (741, 'Hirano Aya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (742, 'Hatano Wataru', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (743, 'Katou Emiri', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (744, 'Hazuki Erino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (745, 'Inoue Marina', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (746, 'Tanaka Rie', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (747, 'Hirohashi Ryou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (748, 'Ishida Akira', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (749, 'Fukuhara Kaori', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (750, 'Koyama Rikiya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (751, 'Tomoko Akiya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (752, 'Yuuto Nakano', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (753, 'Mami Koyama', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (755, 'Kenji Utsumi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (756, 'Shigeru [Choo] Nagashima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (757, 'Yuuko Minaguchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (758, 'Nami Miyahara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (759, 'Akiko Yajima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (760, 'Tooru Furuya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (761, 'Fumihiro Okabayashi ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (762, 'Yuuki Ishikari ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (763, 'Yuko Kaida', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (764, 'Yurika Ochiai ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (765, 'Aya Hirano', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (766, 'Fumiko Orikasa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (768, 'Satomi Satou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (769, 'Asuka Nakase', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (770, 'Mana Ogawa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (771, 'Atsushi Kousaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (772, 'Houko Kuwashima', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (773, 'Hiroko Kasahara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (774, 'Hiroko Igarashi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (775, 'Mitsuhiro Ichiki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (776, 'Masayo Fujita', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (777, 'Keiji Fujiwara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (778, 'Umeka Shouji', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (779, 'Haruka Tomatsu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (780, 'Hiro Shimono', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (781, 'Kana Hanazawa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (782, 'Mai Nakahara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (783, 'Miyuki Sawashiro', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (784, 'Risa Hayamizu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (785, 'Takanori Hoshino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (786, 'Tetsuya Kakihara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (787, 'Mako', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (788, 'Youko Soumi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (754, 'Toshiyuki Morikawa', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (789, 'Kei Shindou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (790, 'Mari Hino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (791, 'Yumi Hara', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (793, 'Satoshi Hino', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (794, 'Masaya Matsukaze', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (767, 'Michiko Neya', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (795, 'Toshihiko Seki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (796, 'Yoshihisa Kawahara ', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (797, 'Yuka Terasaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (798, 'Tomokazu Sugita', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (799, 'Rina Hidaka', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (800, 'Nozomi Sasaki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (801, 'Misato Fukuen', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (802, 'Mamiko Noto', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (803, 'Kishou Taniyama', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (551, 'Kana Asumi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (804, 'Anri Katsu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (805, 'Akeno Watanabe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (806, 'Shizuka Itou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (807, 'Satomi Arai', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (808, 'Kimiko Koyama', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (809, 'Rina Satou', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (810, 'Yuka Iguchi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (811, 'Atsushi Abe', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (812, 'Ruth-Maria Kubitschek', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (813, 'Christine Kaufmann', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (814, 'Erni Singerl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (815, 'Karl Obermayr', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (816, 'Klaus Guth', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (817, 'Kristina Van Eyck', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (818, 'Alfred Dorfer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (819, 'Monica Weinzettl', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (820, 'Roland Düringer', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (821, 'Joaquín Reyes', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (822, 'Ernesto Sevilla', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (823, 'Julián López', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (824, 'Raul Cimas', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (825, 'Chihiro Suzuki', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (826, 'Yukana Nogami', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (792, 'Takehito Koyasu', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (827, 'Halko Momoi', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (828, 'Tim Ross', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (829, 'Merrick Watts', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (830, 'Jeff Kassel', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (831, 'Steve Markle', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (832, 'Kim Sun-ah', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (833, 'Hyun Bin', null, null, null);
INSERT INTO public.actor (id, name, created, updated, status) VALUES (834, 'Jung Ryu-won', null, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (1, '', 1, 368053, 2, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (2, 'Dylan Bennett', 2, 368055, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (3, 'Cam Henry', 3, 368056, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (4, 'June Henry', 4, 368057, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (5, 'Sarah Bennett', 5, 372358, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (6, 'Robin Turner', 6, 372361, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (7, 'Iain Vaughn', 7, 372362, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (8, 'Heather Peterson', 8, 372363, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (9, 'Alan Henry', 9, 372364, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (10, 'Lisa-Ann Follows', 10, 372365, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (11, 'Justin', 11, 372366, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (12, 'Alison Sutherland', 12, 375642, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (13, 'Tom Winston', 13, 375643, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (14, 'Trent McBride', 14, 398452, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (15, 'Antoine', 15, 451908, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (16, 'Gene', 16, 451909, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (17, 'Noah', 17, 451910, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (18, 'Renée', 18, 451911, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (19, 'Susan', 19, 451912, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (20, 'Judith', 20, 451913, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (21, 'Peter', 21, 451914, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (22, 'Keira', 22, 451915, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (23, 'Talvinder', 23, 451916, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (24, 'Dawn', 24, 451917, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (25, 'Mark', 25, 451918, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (26, 'Andy', 26, 451919, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (27, 'Wren', 27, 451920, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (28, 'Glenn', 28, 451921, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (29, 'Angel Lopez', 29, 541362, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (30, 'Jen Rijkers', 30, 541418, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (31, 'Kit Jennings', 31, 541419, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (32, 'Saadia Jalazai', 32, 541420, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (33, 'Pujit Singh', 33, 541421, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (34, 'Roberta Hanson', 34, 541422, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (35, 'Cassidy', 35, 541426, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (36, 'Amy', 36, 541427, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (37, 'Dan Olensky', 37, 541428, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (38, 'Connor Rijkers', 38, 541429, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (39, 'Violet Dimashke', 39, 541433, 3, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (40, 'Executive Producer', 40, 370004, 8, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (41, 'Nicky', 41, 368238, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (42, 'Alexander Søndergaard', 42, 368240, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (43, 'Mads', 43, 368242, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (44, 'Claudia Moreno', 44, 374519, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (45, 'Bimse', 45, 374520, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (46, 'Alf', 46, 374521, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (47, 'Mia Hermansen', 47, 374522, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (48, 'Kristina', 48, 374523, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (49, 'Bestyrelsesformand Christensen', 49, 374524, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (50, 'P', 50, 374525, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (51, 'Jens Kristian', 51, 376039, 9, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (52, 'Kim Byung-man', 52, 368191, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (53, 'Yook Joong-wan', 53, 368192, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (54, 'Park Chul-min', 54, 368193, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (55, 'On Joo-hwan', 55, 368194, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (56, 'Kim Poong', 56, 368195, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (57, 'Lee Jung-shin (CNBLUE)', 57, 368196, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (58, 'Ha Jae-sook', 58, 368198, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (59, 'UEE (After School)', 59, 368199, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (60, 'Fei (miss A )', 60, 368201, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (61, 'Goo Hara (Kara)', 61, 368202, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (62, 'Choi Jung-yoon', 62, 368204, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (63, 'Im Soo-Hyang', 63, 368205, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (64, 'Oh Jung-yeon', 64, 368206, 13, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (65, 'Victoria Song', 65, 368210, 14, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (66, 'Amber', 66, 368211, 14, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (67, 'Luna', 67, 368212, 14, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (68, 'Krystal', 68, 368213, 14, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (69, 'Jo Joon-Man', 69, 368214, 15, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (70, 'Heo Myung-Geun', 70, 368233, 15, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (71, 'Hwang Gyung-Pil', 71, 368235, 15, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (72, 'Nam Sung-Sil', 72, 368237, 15, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (73, 'Han Mi-Mo', 73, 368958, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (74, 'Song Soo-Hyuk', 74, 368959, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (75, 'Baek Da-Jung', 75, 368960, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (76, 'Go Dong-Mi', 76, 368961, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (77, 'Goo Hae-Joon', 77, 370284, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (78, 'Hong Ae-Ran', 78, 370285, 19, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (79, 'Participant', 79, 368304, 20, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (80, 'Participant', 80, 368305, 20, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (81, 'Host', 81, 374691, 23, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (82, 'Presenter', 82, 439534, 24, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (83, 'Himself', 83, 368570, 25, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (84, '', 84, 369164, 26, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (85, 'Joyce Byers', 85, 368571, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (86, 'Martin Brenner', 86, 368572, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (87, 'Jim Hopper', 87, 386779, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (88, 'Eleven', 88, 386781, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (89, 'Dustin Henderson', 89, 386782, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (90, 'Lucas Sinclair', 90, 386783, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (91, 'Mike Wheeler', 91, 386784, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (92, 'Nancy Wheeler', 92, 386785, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (93, 'Will Byers', 93, 386786, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (94, 'Jonathan Byers', 94, 389675, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (95, 'Billy Hargrove', 95, 452881, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (96, 'Bob Newby', 96, 452882, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (97, 'Max Mayfield', 97, 452953, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (98, 'Steve Harrington', 98, 453008, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (99, 'Robin', 99, 541664, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (100, 'Erica Sinclair', 100, 542368, 27, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (101, 'Ethan Klein', 101, 532870, 29, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (102, 'Hila Klein', 102, 532871, 29, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (103, 'Himself', 103, 370368, 30, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (104, 'Presenter', 104, 369069, 33, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (105, 'Frédérique', 105, 368611, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (106, 'Lili', 106, 445943, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (107, 'Thomas', 107, 445944, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (108, 'Sarah', 108, 445962, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (109, 'Colin', 109, 445963, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (110, 'Lucie', 110, 445966, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (111, 'Marie', 111, 445967, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (112, 'Pauline', 112, 445968, 34, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (113, 'Gene', 113, 369896, 35, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (114, 'Billie', 114, 369897, 35, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (115, 'Tanzy', 115, 369898, 35, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (116, 'Kent Russell', 116, 369899, 35, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (117, 'Chet', 117, 369900, 35, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (118, 'Yoo Shi-jin', 118, 368613, 36, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (119, 'Kang Mo-yeon', 119, 368614, 36, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (120, 'Seo Dae-young', 120, 368615, 36, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (121, 'Yoon Myeong-joo', 121, 368616, 36, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (122, 'Lee Chi-hoon', 122, 368617, 36, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (123, 'Ivete', 123, 368659, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (124, 'Victor Pimentel', 124, 368661, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (125, 'Leo Pimentel', 125, 368662, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (126, 'Tiago Leifert', 126, 368663, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (127, 'Kika Martinez', 127, 368664, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (128, 'André Marques', 128, 408569, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (129, 'Thalita Rebouças', 129, 408570, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (130, 'Carlinhos Brown', 130, 464470, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (131, 'Claudia', 131, 464471, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (132, 'Simone', 132, 464474, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (133, 'Simaria', 133, 464475, 37, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (134, 'Amal', 134, 371695, 42, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (135, 'Elmo', 135, 371696, 42, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (136, 'Gus Cruikshank', 136, 368686, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (137, 'Mickey Dobbs', 137, 372279, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (138, 'Bertie Bauer', 138, 372330, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (139, 'Heidi McAuliffe', 139, 372620, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (140, 'Rob', 140, 372621, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (141, 'Cori', 141, 372622, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (142, 'Arya Hopkins', 142, 375331, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (143, 'Kevin', 143, 375332, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (144, 'Randy', 144, 479406, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (145, 'Greg', 145, 479408, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (146, 'Truman', 146, 479409, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (147, 'Susan', 147, 479410, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (148, 'Chris Czajkowski', 148, 487776, 44, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (149, 'Maude', 149, 368731, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (150, 'Harriet Marsh', 150, 368732, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (151, 'Chloe Marsh', 151, 380950, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (152, 'Tom', 152, 380951, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (153, 'Harry Crowley', 153, 380952, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (154, 'Ralph Samson', 154, 380953, 45, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (155, '', 155, 350528, 47, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (156, '', 156, 350529, 47, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (157, 'Lee Dong-jin', 157, 78884, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (158, 'Yoo Eun-ho', 158, 78885, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (159, 'Gong Jun-Pyo', 159, 550072, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (160, 'Yoo Ji-Ho', 160, 550073, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (161, 'Kim Mi-Yeoun', 161, 550074, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (162, 'Min Hyoun-Joong', 162, 550075, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (163, 'Jung Yu-Kyoung', 163, 550076, 48, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (164, 'Maria Wern', 164, 78893, 49, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (165, 'Patrik Hedlund ', 165, 219851, 49, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (166, 'Thomas Hartman ', 166, 322956, 49, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (167, 'Arvidsson', 167, 322957, 49, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (168, 'Ek', 168, 322958, 49, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (169, 'Hu Yan Da Zang ', 169, 80965, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (170, 'Zhu Er ', 170, 80966, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (171, 'Princess Tuo Chen ', 171, 80967, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (172, 'Zi Yi Hou ', 172, 80968, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (173, 'Fang Bao Yu', 173, 80969, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (174, 'Ben Yue', 174, 80970, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (175, 'Mu Lang Shen Jun', 175, 80971, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (176, 'Bai San Kong', 176, 80972, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (177, 'Bai Yan Zhu', 177, 80973, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (178, 'Wang Dian', 178, 80974, 51, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (179, 'Host/Narrator', 179, 78900, 52, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (180, 'Host', 180, 78901, 53, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (181, 'Junk', 181, 379052, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (182, 'Sadamitsu Tsubaki', 182, 379053, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (183, 'Yayoi Kamishiro', 183, 379054, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (184, 'Kulon', 184, 379055, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (185, 'Kaken', 185, 379056, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (186, 'Bancho', 186, 379057, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (187, 'Danso', 187, 379058, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (188, 'Detective Gomimaru', 188, 379059, 54, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (189, 'Axel Feldheim', 189, 78903, 55, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (190, 'Norbert Brommer', 190, 78904, 55, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (191, 'Waltraud Gutbrod', 191, 78905, 55, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (192, 'Margarethe Brommer', 192, 78906, 55, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (193, 'Presenter', 193, 78907, 56, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (194, 'Presentatore', 194, 311492, 60, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (195, 'himself', 195, 301372, 61, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (196, 'Miss Jane Marple', 196, 78937, 62, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (197, 'Mr. Jim Stringer', 197, 78938, 62, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (198, 'Inspektor Craddock ', 198, 78939, 62, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (199, 'Jean Valjean', 199, 78942, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (200, 'Thénardier', 200, 78943, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (201, 'Javert', 201, 78944, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (202, 'Cosette', 202, 78945, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (203, 'Marius', 203, 78946, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (204, 'Fantine', 204, 78947, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (205, 'Éponine Thénardier', 205, 78948, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (206, 'Madame Thénardier', 206, 78949, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (207, 'Mère Innocente', 207, 78950, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (208, 'Fauchelevent', 208, 78951, 63, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (209, 'Herself', 209, 296669, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (210, 'Herself', 210, 296670, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (211, 'Himself', 211, 296671, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (212, 'Himself', 212, 296672, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (213, 'Himself', 213, 296673, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (214, 'Herself', 214, 296674, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (215, 'Herself', 215, 296675, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (216, 'Himself', 216, 296676, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (217, 'Himself', 217, 479459, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (218, 'Himself', 218, 479460, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (219, 'Herself', 219, 496450, 64, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (220, 'Thomas Mann ', 220, 78974, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (221, 'Katia Mann', 221, 78975, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (222, 'Heinrich Mann', 222, 78976, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (223, 'Nelly Kröger Mann', 206, 78977, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (224, 'Klaus Mann', 223, 78978, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (225, 'Erika Mann', 224, 78979, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (226, 'Monika Mann', 225, 78980, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (227, 'Golo Mann', 226, 78981, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (228, 'Elisabeth Mann', 227, 78982, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (229, 'Michael Mann', 228, 78983, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (230, 'Herself', 229, 78984, 65, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (231, 'Ben Jäger', 230, 106681, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (232, 'Chris Ritter', 231, 107561, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (233, 'Tom Kranich', 232, 107571, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (234, 'Horst Herzberger', 233, 107581, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (235, 'Anna Engelhardt', 234, 321849, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (236, 'Dieter Bonrath', 235, 352555, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (237, 'Jenny Dorn', 236, 352556, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (238, 'Susanne König', 237, 352557, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (239, 'Hartmut Freund', 238, 352558, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (240, 'Semir Gerkhan', 239, 352559, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (241, 'Alex Brandt', 240, 352560, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (242, 'Kim Krüger', 241, 352561, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (243, 'Paul Renner ', 242, 373830, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (244, 'Andrea Schäfer', 243, 558539, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (245, 'Jan Richter', 244, 558540, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (246, 'Finn Bartels', 245, 558541, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (247, 'Dana Gerkhan', 246, 558546, 66, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (248, 'Host/Narrator', 247, 78994, 68, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (249, 'Narrator', 248, 306690, 73, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (250, 'Marion Moseby', 249, 82338, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (251, 'Bailey Pickett', 250, 82339, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (252, 'London Tipton', 251, 82340, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (253, 'Zack Martin', 252, 82341, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (254, 'Cody Martin', 253, 82342, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (255, 'Marcus Little', 254, 124791, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (256, 'Emma Tutweiler', 255, 124801, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (257, 'Maddie Fitzpatrick', 256, 324594, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (258, 'Woody Fink', 257, 508600, 75, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (259, 'Narrator', 258, 78995, 77, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (260, 'Narrator', 259, 80599, 78, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (261, 'Max Ballauf', 260, 307709, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (262, 'Freddy Schenk', 261, 307710, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (263, 'Franziska Lüttgenjohann', 262, 307711, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (264, 'Horst Schimanski', 263, 319851, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (265, 'Moritz Eisner', 264, 319852, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (266, 'Cenk Batu', 265, 322275, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (267, 'Eva Saalfeld', 266, 326151, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (268, 'Andreas Keppler', 267, 326152, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (269, 'Frank Thiel', 268, 326153, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (270, 'Karl-Friedrich Boerne', 269, 326154, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (271, 'Ivo Batic', 270, 326157, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (272, 'Franz Leitmayr', 271, 326158, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (273, 'Klaus Borowski', 272, 326159, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (274, 'Sarah Brandt', 273, 326160, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (275, 'Peter Faber', 274, 326161, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (276, 'Martina Bönisch', 275, 326162, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (277, 'Nora Dalay', 276, 326163, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (278, 'Daniel Kossik', 277, 326164, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (279, 'Jens Stellbrink', 278, 326165, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (280, 'Paul Stoever', 279, 343493, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (281, 'Peter Brockmöller', 280, 343494, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (282, 'Paul Trimmel', 281, 343495, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (283, 'Bruno Ehrlicher', 282, 343501, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (284, 'Kain', 283, 343502, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (285, 'Till Ritter', 284, 343503, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (286, 'Felix Stark', 285, 343504, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (287, 'Charlotte Lindholm', 286, 343505, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (288, 'Martin Felser', 287, 343506, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (289, 'Inga Lürsen', 288, 343507, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (290, 'Nils Stedefreund', 289, 343508, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (291, 'Lena Odenthal', 290, 343509, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (292, 'Mario Kopper', 291, 343510, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (293, 'Friedrich Dellwo', 292, 343511, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (294, 'Charlotte Sänger', 293, 343512, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (295, 'Frank Steier', 294, 343513, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (296, 'Conny Mey', 295, 343514, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (297, 'Thorsten Lannert', 296, 343515, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (298, 'Sebastian Bootz', 297, 343516, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (299, 'Franz Kappl', 298, 343517, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (300, 'Stefan Deininger', 299, 343518, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (301, 'Finke', 300, 343519, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (302, 'Heinz Haferkamp', 301, 369131, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (303, 'Willi Kreutzer', 302, 369132, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (304, 'Viktor Marek', 303, 369133, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (305, 'Max Becker', 304, 369135, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (306, 'Matthias Behnke', 305, 369146, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (307, 'Ernst Bienzle', 306, 369148, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (308, 'Klara Blum', 307, 369149, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (309, 'Walter Böck', 308, 369153, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (310, 'Heinz Brammer, Kommissar', 309, 369155, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (311, 'Otto Brandenburg', 310, 369156, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (312, 'Kommissar Ronke', 311, 369165, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (313, 'Melchior Veigl', 312, 440563, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (314, 'Kommissar Konrad', 313, 510608, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (315, 'Kriminalhauptmeister Klipp', 314, 510609, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (316, 'Rolf, Assistent', 315, 510610, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (317, 'Reto Flückiger, Hauptkommissar', 316, 510611, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (318, 'Marcel Steiner, Seepolizist Thurgau', 317, 510612, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (319, ' Kai Perlmann, Hauptkommissar', 318, 510613, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (320, 'Liz Ritschard, Kommissarin', 319, 510614, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (321, 'Lisa Marx, Kriminalhauptkommissarin', 320, 510616, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (322, 'Thorsten Falke, Hauptkommissar', 321, 510617, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (323, 'Julia Grosz, Bundespolizistin', 322, 510618, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (324, 'Katharina Lorenz Hauptkommissarin', 323, 510619, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (325, 'Peter Michael Schnabel, Kommissariatsleiter', 324, 510621, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (326, 'Henni Sieland, Kriminaloberkommissarin', 325, 510622, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (327, 'Henry Funck, Kriminalhauptkommissar', 326, 510623, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (328, 'Maik Schaffert, Kriminaloberkommissar', 327, 510624, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (329, 'Johanna Grewel, Polizeidienst-Praktikantin', 328, 510625, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (330, 'Anna Janneke, Kommissarin', 329, 510626, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (331, 'Paul Brix, Kommissar', 330, 510627, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (332, 'Henning Riefenstahl, Kommissariatsleiter', 331, 510628, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (333, 'Fosco Cariddi, Kommissariatsleiter', 332, 510629, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (334, 'Jonas, Kriminalassistent', 333, 510630, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (335, 'Nikolas „Nick“ Tschiller, Kriminalhauptkommissar', 334, 510633, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (336, 'Yalcin Gümer, Kriminalhauptkommissar', 335, 510634, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (337, 'Franziska Tobler, KHK', 336, 510640, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (338, 'Friedemann Berg, KHK', 337, 510641, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (339, 'Felix Voss, Kriminalhauptkommissar Leiter der Mordkommission „Franken“', 338, 510642, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (340, 'Paula Ringelhahn, KHK', 339, 510643, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (341, 'Wanda Goldwasser, KK', 340, 510644, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (342, 'Dr. Mirko Kaiser, Polizeipräsident', 341, 510645, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (343, 'Michael Schatz, L SpuSi', 342, 510646, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (344, 'Lessing KHK', 343, 510647, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (345, 'Kira Dorn, KK', 344, 510648, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (346, 'Felix Murot, KHK', 345, 510649, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (347, 'Magda Wächter,  Assistentin im LKA', 346, 510650, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (348, 'Bibi Fellner', 347, 510651, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (349, 'Roiter, Hauptkommissar ', 348, 510656, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (350, 'Zorowski, Kommissar', 349, 510657, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (351, 'Frieda Jung, Polizeipsychologin', 350, 510659, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (352, 'Holicek, Oberkommissar', 351, 510660, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (353, 'Casstorff, Hauptkommissar', 352, 510661, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (354, 'Kommissar Lutz', 353, 510662, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (355, 'Kommissar Palu', 354, 510663, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (356, 'Kommissar Brinkmann', 355, 510664, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (357, 'Inspektor Fichtl', 356, 510666, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (358, 'Kommissarin Wiegand', 357, 510675, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (359, 'Franz Markowitz , KHK', 358, 510677, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (360, 'Christine Lerch, Fallanalytikerin', 359, 510679, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (361, 'Zollfahnder Kressin', 360, 510680, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (362, 'Ludwig Lenz, Kommissar ', 361, 510681, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (363, 'Hauptkommissar Bülow', 362, 510682, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (364, 'Robert Hellmann, Kommissar', 363, 510683, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (365, 'Kommissar Walther', 364, 510684, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (366, 'Kommissar Gerber', 365, 510689, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (367, 'Kommissar Schäfermann', 366, 510691, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (368, 'Martin Schmidt, Kommissar', 367, 510692, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (369, 'Marianne Buchmüller', 368, 510693, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (370, 'Polizeihauptmeister Rolfs', 369, 510694, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (371, 'Bernd Flemming', 370, 515080, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (372, 'Miriam Koch', 371, 515085, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (373, 'Karin Gorniak', 372, 522584, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (374, 'Stefan Deininger', 299, 523999, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (375, 'Constanze Lauritzen', 373, 535658, 79, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (376, 'The Groom Reaper', 374, 330139, 80, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (377, 'Ζάχος Δόγκανος', 375, 342413, 81, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (378, 'Dimitris Marikos', 376, 342415, 81, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (379, 'Devora', 377, 342416, 81, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (380, 'Christina Markatou', 378, 475778, 82, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (381, 'Sasa Papadima', 379, 475819, 82, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (382, 'Antonis Kaloudis', 380, 475820, 82, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (383, 'Presenter', 381, 300832, 83, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (384, 'Presenter', 382, 313001, 85, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (385, 'Presenter', 383, 485787, 85, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (386, 'Harry Perkins', 384, 78997, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (387, 'Thompson', 385, 78998, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (388, 'Fiennes', 386, 78999, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (389, 'The Staff - Tweed', 387, 377589, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (390, 'The Staff - Inspector Page', 388, 377590, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (391, 'The Cabinet - Newsome', 389, 377591, 86, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (392, 'Susannah Crusoe', 390, 79000, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (393, 'Robinson Crusoe', 391, 79001, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (394, 'Friday', 392, 79632, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (395, 'Olivia', 393, 79640, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (396, 'Jeremiah Blackthorn', 394, 79644, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (397, 'Santana', 395, 79645, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (398, '', 396, 79646, 88, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (399, 'Presenter', 397, 79030, 89, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (400, 'Various roles', 398, 79305, 92, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (401, 'Various roles', 399, 79306, 92, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (402, 'Narrator', 400, 79307, 92, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (403, 'Himself', 401, 83331, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (404, 'Himself', 402, 83341, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (405, 'Himself', 403, 83351, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (406, 'Himself', 404, 83361, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (407, 'Himself', 405, 83381, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (408, 'Himself', 406, 205341, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (409, 'Himself', 407, 205351, 93, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (410, 'Dr. Nicholas Rush', 408, 88431, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (411, 'Everett Young', 409, 88441, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (412, 'Camille Wray', 410, 88451, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (413, 'Eli Wallace', 411, 88461, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (414, 'Tamara Johansen', 412, 88471, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (415, 'Matthew Scott', 413, 88481, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (416, 'Ronald Greer', 414, 88491, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (417, 'Chloe Armstrong', 415, 88501, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (418, 'David Telford', 416, 93511, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (419, 'Vanessa James', 417, 124331, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (420, 'Adam Brody', 418, 217491, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (421, 'Jeremy Franklin', 419, 217501, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (422, 'Dr. Lisa Park', 420, 217511, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (423, 'Hunter Riley', 421, 217521, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (424, 'Dr. Dale Volker', 422, 217531, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (425, 'Jack O''Neill', 423, 293428, 94, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (426, 'Hervé Dumont', 424, 80929, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (427, 'Jean-Claude Convenant', 425, 80930, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (428, 'Sylvain Müller', 426, 312856, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (429, 'Jeanne Bignon', 427, 423663, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (430, 'Philippe Gatin', 428, 423664, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (431, 'Frédérique Castelli', 429, 423665, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (432, 'Maéva Capucin', 430, 423666, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (433, 'Jean-Guy Lecointre', 431, 423667, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (434, 'Nancy Langeais', 432, 423668, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (435, 'Carole Dussier-Belmont', 433, 423669, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (436, 'Eva Kovalsky', 434, 423670, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (437, 'Vincent Schneider', 435, 423671, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (438, 'André Markowicz', 436, 423672, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (439, 'Julie Hassan', 437, 423673, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (440, 'Annie Lepoutre', 438, 423674, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (441, 'Stanislas Priziwielsky', 439, 423675, 95, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (442, 'DI George Bennett', 440, 303353, 96, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (443, 'Ruth Hawkin ', 441, 303354, 96, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (444, 'Old George Bennett', 442, 303355, 96, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (445, 'Catherine Heathcote', 443, 303356, 96, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (446, 'DS Tommy Clough', 444, 355787, 96, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (447, 'Dr. Mugg', 445, 107411, 97, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (448, 'Ken Ando', 446, 79009, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (449, 'Ryune', 447, 79011, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (450, 'Mizuki Kamijo', 448, 79012, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (451, 'Shu Zoldark', 449, 79013, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (452, 'Masaki', 450, 79014, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (453, 'Ryuzo Ando', 451, 79015, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (454, 'Izaki', 452, 79016, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (455, 'Saphine Grace', 453, 79017, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (456, 'Sayuri Ando', 454, 79018, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (457, 'Itetsu Kamijo', 455, 79019, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (458, 'Nanase Ozaki', 456, 79020, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (459, 'Harukaze Leona, Nurse [Ep 13]', 457, 79021, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (460, 'Ryune Frank', 458, 493860, 98, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (461, 'Various Roles', 459, 80856, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (462, 'Various Roles', 460, 80858, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (463, 'Various Roles', 461, 317037, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (464, 'Various Roles', 462, 317038, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (465, 'Himself ', 463, 317039, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (466, 'Various Roles', 464, 317040, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (467, 'Various Roles', 465, 317041, 99, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (468, 'Himself', 466, 220621, 102, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (469, 'Deelnemer', 467, 79032, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (470, 'Jury', 468, 79033, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (471, 'Jury', 469, 79034, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (472, 'Jury', 470, 79035, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (473, 'Jury', 471, 79036, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (474, 'Presentator', 472, 79037, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (475, 'Presentator', 473, 79038, 103, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (476, 'Mongoose', 474, 79039, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (477, 'Kim Rowland', 475, 79040, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (478, 'Colonel Amos', 476, 79041, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (479, 'Sally Sheridan', 477, 79042, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (480, 'Wally Sheridan', 478, 79043, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (481, 'XIII|Steve Rowland', 479, 79044, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (482, 'Lauren Jones', 480, 79045, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (483, 'Général Carrington', 481, 79046, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (484, 'Sam', 482, 79047, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (485, 'Abe Miller', 483, 79048, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (486, 'Cody', 484, 79049, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (487, 'Calvin Wax', 485, 79050, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (488, 'Martha Miller', 486, 79051, 105, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (489, 'Barbarossa', 487, 497396, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (490, 'Hardin', 488, 497397, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (491, 'Zoniac', 489, 497398, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (492, 'Sahari', 490, 497399, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (493, 'Zaxon', 491, 497400, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (494, 'Ital Del Labard', 492, 497401, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (495, 'Sakura', 493, 497402, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (496, 'Flak', 494, 497403, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (497, 'Beast Master', 495, 497404, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (498, 'Ayatolla', 496, 497405, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (499, 'Warlock', 497, 497406, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (500, 'Bangor III', 498, 497407, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (501, 'The General', 499, 497408, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (502, 'Randis', 500, 497409, 106, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (503, 'Inez', 501, 79268, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (504, 'Axel Finet', 502, 79269, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (505, 'Cesar Uman', 503, 79270, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (506, 'Anthony Adams', 504, 79271, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (507, 'Bebe Arcel', 505, 79272, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (508, 'Eddie Choi', 506, 79273, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (509, 'Kenny Battaglia', 507, 79274, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (510, 'Christine Emory', 508, 79275, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (511, 'Ben Cendars', 509, 79276, 110, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (512, 'Santos', 510, 79091, 111, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (513, 'Jota', 511, 79092, 111, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (514, 'Medina', 512, 79093, 111, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (515, 'Leon', 513, 79094, 111, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (516, 'Grievous / Battle Droids', 514, 79096, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (517, 'Rex / Cody / Clone Troopers', 515, 79097, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (518, 'Asajj Ventress', 516, 79098, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (519, 'Nute Gunray', 517, 79099, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (520, 'Yoda / Wullf Yularen', 518, 79100, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (521, 'Padme Amidala', 519, 79101, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (522, 'Anakin Skywalker', 520, 300638, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (523, 'Ahsoka Tano', 521, 300639, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (524, 'Obi-Wan Kenobi', 522, 300640, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (525, 'Mace Windu', 523, 416415, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (526, 'Count Dooku', 524, 448047, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (527, 'Palpatine ', 525, 448048, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (528, 'Mas Amedda', 526, 448050, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (529, '', 396, 448051, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (530, 'Bail Organa', 527, 448052, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (531, ' Maul', 528, 494059, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (532, 'Cad Bane', 524, 494060, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (533, 'Hondo Ohnaka', 529, 495073, 112, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (534, 'Merlin', 394, 79996, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (535, 'Mab, Queen of the Old Ways / The Lady of the Lake', 530, 79997, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (536, 'Nimue', 531, 79998, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (537, 'Morgan Le Fey', 532, 79999, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (538, 'King Constant', 533, 80000, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (539, 'Frik', 534, 80001, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (540, 'King Arthur Pendragon', 535, 80002, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (541, 'Mordred', 536, 80003, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (542, 'King Vortigern', 537, 80004, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (543, 'Lancelot', 538, 80005, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (544, 'Nimue', 531, 378450, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (545, 'Mordred', 536, 378451, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (546, 'Lancelot du Lac', 538, 378452, 113, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (547, '', 539, 172811, 114, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (548, '', 540, 79109, 115, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (549, '', 541, 79110, 115, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (550, '', 542, 79111, 115, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (551, '', 543, 79112, 115, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (552, 'Gaus Dal', 544, 79105, 116, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (553, 'Roms Dal', 545, 79106, 116, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (554, 'Brumund Dal', 546, 79107, 116, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (555, 'Fortelleren', 547, 79108, 116, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (556, 'Judy Abbott', 548, 420707, 117, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (557, 'Sally', 549, 420708, 117, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (558, 'Inko-chan', 550, 80552, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (559, 'Sakura Kanou', 551, 80553, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (560, 'Nanako Kashii', 552, 80554, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (561, 'Kouta Tomiie', 553, 80556, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (562, 'Shunin Gakunen', 554, 81985, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (563, 'Yuriko Mitsui ', 555, 81988, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (564, 'Haha Taiga (Taiga´s Mother)', 556, 81989, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (565, 'Kouta Tomiie', 557, 366895, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (566, 'Yuri Koigakubo', 183, 366896, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (567, 'Nanako Kashii', 558, 366897, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (568, 'Hisamitsu Noto', 559, 366898, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (569, 'Maya Kihara', 560, 366899, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (570, 'Kouji Haruta', 561, 366900, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (571, 'Sumire Kanou', 562, 366901, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (572, 'Yasuko Takasu', 563, 366902, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (573, 'Ami Kawashima', 564, 366903, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (574, 'Yuusaku Kitamura', 565, 366904, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (575, 'Minori Kushieda', 566, 366905, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (576, 'Taiga Aisaka', 567, 366906, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (577, 'Ryuuji Takasu', 568, 366907, 118, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (578, 'Lorenzo Montero', 569, 79113, 119, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (579, 'Gustavo Mansilla', 570, 79114, 119, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (580, 'Franco Montero', 571, 79115, 119, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (581, 'Subcomisario Serrano', 572, 79116, 119, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (582, 'Marcelita Gomez', 573, 79117, 119, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (583, 'Διονύσης', 375, 84061, 120, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (584, 'Ελένη', 574, 313311, 120, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (585, 'Σπύρος', 575, 313312, 120, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (586, 'Capitán Valladares', 576, 79118, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (587, 'Querejeta', 577, 79119, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (588, 'Lorna', 578, 79120, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (589, 'Wollensky', 579, 79121, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (590, 'Roswell', 580, 79122, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (591, 'Hoffman', 581, 79123, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (592, 'Maculay Culkin III', 582, 79124, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (593, 'Merche', 583, 79125, 121, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (594, 'Narrator', 584, 500381, 123, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (595, 'Jas', 585, 79127, 124, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (596, 'Ollie', 586, 79128, 124, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (597, 'Chloe', 587, 79129, 124, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (598, 'Matt', 588, 79130, 124, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (599, 'DK', 589, 79131, 124, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (600, '', 590, 79771, 127, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (601, 'Narrator', 591, 79772, 127, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (602, 'Zak Saturday', 592, 91051, 129, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (603, 'Dr. Solomon "Doc" Saturday', 593, 91061, 129, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (604, 'Drew Saturday', 594, 91071, 129, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (605, 'Trevor Chaplin', 595, 381419, 130, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (606, 'Jill Swinburne', 596, 381420, 130, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (607, 'Jasmine', 597, 491199, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (608, 'Lief', 598, 491200, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (609, 'Narrator', 599, 491202, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (610, 'Barda', 600, 491203, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (611, 'The Shadow Lord', 601, 491206, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (612, 'Filli', 602, 491207, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (613, 'Queen Sharn', 603, 491208, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (614, 'Jarred', 604, 491209, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (615, 'Fallow', 605, 491210, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (616, 'Kree', 606, 491211, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (617, 'Anna', 607, 491212, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (618, 'King Endon', 608, 491213, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (619, 'Gelick', 609, 491214, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (620, 'Jinx', 492, 491215, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (621, 'Ikabod', 610, 491216, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (622, 'Glock', 611, 491217, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (623, 'Fa-grin', 612, 491218, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (624, 'Manus', 568, 491219, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (625, 'Joker', 451, 491220, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (626, 'The Enigmatic Giant', 613, 491221, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (627, 'Reeah', 614, 491222, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (628, 'Tom', 615, 491223, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (629, 'Owen', 616, 491224, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (630, 'Li-nan', 617, 491225, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (631, 'Prin', 618, 491226, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (632, 'Dain', 619, 491227, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (633, 'Joanna', 606, 491228, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (634, 'Neridah', 567, 491229, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (635, 'Tira', 620, 491230, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (636, 'Soldeen', 621, 491231, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (637, 'King Endon [Young]', 622, 491232, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (638, 'Goru', 623, 491233, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (639, 'Thaegen', 624, 491234, 131, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (640, 'Markus Haglund', 625, 174591, 132, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (641, 'Fia Jönsson', 626, 174601, 132, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (642, 'Anna Sjöstedt', 627, 174611, 132, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (643, 'Belal Al-Mukhtar', 628, 174621, 132, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (644, 'Roger Andersson', 629, 174631, 132, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (645, 'Chris', 630, 79135, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (646, 'Gwen', 631, 79136, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (647, 'Owen', 632, 79137, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (648, 'Beth', 633, 79138, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (649, 'Sadie', 634, 79139, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (650, 'Geoff', 635, 79141, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (651, 'Eva', 636, 79142, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (652, 'Duncan', 637, 79143, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (653, 'Chef Hatchet ', 638, 79144, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (654, 'Bridgette', 639, 79146, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (655, 'Noah', 640, 79147, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (656, 'Lindsay', 641, 79148, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (657, 'LeShawna', 642, 79149, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (658, 'Izzy', 643, 79151, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (659, 'Heather', 644, 79152, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (660, 'Cody', 645, 79153, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (661, 'Courtney', 646, 368733, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (662, 'Ezekiel', 647, 368734, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (663, 'DJ', 648, 385937, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (664, 'Trent', 649, 385938, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (665, 'Harold', 650, 385939, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (666, 'Tyler', 651, 385940, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (667, 'Justin', 652, 385941, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (668, 'Katie', 653, 385942, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (669, 'Blaineley', 654, 386326, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (670, 'Alejandro', 655, 386327, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (671, 'Mike', 656, 386330, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (672, 'Zoey', 657, 386331, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (673, 'Scott', 658, 386332, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (674, 'Cameron', 659, 386333, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (675, 'Brick', 660, 386336, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (676, 'Anne Maria', 661, 386337, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (677, 'Staci', 662, 386338, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (678, 'Shawn', 663, 395892, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (679, 'Sky', 664, 395898, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (680, 'Sugar', 665, 395899, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (681, 'Jasmine', 666, 395900, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (682, 'Max', 667, 395901, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (683, 'Scarlett', 668, 395902, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (684, 'Dave', 669, 395903, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (685, 'Topher', 6, 395904, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (686, 'Ella', 670, 395905, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (687, 'Samey', 671, 395906, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (688, 'Rodney', 672, 395907, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (689, 'Amy', 673, 395908, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (690, 'Leonard', 674, 395911, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (691, 'Beardo', 675, 395912, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (692, 'B', 676, 396356, 133, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (693, 'Prof. Enrica Sabatini', 677, 295686, 135, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (694, 'prof. Antonio Cicerino', 678, 437021, 135, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (695, 'prof.ssa Melanie Desmoulins', 679, 437022, 135, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (696, 'prof. Gualtiero Cavicchioli', 680, 437023, 135, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (697, 'prof. Enea Pannone', 681, 437024, 135, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (698, 'Cooper Buffkin', 682, 79154, 139, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (699, 'Morgan Buffkin', 683, 79155, 139, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (700, 'Barry', 684, 79156, 139, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (701, 'Brandy Buffkin', 685, 79157, 139, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (702, 'Bobette Buffkin', 686, 79158, 139, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (703, 'Mamma Astrid', 687, 205661, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (704, 'Ivar Olsson', 688, 289652, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (705, 'Lillan Olsson', 689, 289653, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (706, 'Melitta Olsson', 690, 289655, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (707, 'Pappa Leif', 691, 289656, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (708, 'Staffan', 692, 301634, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (709, 'Jean', 693, 301635, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (710, 'Måns', 694, 301636, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (711, 'Dioda', 695, 301637, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (712, 'Greve von Dy', 696, 301638, 140, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (713, 'William Jones [Main Both Season]', 697, 494891, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (714, 'Emma [Main Both Season]', 698, 494892, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (715, 'Eleanor Campbell [Support Season 1] [Main Season 2]', 699, 494893, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (716, 'Richard Jones [Both Season]', 700, 494894, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (717, 'Hakim Atawari [Both Season]', 701, 494895, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (718, 'Kelly Stownar [Season 1]', 702, 494896, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (719, 'Hans [Main Season 2]', 703, 494897, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (720, 'Vivian Jones [Season 2]', 704, 494898, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (721, 'Monica Mildrake [Season 2]', 705, 494899, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (722, 'Arthur Jones [Season 2]', 706, 494900, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (723, 'Collin Jones [Season 2]', 707, 494901, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (724, 'Grace Jones [Season 2]', 708, 494902, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (725, 'Aurelia Jones [Season 2]', 709, 494903, 141, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (726, 'Jun Fudou (Japanese)', 710, 301212, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (727, 'Jun Fudou (English Dub)', 711, 301213, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (728, 'Lan Asuka (Japanese)', 712, 301214, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (729, 'Lan Asuka (English Dub)', 713, 301215, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (730, 'Kazumi Takiura (Japanese)', 714, 301216, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (731, 'Kazumi Takiura (English Dub)', 715, 301217, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (732, 'Chika', 716, 492070, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (733, 'President', 717, 492071, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (734, 'Maya Yuasa', 718, 492072, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (735, 'Misaki', 719, 492073, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (736, 'Seta Katsumi', 720, 492074, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (737, 'Ichirou Takase', 721, 492075, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (738, 'Yuasa Tatsuya', 722, 492076, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (739, 'Yuichi Kitano', 723, 492077, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (740, 'Takeshi', 724, 492078, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (741, 'Jason Bates', 725, 492079, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (742, 'Chouta Kasumi, Tawada', 726, 492080, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (743, 'Satomi Yuasa', 727, 492081, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (744, 'Takase Ichirou', 728, 492082, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (745, 'Noboru Higa', 729, 492083, 144, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (746, '', 730, 79166, 146, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (747, '', 731, 79167, 146, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (748, 'Trexx', 732, 79174, 148, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (749, 'Flipside', 733, 79175, 148, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (750, 'Mr. Brilliance ', 734, 79176, 148, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (751, 'Kan''u Unchou', 735, 80687, 149, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (752, 'Shokatsu Koumei', 736, 81722, 149, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (753, 'Bachou Mouki', 737, 81723, 149, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (754, 'Chouun Shiryuu', 738, 81724, 149, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (755, 'Chouhi Yokutoku', 739, 81725, 149, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (756, 'Katagiri Yuuhi', 740, 80518, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (757, 'Nagase Minato', 741, 80519, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (758, 'Nagase Jun''ichi', 742, 80520, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (759, 'Ayanokouji Karen', 743, 141931, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (760, 'Tachibana Mikoto', 744, 141941, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (761, 'Kiryuu Tsukasa', 745, 141951, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (762, 'Shiina Mitsuki', 746, 141961, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (763, 'Shiraishi Nagomi', 747, 141971, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (764, 'Nishino Fuyuhiko', 748, 141981, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (765, 'Nijou Aya', 749, 141991, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (766, 'Sugishita Seijirou', 750, 142001, 150, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (767, 'Sophita', 751, 367082, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (768, 'Dune', 752, 367083, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (769, 'Leda', 753, 367084, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (770, 'Dio', 754, 367085, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (771, 'Braikingboss', 755, 367086, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (772, 'Ohji', 756, 367087, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (773, 'Ringo', 757, 367088, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (774, 'Lyuze', 758, 367089, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (775, 'Luna', 759, 367090, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (776, 'Casshern', 760, 367091, 151, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (777, 'Classmate A', 761, 80475, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (778, 'Classmate B', 762, 80478, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (779, 'Ushio Makunouchi', 763, 365933, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (780, 'Suzume Saotome', 764, 365934, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (781, 'Ayumi Nonomura', 765, 365935, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (782, 'Torako Kageyama', 766, 365936, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (783, 'Tatsuki Iizuka', 767, 365937, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (784, 'Inori Tsubomiya', 768, 365938, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (785, 'Chie Suzugasaki', 566, 365939, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (786, 'Minato Ooba', 769, 365940, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (787, 'Hitsugi Nikaidou', 770, 365941, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (788, 'Ushio Makunouchi', 562, 365942, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (789, 'Yanagi Kyougoku', 771, 365943, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (790, 'Touma Kazamatsuri', 772, 365945, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (791, 'Oniyuri Kageyama', 773, 365946, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (792, 'Koma Kobayashi', 774, 365947, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (793, 'Kitsune Kageyama', 775, 365948, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (794, 'Nene Andou', 776, 365949, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (795, 'Kyouichirou Amagasa', 777, 365950, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (796, 'Classmate C', 778, 507727, 152, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (797, 'Nagi', 779, 79177, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (798, 'Jin Mikuriya', 780, 79178, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (799, 'Hakua Suzushiro Zange', 781, 79179, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (800, 'Shino Ookouchi', 782, 79180, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (801, 'Tsugumi Aoba', 783, 79181, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (802, 'Takako Kimura', 784, 79182, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (803, 'Daitetsu Hibiki', 785, 79183, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (804, 'Meguru Akiba', 786, 79184, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (805, 'Lolikko Cutie', 787, 79185, 153, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (806, 'Elizard', 788, 80558, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (807, 'Uhou no Fiamma', 754, 80559, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (808, 'Carissa', 789, 80560, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (809, 'Rimea', 790, 285933, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (810, 'Suama Oyafune', 791, 331937, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (811, 'Knight Leader', 792, 331938, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (812, 'Shiage Hamazura ', 793, 331939, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (813, 'Teitoku Kakine', 794, 331940, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (814, 'Aleister Crowley', 795, 366908, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (815, 'Pierce Aogami', 796, 366909, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (816, 'Misha Kreuzhev', 797, 366910, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (817, 'Aureolus Izzard', 798, 366911, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (818, 'Last Order', 799, 366912, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (819, 'Misaka [Clone]', 800, 366913, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (820, 'Maika Tsuchimikado', 801, 366914, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (821, 'Aisa Himegami', 802, 366915, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (822, 'Stiyl Magnus', 803, 366916, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (823, 'Hyouka Kazakiri', 551, 366917, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (824, 'Motoharu Tsuchimikado', 804, 366918, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (825, 'Sherry Cromwel', 805, 366919, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (826, 'Kaori Kanzaki', 806, 366920, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (827, 'Kuroko Shirai', 807, 366921, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (828, 'Accelerator', 553, 366922, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (829, 'Komoe Tsukuyomi', 808, 366923, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (830, 'Mikoto Misaka', 809, 366924, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (831, 'Index', 810, 366925, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (832, 'Touma Kamijou', 811, 366926, 156, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (833, 'Franz Münchinger', 361, 87211, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (834, 'Annette von Soettingen', 812, 87221, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (835, 'Olga Behrens ', 813, 316275, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (836, 'Irmgard', 814, 316276, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (837, 'Manni Kopfeck', 815, 316277, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (838, 'Dr. Manfred Braun', 816, 316278, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (839, 'Ellen Braun', 817, 316279, 161, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (840, 'Hr. Michael ''Mike'' Weber', 818, 100451, 162, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (841, 'Fr. Silvia Knackal', 819, 100461, 162, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (842, 'Ing. Engelbert Breitfuss', 820, 100471, 162, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (843, 'Actor, Director', 821, 79201, 163, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (844, 'Actor', 822, 79202, 163, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (845, 'Actor', 823, 79203, 163, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (846, 'Actor', 577, 79204, 163, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (847, 'Actor', 824, 79205, 163, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (848, 'Luke Fone Fabre / Asch the Bloody', 825, 80437, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (849, 'Tear Grants', 826, 80438, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (850, 'Ion', 456, 81595, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (851, 'Guy Cecil', 608, 81596, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (852, 'Jade Curtis', 792, 81597, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (853, 'Natalia Luzu Kimlasca Lanvaldear', 767, 81598, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (854, 'Anise Tatlin', 827, 81599, 168, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (855, '', 828, 79196, 169, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (856, '', 829, 79197, 169, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (857, 'Ron', 830, 79199, 171, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (858, 'Peter', 831, 79200, 171, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (859, 'Kim Sam-soon', 832, 239781, 172, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (860, 'Hyun Jin-heon', 833, 239791, 172, null, null);
INSERT INTO public.actorroles (id, seriesrole, actorid, tvdbid, seriesid, created, updated) VALUES (861, 'Yoo Hee-jin', 834, 239801, 172, null, null);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1, 'Episode 1', null, 1, 1, 5459719, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2, 'Episode 2', null, 1, 2, 5459720, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3, 'Episode 3', null, 1, 3, 5459721, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4, 'Episode 4', null, 1, 4, 5459722, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5, 'Episode 5', null, 1, 5, 5459723, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (6, 'Episode 6', null, 1, 6, 5459724, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (7, 'Episode 7', null, 1, 7, 5459725, 1);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (8, 'Legacy of War', 'Meet armed bandits like the legendary Missouri outlaw Jesse James with his older brother Frank and the Younger brothers who in the wake of the Civil War committed crimes that were unknown before that time – holding up banks and robbing trains at gunpoint. ', 2, 1, 5457805, 2);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (9, 'Tall in the Saddle', 'Learn "Who''s Who" of the West. This episode profiles some famous outlaws, gunslingers, bank robbers and gang leaders of the wild west along with the famous lawmen who chased them, including Wyatt Earp, Doc Holliday, Wild Bill Hickock and Bat Masterson. ', 2, 2, 5457806, 2);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (10, 'The Train Robbers', 'Revisit the daring robberies which escalated the conflict between the law and the bandit gangs. Cole Younger, James brothers, Sam Bass and Butch Cassidy''s Wild Bunch gang were the last of the old-time western bank and train robbers, a colorful group of outlaws with distinctive personalities and a flair for the flamboyant. ', 2, 3, 5457807, 2);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (11, 'A New Breed', 'From the depths of the U.S. Great Depression, a new class of rural bandits emerged – outlaws in the Midwest began racing through the heartland robbing banks. To some citizens who had lost all their savings in bank closures, these outlaws were often seen as contemporary Robin Hoods. The newcomers – Bonnie and Clyde, Pretty Boy Floyd, Ma Barker and her brood tommy gun their way into history. ', 2, 4, 5457809, 2);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (12, 'An Eye For an Eye', 'Sarah finds herself at the center of a series of copycat killings and visits the man who murdered her parents in prison and he imparts a cryptic message.', 3, 1, 5457833, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (13, 'Digging Your Grave With Your Teeth', 'Sarah receives a gruesome package at her new gallery. The Executioner exacts justice on citizens of Waterbury. Sarah attempts to decipher a message in her parcel. Sarah''s grandmother pleads with her to leave town.', 3, 2, 5457834, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (14, 'Like As Fire Eateth Up and Burneth Wood', 'A disturbing secret from Sarah''s past confirms her belief that the police have arrested the wrong person for the murders.', 3, 3, 5457835, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (15, 'As Water Is Corrupted Unless It Moves', 'Sarah believes the killer is using the seven deadly sins as part of their plan and is disappointed by the police chief''s lack of responsiveness. Unfortunately Sarah''s attempt to investigate the murders leads to misfortune.', 3, 4, 5457836, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (16, 'Ill-Gotten Gains', 'Sarah blames herself when another disturbing murder occurs. Meanwhile Allison has mixed reactions to Dylan''s TV commentaries about the killings.', 3, 5, 5457837, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (17, 'The One Who Sows His Own Flesh', 'Sarah learns of some unsettling information about her past from Tom Winston, which leads her to believe she knows the next target of the Executioner.', 3, 6, 5457838, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (18, 'In the Pride of His Face', 'Convinced that Sarah is The Executioners final target, Tom Winston escapes from prison. Also Sarah discovers that Dylan knew about her past prior to meeting her.', 3, 7, 5457839, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (19, 'Soon Your Own Eyes Will See', 'The Executioner plans one last act of retribution while Sarah is comforted by Cam after Dylan''s dishonesty.', 3, 8, 5457840, 3);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (20, 'Six Feet Under', 'Five years after concealing a murder, guilt-stricken summer camp counselors return in midwinter to the scene of their crime, now a utopian commune.', 3, 1, 6081836, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (21, 'Between Good and Evil', 'After a body is found and a guest vanishes, both groups discover they''re trapped at the camp with communication to the outside world cut off.', 3, 2, 6081898, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (22, 'Saint Sebastian', 'As the list of victims continues to grow, the number of possible suspects narrows and the two groups are forced to cooperate despite mutual suspicion.', 3, 3, 6154690, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (23, 'Night of Hunters', 'The histories of several characters unfold in flashback, revealing surprising connections, while an innocent hiker is pulled into the unfolding drama.', 3, 4, 6154691, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (24, 'Out of the Frying Pan', 'The gruesome past and false identity of a commune member is discovered, although it may be too late to save the fellow camper they have kidnapped.', 3, 5, 6154692, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (25, 'Drone', 'Desperate to discover the identity of the killer preying on them, the remaining survivors reluctantly conduct a mock hearing to learn the truth.', 3, 6, 6154693, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (26, 'Dawn of the Dead', 'Misinterpreted evidence points everyone in a false direction, while one camper finds evidence that makes him question the motive behind the slaughter.', 3, 7, 6154694, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (27, 'The Past is Never Dead', 'The serial killer confesses to another camper, but the rest of the stranded survivors are still in the dark as final twists and truths are divulged.', 3, 8, 6154695, 4);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (28, '6am to 9am', 'On the first anniversary of a mysterious slaying, the masked killer responsible strikes again, butchering one of the earlier crime''s eyewitnesses.', 3, 1, 7152350, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (29, '9am to 12pm', 'Connections to Kit are revealed in flashbacks, while a couple''s secret affair is exposed via social media and another slaying strikes the community.', 3, 2, 7197105, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (30, '12pm to 3pm', 'As school is dismissed for the summer, more shocking memories from the past year surface and a teacher who tries to be an ally to Saadia pays a price.', 3, 3, 7197106, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (31, '3pm to 6pm', 'The Druid kills again as Amy recalls her role in Kit''s death, Roberta questions multiple witnesses, and plans get underway for the solstice party.', 3, 4, 7197107, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (32, '6pm to 9pm', 'Roberta and Pujit identify a suspect while Violet''s lurid, exploitative murder blog goes too far, making her and Joe targets of outrage and revenge.', 3, 5, 7197108, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (33, '9pm to 12am', 'Attendees of the solstice party are stalked by the Druid while someone engineers a violent confrontation in the basement between Angel and Dan.', 3, 6, 7197109, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (34, 'Midnight to 3am', 'Angel and Dan desperately try to escape, Roberta and Pujit get too close to the Druid, and Saadia grows closer to Connor in the hours after the party.', 3, 7, 7197110, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (35, '3am to 6am', 'With the identity of the Druid revealed, the few remaining survivors inside the apartment building must make a last-ditch fight for their lives.', 3, 8, 7197111, 5);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (36, 'Episode 1', null, 3, 1, 7353709, 6);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (37, 'Episode 1', null, 4, 1, 5457849, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (38, 'Episode 2', null, 4, 2, 5457850, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (39, 'Episode 3', null, 4, 3, 5457851, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (40, 'Episode 4', null, 4, 4, 5457852, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (41, 'Episode 5\', null, 4, 5, 5457853, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (42, 'Episode 6', null, 4, 6, 5457854, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (43, 'Episode 7', null, 4, 7, 5457855, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (44, 'Episode 8', null, 4, 8, 5457856, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (45, 'Episode 9', null, 4, 9, 5457857, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (46, 'Episode 10', null, 4, 10, 5457858, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (47, 'Episode 11', null, 4, 11, 5457859, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (48, 'Episode 12', null, 4, 12, 5457860, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (49, 'Episode 13', null, 4, 13, 5457861, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (50, 'Episode 14', null, 4, 14, 5457862, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (51, 'Episode 15', null, 4, 15, 5457863, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (52, 'Episode 16', null, 4, 16, 5457864, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (53, 'Episode 17', null, 4, 17, 5457865, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (54, 'Episode 18', null, 4, 18, 5457866, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (55, 'Episode 19', null, 4, 19, 5457867, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (56, 'Episode 20', null, 4, 20, 5457868, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (57, 'Episode 21', null, 4, 21, 5457869, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (58, 'Episode 22', null, 4, 22, 5457870, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (59, 'Episode 23', null, 4, 23, 5457871, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (60, 'Episode 24', null, 4, 24, 5457872, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (61, 'Episode 25', null, 4, 25, 5457873, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (62, 'Episode 26', null, 4, 26, 5457874, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (63, 'Episode 27', null, 4, 27, 5457875, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (64, 'Episode 28', null, 4, 28, 5457876, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (65, 'Episode 29', null, 4, 29, 5457877, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (66, 'Episode 30', null, 4, 30, 5457878, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (67, 'Episode 31', null, 4, 31, 5457879, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (68, 'Episode 32', null, 4, 32, 5457880, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (69, 'Episode 33', null, 4, 33, 5457881, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (70, 'Episode 34', null, 4, 34, 5457882, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (71, 'Episode 35', null, 4, 35, 5457883, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (72, 'Episode 26', null, 4, 36, 5457884, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (73, 'Episode 37', null, 4, 37, 5457885, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (74, 'Episode 38', null, 4, 38, 5457886, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (75, 'Episode 39', null, 4, 39, 5457887, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (76, 'Episode 40', null, 4, 40, 5457888, 7);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (77, 'From Shetland To Orkney', 'From Shetland To Orkney - This documentary explores the north- sea-facing, eastern coast of Scotland and England, which offers powerful visual stimuli with its light, its atmosphere, its landscape and historic buildings. Life in the sparsely populated coastal regions of these two countries is archaic and has remained in close touch with nature: shaped by the Celts and Vikings, exposed to the forces of the elements and the North Sea. Endless expanses, dramatic cloud formations, hills, moors, forests and lakes characterise the region, as do the steep cliffs and long sandy beaches, fishing villages and lighthouses,castles, manors, parks and gardens.', 5, 1, 5457898, 8);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (78, 'From The Highlands To Aberdeen', 'From The Highlands To Aberdeen - This documentary explores the north- sea-facing, eastern coast of Scotland and England, which offers powerful visual stimuli with its light, its atmosphere, its landscape and historic buildings. Life in the sparsely populated coastal regions of these two countries is archaic and has remained in close touch with nature: shaped by the Celts and Vikings, exposed to the forces of the elements and the North Sea. Endless expanses, dramatic cloud formations, hills, moors, forests and lakes characterise the region, as do the steep cliffs and long sandy beaches, fishing villages and lighthouses,castles, manors, parks and gardens.', 5, 2, 5457899, 8);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (79, 'From Aberdeen To Berwick Upon Tweed', 'From Aberdeen To Berwick Upon Tweed - This documentary explores the north- sea-facing, eastern coast of Scotland and England.', 5, 3, 5457900, 8);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (80, 'From Berwick Upon Tweed To Whitby', 'From Berwick Upon Tweed To Whitby - This documentary explores the north- sea-facing, eastern coast of Scotland and England.', 5, 4, 5457901, 8);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (81, 'From Scarborough To Harwich', 'From Scarborough To Harwich - This documentary explores the north- sea-facing, eastern coast of Scotland and England.', 5, 5, 5457902, 8);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (82, 'Male Insecurity', 'How sexually liberated are we really? Sunny Bergman sets out to shine a light on various common sex subjects by means of four topics. Young, old, newly in love or together for years, gay, straight or transsexual, they all drop their guards in Sunny’s tent. In the first episode, Sunny explores male sexuality and their common insecurities. Male sexuality is plagued by unshakeable clichés. For example they cannot get enough of it, like to boast about it unabashedly, want as many different partners as possible and prefer to be dominant in bed. But is male sexuality really that rigid?', 6, 1, 5458114, 9);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (83, 'Sexual Development', 'Sexuality develops along as many paths as there are people. How do your environment, your cultural background, your education, your parents’ ideas and your personal childhood experiences influence your sexuality? What is it like to grow up always having porn within reach and was growing up in the former DDR (German Democratic Republic) really that liberating? Traumatic as well as liberating experiences emerge from the tent.', 6, 2, 5458115, 9);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (84, 'Out of the Box', 'How fluid are inclination, gender and sexuality? The ‘gender bender’ has put a noticeable amount of thought into the meaning of sex, what we (want to) consider normal and how sexual preferences develop. This episode provides insight into the prejudice we have with regard to sex and gender, and opens doors to a very surprising look at sexual morality.', 6, 3, 5458116, 9);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (85, 'How Do You Keep It Exciting?', 'Sharing your fantasies with others is both embarrassing and stimulating. Fantasies are a personal Viagra or testosterone patch. Surprise and familiarity take turns in the tent. What thoughts and images excite people? Does a lively fantasy make you a better lover? Some get into Tantra while others experience the sheer necessity of fantasies in prison.', 6, 4, 5458117, 9);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (86, 'Uganda', 'Since the sexual revolution of the 1960s, Westerners like to think their ideas about sex are fairly sophisticated compared to less developed nations. Dutch filmmaker Sunny Bergman sets out to talk to the women of Uganda, India and Cuba in an attempt to challenge this idea. In episode one, she joins a class of Ugandan school children being taught the importance of sexual pleasure for both partners in a relationship. Sunny then meets with a professional ''sex aunt'', whose job it is to instruct girls in the pleasures of sex.', 7, 1, 5458118, 10);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (87, 'China', null, 7, 2, 5458119, 10);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (88, 'Cuba', 'Dutch filmmaker Sunny Bergman continues her travels around the world to reveal a new and unique perspective about sexuality in other cultures. In this final episode, Sunny travels to communist Cuba, where no billboard-type advertising is allowed - but finds that personal sexual advertising is popular. Sunny also discovers that the very absence of sex-sells advertising is a boost to personal sex life in Cuba.', 7, 3, 5458120, 10);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (89, 'India', 'Dutch filmmaker Sunny Bergman continues her travels around the world to reveal a new and unique perspective about sexuality in other cultures. In this episode, Sunny travels to India, the home Kama Sutra, where she explores how ancient Indians freely preached the religion of sexual pleasure. In Baul, on the border of India with Bangladesh, Sunny discovers the practice of sexual yoga is a daily ritual.', 7, 4, 5458121, 10);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (90, 'Charlie Platoon & the Story of Marc Lee', 'Iraq 2006: SEAL Team 3 and conventional U.S. Forces battle insurgents to take back the war-torn city of Ramadi, when a beloved teammate is struck and becomes the first Navy SEAL killed in Iraq. Faced with heartbreak, but still believing in the mission, the team rallies together to fight on.', 8, 1, 5458147, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (149, 'Episode 7', null, 12, 7, 5458595, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (150, 'Episode 8', null, 12, 8, 5458596, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (151, 'Episode 9', null, 12, 9, 5458597, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (152, 'Episode 10', null, 12, 10, 5458598, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (153, 'Episode 11', null, 12, 11, 5458599, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (154, 'Episode 12', null, 12, 12, 5458600, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (91, 'Red Wings Recovery', 'Afghanistan 2005: A quick reaction force on a mission to recover the remains of a helicopter crash learns that there is a lone survivor they must now rescue. Driven by the standards of the Ranger Creed, these men push themselves to the limit, both mentally and physically, and persevere and complete the mission.', 8, 2, 5460649, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (92, 'A Battle For Haditha Dam', 'Iraq 2003: A group of U.S. Army Rangers fights to seize control of Haditha Dam, a strategically key location in Operation Iraqi Freedom, when they realize they are outnumbered by a strong Iraqi force. As the battle rages on, a young medic must face his fears when his skills are put to the test in order to save the life of a teammate.', 8, 3, 5473599, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (93, 'Task Force Merrill', 'Afghanistan 2010: A team of U.S. Army Rangers sets out on a mission to engage the Taliban and gather intelligence when their unit hits an IED. After the blast, the platoon pushes through their fears to aid a fellow soldier who is critically injured and together they display a level of fortitude that ultimately saves his life.', 8, 4, 5486992, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (94, 'Roberts Ridge UN-AIRED', '***Un-aired episode***

Afghanistan 2002: A quick reaction force of U.S. Army Rangers goes into the snowy mountains of Afghanistan to rescue a missing Navy SEAL; things quickly turn bad when enemy fighters bombard them and multiple teammates are killed.', 8, 5, 5503778, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (95, 'Objective Breton UN-AIRED', '***Un-aired episode***

Afghanistan 2009: A group of U.S. Army Rangers goes after a jihadist network when their unit hits a roadside bomb and suffers multiple casualties. The team overcomes the chaos of the mass casualty situation and try to cope with the loss of one of their teammates.', 8, 6, 5507230, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (96, 'Ranger Machine UN-AIRED', '***Un-aired episode***

Iraq 2006: A team of U.S. Army Rangers lead a covert operation to take out a group of Al-Qaeda high value targets. Deep in enemy territory it''s the implicit trust amongst the team that allows them to overcome hurdle after hurdle. ', 8, 7, 5516902, 11);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (97, 'Episode 1', 'Mads, a police detective, is called out to investigate a body washed ashore near a wind farm. At first, it merely looks like an industrial accident, but the case implicates the upper echelons of Energreen - one of Denmark''s most successful and leading energy companies. The CEO is charismatic Sander, and a young lawyer, Claudia, is working hard to advance in the company. Nicky, a former car thief and mechanic, has put his life of crime behind him for his girlfriend''s sake, but his new colleague Bimse tempts Nicky with a chance to make a quick buck. ', 9, 1, 5458263, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (98, 'Episode 2', 'Claudia is given new responsibilities at Energreen, starting with a case about insider trading that could damage the company. Mads enlists help from Alf at the fraud squad to find a connection between the death at the wind farm and Alf''s impression of Energreen as being a little too clever. At home, Mads is trying to keep his family and home running smoothly despite his wife''s recent multiple sclerosis attack. Bimse and Nicky''s car theft gives surprising results.', 9, 2, 5458264, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (99, 'Episode 3', 'Mads and Alf pursue leads to Energreen''s missing traders. Claudia is questioned, but is quickly summoned to Abu Dhabi by Sander. He and the rest of Energreen''s management are attending an important energy conference to attract major investors. Amid the sparkling luxury of the desert state, Claudia witnesses a new and revealing aspect of Sander''s fascinating world and how he operates. Nicky and Bimse are afraid of getting caught and bury the money they found in the BMW. But all that cash is tempting. What''s the harm in spending just a little of it?', 9, 3, 5462921, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (100, 'Episode 4', 'Mads and Alf interrogate Ulrik, the CFO of Energreen. But while Mads and Alf delve deeper into the company''s secrets, serious developments are taking place in Mads''s private life - Kristina has lied to her husband. At Energreen, the management is hard at work trying to streamline the company before going public. Claudia is sent to Thullander Industries, a subsidiary, to make cutbacks and ends up in a sticky situation. Bimse is in trouble with some debts, and Nicky promises to help him.
', 9, 4, 5462927, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (101, 'Episode 5', 'Mia is approached by a whistleblower and focuses her energy on finding out the truth about Energreen. Sander and Mr Christensen worry that Mia''s findings could jeopardise their listing on the stock exchange, and they plan to stop her with Claudia''s help. Mads and Alf follow one of Mia''s leads to Energreen''s research facility in Poland, and Mads is glad to get away from his chaotic home life. Jan wants to help Nicky and Bimse out with the Serbs and introduces them to Erik, their new accountant.', 9, 5, 5462928, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (102, 'Episode 6', 'Despite Energreen''s best attempts, Mia''s article is published and puts the company on the spot as they try to find investors before going public. The article isn''t Sander''s only problem, since Nicky tries to blackmail him with the contents of the stolen iPad. Claudia is troubled with doubt about Sander. Mads and Alf are desperately looking for the whistleblower who was Mia''s source.', 9, 6, 5462929, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (103, 'Episode 7', 'Jens Kristian divulges Energreen''s illegal setup to Mads and Alf, but it is not enough to prevent the company''s big moment - the long-awaited listing on the stock exchange.

Claudia sneaks away from Sander''s big day. She is shocked by what her son Bertram has witnessed.

Erik needs medical attention, but Nicky and Bimse do not dare take him to hospital.

Mads makes a decision about his home life.', 9, 7, 5462930, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (104, 'Episode 8', 'The minister of justice pressures the fraud squad to close the case against Energreen. However, what Jens Kristian tells them incriminates Claudia more than Sander.

Bimse''s emotions put him and Nicky on a collision course.', 9, 8, 5462931, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (105, 'Episode 9', 'Alf is guilt-ridden about Mia, but he snaps out of his self-pity when Mads makes an amazing discovery. Not only does Energreen have major accounting discrepancies, its coffers are also empty, and they can use this to their advantage. Claudia has reached the same conclusion, but Sander insists on continuing his dangerous game and asks her to throw a spanner in the works and ruin the fraud squad''s plans. Sander''s henchman finds out where Nicky and Bimse got all their money and insists on getting it back - the Swede isn''t a man you refuse.', 9, 9, 5462932, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (106, 'Episode 10', 'The media are shocked by Energreen''s announcement, and Mads and Alf are busy searching for evidence to use against them. Claudia is at a crossroads in her life as she realises how serious the consequences could be for her. Nicky and Bimse hide from the Swede. Mads helps Kristina who is back in hospital, just like in ''the old days''.', 9, 10, 5462933, 12);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (107, 'Episode 1', 'A seemingly trivial case of a small carpentry business that has gone bankrupt under mysterious circumstances gets Mads'' attention. Claudia is released after one and a half years in prison but her son is in Paris and the only work she can find is at a coffee shop. But then she gets a visit from Energreen''s old chairman, Mr. Christensen. Nicky and Bimse still has the auto repair shop - but on the side, Nicky has become an apprentice to the Swede, "P".', 9, 1, 5739267, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (108, 'Episode 2', 'Mads has to defend the police''s handling of the hostage crisis in Nova Bank. He digs deeper and finds that the bank forced the carpenter into bankruptcy.', 9, 2, 5739268, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (109, 'Episode 3', 'Nicky and Bimse''s friendship is tested when Bimse is questioned about the assault on a police officer. The fraud squad uncovers some unsavoury practices at Nova Bank, and Alf and Mads investigate a bank manager who is living well above his means. Claudia tries to get herself a contract of employment to satisfy her parole officer. Kristina and Mads have a big decision to make.', 9, 3, 5739269, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (110, 'Episode 4', 'Mads and Alf unravel the corrupt practices at Nova Bank, not realising that their boss Nanna is reporting their findings to Nova''s chairman, the very man they are trying to bring down. Amanda struggles with her demons as Absalon Bank faces a critical vote from its shareholders. The Swede tries to influence this vote and gives Nicky a dirty job to do.', 9, 4, 5739271, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (111, 'Episode 5', 'Mads and Alf, so far unable to pin any fraud on the chairman of Nova Bank, find a new lead and are able to bring him in for questioning. Nicky has an unexpected visit at the garage, straining his relationship with Bimse even further, but Nicky will soon have much bigger things to worry about. Amanda and Claudia realise that the only way to avoid Absalon Bank being taken over by Nova is to find another bank that is willing to buy them.', 9, 5, 5739272, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (112, 'Episode 6', 'Nicky''s assignment from Christiansen, to kidnap the granddaughter of his ex-colleague, proves troublesome and he desperately tries to cover his tracks. Alf and Mads get another lead in their case against Christiansen and think they can finally nail him. Amanda resorts to blackmail to keep control of her bank.', 9, 6, 5739274, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (113, 'Episode 7', 'After his failed assignment, Nicky has fallen out of favour with the Swede and is tipped over the edge when he can''t get answers from him. At the Fraud Squad, Mads is more impatient than ever to get evidence against Christensen. Against his boss''s advice, he heads over to Absalon Bank and sees something that will be important for the investigation - Claudia.', 9, 7, 5739275, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (114, 'Episode 8', 'Claudia is feeding the police information about Christensen, but fails to give them any concrete evidence. Mads and Alf press her to lure him into a trap. Their co-operation brings up the Energreen scandal again, and Claudia tells them what she knows about Sanders'' escape route, information which puts them on the trail of the Swede. Meanwhile, the Swede meant what he said to Nicky who now reports directly to Christensen, while the Swede himself prepares his exit from the dirty games.', 9, 8, 5739276, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (115, 'Episode 9', 'Mads waits nervously in the hospital not realising there is also trouble at home. His pregnant wife Kristina is woken by a noise in the dark as Nicky has broken into their home to retrieve the evidence against Christensen. Absalon is on the verge of bankruptcy, and the siblings Amanda and Simon are fighting to save their bank. Claudia will stop at nothing to get revenge on Christensen, even if it means betraying the people who trust her. The Swede turns up at the garage, desperately looking for Nicky - but finds Bimse.', 9, 9, 5739277, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (116, 'Episode 10', 'Alf has rumbled Christensen''s plan - a huge attack on the Danish krone. He and Mads try to stop it, but the attack is already underway and threatens to bring the whole country''s economy to its knees. Claudia has sold Steen to the police to get revenge on Christensen, but it''s still not enough to trap the unscrupulous businessman. Amanda struggles to prove that Simon is not complicit in Christensen''s crimes.', 9, 10, 5739279, 13);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (117, 'Episode 1', 'Two years have passed since we last saw Nicky and Alf, which we follow into the third season against the organized hash crime money cycle. PTSD-affected Alf has got a new job in the police''s expert group; Task Force Nørrebro, while Nicky has gone from being P''s handrail to being in the industry as big smugglers. He also runs a functional laundering machine through a juice bar and dreams of a large house on the Spanish coastline. Alf dreams of his colleague Isa, but life rarely goes as planned. Nicky gets a folder with some information that reveals an unpleasant truth about his son, and Alf must keep secret his relationship with Isa as he is to lead a case of a mysterious find in a basement.', 9, 1, 6979256, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (118, 'Episode 2', 'A meaningful job is just what the bank adviser, Anna, hopes to achieve in Kredit Nord, where she works, but when a young colleague overtakes her inside and the family is on the verge of economic collapse, Anna has difficulty accepting her fate. Alf only cares about his work, while it is the women of his life who care about him. He himself suggests pills to work together on everyday life and group D in Task Force Nørrebro. Nicky is highly respected in his professional
world, but he is privately tricked into meeting with the ex-girlfriend Lina after 2 years. His family is split and his son pays the price.', 9, 2, 6979259, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (119, 'Episode 3', null, 9, 3, 6979269, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (120, 'Episode 4', null, 9, 4, 6979270, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (121, 'Episode 5', null, 9, 5, 6979272, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (122, 'Episode 6', null, 9, 6, 6979274, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (123, 'Episode 7', null, 9, 7, 6979292, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (124, 'Episode 8', null, 9, 8, 6979295, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (125, 'Episode 9', null, 9, 9, 6979297, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (126, 'Episode 10', null, 9, 10, 6979383, 14);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (127, 'Christmas Unwrapped: The History of Christmas', 'People all over the world celebrate the birth of Christ on December 25th. Trace the emergence of Christmas from Pagan festivals like the Roman Saturnalia, which celebrated the winter solstice. Learn how Prince Albert introduced the Christmas tree to the English-speaking world in 1841.', 10, 1, 5458376, 15);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (128, 'It''s a Wonderful Time to be Weird', 'WEIRD U.S. watches as NASA tracks Santa''s gift-delivery mission and goes to the heartland for a Christmas dinner of fish soaked in lye - also an ingredient in rat poison! How are two hosts go coast-to-coast to visit all things wacky about Christmas!', 10, 2, 5458377, 15);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (129, 'Santa Claus', 'Discover every aspect of the legend of Father Christmas. Despite the commercialization, he remains a symbol of what is worthwhile about the holiday season: generosity, kindness and good will to men.', 10, 3, 5458378, 15);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (130, 'Christmas Tech', 'Watch Manhattan''s annual tree preparations and find out what it takes to design, assemble and install Macy''s annual holiday windows. Learn how the 3,300 pound UNICEF crystal snowflake is hoisted above Fifth Avenue every year and travel across the country to visit companies whose business is Christmas!', 10, 4, 5458379, 15);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (131, 'Episode 1', null, 12, 1, 5458576, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (132, 'Episode 2', null, 12, 2, 5458577, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (133, 'Episode 3', null, 12, 3, 5458578, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (134, 'Episode 4', null, 12, 4, 5458579, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (135, 'Episode 5', null, 12, 5, 5458580, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (136, 'Episode 6', null, 12, 6, 5458581, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (137, 'Episode 7', null, 12, 7, 5458582, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (138, 'Episode 8', null, 12, 8, 5458583, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (139, 'Episode 9', null, 12, 9, 5458584, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (140, 'Episode 10', null, 12, 10, 5458585, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (141, 'Episode 11', null, 12, 11, 5458586, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (142, 'Episode 12', null, 12, 12, 5458587, 16);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (143, 'Episode 1', null, 12, 1, 5458589, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (144, 'Episode 2', null, 12, 2, 5458590, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (145, 'Episode 3', null, 12, 3, 5458591, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (146, 'Episode 4', null, 12, 4, 5458592, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (147, 'Episode 5', null, 12, 5, 5458593, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (148, 'Episode 6', null, 12, 6, 5458594, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (155, 'Episode 13', null, 12, 13, 5458601, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (156, 'Episode 14', null, 12, 14, 5458602, 17);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (157, 'Episode 1', null, 12, 1, 5458603, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (158, 'Episode 2', null, 12, 2, 5458604, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (159, 'Episode 3', null, 12, 3, 5458605, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (160, 'Episode 4', null, 12, 4, 5458606, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (161, 'Episode 5', null, 12, 5, 5458607, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (162, 'Episode 6', null, 12, 6, 5458608, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (163, 'Episode 7', null, 12, 7, 5458609, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (164, 'Episode 8', null, 12, 8, 5458610, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (165, 'Episode 9', null, 12, 9, 5458611, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (166, 'Episode 10', null, 12, 10, 5458612, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (167, 'Episode 11', null, 12, 11, 5458613, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (168, 'Episode 12', null, 12, 12, 5458614, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (169, 'Episode 13', null, 12, 13, 5458615, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (170, 'Episode 14', null, 12, 14, 5458616, 18);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (171, 'Episode 1', null, 12, 1, 5458619, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (172, 'Episode 2', null, 12, 2, 5458620, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (173, 'Episode 3', null, 12, 3, 5458621, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (174, 'Episode 4', null, 12, 4, 5458622, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (175, 'Episode 5', null, 12, 5, 5458623, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (176, 'Episode 6', null, 12, 6, 5458624, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (177, 'Episode 7', null, 12, 7, 5458625, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (178, 'Episode 8', null, 12, 8, 5458626, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (179, 'Episode 9', null, 12, 9, 5458627, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (180, 'Episode 10', null, 12, 10, 5458628, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (181, 'Episode 11', null, 12, 11, 5458629, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (182, 'Episode 12', null, 12, 12, 5458630, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (183, 'Episode 13', null, 12, 13, 5458631, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (184, 'Episode 14', null, 12, 14, 5458632, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (185, 'Episode 15', null, 12, 15, 5458633, 19);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (186, 'Episode 1', null, 12, 1, 5458634, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (187, 'Episode 2', null, 12, 2, 5458635, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (188, 'Episode 3', null, 12, 3, 5458636, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (189, 'Episode 4', null, 12, 4, 5458637, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (190, 'Episode 5', null, 12, 5, 5458638, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (191, 'Episode 6', null, 12, 6, 5458639, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (192, 'Episode 7', null, 12, 7, 5458640, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (193, 'Episode 8', null, 12, 8, 5458641, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (194, 'Episode 9', null, 12, 9, 5458642, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (195, 'Episode 10', null, 12, 10, 5458643, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (196, 'Episode 11', null, 12, 11, 5458644, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (197, 'Episode 12', null, 12, 12, 5458645, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (198, 'Episode 13', null, 12, 13, 5458646, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (199, 'Episode 14', null, 12, 14, 5458647, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (200, 'Episode 15', null, 12, 15, 5458648, 20);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (201, 'Episode 1', null, 12, 1, 5458649, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (202, 'Episode 2', null, 12, 2, 5458650, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (203, 'Episode 3', null, 12, 3, 5458651, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (204, 'Episode 4', null, 12, 4, 5458652, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (205, 'Episode 5', null, 12, 5, 5458653, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (206, 'Episode 6', null, 12, 6, 5458654, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (207, 'Episode 7', null, 12, 7, 5458655, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (208, 'Episode 8', null, 12, 8, 5458656, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (209, 'Episode 9', null, 12, 9, 5458657, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (210, 'Episode 10', null, 12, 10, 5458658, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (211, 'Episode 11', null, 12, 11, 5458659, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (212, 'Episode 12', null, 12, 12, 5458660, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (213, 'Episode 13', null, 12, 13, 5458661, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (214, 'Episode 14', null, 12, 14, 5458662, 21);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (215, 'Episode 1', null, 12, 1, 5458663, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (216, 'Episode 2', null, 12, 2, 5458664, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (217, 'Episode 3', null, 12, 3, 5458665, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (218, 'Episode 4', null, 12, 4, 5458666, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (219, 'Episode 5', null, 12, 5, 5458667, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (220, 'Episode 6', null, 12, 6, 5458668, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (221, 'Episode 7', null, 12, 7, 5458669, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (222, 'Episode 8', null, 12, 8, 5458670, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (223, 'Episode 9', null, 12, 9, 5458671, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (224, 'Episode 10', null, 12, 10, 5458672, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (225, 'Episode 11', null, 12, 11, 5458673, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (226, 'Episode 12', null, 12, 12, 5458674, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (227, 'Episode 13', null, 12, 13, 5458675, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (228, 'Episode 14', null, 12, 14, 5458676, 22);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (229, null, null, 12, 1, 5824862, 23);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (230, null, null, 12, 2, 5824863, 23);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (231, 'Episode 1', null, 13, 1, 5458821, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (232, 'Episode 2', null, 13, 2, 5458822, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (233, 'Episode 3', null, 13, 3, 5458823, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (234, 'Episode 4', null, 13, 4, 5458824, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (235, 'Episode 5', null, 13, 5, 5458826, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (236, 'Episode 6', null, 13, 6, 5458827, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (237, 'Episode 7', null, 13, 7, 5458828, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (238, 'Episode 8', null, 13, 8, 5458829, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (239, 'Episode 9', null, 13, 9, 5460277, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (240, 'Episode 10', null, 13, 10, 5460278, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (241, 'Episode 11', null, 13, 11, 5460279, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (242, 'Episode 12', null, 13, 12, 5460280, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (243, 'Episode 13', null, 13, 13, 5490730, 24);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (244, 'Episode 1', null, 14, 1, 5458842, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (245, 'Episode 2', null, 14, 2, 5458843, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (246, 'Episode 3', null, 14, 3, 5458844, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (247, 'Episode 4', null, 14, 4, 5458845, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (248, 'Episode 5', null, 14, 5, 5458846, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (249, 'Episode 6', null, 14, 6, 5458847, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (250, 'Episode 7', null, 14, 7, 5458848, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (251, 'Episode 8', null, 14, 8, 5458849, 25);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (252, 'Episode 1', null, 15, 1, 5458908, 26);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (253, 'Episode 2', null, 15, 2, 5458909, 26);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (254, '玩．味巴黎', null, 16, 1, 5458930, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (255, 'Do姐「騷」Time', null, 16, 2, 5458931, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (256, '巴黎尋寶記', null, 16, 3, 5458932, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (257, '香檳．甜食．開心果', null, 16, 4, 5458933, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (258, '「購」別巴黎', null, 16, 5, 5458934, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (259, '新．鮮體驗', null, 16, 6, 5458935, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (260, '週末市集「掃貨」記', null, 16, 7, 5458936, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (261, null, null, 16, 8, 5458938, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (262, null, null, 16, 9, 5458939, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (263, null, null, 16, 10, 5458941, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (264, null, null, 16, 11, 5458942, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (265, null, null, 16, 12, 5458943, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (266, null, null, 16, 13, 5458944, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (267, null, null, 16, 14, 5458946, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (268, null, null, 16, 15, 5458947, 27);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (269, '潮玩高卡車 二手巿場尋寶', null, 16, 1, 6455957, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (270, '自製個人文具 精選高檔三文魚', null, 16, 2, 6455958, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (271, '深入北海道夕張蜜瓜拍賣會', null, 16, 3, 6455959, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (272, '札幌魚市場覓鮮 威士忌工場品酒', null, 16, 4, 6455960, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (273, '四百年歷史烏冬店', null, 16, 5, 6455961, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (274, '感受丹麥皇室氣派', null, 16, 6, 6455962, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (275, '丹麥街市遊樂團', null, 16, 7, 6455963, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (276, '哥本哈根星級地道菜', null, 16, 8, 6455964, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (277, '北歐家品簡約中見不平凡', null, 16, 9, 6455965, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (278, '哥本哈根慢活單車遊', null, 16, 10, 6455966, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (279, '領略米蘭工匠的精雕細琢', null, 16, 11, 6455967, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (280, '置身全球首間概念店', null, 16, 12, 6455968, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (281, '米蘭美食新舊並存', null, 16, 13, 6455969, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (282, '認識巴馬三大特產誕生過程', null, 16, 14, 6455970, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (283, '正宗意大利薄餅 搜購菇菌特產食材', null, 16, 15, 6455971, 28);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (284, 'Tampa Bay Buccaneers Part 1', null, 17, 1, 5458966, 29);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (285, 'Tampa Bay Buccaneers Part 2', null, 17, 2, 5458967, 29);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (286, 'Tampa Bay Buccaneers Part 3', null, 17, 3, 5458968, 29);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (287, 'San Diego Chargers Part 1', null, 17, 1, 5458969, 30);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (288, 'San Diego Chargers Part 2', null, 17, 2, 5458970, 30);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (289, 'San Diego Chargers Part 3', null, 17, 3, 5458971, 30);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (290, 'Miami Dolphins Part 1', null, 17, 1, 5458972, 31);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (291, 'Miami Dolphins Part 2', null, 17, 2, 5458973, 31);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (292, 'Miami Dolphins Part 3', null, 17, 3, 5458974, 31);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (293, 'Episode 1', null, 18, 1, 5459005, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (294, 'Episode 2', null, 18, 2, 5459006, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (295, 'Episode 3', null, 18, 3, 5459007, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (296, 'Episode 4', null, 18, 4, 5459064, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (297, 'Episode 5', null, 18, 5, 5459065, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (298, 'Episode 6', null, 18, 6, 5459066, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (299, 'Episode 7', null, 18, 7, 5459067, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (300, 'Episode 8', null, 18, 8, 5459068, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (301, 'Episode 9', null, 18, 9, 5459069, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (302, 'Episode 10', null, 18, 10, 5459070, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (303, 'Episode 11', null, 18, 11, 5459071, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (304, 'Episode 12', null, 18, 12, 5459072, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (305, 'Episode 13', null, 18, 13, 5459073, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (306, 'Episode 14', null, 18, 14, 5459074, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (307, 'Episode 15', null, 18, 15, 5459075, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (308, 'Episode 16', null, 18, 16, 5459076, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (309, 'Episode 17', null, 18, 17, 5459077, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (310, 'Episode 18', null, 18, 18, 5459083, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (311, 'Episode 19', null, 18, 19, 5459084, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (312, 'Episode 20', null, 18, 20, 5459085, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (313, 'Episode 21', null, 18, 21, 5459086, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (314, 'Episode 22', null, 18, 22, 5459088, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (315, 'Episode 23', null, 18, 23, 5459089, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (316, 'Episode 24', null, 18, 24, 5459090, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (317, 'Episode 25', null, 18, 25, 5459091, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (318, 'Episode 26', null, 18, 26, 5459092, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (319, 'Episode 27', null, 18, 27, 5459093, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (320, 'Episode 28', null, 18, 28, 5459094, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (321, 'Episode 29', null, 18, 29, 5459095, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (322, 'Episode 30', null, 18, 30, 5459096, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (323, 'Episode 31', null, 18, 31, 5459097, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (324, 'Episode 32', null, 18, 32, 5459098, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (325, 'Episode 33', null, 18, 33, 5459099, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (326, 'Episode 34', null, 18, 34, 5459101, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (327, 'Episode 35', null, 18, 35, 5459107, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (328, 'Episode 36', null, 18, 36, 5459109, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (329, 'Episode 37', null, 18, 37, 5459111, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (330, 'Episode 38', null, 18, 38, 5459113, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (331, 'Episode 39', null, 18, 39, 5459115, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (332, 'Episode 40', null, 18, 40, 5459116, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (333, 'Episode 41', null, 18, 41, 5459117, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (334, 'Episode 42', null, 18, 42, 5459119, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (335, 'Episode 43', null, 18, 43, 5459120, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (336, 'Episode 44', null, 18, 44, 5459121, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (337, 'Episode 45', null, 18, 45, 5459123, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (338, 'Episode 46', null, 18, 46, 5459124, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (339, 'Episode 47', null, 18, 47, 5459125, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (340, 'Episode 48', null, 18, 48, 5459126, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (341, 'Episode 49', null, 18, 49, 5459127, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (342, 'Episode 50', null, 18, 50, 5459128, 32);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (343, 'Episode 1', null, 19, 1, 5459194, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (344, 'Episode 2', null, 19, 2, 5459196, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (345, 'Episode 3', null, 19, 3, 5483991, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (346, 'Episode 4', null, 19, 4, 5483992, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (347, 'Episode 5', null, 19, 5, 5483993, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (348, 'Episode 6', null, 19, 6, 5483994, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (349, 'Episode 7', null, 19, 7, 5483995, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (350, 'Episode 8', null, 19, 8, 5483996, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (351, 'Episode 9', null, 19, 9, 5492274, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (352, 'Episode 10', null, 19, 10, 5492275, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (353, 'Episode 11', null, 19, 11, 5492276, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (354, 'Episode 12', null, 19, 12, 5492277, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (355, 'Episode 13', null, 19, 13, 5492278, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (356, 'Episode 14', null, 19, 14, 5492279, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (357, 'Episode 15', null, 19, 15, 5492280, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (358, 'Episode 16', null, 19, 16, 5492281, 33);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (359, 'Green Dreams', 'Back in the 90s, Abz Love was a rapper in successful boyband 5ive. Now he and his girlfriend singer-songwriter Vicky Fallon want to start a new self-sufficient life in the country. Armed with advice from the green residents at Lammas - a Welsh eco village - they start hunting for smallholdings and fall in love with a remote farm that needs renovating. Undaunted by the scale and cost of the work, they take their first steps by purchasing some livestock at auction.', 20, 1, 5459207, 34);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (360, 'Winning Bid', 'City couple Abz Love and his girlfriend Vicky Fallon have their dream of a new life in the country dashed when their mortgage falls through. A smallholding that comes up for auction keeps their plans for living a self-sufficient green life alive. Leaving the music business and city life behind them, they move into their new property in a remote Welsh valley, only to discover that the land is beset with problems.', 20, 2, 5459212, 34);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (361, 'Stuck in the Mud', 'City couple Abz Love and his girlfriend Vicky Fallon are intent on living a self-sufficient life, but with barely any money and even less know-how, their first winter tests them to their limits. By selling everything they own, they are able to start work on draining the land and restoring the polytunnel and garden plot. Their new neighbours in the valley all rally round - supplying know-how, chickens and much-needed help as the first signs of spring appear.', 20, 3, 5459214, 34);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (362, 'Abz on the Christmas Farm', 'This Christmas special catches up with rapper turned smallholder Abz Love and his girlfriend Vicky Fallon, as a tumultuous year on the farm draws to a close.

Over a Christmas drink by the tree, they reflect on the highs and lows of their new life. We see how their green money-making schemes - from rock-star eggs to alpaca rearing - fared and get a real insight into the hard graft of farming a small holding.

With no money in the bank but big plans for growing a new crop that will sustain them, Abz resorts to selling everything he owns on eBay. Over an astonishing few days, the auction for his Brit Award attracts bids of over £1 million, and as Christmas approaches, Abz and Vicky are optimistic about the future, bursting with plans and fully committed to their new lifestyle and the friends they have made in their wet little corner of Wales.', 20, 1, 5459232, 35);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (363, 'These Ain''t No Saints', null, 22, 1, 5459543, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (364, 'List Busters', 'Kye Kelley and Bobby Ducote prepare to defend their #1 titles against rivals Brandon Smith and Scott Taylor.', 22, 2, 5520670, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (365, 'New Orleans: Heads I Win, Tails You Lose', 'A Tennessee crew calls out the New Orleans racers. Also, Shane prepares his Mustang with the help of Travis and Scott.', 22, 3, 5520671, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (366, 'Houston, We Have a Problem', 'The New Orleans crew competes with the Houston team. Kye suffers mechanical issues that might have him out of the race completely; Brandon faces Sonoma; Scott and Jerry have a fight.', 22, 4, 5520672, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (367, 'The Shocker Shakeup', 'The New Orleans team returns for list racing; Shannon''s ''69 Chevelle targets Bobby''s spot on the small-tire list; Shane''s Nova tries to crack the big tire list; Barry refuses to race Jerry Bird. 
', 22, 5, 5520673, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (368, 'AlaBAM!', null, 22, 6, 5520674, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (369, 'Raiders of the Lost Ark-ansas', 'Kye and Bobby call out Arkansas; the Birds fight to get their car straight; Kye plays a prank on Scott Taylor; an alternate road interferes with the home-field advantage.', 22, 7, 5520675, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (370, 'When the Saints Come Driving In', 'The season closes with hardcore list racing; Kye and Bobby have targets on their backs; Travis fights to stay and Jason tries to fend off Barry.', 22, 8, 5520676, 36);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (371, 'Building a Team in the Big Easy', 'Check out never-before-seen footage featuring unaired races, outtakes, and new interviews with the racers!', 22, 1, 5585522, 37);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (372, 'Shoot to Thrill', 'As the NOLA street racers gear up for a new season, the small-tire guys storm into Texas to battle the country''s best in a winner-take-all event. Kye and Bobby give sneak peeks into the upcoming season, featuring the biggest bets and craziest crashes.', 22, 2, 6157810, 37);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (373, 'Highway to Hell', 'Kye Kelley invites three new drivers to try out for the top-five big-tire list; Kye tries to take the number one spot back from Scott Taylor; Bobby must also defend his top spot against number two, Brandon Smith.', 22, 1, 6136470, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (374, 'Thunderstruck', 'Kye wants to call out Houston, featuring James "Birdman" Finney, David Bird Jones, and Barefoot Ronnie Pace. The NOLA team barely tied Houston last year, so both sides want a rematch.
', 22, 2, 6157647, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (375, 'Moneytalks', null, 22, 3, 6162160, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (376, 'Shook Me All Night Long', null, 22, 4, 6172148, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (377, 'Back in Black', 'The New Orleans small-tire list gets its second shakeup of the season as Scott, the top big-tire driver, rolls out a small-tire car; Shannon hopes to mount a comeback; Brandon becomes determined to win against Bobby.', 22, 5, 6197120, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (378, 'Hells Bells', null, 22, 6, 6197121, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (379, 'Walk All Over You', null, 22, 7, 6197122, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (380, 'T.N.T', null, 22, 8, 6197123, 38);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (381, 'Carpe Do ''Em', 'Nikki plays Tinder Tapout with Rachel Feinstein and Rory Scovel, subjects her friends to a lie detector test and attends a foot fetish party.', 23, 1, 5459776, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (382, 'Dick Moves', 'Nikki makes sexting classier, quizzes her guests on the latest developments in the erotic sciences and hosts a game show to help strip club patrons win their money back.', 23, 2, 5506247, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (383, 'I''m the Boat', 'Nikki and Kyle Kinane provide the dialogue for a porn scene, guests Esther Povitsky and Chris D''Elia share their Insta-curities, and a charity helps out forgotten friends.', 23, 3, 5521260, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (384, 'Already Wet', 'Nikki interviews Sara Schaefer while sitting on a vibrator, hooks her parents up to a polygraph, and invites Bridget Everett and Jim Jefferies to devise new dirty emojis', 23, 4, 5528935, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (385, 'Don''t Touch That Remote', 'Nikki hears horror stories from maids who clean up after hotel guests have sex, plus a game of Tinder Tapout.', 23, 5, 5528936, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (386, 'Find My Boyfriend a Girlfriend', 'Nikki discusses the subject of polyamory and interviews an Uber driver about getting together with a passenger.', 23, 6, 5538784, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (387, 'Your Wedding Sucks', 'Moshe Kasher and Grace Helbig share items from their sexual bucket lists, engaged couples apologize to their friends, and Nikki rails against bikinis.', 23, 7, 5553185, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (388, 'Get Her a Glass of Water', 'Nikki explores the topic of one-night stands, feeds lines to porn actors during a shoot, and welcomes special guests Kristen Schaal and Kyle Kinane.', 23, 8, 5553186, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (389, 'Panty Sniffers', 'Sex columnist Dan Savage gives advice to Nikki''s younger self, then Nikki interviews some "panty sniffers" and chats with guests Todd Glass and Nick Thune.', 23, 9, 5558654, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (390, 'I Broke My Dick', 'Nikki explores the world of pegging and plays a round of Tinder Tapout with special guests Patton Oswalt and Natasha Leggero.', 23, 10, 5558655, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (391, 'Is That Your Belt?', 'Nikki takes a look at the world of professional cuddlers and plays a round of Tinder Tapout with special guests Mary Lynn Rajskub and Adam Pally.', 23, 11, 5632733, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (392, 'I Miss David Bowie', 'Women in the workplace through the lens of pornography is a topic of discussion with Kristen Schaal. Also: a chat with Chris D''Elia and Kate Walsh.', 23, 12, 5639458, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (393, 'Really Real R&B', 'Nikki sticks it to the judge of the Stanford rape case, helps Omarion produce a song about awkward sex, and plays What''s Your Number? with Riki Lindhome and Anthony Jeselnik.', 23, 13, 5649134, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (394, 'Make America Horny Again', 'Nikki goes to a Donald Trump rally in San Diego to quiz his supporters on sex; and discusses infidelity with Maria Bamford and Marc Maron.', 23, 14, 5660095, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (395, 'Mysteries of the Female Orgasm', 'Nikki teams up with a group of women to conduct groundbreaking research on the female orgasm and learns about flirting via GIFs with guests Jim Jefferies and Liza Treyger.', 23, 15, 5661385, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (396, 'Blind Date Champion', 'Nikki looks at dreadfully bad dates with Dave Waite; and plays Tinder Tapout with Ron Funches and Katie Nolan.', 23, 16, 5669490, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (397, 'Rock-Hard Weekend', 'Dr. Drew Pinsky discusses the popularity of over-the-counter male-enhancement pills. Also: David Spade and Nicole Byer talk to kittens about complex social issues.', 23, 17, 5669491, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (398, 'Is This Forever?', 'Nikki provides the dialogue for a hospital porn scene, calls out annoying behavior on social media with her guests and works with couples to plan for their eventual breakup.', 23, 18, 5669492, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (399, 'Museum of Broken Relationships', 'Nikki visits a museum full of people''s old relationship keepsakes, debunks myths about bisexuals with Margaret Cho and rails against the injustices of America''s wage gap.', 23, 19, 5669493, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (400, '24 Hours in a Strip Club', 'Nikki goes to Las Vegas, where she attempts to remain in a strip club for 24 hours; and plays Tinder Tapout with Jim Norton and Bridget Everett.', 23, 20, 5669494, 39);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (401, 'Nikki Glaser: Perfect', 'Not Safe with Nikki Glaser host Nikki Glaser brings her sharp wit to her first hour-long special,"Perfect." Glaser contemplates what it means to become an adult woman,exploring issues like the problem with marriage, the right time and method to have a baby and learning how to be yourself in a relationship. Hear Nikki talk frankly about her relationships with porn and sexual shame, and find out why she "needs to get her tank cleaned." Filmed November 14, 2015 at The Gerald Lynch Theater in New York.', 23, 1, 5577579, 40);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (402, 'Reinventing Russia', 'Lucy investigates the beginning of the Romanovs'' 300-year reign in Russia. In 1613, when Russia was leaderless, 16-year-old Mikhail Romanov was plucked from obscurity and offered the crown of Russia. Mikhail was granted absolute power and began the reign of the Romanovs as the most influential dynasty in modern European history.', 24, 1, 5459778, 41);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (403, 'Age of Extremes', 'Lucy examines the extraordinary reign of Catherine the Great, and the traumatic conflict with Napoleonic France that provides the setting for the novel War and Peace.', 24, 2, 5459779, 41);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (466, 'Episode 2', 'Camilla, Duchess of Cornwall, is shopping for cut-price animal-print leggings.', 26, 2, 5945981, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (468, 'Episode 4', 'Dame Maggie''s vlog has some of the best acting tips you will ever hear.', 26, 4, 5945983, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (404, 'The Road to Revolution', 'Lucy Worsley concludes her history of the Romanov dynasty, investigating how the family''s grip on Russia unraveled in their final century. She shows how the years 1825-1918 were bloody and traumatic, a period when four tsars tried - and failed - to deal with the growing pressure for constitutional reform and revolution.', 24, 3, 5459780, 41);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (405, 'Hollywood Medium With Tyler Henry Preview Special', 'A sneak peek of the series about 20-year-old clairvoyant Tyler Henry, who has recently moved to Los Angeles in order to better serve his new client pool of celebrities.', 25, 1, 5459795, 42);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (406, 'Meet the Medium to the Stars', 'A series preview of a reality show that centers on young clairvoyant Tyler Henry, who gives psychic readings to celebrities.', 25, 2, 5459796, 42);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (407, 'Tyler''s Top Ten', 'Tyler picks his Top 10 favorite celebrity readings from Season 1. Included: He shares never-before-seen footage and his own personal thoughts about these life-changing moments.', 25, 3, 5700498, 42);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (408, 'Tyler Henry Previews New Season of "Hollywood Medium"', 'From readings with Macklemore to Rebel Wilson, the young clairvoyant reveals how fans will gain new insights into his process on season 4 of the hit E! series!', 25, 4, 7053198, 42);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (409, 'Jamie Pressly, Bella Thorne, NeNe Leakes & John Salley', 'A young clairvoyant gives psychic readings to celebrity clients, including Jaime Pressly, NeNe Leakes, Bella Thorne and John Salley in the series premiere.', 25, 1, 5477573, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (410, 'Nicole ''''Snooki'''' Polizzi, Monica Potter & Tom Arnold', 'Snooki makes an emotional connection with her beloved late uncle; Tyler delivers a life-changing message to Monica Potter from her deceased father; and Tom Arnold finds resolution and closure when he''s reconnected to departed family members.', 25, 2, 5492722, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (411, 'Ross Mathews, Margaret Cho, Jodie Sweetin & Jillian Rose Reed', 'Tyler delivers detailed messages to Ross Mathews from his late father; Jodie Sweetin receives validation from her departed grandmother that she is on the right path; Margret Cho gets an unexpected visit from beyond by a comedy legend; and Jillian Rose Reed is left speechless by a deceased family member.
', 25, 3, 5505009, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (412, 'Amber Rose, Cheryl Burke & Heather & Terry Dubrow', 'Amber Rose and her mother are reconnected with a beloved aunt; Heather and Terry Dubrow receive a message from beyond from a rock star brother who died of a drug overdose; and Tyler helps Cheryl Burke get closure from a painful childhood experience.', 25, 4, 5509961, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (413, 'The Lawrence Brothers, Candis Cayne & Loni Love', 'Tyler delivers a life-changing message to Joey, Matthew and Andrew Lawrence from their departed grandmother; and gets starstruck meeting Candis Cayne, who asks for his help dealing with a friend''s tragic death. Also: Loni Love is haunted by a missing gumbo recipe.', 25, 6, 5536984, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (414, 'Tracey Gold, Natalya Neidhart, Michael Sam & Christopher Knight', 'A murdered child reaches out via Tyler to reconnect with Tracey Gold; Tyler makes a connection to lost loved ones with WWE Diva Natalya Neidhart; Michael Sam gets insight from Tyler; Christopher Knight has an emotionally charged awakening.', 25, 5, 5536986, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (415, 'Terrell Owens, Fairuza Balk, Olivia Culpo, Carnie Wilson', 'Tyler sees a mysterious woman in Terrell Owens''s love life; Fairuza Balk has a shocking connection to her recently departed brother; Olivia Culpo is awe struck by her first psychic reading; a warning and message of hope for Carnie Wilson.', 25, 7, 5553586, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (416, 'Dj Qualls, Boy George, Rob Dyrdek, Charisma Carpenter', 'DJ Qualls is stunned by a life-changing reading with Tyler; Boy George refuses to accept Tyler''s prediction about his love life; Tyler gives Rob Dyrdek an accurate medical reading; a message leaves Charisma Carpenter in tears.', 25, 8, 5553587, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (417, 'Omarosa, Ashley Hamilton, RJ Mitte, Carmen Electra', 'Omarosa receives critical instructions from her late fiancé; Carmen Electra finds closure in her sister''s death; Ashley Hamilton deals with revelations from the grave about departed members of his famous family; and RJ Mitte seeks Tyler''s help unveiling a mysterious presence that haunts his home.', 25, 9, 5553588, 43);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (418, 'Melissa Joan Hart; Madison Beer; Snooki Follow-Up', 'In the Season 2 premiere, Melissa Joan Hart is a skeptic-turned-believer when her reading with Tyler reveals a hidden family secret and connects to her deceased father. Meanwhile, Madison Beer receives a message from a childhood friend who died tragically. And finally, Tyler travels to New Jersey to meet Snooki''s family and bring them emotional closure.', 25, 1, 5700499, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (419, 'Jennifer Esposito; Whitney Port; Kris Jenner', 'Tears are shed when Tyler connects an object to a recently departed loved one during a meeting with Jennifer Esposito; Whitney Port gets emotional when she receives a message from her dead father; Kris Jenner and Khloe Kardashian are stunned that a family member is watching them from beyond the grave.', 25, 2, 5700500, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (420, 'Kendra Wilkinson; Lil Jon; Carole Radziwill', 'Lil'' Jon is reconnected with a loved one who died too young; Kendra Wilkinson receives news from the other side about the future of her family; and Tyler travels to New York City, where he helps journalist Carole Radziwill get closure after the death of a famous friend.', 25, 3, 5723720, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (421, 'Corey Feldman, Rachel Hunter, Evelyn Lozada', 'Corey Feldman attempts to communicate with his close friend Corey Haim; Rachel Hunter receives encouragement and peace as Tyler tries to reach out to her deceased trailblazing grandmother; Evelyn Lozada and her daughter Shaniece get emotional during a reading that connects them to a beloved brother-in-law.', 25, 4, 5723721, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (422, 'Audrina Patridge, Moby, Austin Mahone, Roselyn Sanchez', 'A disturbing family mystery is uncovered with reality star Audrina Partridge; Moby is shocked by Tyler''s ability to offer him very specific details directly from his deceased mother; Austin Mahone receives answers from his father, who passed away when he was a toddler; and Roselyn Sanchez cries over a message from her beloved grandmother.', 25, 5, 5750146, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (423, 'Maria Menounos, Retta, Pia Toscano, Larry Birkhead', 'Maria Menounos receives messages of comfort; Retta''s late grandmother has warnings about her health; Pia Toscano connects with her grandfather; Tyler connects with Anna Nicole Smith, leaving Larry comforted and thrilled.', 25, 6, 5761770, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (424, 'The Bella Twins, Dr. Nassif, Metta World Peace, Tori Spelling', null, 25, 7, 5770750, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (425, 'Eva Longoria, Bobby Brown, JWoww', null, 25, 8, 6094107, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (426, 'Mel B, Reza Farahan, Jana Kramer, Tionne ', 'Mel B has a tearful reading as Tyler connects her to a beloved patriarch who helped her become Scary Spice; "Shah''s of Sunset" star Reza Farahan is left speechless when Tyler connects to his two battling deceased grandfathers; country music star Jana Kramer is left stunned as Tyler brings a message from beyond to her best girlfriend; and hip-hop super group TLC is reunited from beyond the grave after a tragic accident as Tyler reconnects T-Boz with Lisa "Left Eye" Lopez.
', 25, 9, 6101203, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (427, 'Nico, Ice-T and Alan Thicke', 'Tyler connects Nico Tortorella with his grandpa and shocks CoCo Austin and Ice-T. Tyler reunites with Tanya Thicke, after previously reading Alan Thicke months ago, to help with her grief.', 25, 10, 6113864, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1083, 'Ep. 21', null, 51, 21, 2915991, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (428, 'Janice Dickinson, Joanna Krupa, Marlee Matlin', 'Supermodel Janice Dickinson is shocked and devastated as she''s reconnected to her dear friend John Belushi. Tyler receives messages from the other side to help solve a tragic Polish murder mystery for former "Real Housewife" star Joanna Krupa. And Tyler brings tears to Marlee Matlin when her departed father offers information from her childhood to help explain her deafness.', 25, 11, 6123301, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (429, 'Khloé Kardashian and Kylie Jenner, Ru Paul, Elisha Cuthbert', 'Khloé Kardashian is joined by Kylie Jenner for a reading as the sisters discover some shocking news about their love lives. Drag queen superstar RuPaul has a profoundly shocking reading as Tyler makes a connection to his departed mother and father. Actress Elisha Cuthbert is blown away by Tyler''s ability to help her family get closure after the death of a beloved grandmother.', 25, 12, 6133463, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (430, 'Lisa Vanderpump, Allison Janney, Portia De Rossi, Kacey Musgraves', 'Tyler helps Lisa Vanderpump connect to her dearly departed grandmother; Allison Janney gets questions answered and more insight about the tragic death of a sibling; Portia De Rossi connects with the man who helped her beat an eating disorder; and Kacey Musgraves hears details of her grandmother''s death.', 25, 13, 6133464, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (431, ' Stassi Schroeder and Kristen Doute, Johnny Weir, Nancy Grace', '"Vanderpump Rules" stars Stassi and Kristen have an intense reading which helps them both solve family mysteries. Olympic figure skater Johnny Weir gets answers from Tyler about his very public divorce. Tyler proves his abilities to tough-as-nails television host Nancy Grace as she emotionally releases long-held guilt over her father''s death.', 25, 14, 6151939, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (432, 'Jenna Dewan Tatum, Emily VanCamp, Pauly D', 'Tyler helps Jenna Dewan Tatum solve the mystery of a catastrophic family death. Pauly D makes a connection to his tragically killed best friend and Emily VanCamps learns a family secret.', 25, 15, 6173462, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (433, 'Todd and Julie Chrisley, Patti Stanger, Adrianne Palicki', 'Tyler converts Todd Chrisley from skeptic to believer. Patti Stanger comes to Tyler questioning why her adoptive mom kept her from her birth mother. Adrianne Palicki connects to her grandma.', 25, 16, 6198615, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (434, 'Ryan Lochte, Tabatha Coffey, Becky G, Mischa Barton', 'Olympic gold medalist Ryan Lochte is stunned when Tyler brings through a message from his beloved deceased grandfather about his gold medal win. Tough as nails salon superstar Tabatha Coffey breaks down in tears when Tyler offers an emotional message from beyond the grave from her departed mother. Tyler amazes singer and actress Becky G by connecting her with her guardian angels. Actress Mischa Barton connects with relatives whom she had never met to understand her past.', 25, 17, 6198616, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (435, 'Shanola Hampton with Amy Smart, Brett Eldredge, Brooke Burns, Linda Blair', 'Amy Smart gifts a reading with Tyler to costar Shanola Hampton, during which Shanola makes a deeply emotional reconnection to her beloved mother. Country music superstar and skeptic Brett Eldredge is in shock when his beloved grandfather speaks to him from beyond the grave. Actress Brooke Burns receives answers from Tyler about a tragic double death in her family. Tyler uncovers life-threatening medical issues at Linda Blair''s beloved dog rescue.', 25, 18, 6215951, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (436, 'Kim Zolciak-Biermann and Kroy Biermann, Jaleel White, Peter Facinelli', 'Reality star Kim Zolciak-Biermann and her husband Kroy Biermann are left speechless as Tyler delivers shocking medical advice to them from a deceased loved one. In an emotional reading, actor and skeptic Jaleel White is brought to tears when Tyler connects from beyond the grave to his beloved deceased co-star. "Twilight" star actor Peter Facinelli is stunned as Tyler answers his questions about the afterlife and connects him to his late grandfather.', 25, 19, 6235794, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (437, 'Brandi Glanville, Joanna Garcia Swisher, Chuck Liddell, Tiffany Haddish', 'Tyler makes an emotional connection to the other side for Real Housewife Brandi Glanville with the one person in her life who made her feel special. Actress Joanna Garcia Swisher gets a shocking message from Tyler about forgiveness. Tyler brings tough man UFC superstar Chuck Liddell to tears with specific messages beyond the grave from the one person in his life who believed in him. Through Tyler, comedian and actress Tiffany Haddish receives crucial messages about her long-absent father.', 25, 20, 6235795, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (438, 'Lil Kim, Jamie-lynn Sigler and Lance Bass, Dr. Drew', 'Lil'' Kim is reunited with her beloved soulmate, The Notorious B.I.G; best friends Jamie-Lynn Sigler and Lance Bass have a joint reading; Dr. Drew is converted from skeptic to believer.', 25, 21, 6272533, 44);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (439, 'Jim Parsons, Kristin Cavallari, Savannah & Todd Chrisley', 'Tyler connects "The Big Bang Theory" star Jim Parsons to his departed grandmothers on the other side; "The Hills" star and fashion icon Kristin Cavallari is brought to tears as Tyler demystifies her brother''s final moments.', 25, 1, 6565929, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (440, 'Giuliana Rancic, Christina El Moussa, Katy Mixon, Taye Diggs', 'Red-carpet host Giuliana Rancic receives shocking messages; "Flip or Flop" star Christina El Moussa gets divorce advice from her beloved deceased grandmother; details from beyond give "American Housewife" actress Katy Mixon a sense of peace.', 25, 2, 6570074, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (441, 'Chrissy Metz, Taryn Manning, Iggy Azalea, Taye Diggs Follow-Up', 'A message of hope from the other side reinvigorates actress Chrissy Metz ("This Is Us"); Tyler follows up with actor Taye Diggs on a prediction come true; actress Taryn Manning receives revelations about her father''s premature passing.', 25, 3, 6590454, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (442, 'Megan Fox, Jewel, David and Rosanna Arquette, Nicole Sullivan', 'Actress Megan Fox reveals her supernatural gifts and shares her red-carpet fears; actress Nicole Sullivan''s deceased grandmother sends a message of forgiveness; Tyler shares revelations from the other side about singer Jewel''s health and future', 25, 4, 6596596, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (443, 'Erika Jayne Girardi, K. Michelle, Rick Fox, Padma Lakshmi', 'Tyler reunites Erika Jayne Girardi with the dearly departed grandparents who raised her; Tyler helps rhythm and blues singer and "Love & Hip-Hop: Atlanta" star K. Michelle find closure with her beloved aunt''s premature passing.', 25, 5, 6610585, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (444, 'Lucy Hale, Tyler Oakley, Selma Blair', '“Pretty Little Liars" star Lucy Hale receives shocking details from the other side; YouTube personality Tyler Oakley and his mother learn of a long-buried family history; actress Selma Blair is connected to her dearly departed first love.', 25, 6, 6616197, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (445, 'Arielle Kebbel, Ronda Rousey, Ronnie Ortiz-Magro, Chad Michael Murray', 'Arielle Kebbel ("Midnight Texas," "Ballers") has a tearful experience with Tyler as he makes a connection to a deceased uncle; UFC fighter Ronda Rousey''s tough exterior shatters when Tyler brings a message from her beloved departed father.', 25, 7, 6626160, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (446, 'Luann de Lesseps; Maddie Ziegler; Jax Taylor & Tom Sandoval; Tituss Burgess', 'Tyler shares a message with Luann de Lesseps from a recently departed friend; Tyler delivers a heartwarming message to Maddie Ziegler and her mom; Tyler turns a skeptic into a true believer when he visits Jax Taylor and Tom Sandoval.', 25, 8, 6639397, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (467, 'Episode 3', 'New York producer Bernice Rubin is trying to secure some Shakespeare for Broadway.', 26, 3, 5945982, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1084, 'Ep. 22', null, 51, 22, 2916001, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (447, 'Brooke Burke-Charvet, Robert Buckley, Hayley Orrantia, Soleil Moon Frye', 'Tyler delivers a message to TV personality Brooke Burke-Charvet; actor Robert Buckley receives messages from the other side about his little-known family history; actress Hayley Orrantia learns about her deceased grandmother''s final few moments.', 25, 9, 6649946, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (448, 'Teresa Giudice, Jeannie & Mama Mai, La Toya Jackson', 'Tyler connects TV personality Teresa Giudice to her recently deceased mother; Tyler uncovers a treasure trove of family secrets from the grave as he sits down with "The Real" star Jeannie Mai and the woman who''s been keeping them: Jeannie''s mother.', 25, 10, 6657962, 45);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (449, 'Rebel Wilson, Chris Harrison, Sofia Vergara', 'Season four premieres with a star-struck Tyler Henry opening the door to "Pitch Perfect" movie star and comedian Rebel Wilson! Tyler brings through messages from the other side for Rebel''s family as the superstar tears up in awe of Tyler''s ability. Chris Harrison, host of "The Bachelor" franchise, is in disbelief when Tyler connects to Chris'' long-departed mentor. "Modern Family" mega-star Sofia Vergara is thankful for Tyler''s healing gift when he brings her family messages from her tragically deceased brother. In a never-before-seen moment on Hollywood Medium, Tyler goes on the road with his live show--and makes shocking and emotional connections to audience members in front of a crowd of over 1500 fans.', 25, 1, 7047325, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (450, 'Terra Jole, Lizzo, Howie Mandel', 'The bubbly star of "Little Women LA" Terra Jole breaks into tears as Tyler brings through validations from her adored deceased father. When Tyler gets messages from the father of luscious hip hop recording star Lizzo, she shares her grieving process and opens up about the trauma of losing her number one fan. Tyler transforms "America''s Got Talent" host Howie Mandel from skeptic to believer after connecting the comedic legend with his departed father with both clear specifics and heartfelt laughter.', 25, 2, 7047327, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (451, 'Kenya Moore, Wendi McLendon-Covey, Macklemore', 'The larger-than-life Kenya Moore has an emotional reading when Tyler connects with her endeared grandmother, prompting the "Real Housewives of Atlanta" star to share raw memories of her childhood. Tyler brings hilarious "Bridesmaids" and "The Goldbergs" actress and comedian Wendi McClennon-Covey to tears when he demystifies details about the death of her uncle. Tyler travels to Seattle where music superstar Macklemore fights back tears as he hears messages from beyond the grave from a dearly departed high school friend.', 25, 3, 7047328, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (452, 'Lala Kent, Jesse Tyler Ferguson, Holly Robinson Peete', '"Vanderpump Rules" star Lala Kent is brought to tears when Tyler connects to her recently departed father with messages for her family. Tyler''s reading for Jesse Tyler Ferguson brings forth long hidden family secrets delivered through the "Modern Family" star''s deceased grandmother. Amidst the chaos of a black-tie fundraiser for LA''s Project Angel Food charity, Tyler feels pulled to do a reading with Holly Robinson-Peete in which he shares emotional messages from the "21 Jump Street" star''s departed father and uncle.', 25, 4, 7047329, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (453, 'Jill Zarin, Carson Kressley, Mike “The Situation” Sorrentino', 'Tyler heads to New York City for a wild reading with former "Real Housewife of New York" Jill Zarin, whose family is shocked by the amazingly specific messages from her beloved departed husband Bobby. Tyler brings warnings from the other side to fashion legend Carson Kressley about his love life! Reality star Snooki invites Tyler to the "Jersey Shore" house where he brings reality star Mike "The Situation" Sorrentino revelations about a tragic passing in his fiancé''s family.', 25, 5, 7047408, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (454, 'Tamra and Eddie Judge, Stephanie Beatriz, Rasheeda & Kirk Frost', '"Real Housewives of Orange County" star Tamra Judge is amazed when her skeptic husband Eddie turns believer after Tyler brings through details from beyond the grave that only his family would know. With her family watching in the other room, Tyler delivers shocking details from departed loved ones to "Brooklyn 99" star Stephanie Beatriz. Tyler visits Atlanta where he unearths details of a tragic passing to "Love and Hip-Hop Atlanta" stars Rasheeda & Kirk Frost. Tyler then goes backstage at Atlanta''s famous Lip''s drag club, leaving the performers shocked and in tears after connecting to their deceased longtime friend.', 25, 6, 7093987, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (455, 'Scheana Shay, Brad Goreski, Karamo Brown', 'Tyler''s messages from beyond emotionally reconnect Scheana Shay of "Vanderpump Rules" fame with her beloved departed grandmother. Tyler has messages from the other side for celebrity fashion stylist and TV personality Brad Goreski from his inspirational deceased grandmother. Tyler gets the "Queer Eye" treatment from Karamo Brown after reuniting the TV star with his much loved deceased grandmother. After three seasons worth of requests, Tyler leaves five random fans in New York City moved and connected to their loved ones on the other side.', 25, 7, 7100010, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (456, 'Dave & Odette Annable, Cesar Millan, Heidi & Spencer Pratt', 'Tyler shocks Hollywood power couple Dave Annable from "Brothers and Sisters" and his wife Odette Annable from "Supergirl" with the knowledge that their daughter receives visits from a departed grandmother. Visiting Cesar Millan''s animal compound, Tyler gives the Dog Whisperer a shocking revelation form his "Daddy"- but not the human "Daddy" one would expect. When Tyler visits Heidi & Spencer Pratt, he shocks the MTV''s "The Hills" stars with emotional messages for Spencer''s mom.', 25, 8, 7100011, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (457, 'Anne Heche, Jamie Chung, Dr. Drew, Steve-O', 'Tyler connects to the tragic passing of Anne Heche''s brother in an extremely emotional reading that leaves the TV star unable to continue. Tyler leaves Marvel''s "The Gifted" star Jamie Chung in disbelief at his ability by reassuring her with tidings of her future. TV Psychologist Dr. Drew sets up a neural scan to find out what happens in Tyler''s brain during a reading. To receive the reading, the "Hollywood Medium" veteran enlists his friend and "Jackass" favorite Steve-O, who quickly turns from skeptic to believer as Tyler reveals family details no one could possibly know. The resulting scan reveals medically baffling neural activity happening inside Tyler''s brain- which Dr. Drew believes proves that there is something truly unexplainable at work!', 25, 9, 7100012, 46);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (458, 'Episode 1', 'Featuring a delinquent Dame Judi Dench and a dangerously accident-prone massage therapist.', 26, 1, 5459797, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (459, 'Episode 2', 'The Duchess of Cornwall babysits Prince George for the day.', 26, 2, 5459798, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (460, 'Episode 3', 'A pair of American tourists have their rose-tinted view of London put to the test.', 26, 3, 5459799, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (461, 'Episode 4', 'Angela Merkel is back in Britain for another top-level political summit.', 26, 4, 5459800, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (462, 'Episode 5', 'Hayley the zookeeper is distraught when her favourite monkey goes off to be mated.', 26, 5, 5459801, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (463, 'Episode 6', 'Model agent Steph catches up with a promising new face.', 26, 6, 5459802, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (464, 'Highlights Special', 'Chameleon-like Tracey Ullman brings her hilarious take on celebrities and everyday characters, with sketches and music numbers, and a guest appearance from Rupert Grint.', 26, 7, 5895823, 47);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (465, 'Episode 1', 'Delinquent Dame Judi Dench is back, but will being a national treasure save her this time?', 26, 1, 5945980, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (848, 'Melbourne To Outback', null, 41, 8, 5462670, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (469, 'Episode 5', 'Kate and Wills are away, so Camilla has to look after Princess Charlotte for the day.', 26, 5, 5945984, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (470, 'Episode 6', 'Dame Maggie vlogs about a video game, and Angela Merkel takes a trip on an open-top bus.', 26, 6, 5945985, 48);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (471, 'Episode 1', 'German Chancellor Angela Merkel works on her poker face; Jerry Hall-Murdoch looks to apply financial lessons from her previous marriage to her new one; British Prime Minister Theresa May struggles to have a stern conversation with President Trump via video chat; French First Lady Brigitte Macron recalls the good old days; Camilla Parker Bowles has unexpected adventures in babysitting; contestants from "The Great British Bake Off" get serious with cake creations based on their dreams; and the show looks at the latest virtual-assistant incarnations.', 26, 1, 6843499, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (472, 'Episode 2', 'Jerry Hall and Rupert Murdoch look to the future; Angela Merkel tries to stay strong and professional in a meeting with French President Emmanuel Macron; Dame Judi Dench teaches fellow actor Mark Rylance the unexpected pleasures of being a national treasure; Tracey Ullman decides to confront a troll; the show reveals the dangers of hipster infestation.', 26, 2, 6843500, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (473, 'Episode 3', 'Angela Merkel worries about the gender pay gap; the Murdoch clan celebrates Father''s Day; the head of a modeling agency comes up with unconventional bookings; Hollywood studio execs discuss a sexual-harassment campaign; Russian hackers brainstorm new strategies to undermine democracy; a tense Theresa May struggles to stay focused.', 26, 3, 6843501, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (474, 'Episode 4', 'Dame Judi Dench visits a tattoo-themed reality show; Angela Merkel longs to be recognized for her looks; Jeremy Corbyn has an awkward encounter; desperate measures are taken when the Melania Bot malfunctions; a professor learns how the university system encourages student debt; Theresa May becomes paranoid.', 26, 4, 6843502, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (475, 'Episode 5', 'Angela Merkel wonders how to reconnect with the German people; a woman in a male-dominated office struggles to explain workplace gender politics; Camilla, Duchess of Cornwall gift shops for the new royal baby; a "smart" home goes bad; Theresa May gets a surprise visit.', 26, 5, 6843503, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (476, 'Episode 6', 'Angela Merkel chats with President Trump; Theresa May preps for Halloween; and pollsters turn to new techniques in tricky times.', 26, 6, 6843504, 49);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (477, 'Chapter One: The Vanishing of Will Byers', 'On his way home from a friend''s house, young Will sees something terrifying. Nearby, a sinister secret lurks in the depths of a government lab.', 27, 1, 5468124, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (478, 'Chapter Two: The Weirdo on Maple Street', 'Lucas, Mike and Dustin try to talk to the girl they found in the woods. Hopper questions an anxious Joyce about an unsettling phone call.', 27, 2, 5481194, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (479, 'Chapter Three: Holly, Jolly', 'An increasingly concerned Nancy looks for Barb and finds out what Jonathan''s been up to. Joyce is convinced Will is trying to talk to her.', 27, 3, 5621926, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (480, 'Chapter Four: The Body', 'Refusing to believe Will is dead, Joyce tries to connect with her son. The boys give Eleven a makeover. Nancy and Jonathan form an unlikely alliance.', 27, 4, 5621928, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (481, 'Chapter Five: The Flea and the Acrobat', 'Hopper breaks into the lab while Nancy and Jonathan confront the force that took Will. The boys ask Mr. Clarke how to travel to another dimension.', 27, 5, 5621929, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (482, 'Chapter Six: The Monster', 'A frantic Jonathan looks for Nancy in the darkness, but Steve''s looking for her, too. Hopper and Joyce uncover the truth about the lab''s experiments.', 27, 6, 5621930, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (483, 'Chapter Seven: The Bathtub', 'Eleven struggles to reach Will, while Lucas warns that "the bad men are coming." Nancy and Jonathan show the police what Jonathan caught on camera.', 27, 7, 5621931, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (484, 'Chapter Eight: The Upside Down', 'Dr. Brenner holds Hopper and Joyce for questioning while the boys wait with Eleven in the gym. Back at Will''s, Nancy and Jonathan prepare for battle.', 27, 8, 5621932, 50);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (485, 'Chapter One: MADMAX', 'As the town preps for Halloween, a high-scoring rival shakes things up at the arcade, and a skeptical Hopper inspects a field of rotting pumpkins.', 27, 1, 5734306, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (486, 'Chapter Two: Trick or Treat, Freak', 'After Will sees something terrible on trick-or-treat night, Mike wonders whether Eleven''s still out there. Nancy wrestles with the truth about Barb.', 27, 2, 5734307, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (487, 'Chapter Three: The Pollywog', 'Dustin adopts a strange new pet, and Eleven grows increasingly impatient. A well-meaning Bob urges Will to stand up to his fears.', 27, 3, 5734308, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (488, 'Chapter Four: Will the Wise', 'An ailing Will opens up to Joyce -- with disturbing results. While Hopper digs for the truth, Eleven unearths a surprising discovery.', 27, 4, 5734309, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (489, 'Chapter Five: Dig Dug', 'Nancy and Jonathan swap conspiracy theories with a new ally as Eleven searches for someone from her past. “Bob the Brain” tackles a difficult problem.', 27, 5, 5734310, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (490, 'Chapter Six: The Spy', 'Will''s connection to a shadowy evil grows stronger, but no one''s quite sure how to stop it. Elsewhere, Dustin and Steve forge an unlikely bond.', 27, 6, 5734311, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (491, 'Chapter Seven: The Lost Sister', 'Psychic visions draw Eleven to a band of violent outcasts and an angry girl with a shadowy past.', 27, 7, 5734312, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (492, 'Chapter Eight: The Mind Flayer', 'An unlikely hero steps forward when a deadly development puts the Hawkins Lab on lockdown, trapping Will and several others inside.', 27, 8, 5734313, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (493, 'Chapter Nine: The Gate', 'Eleven makes plans to finish what she started while the survivors turn up the heat on the monstrous force that''s holding Will hostage.', 27, 9, 5734314, 51);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (494, 'Beyond Stranger Things: Mind Blown', 'Millie Bobby Brown, Finn Wolfhard, Shawn Levy and the Duffer Brothers sit down to discuss new characters and the season''s most important themes.', 27, 1, 6382653, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (495, 'Beyond Stranger Things: Mad for Max', 'Shawn Levy and the Duffer Brothers stick around to talk 1980s tech and teenage love triangles with Caleb McLaughlin, Gaten Matarazzo and Sadie Sink.', 27, 2, 6382740, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (496, 'Beyond Stranger Things: Unlikely Allies', 'Joe Keery joins Shawn Levy, Gaten Matarazzo and the Duffer Brothers to shed light on Steve''s evolution -- and the season''s most surprising partnership.', 27, 3, 6382741, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (497, 'Beyond Stranger Things: Truth in Hawkins', 'Natalia Dyer, Charlie Heaton, Joe Keery and Brett Gelman dissect a major new development, with insight from David Harbour and Shannon Purser.', 27, 4, 6382742, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (498, 'Beyond Stranger Things: The AV Club', 'Caleb McLaughlin, Gaten Matarazzo, Noah Schnapp and Randy Havens discuss Mr. Clarke''s influence. "Science Guy" Bill Nye and Sean Astin weigh in.', 27, 5, 6382743, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (499, 'Beyond Stranger Things: The New Class', 'Sadie Sink, Brett Gelman, Dacre Montgomery and Linnea Berthelsen share their experiences creating new characters on a show with a huge fan following.', 27, 6, 6382744, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (500, 'Beyond Stranger Things: Closing the Gate', 'Jim Rash steers the cast and crew through a deep-dive discussion of the season''s conclusion and what it means for the future of Hawkins.', 27, 7, 6382745, 52);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (501, 'Chapter One: Suzie, Do You Copy?', 'Summer brings new jobs and budding romance. But the mood shifts when Dustin''s radio picks up a Russian broadcast, and Will senses something is wrong.', 27, 1, 6933995, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (502, 'Chapter Two: The Mall Rats', 'Nancy and Jonathan follow a lead, Steve and Robin sign on to a secret mission, and Max and Eleven go shopping. A rattled Billy has troubling visions.', 27, 2, 6933996, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (503, 'Chapter Three: The Case of the Missing Lifeguard', 'With El and Max looking for Billy, Will declares a day without girls. Steve and Dustin go on a stakeout, and Joyce and Hopper return to Hawkins Lab.', 27, 3, 6933997, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (504, 'Chapter Four: The Sauna Test', 'A code red brings the gang back together to face a frighteningly familiar evil. Karen urges Nancy to keep digging, and Robin finds a useful map.', 27, 4, 6933998, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (505, 'Chapter Five: The Flayed', 'Strange surprises lurk inside an old farmhouse and deep beneath the Starcourt Mall. Meanwhile, the Mind Flayer is gathering strength.', 27, 5, 6934000, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (506, 'Chapter Six: E Pluribus Unum', 'Dr. Alexei reveals what the Russians have been building, and Eleven sees where Billy has been. Dustin and Erica stage a daring rescue.', 27, 6, 6934001, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (507, 'Chapter Seven: The Bite', 'With time running out -- and an assassin close behind -- Hopper''s crew races back to Hawkins, where El and the kids are preparing for war.', 27, 7, 6934002, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (508, 'Chapter Eight: The Battle of Starcourt', 'Terror reigns in the food court when the Mind Flayer comes to collect. But down below, in the dark, the future of the world is at stake.', 27, 8, 6934003, 53);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (509, 'Money Makers', 'Programme one tells the story of the maverick managers who controlled the careers of megastar artists, from Colonel Parker (Elvis) right the way up to Scooter Braun (Justin Bieber). Along the way are rollicking tales of industry legends like Led Zeppelin''s Peter Grant, and Don Arden, who managed the Small Faces, Black Sabbath and ELO.

Narrated by Simon Napier-Bell, it also features contributions from Andrew Loog Oldham (the Rolling Stones), Jon Landau (Bruce Springsteen), Bill Curbishley (the Who), Paul McGuinness (U2) and Jonathan Dickins (Adele).', 28, 1, 5459816, 54);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (510, 'Melody Makers', 'Part two of this enlightening series exploring the music business from behind the scenes looks at the music producers. These are the men and women who have created the signature sounds that have defined key periods in rock and pop history. Highlights include Trevor Horn on inventing the ''Sound of the Eighties'', Lamont Dozier on Motown, and a TV first with legendary producer Tony Visconti taking us through David Bowie''s seminal song Heroes.

Narrated by master producer Nile Rodgers.', 28, 2, 5459817, 54);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (511, 'Myth Makers', 'Part three of this illuminating series exploring the music business from behind the scenes takes a look at PR, the unseen force behind all the biggest musical acts in the world. With unique revelations, unseen footage and unrivalled access, it tells the story of the rise of PR within the music industry through the eyes of the people who lived it. Highlights include the PR campaigns behind superstars Jimi Hendrix, Taylor Swift and David Bowie.', 28, 3, 5459818, 54);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (512, 'How to kiss', 'Learning to kiss is easy, just open your mouth, AND SUCK.', 29, 1, 5459858, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (513, 'Enema Tutorial', 'Get your enema bucket ready, it''s time to squirt water up your ass.', 29, 2, 5459861, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (514, 'Grapefruit Your Man', 'Learn the Angel Grapefruit Technique.', 29, 3, 5459863, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (515, 'How to Sexually Assault Women in Public', 'Learn how to sexually harass women in public and get away with it.', 29, 4, 5459864, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (516, 'Bobo the Diaper Doritos Bandit', 'Bobo be stealing chips. Drop a dorito for him or he come for you.', 29, 5, 5459865, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (517, 'Meme Themed Disser Slam Dunks Ex, CNN reports', 'CNN reports on the ultimate meme themed diss.', 29, 6, 5459866, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (518, 'John Sakars', 'This vegan is about to romance the heck out of you.', 29, 7, 5459867, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (519, 'Cameron Carpenter, the Organ God', 'Cameron Carpenter is the Organ God, we hope we did this incredible footage justice.', 29, 8, 5459868, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (520, 'When Texting turns to Sexting, A News Report', 'The story about sexting you have to hear, to believe.', 29, 9, 5460128, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (521, 'DJ Khaled, Hold You Down', 'Khaled and the crew show you how to hold it down, rape style.', 29, 10, 5460129, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (522, 'Alison Gold - ABCDEFG', 'Patrice Wilson serves up a tasty little parable about cannibalism, pedophilia, and rape.', 29, 11, 5460130, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (523, 'The Worst Movie Ever Made (Part 1)', 'Adam Sandler tries to kill his career with the worst movie ever made, Jack and Jill. Surprisingly the movie made $150mil, and he''s still making movies today. What a world.', 29, 12, 5460131, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (524, 'The Worst Movie Ever Made (Part 2)', 'Adam Sandler and Pepto-Bismol will take you to new heights in this thrilling conclusion to the "worst movie ever made, part 2".', 29, 13, 5460132, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (525, 'The Power of Diamond Water', 'Infused with the power of diamonds and blessed with the love energy of a pseudo-celebrity reality television "star". What a product!', 29, 14, 5460133, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (526, 'DJ Khaled Celebrates "Hold You Down"', 'Join DJ Khaled in the Bahamas as he enjoys the sensual company of other men, causes a nuclear explosion, and rides a jetski.', 29, 15, 5460134, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (527, 'will.i.am', 'will.i.am starts slanging his new wearable, the "pulse", looks like an all around great product!', 29, 16, 5460135, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (528, 'Ubuntu causes girl to drop out of college', 'Two brain dead idiots can''t figure out how to install the internet.', 29, 17, 5460137, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (529, 'Papa John', 'Papa John is just a good ol'' boy here to order a couple sodie pops!', 29, 18, 5460147, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (530, 'Kissing Pranks', 'Chris from Prankinvasion shows us how to kiss girls while landing a spot on the sex predator list.', 29, 19, 5460148, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (531, 'Newt Gingrich is really puzzled', 'Newt Gingrich all puzzled up about what to call a cellphone. Let''s help him out.', 29, 20, 5460149, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (532, 'How to pick up girls', 'Learn how to pick up girls with this ultimate pick up artist.', 29, 21, 5460151, 55);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (533, 'Alison Gold - Chinese Food', 'Patrice Wilson directs another smash hit, Chinese Food.', 29, 1, 5460152, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (534, 'ExpertVillage', 'Expert Village aka Cringe Village', 29, 2, 5460153, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (535, 'Maregasm', 'Maregasms are real, yes they are.', 29, 3, 5460154, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (536, 'First Asian Kiss (Hila Reaction)', 'Our first Asian kiss and we think we''re in love.', 29, 4, 5460155, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (537, 'The Hand Model', 'Ellen Sirot has the softest hands, and she knows what to do with them.', 29, 5, 5460156, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (538, 'Law & Order SVU on Gamers', 'Gamergate is a lot of fun, thanks Law & Order.', 29, 6, 5460157, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (539, 'Baby Love Your Body', 'Baby, love your body. (I do not recommend these people as babysitters)', 29, 7, 5460158, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (540, 'The Rapper', 'Timmy B is a talented young rapper, also he is white.', 29, 8, 5460159, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (541, 'MattyB Juicy', 'MattyBRaps covers Juicy, and honestly, it''s better than the original.', 29, 9, 5460160, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (542, 'VitalyzdTv', 'Vitaly goes milf hunting with real women, no actors, 100% real.', 29, 10, 5460161, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (543, 'SoFloAntonio', 'SoFloAntonio knows how to get views, steal and spam. ez.', 29, 11, 5460162, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (544, 'Pranks in the Hood', 'Pranks in the hood, creating a new definition of "prank".', 29, 12, 5460163, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (545, 'Let''s Get Social 2014', 'The word is social, can you handle it?', 29, 13, 5460164, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (546, 'DJ Khaled - How Many Times ft. Chris Brown, Lil Wayne', 'Dj Khaled, Chris Brown, Lil Wayne, how many times? The DJ Khaled Saga Continues.', 29, 14, 5460165, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (547, 'How Does A Homeless Man Spend $100?', 'JoshPalerLin shows us how helping the homeless can be a great investment.', 29, 15, 5460166, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (548, 'Girl sexually assaulted in GTA V', 'I always knew video gamers were cancer of the Earth, but this report proves it. Trigger warning.', 29, 16, 5460167, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (549, 'Two Handed Great Sword', 'Learn how to chub n roll from the ultimate chub n tuck ninja warrior.', 29, 17, 5460168, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (550, 'Here in My Garage with Tai Lopez', 'Here in my garage, just bought this new Lamborghini here.', 29, 18, 5460169, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (551, 'DONT JUDGE ME CHALLENGE IS STUPID', 'The don''t judge me challenge is a great way to promote body acceptance, oh btw no UGLYS ALLOWED.', 29, 19, 5460170, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (552, 'Air Conditioning is Sexist', 'Have you ever been slightly uncomfortable and decided to go to the news?', 29, 20, 5460171, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (553, 'The Dangers of Social Media', 'Coby Persin teaches us what we need to fear next, thanks Coby!', 29, 21, 5460172, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (554, 'Nature Valley Rediscover Nature', 'Looking to give your children diabetes? Buy Nature Valley.', 29, 22, 5460173, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (555, 'Catching a Child Predator with Joey Salads', 'Joey Salads and the gang show us their favorite salad recipe.', 29, 23, 5460174, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (556, 'Become a Living God', 'Do you have what it takes to become a living meme?', 29, 25, 5460175, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (557, 'Feeding the Homeless', 'Thanks to homeless Filthy Frank for his help! youtube.com/user/TVFilthyFrank', 29, 26, 5460176, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (558, 'THE TAI LOPEZ CONSPIRACY', 'Is Tai Lopez a liar? Yes. He is.', 29, 27, 5460177, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (559, 'The Dangers of Social Media (Boys Edition!)', 'Coby Persin''s first video changed the world, no more gullible children...
Thanks to JONTRON! ► https://www.youtube.com/user/JonTronShow', 29, 28, 5460178, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (560, 'PrankInvasion', 'PrankInvasion is back, more fappable than ever!', 29, 29, 5460179, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (561, 'SoFloAntonio''s Facebook Page', 'An overdue look at SoFloAntonio''s Facebook page. Visit our new page! https://www.facebook.com/soflobro', 29, 30, 5460180, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (562, 'How to Clean Your Gamer Gear', 'How to properly clean your gaming gear with Dust-Off gamer spray', 29, 31, 5460181, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (563, 'KILLING BEST FRIEND PRANK', 'Sam Pepper blurs the line between parody and prank in his new video', 29, 32, 5460182, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (564, 'The Return of Patrice Wilson', 'After a year of waiting Patrice Wilson has returned, nuttier than ever.', 29, 34, 5460183, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (565, 'Steve Harvey Pranks Miss Universe', 'Steve Harvey is not just a bad Miss Universe host, he''s a bad person.', 29, 35, 5460184, 56);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (566, 'Game Crazy Training Video', 'It''s time to get jiggy with Game Crazy ft. Zelda', 29, 2, 5483390, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (567, 'THE DJ KHALED DOCUMENTARY', 'The life and career of DJ Khaled as told by h3h3productions', 29, 4, 5504144, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (568, 'THE FINE BROS RANT', 'SORRY GUYS.. We know this is coming super late and has been beaten DEAD, but fuck it, they deserve all the shit they''re getting.', 29, 5, 5504145, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (569, 'THE SOFLO FACEBOOK RANT', 'SoFlo and Facebook work together to ensure the destruction of the internet.', 29, 6, 5525770, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (570, 'IN RESPONSE TO SOFLO', 'Soflo & Co. sent some threats our way so this is our response.', 29, 7, 5525771, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (571, 'HOW TO MAKE MODERN ART', 'Please send us one million dollars via eBay here: http://goo.gl/P4LVTe', 29, 8, 5525772, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (572, 'The Deleted Social Experiment', 'Did you know that buying an iPhone can get you moyded?', 29, 9, 5551909, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (573, 'THE LEAFY RANT', 'Sorry Leafy but it had to be said.', 29, 10, 5557157, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (574, 'VAPE NATION', 'Yo what up peepz just me on my day off chillin, enjoy!', 29, 11, 5558269, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (575, 'Ethan Joins a 90s Boy Band', 'THANKS TO MY FRIENDS FOR NOT JOINING MY BOY BAND', 29, 12, 5583804, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (576, 'VAPE NAYSH YALL', 'A bit of a goof for ya on this 4/20 VAPE DAY', 29, 13, 5588604, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (577, 'Psychics, Mediums, and Gurus', null, 29, 15, 5597079, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (578, 'We''re Being Sued', 'Matt Hosseinzadeh aka Bold Guy is suing us for copyright infringement.', 29, 16, 5624087, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (579, 'A New Chapter for Fair Use on YouTube', 'Thank you everyone SO much.', 29, 17, 5628385, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (580, 'The Greatest YouTuber of ALL TIME', 'The man, the myth the legend: Ryan Jaunzemis.', 29, 18, 5636986, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (581, 'Beach Pranks with Ethan Slamberry', 'Ethan Bradberry makes his final transformation into Ethan Slamberry', 29, 19, 5646060, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (582, 'Ethan Ruins EDC', null, 29, 20, 5661185, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (583, 'Deception, Lies, and CSGO', 'CSGO has reached peak shadiness with ProSyndicate and TmarTn

Special thanks to HonorTheCall for his excellent research
https://www.youtube.com/user/WarGod1283

Special thanks to:
Charles Coulter
Martin Passante
Matt Dobill
Ryan O''Connor', 29, 21, 5667285, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (584, 'Your Privacy is at Risk', 'Our privacy was compromised when a hacker got our sim card 

Note: The t-mobile rep that originally called us was NOT the hacker, he called to set up the passcode as confirmed by t-mobile. I also asked the guy to confirm his ID before we set up the passcode. Also the passcode did not exist before the call, so if it was the hacker, he would also have to set up the code. Anyway, t-mobile confirmed the call was real.

HOW TO PROTECT YOURSELF:

1. BUY A USB PASS KEY (Look up Yubikey)

2. SET UP GOOGLE AUTHENTICATION APP
https://support.google.com/accounts/a...

Watch the Reaction Video Playlist --► https://goo.gl/QUHWA6

NYT article:
http://www.nytimes.com/2015/11/29/mag...

Go check out HayliNic
https://www.twitch.tv/haylinic
https://www.youtube.com/user/haylinicTV', 29, 22, 5671372, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (585, 'We Meet DJ Khaled', 'We won a trip from HOT97 to meet DJ Khaled! Our time with him was limited, but we did our best to get footage, here are the results!

Big thanks to HOT97 and DJ Khaled and his crew!', 29, 23, 5678188, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (586, 'It''s Time to Stop', 'Honestly I''m just jealous of Chris and his mad pick up skills', 29, 24, 5683666, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (587, 'JonTron Ruins our Day', 'We wanted to lighten it up a bit with this lighthearted goof, hope you guys enjoy! We uploaded this yesterday but YouTube had a bug where no one could watch it, so we had to reupload it today!', 29, 25, 5686969, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (588, 'Pokémon GO Will Kill Your Children', 'Pokémon GO is ruining society', 29, 26, 5688091, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (589, 'We Got Roasted', 'Thank you to these roast masters:
►I Miss the Old Ethan by DJBOOTYBUTT►https://goo.gl/kT63sF
►Beat by DT Hitz ►https://goo.gl/qYl3mG
►Lyrics by NeuronExploder ►https://goo.gl/6eGsNx

►What''s up with Ethan''s Eyebrows?►https://goo.gl/HbUcJA', 29, 27, 5691234, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (590, 'The God of Cringe', 'This is the ultimate cringe, look no further', 29, 28, 5692830, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1085, 'Ep. 23', null, 51, 23, 2916011, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (591, 'Save Marina Joyce Parody #savemarinajoyce', 'Just a lighthearted goof on the Marina Joyce situation, appreciate ya.

In case you have no idea what we''re talking about, this video is a parody of this hugely viral video from this week:

https://www.youtube.com/watch?v=FqhFU...

The Marina Joyce video above received ~20 million views in the first 24 hours because of all the wild conspiracy theories that floated around regarding her well being and the possibility of her being held hostage, on twitter #savemarinajoyce was trending for 30 hours straight. 

It isn''t our intention to insult or even make fun of Marina, in fact we were both quite worried and confused about the original situation -- and because I did not want to speculate about the well being of Marina in a rant styled video, I figured that this little parody would be a fun alternative. The focus of the parody was more about the fan''s reactions and all of the wild conspiracy theories that circulated as a result of Marina''s video. It wasn''t our intention to insult Marina or any of her fans, we simply thought the whole situation would be funny if twisted into a situation where hila was holding me captive, just a goof! Thanks for watching, appreciate ya.', 29, 29, 5694683, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (592, 'Triggered by Tumblr', null, 29, 30, 5700174, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (593, 'TWO MILLION SUBSCRIBERS SPECIAL!!!', null, 29, 31, 5701286, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (594, 'Why is Facebook Content SO Bad?!', null, 29, 32, 5702826, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (595, 'How Can a Cooking Show be this Sad?!', null, 29, 33, 5706004, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (596, 'Goodbye New York', null, 29, 34, 5710038, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (597, '100 LAYERS OF SHIRTS', null, 29, 35, 5715817, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (598, 'Reading MEAN Comments with my Mom', null, 29, 36, 5719872, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (599, 'How to get a Date on Tinder', null, 29, 37, 5726635, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (600, 'WEARING 200 SHIRTS IN THE GROCERY STORE', null, 29, 38, 5727438, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (601, 'The Return of SOFLO', null, 29, 39, 5729536, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (602, 'thank you youtube', null, 29, 40, 5730615, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (603, 'D*CKS OUT FOR HARAMBE', null, 29, 41, 5732432, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (604, 'Crazy Feminist Gets Triggered Ft. Hugh Mungus', null, 29, 42, 5734488, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (605, 'Why Doesn''t YouTube Explain Anything?!', null, 29, 43, 5734898, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (606, 'This Weird Toy Channel is Freaky', null, 29, 44, 5739061, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (607, 'How to Make a YouTube Vlog (ft. iDubbbz)', null, 29, 45, 5743333, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (608, '100 LAYERS OF BEANIES', null, 29, 46, 5746821, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (609, 'Interview with HUGH MUNGUS!', null, 29, 47, 5749113, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (610, 'It''s Time to Stop TechRax', null, 29, 48, 5751305, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (611, 'Crazy Feminist Gets Triggered by Lyft Driver', null, 29, 49, 5757972, 57);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (612, 'VW Beatle Engine', null, 30, 1, 5459854, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (613, 'FSO Syrena Engine', null, 30, 2, 5459855, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (614, 'Royal Enfield Bullet Engine', null, 30, 3, 5459856, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (615, 'Rolls Royce Viper Turbojet Engine', null, 30, 4, 5459857, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (616, 'Volvo 850 T5R Engine', null, 30, 5, 5459859, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (617, 'KTM 125 SX Engine', null, 30, 6, 5459860, 58);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (618, 'Episode 01', null, 31, 1, 5799619, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (619, 'Episode 02', null, 31, 2, 5799620, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (620, 'Episode 03', null, 31, 3, 5799621, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (621, 'Episode 04', null, 31, 4, 5799622, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (622, 'Episode 05', null, 31, 5, 5799623, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (623, 'Episode 06', null, 31, 6, 5799624, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (624, 'Episode 07', null, 31, 7, 5799625, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (625, 'Episode 08', null, 31, 8, 5799626, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (626, 'Episode 09', null, 31, 9, 5799627, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (627, 'Episode 10', null, 31, 10, 5799628, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (628, 'Episode 11', null, 31, 11, 5799629, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (629, 'Episode 12', null, 31, 12, 5799630, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (630, 'Episode 13', null, 31, 13, 5799631, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (631, 'Episode 14', null, 31, 14, 5799632, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (632, 'Episode 15', null, 31, 15, 5799633, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (633, 'Episode 16', null, 31, 16, 5799634, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (634, 'Episode 17', null, 31, 17, 5799635, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (635, 'Episode 18', null, 31, 18, 5799636, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (636, 'Episode 19', null, 31, 19, 5799637, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (637, 'Episode 20', null, 31, 20, 5799638, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (638, 'Episode 21', null, 31, 21, 5799639, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (639, 'Episode 22', null, 31, 22, 5799640, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (640, 'Episode 23', null, 31, 23, 5799641, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (641, 'Episode 24', null, 31, 24, 5799642, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (642, 'Episode 25', null, 31, 25, 5799643, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (643, 'Episode 26', null, 31, 26, 5799644, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (644, 'Episode 27', null, 31, 27, 5799645, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (645, 'Episode 28', null, 31, 28, 5799646, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (646, 'Episode 29', null, 31, 29, 5799647, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (647, 'Episode 30', null, 31, 30, 5799648, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (648, 'Episode 31', null, 31, 31, 5799649, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (649, 'Episode 32', null, 31, 32, 5799650, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (650, 'Episode 33', null, 31, 33, 5799651, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (651, 'Episode 34', null, 31, 34, 5799652, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (652, 'Episode 35', null, 31, 35, 5799653, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (653, 'Episode 36', null, 31, 36, 5799654, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (654, 'Episode 37', null, 31, 37, 5799655, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (655, 'Episode 38', null, 31, 38, 5799656, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (656, 'Episode 39', null, 31, 39, 5799657, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (657, 'Episode 40', null, 31, 40, 5799658, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (658, 'Episode 41', null, 31, 41, 5799659, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (659, 'Episode 42', null, 31, 42, 5799660, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (660, 'Episode 43', null, 31, 43, 5799661, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (661, 'Episode 44', null, 31, 44, 5799662, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (662, 'Episode 45', null, 31, 45, 5799663, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (663, 'Episode 46', null, 31, 46, 5799664, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (664, 'Episode 47', null, 31, 47, 5799665, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (665, 'Episode 48', null, 31, 48, 5799666, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (666, 'Episode 49', null, 31, 49, 5799667, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (667, 'Episode 50', null, 31, 50, 5799668, 59);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (668, 'Shark Encounters', 'Recreational shark encounters are now one of the most popular attractions in scuba diving.', 32, 1, 5461322, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (669, 'Sea of Steel', 'In the 1990s, three large naval vessels were intentionally sunk off the coast of BC as part of the world''s most ambitious artificial reef project.', 32, 2, 5461323, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (670, 'Treasure Hunters', 'Follow treasure hunters as they search for lost ships, and learn preservation techniques for artifacts and treasure coins.', 32, 3, 5461324, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (671, 'Galapagos', 'The magnificent underwater world of the Galapagos Islands, including remarkable encounters with hammerhead and whale sharks.', 32, 4, 5461325, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (672, 'Giants of Socorro', 'The remote Socorro Islands lie 250 miles south of Mexico''s Baja Peninsula and are home to an astonishing array of marine life.', 32, 5, 5461327, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (673, 'The Coral Reef', 'Expedition divers travel to the Cayman Islands to explore the Cayman Trench and its nocturnal residents.', 32, 6, 5461328, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (674, 'Lagoon of Lost Ships', 'A legacy of WWII, the Katsuragisan Maru lies at the bottom of Truk Lagoon, one of over 50 Japanese warships sunk during Operation Hailstone.', 32, 7, 5461329, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (675, 'Dolphins', 'This episode examines man''s relationship with dolphins and documents interactions with wild spotted dolphins and with bottlenose dolphins in captivity.', 32, 8, 5461330, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (676, 'The Caves of Akumai', 'Below the surface of Mexico''s Yucatan Peninsula lies the world''s most extensive collection of underground water-filled caves.', 32, 9, 5461331, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (677, 'The Gales of November', 'In the cold depths of the Great Lakes lie the remains of thousands of shipwrecks, some of which have been underwater for hundreds of years.', 32, 10, 5461332, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (678, 'Cocos Island', 'Three hundred miles due west of Costa Rica lies mysterious Cocos Island, a magnet for massive schools of large sharks, giant manta rays, and other unique forms of marine life.', 32, 11, 5461333, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (679, 'The Kelp Forest', 'Along North America''s Pacific coast from Alaska to Mexico, thick forests of kelp provide habitat, protection, and food for an amazing array of marine animals.', 32, 12, 5461334, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (680, 'Manatees', 'In central Florida, the manatee, a large, harmless vegetarian marine mammal, is threatened by pollution, boat traffic, and disease. But efforts are underway to save this remarkable animal from extinction.', 32, 13, 5461335, 60);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (681, 'Ocean of Fire', 'Beneath the Hawaiian Islands is a magical underwater world filled with lava caves, coral reefs, and marine life such as whales and dolphins.', 32, 1, 5461336, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (682, 'Whales', 'Off the coast of the Dominican Republic, the world''s largest group of humpback whales congregates in the winter months to rear their young.', 32, 2, 5461337, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (683, 'The Sulawesi Sea', 'This remote region off the coast of northeastern Borneo contains thousands of species of fish and invertebrates.', 32, 3, 5461338, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (684, 'Sea Turtles', 'Divers travel to Malaysia to film endangered sea turtles. Also features "Turtle Cavern Tomb", a graveyard of turtle skeletons, and efforts to protect the animals from poachers.', 32, 4, 5461339, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (685, 'Shark Frenzy', 'In the northern Bahamas, a unique shark feeding attracts almost two hundred aggressive sharks, part of an effort by researcher Dr. Eric Ritter to tag and study Caribbean reef sharks and other species.', 32, 5, 5461340, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (686, 'Palau', 'A tiny group of remote islands in Micronesia is considered one of the world''s most fascinating undersea environments.', 32, 6, 5461341, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (687, 'New Guinea', 'This episode travels to New Guinea to document the astonishing variety of fish, mammals, and invertebrates of the Bismarck Sea.', 32, 7, 5461342, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (688, 'The Red Sea', 'Team members join an expedition to the Red Sea to document its fascinating marine life. Divers also explore the shipwreck of the Salem Express, one of the most tragic maritime disasters of the century.', 32, 8, 5461343, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (689, 'Fiji', 'Clear, tropical waters filled with a wide assortment of colourful marine animals surround the islands that make up the nation of Fiji.', 32, 9, 5461344, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (690, 'The Emerald Sea', 'Along the Pacific coasts of Washington, BC, and Alaska lies the Emerald Sea, home to the giant Pacific octopus, wolf eels, seals, sea lions, and killer whales.', 32, 10, 5461345, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (691, 'Tentacles', 'Squid, octopus, and other cephalopods are some of the most fascinating marine animals in the sea - effective predators, with keen intelligence and a host of unique talents.', 32, 11, 5461346, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (692, 'Seals and Sea Lions', 'Travel to the Pacific Northwest, the Galapagos Islands, California, and Mexico to view encounters with seals, sea lions, and elephant seals.', 32, 12, 5461348, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (693, 'The Great Barrier Reef', 'The Great Barrier Reef is the largest community of living organisms on Earth, stretching over 1,200 miles along the eastern coast of Australia.', 32, 13, 5461349, 61);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (694, 'Ghost Fleet of the Pacific', 'A deep, technical dive expedition visits rarely seen shipwrecks from a major WWII battle in the South Pacific.', 32, 1, 5461350, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (695, 'Oasis of the Deep', 'A scientific expedition visits the deep-sea hot vents of the Juan De Fuca Ridge.', 32, 2, 5461351, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (696, 'Sea of Cortez', 'Visit the beautiful Sea of Cortez, one of the earth''s richest undersea realms. Divers swim with everything from 50-foot whale sharks to California sea lions, to killer whales.', 32, 3, 5461352, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (697, 'Free Diving', 'Dive with dolphins in the Florida Keys with world champion free diver, Tanya Streeter.', 32, 4, 5461353, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (698, 'The Graveyard Coast', 'This program focuses on shipwrecks in the North Pacific and highlights efforts of the Underwater Archaeological Society of BC.', 32, 5, 5461354, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (699, 'Bermuda - Isle of Devils', 'This episode focuses on Bermuda''s shipwrecks, its maritime history, and the mysterious undersea caves in the island''s interior.', 32, 6, 5461355, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (700, 'Shark Island', 'Team divers return to remote Cocos Island and attempt to film hammerhead shark migrations with the use of new diving technologies.', 32, 7, 5461356, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (701, 'Bonaire', 'Travel to the small Caribbean island of Bonaire on the 500th anniversary of its discovery to examine its coral reefs and fragile undersea ecosystem.', 32, 8, 5461357, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (702, 'Great White', 'Camera teams travel to South Africa, North Carolina, and the Pacific Northwest for encounters with the sea''s most infamous shark, the great white.', 32, 9, 5461358, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (703, 'The Florida Keys', 'This episode features the Florida Keys National Marine Sanctuary, the largest marine park in the world.', 32, 10, 5461360, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (704, 'Tek Wrecks', 'Divers mount a dangerous expedition to the wreck of the Wilkes-Barre, a 610-foot vessel off the coast of Florida, and descend on other hazardous deep shipwrecks in the St. Lawrence River and Lake Erie.', 32, 11, 5461361, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (705, 'The Yongala', 'Divers travel to northern Australia to film the remains of the Yongala, one of the world''s most famous shipwrecks.', 32, 12, 5461362, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (706, 'The Cayman Challenge', 'Divers travel to the Caribbean island of Grand Cayman to explore new terrain along the southern windward side of the island.', 32, 13, 5461363, 62);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (707, 'Episode 1', 'Adrian Chiles converted to Catholicism ten years ago, but wonders whether his choice of church was an accident of birth and geography. If he had been born in Istanbul or Jerusalem, would he have been equally happy being a Muslim or a Jew? In this first episode, he visits the stunning Dalmatian coast, where he meets up with his Croatian mum and reveals how he got the nickname Holy Joe.

Next stop is Istanbul, where he has fun in the Grand Bazaar before heading out on the Bosphorus with a Muslim fisherman. During Eid al-Adha, a major Islamic festival, Adrian struggles to watch the celebratory sacrifice. He travels to Jerusalem for the Jewish festival of Sukkot, and then moves on to Tel-Aviv to get drunk with a gay, atheist, Jewish celebrity chef. His final stop is an Evangelical concert by the Dead Sea, attended by Christians from all over the world.', 33, 1, 5461379, 63);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (748, 'That Wasn''t Me', 'When Mo Yeon hears her will being broadcast through the speaker, she hurriedly runs back to turn it off. However, after hearing Mo Yeon’s true feelings for him, Si Jin constantly tries to get Mo Yeon to admit it on her own. Meanwhile, Gil Joon confronts Dae Yeong and Myeong Ju about their relationship and asks them if they still have feelings for each other.', 36, 9, 5537733, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (843, 'Sunshine Coast', 'Taylah and Thomas have decided to buy their first home together on the Sunshine Coast. Will they find a home to suit their individual tastes, or will going tiny be a recipe for disaster?', 41, 3, 5462665, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (844, 'Episode 4', null, 41, 4, 5462666, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (845, 'Sydney To Hawkesbury', null, 41, 5, 5462667, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (708, 'Episode 2', 'This episode finds Adrian in Rome, riding the ubiquitous Vespa with his favourite priest, Father Gianni, on the pillion. The pair speculate on whether having a priest accompanying him to the pearly gates improves or damages Adrian''s chances of entry to heaven.

Adrian then joins the faithful in St Peter''s Square to listen to the man he describes as ''chairman and chief executive'' of his own religion. Later, an 80-year-old cardinal tries to remain unflustered as Adrian makes his first confession in eight years. It takes a while.

He observes the Sabbath with a Jewish family, but his brief flirtation with Judaism is cut short when he learns that becoming a Jew is not quite as simple as wanting to join. He cooks with the nuns of Marseille, and visits a Roman Catholic school where 80% of the children are Muslims and where he declares the head teacher to be ''the most inspiring person I have ever met''.', 33, 2, 5461380, 63);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (709, 'From Lili to Thomas', null, 34, 1, 5556721, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (710, 'From Thomas to Frederique', null, 34, 2, 5556722, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (711, 'From Frederique to Sarah', null, 34, 3, 5556723, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (712, 'From Sarah to Colin', null, 34, 4, 5556724, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (713, 'From Colin to Pauline', null, 34, 5, 5556725, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (714, 'From Pauline to Emilie', null, 34, 6, 5556726, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (715, 'From Emilie to Lucie', null, 34, 7, 5556727, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (716, 'From Lucie to Marie', null, 34, 8, 5556728, 64);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (717, 'Pilot', 'When Harvard graduate Billie goes to interview for a nanny job, she''s surprised to learn that her charge is a grown woman on house arrest.', 35, 1, 5461452, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (718, 'Book Report', 'When she''s forced to do schoolwork that includes reading actual books, Gene plots to take Billie down.', 35, 2, 5461453, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (719, 'Funeral', 'When Gene is granted temporary reprieve from her house arrest to attend a funeral, she and Billie accidentally make a day of it.
', 35, 3, 5461454, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (720, 'Hos Before Bros', 'When a sexy football player shows up at the house, Gene flirts shamelessly while Billie struggles to keep her cool.', 35, 4, 5461455, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (721, 'Fumigation', 'While the mansion is being fumigated, Billie and Jean have a sleepover that gets out of hand.', 35, 5, 5461456, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (722, 'Mother''s Day', 'Gene''s birth mother arrives at the house, making Ken emotional; Billie goes on a date with a dental hygienist who has a surprising wild side.
', 35, 6, 5505119, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (723, 'GED Prom', 'Gene decides to organize a prom for GED students and invites her cyber bully in the hopes of publicly humiliating him; Billie''s date is an attractive tutor.', 35, 7, 5515393, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (724, 'Viva La Joy', 'After Billie accidentally gets Joy fired, she and Gene stage a series of civil protests in order to convince Kent to rehire her.', 35, 8, 5524869, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (725, 'Ex-Boyfriend', 'When Billie’s obnoxious ex-boyfriend comes over for dinner, Gene poses as a butler in an attempt to convince him that Billie has been prospering since their breakup.', 35, 9, 5531509, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (726, 'Finale', 'Gene finally takes her GED test, and Billie gets a shot at her dream job.', 35, 10, 5531528, 65);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (727, 'The Interview', null, 35, 1, 5536466, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (728, 'Sundae Bloody Sundae', null, 35, 2, 5536467, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (729, 'Father Daughter Talk', null, 35, 3, 5536468, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (730, 'Happy Birthday', null, 35, 4, 5536469, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (731, 'The Fight Day', null, 35, 5, 5536470, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (732, 'The Ex-Boyfriend', null, 35, 6, 5536471, 66);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (733, 'Billie and Gene: The College Years', 'In the Season 2 premiere, Billie and Gene find themselves sharing a college campus, where Billie yearns to become a professor and Gene sets out to make the perfect viral video.', 35, 1, 6056143, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (734, 'Better Off Ned', 'A professor commits suicide, so Billie tries to move into his office while Gene befriends his boss.', 35, 2, 6092588, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (735, 'Virginity', 'Gene learns that Billie is a virgin, and vows to help her friend change that.', 35, 3, 6092589, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (736, 'Girls Gone Wild', 'When the students and staff leave campus for spring break, Gene and Billie have the whole place to themselves.', 35, 4, 6092590, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (737, 'Sports', 'Billie is pressured by the university to pass a star athlete on the fencing team, but she''s determined to help him earn his grade.', 35, 5, 6092591, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (738, 'Rush, Rush', 'Billie becomes a housemother at a strangely tight-knit sorority, while Gene gets involved in a different side of Greek life on campus.', 35, 6, 6092592, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (739, 'School''s Out', 'In the Season 2 finale, Gene doesn''t want her college experience to end, so she locks herself in the library with Billie and some other faculty to stage a "Clue"-style murder mystery.', 35, 7, 6092593, 67);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (740, 'Will You Be My Doctor?', 'Si Jin and Dae Yeong catch a thief who is running away on a motorcycle. Si Jin and Mo Yeon meet for the first time in the hospital where the thief is admitted to.', 36, 1, 5461471, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (741, 'We Bump into Each Other While Passing by', 'Si Jin and Mo Yeon go on a first date and something urgent happens to Si Jin. After Si Jin leaves her, Mo Yeon finds out that she did not get a professor position and feels devastated.', 36, 2, 5461472, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (742, 'How Have You Been?', 'Si Jin and Mo Yeon go to the town together. Si Jin takes Mo Yeon to the island by a boat and they have a serious talk. While they are on a short trip, Si Jin tells the love story about Dae Yeong and Myeong Ju.', 36, 3, 5461473, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (743, 'I Will Find a Way to Drink', 'Si Jin gets detained in the storage room for insubordination and Mo Yeon visits him. Meanwhile, on his way back to Korea, Dae Yeong runs into Myeong Ju who has just landed at the airport.', 36, 4, 5461474, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (744, 'What Should I Do About the Kiss?', 'Si Jin spots gang members on the street and sends Mo Yeon away to the store. Si Jin is shocked when he discovers the identity of the boss in the gang. Meanwhile Mo Yeon borrows the car to return to the camp but gets into an accident.', 36, 5, 5461476, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (745, 'I Shouldn’t Have Received His Apology', 'Mo Yeon finds out that Si Jin left the base overnight without saying goodbye and regrets what she said to him. Meanwhile Si Jin visits Dae Yeong at work and they go out for a drink. On the day of the medical team’s departure, something is about to happen in Urk.', 36, 6, 5461477, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (746, 'I Missed You', 'In the rescue field, just one small action could become a life and death situation. With everything collapsed in ruins, Si Jin and Mo Yeon face a crisis during a rescue operation. Meanwhile, Dae Young shows his true feelings to Myeong Ju.', 36, 7, 5537731, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (747, 'Comfort the Deceased With a Silent Prayer', 'After continuously carrying out rescue operations, the rescue team saves a remaining survivor and Si Jin announces the end to the search of missing personnels at Mowuru Power Plant. Meanwhile, with the plane ready for them to go back to Korea, the members of the medical team are asked to choose whether or not they wish to stay.', 36, 8, 5537732, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (842, 'Melbourne To Shoreham', 'Andrew Winter follows free spirits Alyce and Paul, who hope to leave the hustle and bustle of Melbourne and achieve a life with more freedom by going tiny.', 41, 2, 5462664, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (846, 'Episode 6', null, 41, 6, 5462668, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (847, 'Sydney', null, 41, 7, 5462669, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (749, 'You Got A Parcel From Shin Ji Young', 'After saving Argus, Mo Yeon and Si Jin return with Fatima and the sick kids from Haunted Village. The doctors treat them and give them medication. However, Fatima goes missing along with all the narcotic analgesics. Meanwhile, parcels arrive from Korea, and Si Jin and Dae Yeong face trouble as they receive a parcel from two flight attendants.', 36, 10, 5537734, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (750, 'Who on Earth Stole It?', 'Due to the M3 virus, Dae Yeong and Myeong Ju become isolated. Also, Medicube turns into a designated facility to treat the troublesome virus. To fight the epidemic, both the doctors and soldiers do their best. However, the vehicle with all the vaccines and medicines is suddenly stolen.', 36, 11, 5552965, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (751, 'As of This Moment, Everyone Will Return to Team Alpha', 'As Si Jin disappears without stating his destination, Dae Yeong figures out that he must have left for a solo operation to save Mo Yeon. To back him up, Dae Yeong gathers soldiers and joins Si Jin on an unauthorised rescue mission.', 36, 12, 5552966, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (752, 'You''re Not My Director Any More', 'The medical team returns to Korea and starts living their daily lives again. However, all of them feel a little empty as they miss their lives back in Urk. Meanwhile, as soon as she returns, Mo Yeon hands in a letter of resignation to the hospital director.', 36, 13, 5552967, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (753, 'The Movie We Missed', 'Si Jin arrives at the hospital in a bloody mess, and efforts to resuscitate him seem to fail as his vital signs continue to wane. Meanwhile, with Ahn Jung Joon’s admittance, an unsettling mood descends down upon Haesung Hospital as political tension between North and South Korea simmers underneath.', 36, 14, 5552969, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (754, 'I Will Stay Alive', 'Si Jin and Mo Yeon continue to enjoy their sweet relationship together. Meanwhile, Dae Yeong and Myeong Ju keep having conflicts. One day, Team Alpha is suddenly sent out for a mission abroad for three months.', 36, 15, 5552970, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (755, 'This Is Unbelievable', 'After a year of thinking that Si Jin and Dae Yeong were dead, Mo Yeon and Myeong Ju live in grief while trying to move on with their lives at the same time. However, both Si Jin and Dae Yeong miraculously appears before them alive and well. Putting their eventful past behind them, the two couples enjoy their precious time together and draw a beautiful future together.', 36, 16, 5552971, 68);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (756, 'Special: Highlights of Descendants of the Sun', 'This special episode of Descendants of the Sun presents highlights of the drama that shows you the ups and downs of Si Jin and Mo Yeon. The scenes will take you back to Urk and make you recall all the dramatic happenings between the two characters.', 36, 1, 5582566, 69);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (757, 'Special: More Highlights of Descendants of the Sun', 'The special episode of Descendants of the Sun featuring drama highlights continues. The scenes take you back to the happy and sad days the characters went through. Stay tuned to reminisce the past happenings which will fill your heart with many different emotions.', 36, 2, 5582567, 69);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (758, 'Behind The Scenes Footage', 'The last special episode of Descendants of the Sun entertains you with behind the scenes footage along with several interviews done by the actors and actresses of the drama. Stay tuned to find out the little secrets on how they filmed the hit drama.', 36, 3, 5582568, 69);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (759, 'Blind Auditions: Part 1', null, 37, 1, 5461656, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (760, 'Blind Auditions: Part 2', null, 37, 2, 5462002, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (761, 'Blind Auditions: Part 3', null, 37, 3, 5462003, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (762, 'Blind Auditions: Part 4', null, 37, 4, 5462004, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (763, 'Blind Auditions: Part 5', null, 37, 5, 5462005, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (764, 'Blind Auditions: Part 6', null, 37, 6, 5462006, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (765, 'Battles: Part 1', null, 37, 7, 5462007, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (766, 'Battles: Part 2', null, 37, 8, 5462008, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (767, 'Battles: Part 3', null, 37, 9, 5462009, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (768, 'Live Performances: Part 1', null, 37, 10, 5462010, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (769, 'Live Performances: Part 2', null, 37, 11, 5462011, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (770, 'Live Performances: Part 3', null, 37, 12, 5462012, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (771, 'Final', null, 37, 13, 5528706, 70);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (772, 'Blind Auditions: Part 1', null, 37, 1, 5854352, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (773, 'Blind Auditions: Part 2', null, 37, 2, 5919821, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (774, 'Blind Auditions: Part 3', null, 37, 3, 5919822, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (775, 'Blind Auditions: Part 4', null, 37, 4, 5937982, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (776, 'Blind Auditions: Part 5', null, 37, 5, 5952091, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (777, 'Blind Auditions: Part 6', null, 37, 6, 5962986, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (778, 'Battles: Part 1', null, 37, 7, 5968690, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (779, 'Battles: Part 2', null, 37, 8, 5968691, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (780, 'Battles: Part 3', null, 37, 9, 5968692, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (781, 'Live Performances: Part 1', null, 37, 10, 5968694, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (782, 'Live Performances: Part 2', null, 37, 11, 6000821, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (783, 'Live Performances: Part 3', null, 37, 12, 6002271, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (784, 'Final', null, 37, 13, 6002272, 71);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (785, 'Blind Auditions: Part 1', null, 37, 1, 6290371, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (786, 'Blind Auditions: Part 2', null, 37, 2, 6371398, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (787, 'Blind Auditions: Part 3', null, 37, 3, 6371399, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (788, 'Blind Auditions: Part 4', null, 37, 4, 6371400, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (789, 'Blind Auditions: Part 5', null, 37, 5, 6371401, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (790, 'Blind Auditions: Part 6', null, 37, 6, 6371402, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (791, 'Battles: Part 1', null, 37, 7, 6371404, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (792, 'Battles: Part 2', null, 37, 8, 6371405, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (793, 'Battles: Part 3', null, 37, 9, 6371406, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (794, 'Live Performances: Part 1', null, 37, 10, 6371407, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (795, 'Live Performances: Part 2', null, 37, 11, 6371408, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (796, 'Live Performances: Part 3', null, 37, 12, 6371409, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (797, 'Semifinal', null, 37, 13, 6371410, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (798, 'Final', null, 37, 14, 6371411, 72);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (799, 'Blind Auditions: Part 1', null, 37, 1, 6873459, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (800, 'Blind Auditions: Part 2', null, 37, 2, 6980922, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (801, 'Blind Auditions: Part 3', null, 37, 3, 6991546, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (802, 'Blind Auditions: Part 4', null, 37, 4, 7002271, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (803, 'Blind Auditions: Part 5', null, 37, 5, 7012078, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (804, 'Blind Auditions: Part 6', null, 37, 6, 7012080, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (805, null, null, 37, 7, 7012112, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (806, null, null, 37, 8, 7012115, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (807, null, null, 37, 9, 7048319, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (808, 'Shows Ao Vivo, Parte 1', null, 37, 10, 7079921, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (809, 'Shows Ao Vivo, Parte 2', null, 37, 11, 7079922, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (810, 'Shows Ao Vivo, Parte 3', null, 37, 12, 7079923, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (811, 'Semifinal', null, 37, 13, 7093989, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (812, 'Final', null, 37, 14, 7093990, 73);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (813, 'Stone Ottomans', 'Every day, quirky father and son duo Steve and Nick Rhule leave no strange stone unturned in their quest to create the most inspired landscapes you''ll ever lay eyes on. Steve''s vision helps transform a neglected and underused backyard with projects that include a flagstone patio with a steel fire pit and stone ottomans. Meanwhile, Nick creates a massive waterfall with a mission to make it look like it''s been there for thousands of years. Along the way they learn that big rocks, a steep hill, a rainstorm and tractors don''t mix.', 38, 1, 5461691, 74);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (814, 'Stone Bridge', 'Father and son duo Steve and Nick Rhule tackle an overgrown and cluttered front lawn the only way they know how, by ripping everything out and creating their own custom landscape. Steve takes out an underused wooden porch and replaces it with a flagstone patio complete with a one of a kind water feature and custom firebowl. Nick steps in to build a stunning waterfall and pond that both the adults and children can enjoy.', 38, 1, 5461692, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (815, 'Stonehenge Grill', 'Colleen and her husband Manjit are living the fantasy farm life, but their backyard could use some cultivating, so Steve and Nick Rhule set out to transform their green acres into a space they can use for cooking, entertaining and even yoga. Steve creates a sunny flagstone patio along with a gigantic stone grill while Nick creates a fish pond complete with a milk jug water feature. Tying everything together is a brand new, colorful plantscape filled with roses and hydrangeas.', 38, 2, 5461693, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (816, 'Donkey Bench', 'Beth and Shannon''s midcentury modern home has everything going for it, except for an unkempt and colorless backyard. Steve and Nick Rhule take this space to the next level by building a massive water feature that flows into a Frank Lloyd Wright inspired waterfall built from slabs of flagstone. To make the space perfect for the family to relax in, Steve also builds a custom bench and fire bowl. The whole area is ringed by gigantic metal planters that reflect the clean lines of the home and allow stunning pops of colorful plants to thrive.', 38, 3, 5461694, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (817, 'Flagstone Table', 'Stephen has a backyard that doesn''t work for him or his kids. The patio area is completely bare and overgrown with grass while the adjoining hill is completely unused. Steve Rhule brings this space to life with a massive stone fireplace surrounded on both sides by a recirculating, pondless waterfall created by his son Nick. Steve also builds a single-slab flagstone table with its own stone rug for the family to hang out around. The hill is also revitalized with an all new plantscape filled with hydrangeas, panolas and mandevillas.', 38, 4, 5461695, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (818, 'Three Stone Fountain', 'Shiva and her husband Nima''s backyard is a total bust. There is no privacy from the neighbors and the whole space is plain and bare. Steve Rhule and his son Nick give this family the comfortable and private outdoor space they crave by creating a recirculating water sculpture framed by three massive rocks, custom seating formed from wood, stone, and metal, and a firepit the whole family can enjoy. Large planters filled with white and purple flowers fill out the space and add color throughout.', 38, 5, 5461696, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (819, 'Water Wheel Rotisserie', 'Daniel & Rebecca are passionate about their work and the food they serve, and always try to make each meal memorable. What isn''t memorable is their backyard, which is completely barren and as plain as can be. As these homeowners'' lives revolve around cooking, Steve and Nick Rhule order up a one-of-a-kind stone grill and an immense waterfall that powers a rotating chicken rotisserie. A flagstone patio, complete with a massive stone table and surrounded by colorful plants, completes these chefs'' outdoor oasis.', 38, 6, 5461697, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (820, 'Driftwood Waterfall', 'Jose and Annette love plants, but for this pair of plant scientists, the vegetation in their backyard is purely theoretical. Steve and Nick Rhule''s plan is to integrate the house and yard by creating a gorgeous hardscape and garden where the entire family can comfortably hang out. Giant stone benches frame a flagstone patio complete with a metal firebowl, and a massive rock and driftwood waterfall that collects the home''s rainwater take this space over the top.', 38, 7, 5461698, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (821, 'Stone River Table', 'Designer duo Sarah and Kurt has finally met their match. Overgrown vines and weeds, a half-dead dogwood, and beat-up outdoor furniture are what counts as highlights in their untamed backyard. Steve and Nick Rhule give this family the outdoor seating area they''ve always wanted by creating a massive stone water feature all ages can enjoy, an in-ground stone firepit, and a huge stone table that has an actual river flowing down the middle.', 38, 8, 5461699, 75);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (822, 'The Reindeer People', 'In the far reaches of the Arctic Circle in Siberia, Tim
lives with a little-known clan of reindeer people to earn 
a place as a man. In the coldest place on earth he learns 
to drive a sled, sleeps in the snow, braves whiteouts and 
drinks reindeer blood.', 39, 1, 5461700, 76);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (823, 'The Island People', 'On the mysterious islands of Guinea Bissau Tim endures a 
baptism of fire like no other. He must pass a series of tests 
such as being beaten naked, eating bush rats and monkeys 
and frightening initiations including a tribal scar', 39, 2, 5461701, 76);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (824, 'The Eagle People', 'In the remote Altai Mountains of Mongolia, Tim 
experiences one of the most primal bonds ever known 
between man and predator. Tim must trap and train a 
golden eagle to successfully hunt a fox in the wild; an 
ancient rite of passage for young Kazakh men.', 39, 3, 5461702, 76);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (825, 'Episode 1', null, 39, 1, 5924580, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (826, 'Episode 2', null, 39, 2, 5924582, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (827, 'Episode 3', null, 39, 3, 5924584, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (828, 'Episode 4', null, 39, 4, 5924588, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (829, 'Episode 5', null, 39, 5, 5924590, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (830, 'Episode 6', null, 39, 6, 5924591, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (831, 'Episode 7', null, 39, 7, 5924593, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (832, 'Episode 8', null, 39, 8, 5924594, 77);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (833, 'Hawaiian Style ', 'Learn to cook Hawaiian style – kind of! Shivering shits Chico and Paul get liquored up and grapple with hot pork and mackerel to create a feast on the not-remotely-fucking-tropical Scottish island of Rum. ', 40, 1, 5461732, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (834, 'Food from the Future', 'SwearNet''s culinary cocktarts travel into the future to cook up a fucked feast of spam, meatloaf, and prawn flavoured cheese in a tube. The future''s looking SHIT!', 40, 2, 5461734, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (835, 'The Xmas Bird', 'Holy fuck, there''s only 247 days to Christmas! Make sure you''re fully prepared by watching Offworld Cookery''s masterclass on cooking a totally not shit Xmas dinner!', 40, 3, 5461735, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (836, '4th of July', 'English tossers Chico and Paul attempt to cook a fucking magical 4th of July feast. Expect cheeseburgers, liquor, blood, and lots of shit mustard.... ', 40, 4, 5461736, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (837, 'No Meat and Two Veg', 'So, what do vegetarians look like? And what the fuck do they eat? The Offworld Cookery team investigates, with a little help from a bottle of cider and some fucking terrible music! ', 40, 5, 5461737, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (838, 'The Battle of Waterloo', 'Chico and Paul do absolutely fuck all for Anglo-French relations as they attempt to create a meat feast fit for Napoleon – in the fucking rain!', 40, 6, 5461738, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (839, 'Ancient Britain Style', 'This week: feast like a fucking barbarian and learn how to make goat leg stew and shit soup. Yum fucking yum!', 40, 7, 5461739, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (840, 'The Second Coming', 'Praise be! Jesus Christ Himself (or it might be Chico in a shit wig) cooks a heavenly feast with the aid of holy wine, a burning bush, and a traditional Roman dick spoon!', 40, 8, 5461740, 78);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (841, 'Brisbane To Kin Kin', 'Everyday more and more people are connecting with the principles and culture of small house living. Join Australians on their journeys to finding their dream small space, and discovering that owning less is an opportunity to do more.', 41, 1, 5462663, 79);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (849, 'The Neighbors', 'أخيراً، وبعدَ طولِ انتظارٍ يعودُ (افتحْ يا سمسم) بعدَ غيابٍ دامَ ربعَ قرنٍ لِيُقَدِّمَ لكمْ كلَّ ما تحبّونه.. وأخيراً فتحَ سمسمٌ أبوابَهُ، لينطلقَ إلى جميعِ الأطفالِ، حاملاً في جُعبتِهِ أجملَ الأفكارِ.
هيّا نتعرَّفْ على أصدقائِنا من (افتحْ يا سمسم)، ونقابلْ راشدًا، وأملَ، و نعمانَ، وشمسًا، وغرغورًا، وملسونًا، الّذِينَ سيُلقونَ التحيّةَ عليكمْ.. فأهلاً أهلاً بالجيرانِ، بالأحبابِ وبالخلاّنِ!! وَلَنَتَعَلَّمْ معاً طريقةَ إلقاءِ التحيَّةِ والسلامِ.', 42, 1, 5462599, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (850, 'First Day', 'اليومُ مميَّزٌ جدّاً في (افتحْ يا سمسم) ، فهوَ اليومُ الأوَّلُ للمدرسةِ، شاهدْ الأصدقاءَ في (افتحْ يا سمسم) مستعدّين ومتحمّسين لهذا اليومِ!', 42, 2, 5462600, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (851, 'Hot Summer Day', 'في الحلقةِ الثالثةِ: شمسٌ ونعمانُ يشعرانِ بالحرِّ الشديدِ، ماذا سيفعلانِ ليُخّفِّفَا عن نفسهِما الشعورَ بالحرِّ؟', 42, 3, 5462602, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (852, 'To The Sea', 'لِنَنْطَلِقْ مع نعمانَ، وشمسٍ، وغرغورٍ، في مغامرةٍ رائعةٍ من عالمِ الخيالِ في أعماقِ البحارِ للبحثِ عن اللؤلؤِ.
وَسنتعلَّمُ معَ أصدقائِنا في (افتحْ يا سمسم)، ماهوَ الطعامُ الّذي يؤكلُ أحياناً، والّذي يؤكلُ في كلِّ الأوقاتِ.', 42, 4, 5462603, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (853, 'Date Festival', null, 42, 5, 5511548, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (854, 'Little Birdie', null, 42, 6, 5511549, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (855, 'Breakfast Play', null, 42, 7, 5511550, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (856, 'Hadeed the Iron Friend', null, 42, 8, 5511551, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (857, 'The Traveller', null, 42, 9, 5511552, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (858, 'Come Play with Me', null, 42, 10, 5511553, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (859, 'Obstacle Course', null, 42, 11, 5511554, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (860, 'Slow Down Shams', null, 42, 12, 5511555, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (861, 'Gone with the Wind', null, 42, 13, 5511556, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (862, 'Super Noman', null, 42, 14, 5511557, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (863, 'Cardboard Plane', null, 42, 15, 5511558, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (864, 'Heavy Weights', null, 42, 16, 5511559, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (865, 'I Can Be Anything', null, 42, 17, 5511560, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (866, 'Let''s Imagine', null, 42, 18, 5511561, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (867, 'Hide and Seek', null, 42, 19, 5511562, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (868, 'Amal''s Glasses', null, 42, 20, 5511563, 80);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (869, 'Episode 1', 'A captivating insight into British life straight from the mouths of school children from the ''60s and ''70s. Their refreshing, uncomplicated universal observations are as valid now as they were back in the day. And their jumpers are really terrific.', 43, 1, 5462820, 81);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (870, 'Episode 2', 'More views of Britain from the children of the ''60s and ''70s. Their refreshing, uncomplicated universal observations are as valid now as they were back in the day. And their jumpers are really terrific.', 43, 2, 5462821, 81);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (871, 'Episode 3', 'Another instalment of this snapshot of life seen through the eyes of children. Originally broadcast in the late ''60s, the themes, fear, joys and reflections are as valid now as they were then.', 43, 3, 5462822, 81);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (872, 'It Begins', 'While recovering from nasty breakups with their exes, Mickey makes a scene at a church and Gus stumbles into a confusing sexual encounter.', 44, 1, 5462843, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (873, 'One Long Day', 'After Gus steps in to help Mickey out of a jam, the two end up on a bizarre odyssey through the streets of L.A.', 44, 2, 5462844, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (874, 'Tested', 'Gus faces a make-or-break situation at work, while Mickey navigates a dicey new dynamic with her boss.', 44, 3, 5462845, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (875, 'Party in the Hills', 'Mix-ups and meltdowns abound when Mickey invites Gus to a party and comes face-to-face with mistakes from her past.', 44, 4, 5462846, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (876, 'The Date', 'As Mickey tries to get her life back on track, Gus takes his date with Bertie to hilarious extremes.', 44, 5, 5462847, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (877, 'Andy', 'A newly confident Gus turns heads on set, while a disturbing day at the radio station leaves Mickey feeling reckless.', 44, 6, 5462848, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (878, 'Magic', 'Gus sets out to dazzle Mickey on their first real date, but the night doesn''t go quite as he planned.', 44, 7, 5462849, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (879, 'Closing Title Song', 'As Mickey frets over the fallout from their date, a new guest shakes things up at Gus''s movie night jam session.', 44, 8, 5462850, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (880, 'The Table Read', 'Gus gets exciting news at work, but a surprise visit from Mickey sends the day spiraling in a new direction.', 44, 9, 5462851, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (881, 'The End of the Beginning', 'Troubles keep mounting for Gus as he gets a taste of life in the writers'' room. Meanwhile, a new crisis pushes Mickey to the breaking point.', 44, 10, 5462852, 82);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (882, 'On Lockdown', 'After coming clean to Gus, Mickey tries to head home to decompress. But an unexpected turn of events keeps them out together late into the night.', 44, 1, 5943371, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (883, 'Friends Night Out', 'While Gus heads to a bar with his guy friends, a restless Mickey stirs up trouble at a dinner party full of couples.', 44, 2, 5994851, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (884, 'While You Were Sleeping', 'Mickey tries to help her work buddy Truman out of a sticky situation, and an on-set accident rattles the "Witchita" cast and crew.', 44, 3, 5997530, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (885, 'Shrooms', 'A quiet night turns trippy when Mickey convinces Gus, Bertie and Randy to sample her leftover psychedelic mushrooms.', 44, 4, 5997531, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (886, 'A Day', 'On a day of spontaneous adventures, Mickey and Gus open up about their pasts and begin to let go of their fears.', 44, 5, 5997532, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (887, 'Forced Hiatus', 'Big news on the "Witchita" set leaves Gus caught in the middle of a family dispute over Arya''s future. Mickey grows suspicious of Randy''s motives.', 44, 6, 5997533, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (888, 'The Work Party', 'While Mickey schmoozes with her new corporate bosses at a radio station party, Gus strikes up an unlikely friendship with Dr. Greg.', 44, 7, 5997534, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (889, 'Marty Dobbs', 'Gus joins Mickey for an outing with her dad but soon realizes the father-daughter dynamic is more complicated than she let on.', 44, 8, 5997535, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (890, 'Housesitting', 'While housesitting at a friend''s mansion, Gus and Mickey host a "Witchita" viewing party. But brewing tensions threaten to spoil the fun.', 44, 9, 5997536, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (891, 'Liberty Down', 'As Gus heads off to the set of Arya''s action film and Mickey dives into a big project at work, new cracks appear in their relationship.', 44, 10, 5997537, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (892, 'The Long D', 'Mickey bonds with her ex, while Gus makes a desperate bid to patch things up with the film director. Bertie has a revelation.', 44, 11, 5997539, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (893, 'Back in Town', 'With Gus back home, Mickey realizes she needs to make a decision. But her attempt to straighten out her love life only creates more chaos.', 44, 12, 5997540, 83);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1086, 'Ep. 24', null, 51, 24, 2916021, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (894, 'Palm Springs Getaway', 'Randy pressures Mickey, Gus and Bertie into a couples weekend at his cousin''s sweet Palm Springs pad. But nothing about the house is as advertised.', 44, 1, 6454372, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (895, 'Winners and Losers', 'While Mickey rides a wave of good news at work, Gus tries to spread some cheer around the tense "Witchita" set -- with demoralizing results.', 44, 2, 6590570, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (896, 'Arya and Greg', 'Gus helps a stressed-out Arya gear up for a big scene, while Mickey tries to salvage Dr. Greg''s disastrous book-signing event.', 44, 3, 6590572, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (897, 'I''m Sick', 'Gus realizes he''s facing a major relationship test when Mickey falls sick just as he''s heading out on a horror movie location tour with friends.', 44, 4, 6590573, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (898, 'Bertie''s Birthday', 'After a disappointing start to her first birthday in America, Bertie winds up on an action-packed LA adventure with a kindred spirit.', 44, 5, 6590574, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (899, 'Directing', 'Gus struggles to keep the actors and crew on task as he starts shooting his movie. Mickey sets out to show an old friend she''s changed.', 44, 6, 6590575, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (900, 'Sarah from College', 'When Gus bumps into an ex at a wedding, Mickey realizes there''s a lot she still doesn''t know about his past.', 44, 7, 6590576, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (901, 'Stunt Show', 'A stunt audition inspires Chris to reconnect with Bertie. Dr. Greg begs for a spot on Stella’s show, and Gus asks Arya for a favor.', 44, 8, 6590580, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (902, 'You''re My Gran Torino', 'As Gus prepares for his band''s first gig and a trip back home to South Dakota, Mickey wonders if it’s time for her to meet the Cruikshank clan.', 44, 9, 6590582, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (903, 'The Cruikshanks', 'Back in the land of guns, cornhole and pickle wheels, Gus makes a critical relationship blunder. A plumbing crisis turns awkward for Bertie.', 44, 10, 6590583, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (904, 'Anniversary Party', 'Gus scrambles to stop Mickey from skipping town before his parents'' party. But the day only yields more embarrassing revelations about his past.', 44, 11, 6590584, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (905, 'Catalina', 'As Mickey and Gus think seriously about their future, a spontaneous trip to Catalina Island brings together a motley group of their friends.', 44, 12, 6590587, 84);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (906, 'Chloe', 'When Londoner Chloe Marsh sees a poster advertising plots of land for sale for only five pounds, she decides to run away from her abusive husband, taking her two children with her. However he dream of a new start is not quite as as she anticipated with her and her girls having to make do with a tent as a home.', 45, 1, 5462872, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (907, 'Rory', 'Harry Crowley, the man responsible for the Plotlands development, gives Chloe a job cleaning for him. Meanwhile, the Mulligans, Chloe''s Irish next door neighbours, are definitely facing a trying time.', 45, 2, 5462873, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (908, 'Tom', 'Tom, who lives on the edge of the Plotlands development and acts as a kind of a caretaker, has a secret from his past life during World War One revealed when a former comrade turned crook turns up.', 45, 3, 5462874, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (909, 'Orphans Of The Storm', 'A violent storm occurs, bringing trouble for the community; a depressed Harriet goes missing, prompting an all-out search; Chloe and Tom seem to drawing closer together.', 45, 4, 5462875, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (910, 'The Party', 'Crowley throws a party to celebrate the first anniversary of the first plot of land sold, but he has a secret agenda: he is planning to sell off Langton Field, making everyone homeless.', 45, 5, 5462876, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (911, 'Homes For Heroes', 'Chloe and her children are beginning to settle in and Chloe''s relationship with Tom is progressing but then Chloe''s husband John appears on the scene demanding his marital rights, thanks to Tom he soon learns the way things now stand and the whole Plotlands community rally round to help the Mulligans finish their house.', 45, 6, 5462878, 85);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (912, 'The Sex Education Show (1)', 'Anna Richardson finds out about teenagers perceptions of what''s normal, the footballers find out about condom sizes, and a group of parents are shocked to see what their children can view on the Internet.', 46, 1, 390247, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (913, 'The Sex Education Show (2)', 'Anna counts up her sexual partners, and she and the footballers check in for STI tests.', 46, 2, 390248, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (914, 'The Sex Education Show (3)', 'Anna and Dr Radha Modgil show the boys from Long Ashton F.C. how some simple pelvic floor exercises to prevent erectile dysfunction, the teenagers learn how to use condoms, plus the birth of baby Willow', 46, 3, 390249, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (915, 'The Sex Education Show (4)', 'Anna has a fertility test, and the footballers learn more about intimate hygiene', 46, 4, 398057, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (916, 'The Sex Education Show (5)', 'Anna tries out different contraceptive methods, and shows teenagers how to fit a nappy.', 46, 5, 398058, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (917, 'The Sex Education Show (6)', 'Anna discusses libido, and teens & parents talk sex.', 46, 6, 398059, 86);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (918, 'The Sex Education Show vs. Pornography (1)', 'A frank look at the world of teenage sex and young people''s consumption of pornography. Anna Richardson and a team of sexual health experts travel to an inner-city London school to give students ground-breaking lessons in sex education.', 46, 1, 518761, 87);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (919, 'The Sex Education Show vs. Pornography (2)', 'A frank look at the world of teenage sex and young people''s consumption of pornography. Anna Richardson and a team of sexual health experts travel to schools across the UK talking to students about sex and their views on internet porn.
', 46, 2, 518771, 87);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (920, 'The Sex Education Show vs. Pornography (3)', 'A frank look at the world of teenage sex and young people''s consumption of pornography. Anna Richardson and a team of experts continue to travel to schools across the UK enlightening students in sex education.', 46, 3, 518781, 87);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (921, 'The Sex Education Show vs. Pornography (4)', 'A frank look at the world of teenage sex and young people''s consumption of pornography. In this final programme Anna Richardson continues to educate students in sexual health matters and meets highly qualified young women who''ve chosen careers in pornography.', 46, 4, 518791, 87);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (922, 'Am I Normal? (1)', 'Britain is top of the league when it comes to sex; but for all the wrong reasons. Latest statistics show a record 41,000 teenage pregnancies in one year, as well as over half of all sexually transmitted infections being in the 16 to 24 age group. To make matters worse in April this year part of a government bill that would have made crucial sex education compulsory in schools was dropped. Teens still not only need, but want better sex education. Anna Richardson returns, assisted by experts across the board determined to give teenagers across the UK some much needed, upfront sex education lessons.
', 46, 1, 2438161, 88);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1020, 'Strange Bird (4)', '[Främmande Fågel (4)]

As the bird flu pandemic reaches Gotland Island, panic spreads among the inhabitants who are frantic for an elusive cure. In the desperation that rises, the hunt for scapegoats begins, and extremist and anti-immigrant groups gain ground. Meanwhile, nurse Sandra Hägg makes a gruesome discovery at the health clinic where she works—a discovery that will cost her life. Soon Detective Inspector Maria Wern is assigned to solve the murder.', 49, 4, 390358, 97);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1087, 'Ep. 25', null, 51, 25, 2916031, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1088, 'Ep. 26', null, 51, 26, 2916041, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (923, 'Am I Normal? (2)', 'The Sex Education roadshow continues across the UK as Anna Richardson and sexual health expert Dr Radha Modgil give students more ground-breaking lessons in sex, relationships and the human body. This time the students from Glenthorne School, Surrey get live interactive lessons in female anatomy. With the help of five nude models they find out everything they need to know about the female body. The students get abreast of boobs, and the lowdown on labia: discovering that when it comes to women''s bodies, no two are the same. Also Anna meets people with different physical disabilities who tell her how they manage to have great sex.
', 46, 2, 2438171, 88);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (924, 'Am I Normal? (3)', 'Anna Richardson and sexual health expert Dr Radha Modgil are at Raines School in East London to give students ground-breaking lessons in sex education. In live anatomy lessons featuring elderly male and female models, the students learn how both the body and sex changes as we age. The students also learn the truth about vaginal health and are encouraged to overcome the ultimate in embarrassment, talking about sex with your parents. Anna also meets two plus-size women who claim to enjoy loads of great sex. They talk us through their favourite positions and tell us why being big is a help, not a hindrance, when it comes having a healthy sex life. Plus the show meets Ed Evans whose obesity resulted at one point in ''buried penis syndrome'', with him unable to have penetrative sex.
', 46, 3, 2438181, 88);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (925, 'Am I Normal? (4)', 'Anna Richardson and sexual health expert Dr Radha Modgil are at the Bourne Grammar School, near Peterborough, to give the students more ground-breaking lessons in sex education. In live anatomy lessons featuring nude models, the students learn how the body and sex changes before, during and after pregnancy. They also have lessons in changing nappies and feeding infants. Meanwhile, the show explores the reality of having an abortion. Anna visits a disco for people with learning disabilities. She meets Ben, a young man with Down''s syndrome, and his mum Charlotte, and learns how even attempting to lose your virginity is fraught with difficulties. She also meets married couple Tonda and Martin. Tonda has Down''s syndrome, and Martin was brain damaged at birth. But against all the odds the couple have managed to maintain a happy relationship and sex life for over fifteen years.
', 46, 4, 2447091, 88);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (926, 'Stop Pimping Our Kids (1)', 'Anna tackles High Street giant Primark over children’s clothing that transforms kids into sexualised mini adults, and we’ll be taking Matalan to task over their decision to keep stocking padded bras in the children’s section.
', 46, 1, 4081329, 89);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (927, 'Stop Pimping Our Kids (2)', 'This programme tackles one of the nation’s biggest newsagents WH Smiths, who display lads'' mags on the lower shelves where toddlers can see them. This is in spite of several attempts by pressure groups and even an attempt at a government bill to move them to the top.', 46, 2, 4081332, 89);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (928, 'Stop Pimping Our Kids (3)', 'In the final program Anna investigates some of the music television channels who are beaming videos packed with shockingly sexual images into homes throughout the day when children are watching. She hits the streets with images from recent music videos and asks the public to guess: pop or porn?', 46, 3, 4081334, 89);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (929, 'Stop Pimping Our Kids (4)', null, 46, 4, 7327680, 89);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (930, 'The Sex Education Show (1)', 'Taking a frank look into the world of sex, the new series begins with the roadshow visiting Redborne School in Bedfordshire where pupils get to see real living STIs close-up.

Anna Richardson talks sexting and porn with parents. She shows parents what their kids are really looking at online, and arms them with the facts they need to talk to their kids about such stuff.

And the show meets 21-year-old David Smith, a paralympic athlete with cerebral palsy, and 24-year-old fiancé Kat Watkins, who suffers from brittle bone disease. The couple describe how - against all the odds - they have managed to achieve a fulfilling sex life.', 46, 1, 4135731, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (931, 'The Sex Education Show (2)', 'In another frank look at the world of sex, the show visits York High to teach pupils about male puberty. And Anna Richardson shows some parents how easy it is to log into online chat rooms that feature shocking conversations and content.

The kids at York High visit a fertility clinic to see how artificial insemination takes place and witness the moment life is created.

More results from the series'' sex survey reveals how regularly Brits have sex, which parts of the country are experiencing a dry spell... and how many people use handcuffs.

And Jonny and Amelia, who both have impaired vision, talk about their lives and how being visually impaired needn''t get in the way of a great sex life.', 46, 2, 4136092, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (932, 'The Sex Education Show (3)', 'In another frank look at the world of sex, the Sex Survey reveals how many Brits have had a threesome, and in which part of the country people are most likely to have cheated on a partner.

The roadshow travels to Angmering School in Sussex, where the pupils are taught everything they need to know about genetics. From penis size to height, and skin tone to breasts, the kids learn with the help of two naked families how genes determine where we get our size and shape from.

They are taken out of school to be taught about breast health at a unique breast research centre, and also get to discover the highs and lows of first love from their parents and grandparents in embarrassing intimate conversations.

The show meets Nicole and David, who have overcome Nicole''s physical disabilities to enjoy great sex and, against the odds, conceive a child.', 46, 3, 4136094, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (933, 'The Sex Education Show (4)', 'A frank look at the world of sex. The roadshow visits Elliott school in Putney, south London, where pupils are taught about the three stages of pregnancy.

The pupils learn the eye-watering truth about pregnancy from their mums. And learn about birth itself on a visit to a labour ward.

Celebrated broadcaster and Rabbi, Lionel Blue, and orthodox Jew, Oli Kasin, reveal their very different experiences of growing up as gay men in the Jewish community.

There is a report on kids and social networking sites.

And more results from the Great British Sex Survey reveal how many people have had anal sex, and in which part of the country is dressing up to explore a sexual fantasy most popular.', 46, 4, 4136095, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (934, 'The Sex Education Show (5)', 'The roadshow visits Bishops Gore School in Swansea, where pupils get a full-frontal lesson on the subject of attraction.

Three couples - gay, straight and lesbian - reveal what it is that attracted them to each other in the first place. And the show reveals the science behind falling in love.

The pupils are also taken out of school to a sexual health clinic to learn about contraception, while the parents are taught about the risky activity kids get up to with sending sexual texts - or sexts.

And the Great British Sex Survey reveals the nation''s favourite sexual position, and how many British men have caught crabs.', 46, 5, 4176052, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1021, 'The Speechless God', '[Stum Sitter Guden]

The usually joyous Midsummer celebrations on the island of Gotland are shattered by two gruesome murders. The killings imitate crimes committed decades ago by a long-deceased killer. Maria Wern and her colleagues race to solve the copycat murders.', 49, 1, 4357908, 98);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1089, 'Ep. 27', null, 51, 27, 2916051, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1090, 'Ep. 28', null, 51, 28, 2916061, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1091, 'Ep. 29', null, 51, 29, 2916071, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (935, 'The Sex Education Show (6)', 'Taking a frank look at the world of sex, the roadshow hits Stockport School near Manchester, where pupils try looking after a toddler for the day and get a lesson in how and why people come in so many different shapes and sizes.

From hormones to genetics and breast size to penis length, the students get a frank and full frontal lesson in why we''re made the way we are.

The pupils go on a field trip with a difference and discover that bringing up baby can be hugely challenging as they experience the harsh realities of looking after a toddler for the day.

Viewers also meet a person of restricted growth, 22-year-old Ivy Broadhead. She reveals how, when it comes to sex and height, size really doesn''t matter.

Plus the final set of results are released from the Great British Sex Survey and reveal how age affects what you like doing, with whom, where, and how often.', 46, 6, 4189025, 90);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (936, 'Hartewens?', null, 47, 1, 390270, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (937, 'Moeders wil is wet!', null, 47, 2, 390271, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (938, 'Hoezo jaloers?', null, 47, 3, 390272, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (939, 'Knettergek', null, 47, 4, 390273, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (940, 'Vadertje en moedertje', null, 47, 5, 390274, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (941, 'Zwart op wit', null, 47, 6, 390275, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (942, 'Broodje Gezond', null, 47, 7, 390276, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (943, 'Ambities', null, 47, 8, 390277, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (944, 'Zomergriep', null, 47, 9, 390278, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (945, 'Concurrentiestrijd', null, 47, 10, 390279, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (946, 'Latente talenten', null, 47, 13, 390280, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (947, 'Vlinders', null, 47, 11, 390281, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (948, 'Een eigen huis...', null, 47, 12, 390282, 91);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (949, 'Oost West', null, 47, 1, 390283, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (950, 'De voorspelling', null, 47, 2, 390284, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (951, 'Een partijtje', null, 47, 3, 390285, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (952, 'Goudeerlijk', null, 47, 4, 390286, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (953, 'Zeg het met bloemen', null, 47, 5, 390287, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (954, 'Beeldende kunst', null, 47, 6, 390288, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (955, 'Parttimers', null, 47, 7, 390289, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (956, 'Puur natuur', null, 47, 8, 390290, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (957, 'Een parel', null, 47, 9, 390291, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (958, 'Oude liefde roest niet', null, 47, 10, 390292, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (959, 'De erfenis', null, 47, 11, 390293, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (960, 'Verkeerd verbonden', null, 47, 12, 390294, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (961, 'Vrienden voor het leven', null, 47, 13, 390295, 92);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (962, 'De Potloodventer', null, 47, 1, 390296, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (963, 'Oud zeer', null, 47, 2, 390297, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (964, '12 ambachten', null, 47, 3, 390298, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (965, 'In de boot', null, 47, 4, 390299, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (966, 'Vrij gezellig', null, 47, 5, 390300, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (967, 'Gelijke monniken', null, 47, 6, 390301, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (968, 'Die zoekt, die vindt', null, 47, 7, 390302, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (969, 'In de bonen', null, 47, 8, 390303, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (970, 'Black-out', null, 47, 9, 390304, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (971, 'Sekte gekte', null, 47, 10, 390305, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (972, 'Bakerpraatjes', null, 47, 11, 390306, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (973, 'Koppelaars', null, 47, 12, 390307, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (974, 'Grote plannen', null, 47, 13, 390308, 93);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (975, 'Ouwe hap', null, 47, 1, 2822561, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (976, 'De dans ontsprongen', null, 47, 2, 2822571, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (977, 'Burengerucht', null, 47, 3, 2822581, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (978, 'Dobbelspel', null, 47, 4, 2822591, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (979, 'Half om half', null, 47, 5, 2822601, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (980, 'Centenkwestie', null, 47, 6, 2822611, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (981, 'De test', null, 47, 7, 2822621, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (982, 'Kinderen zijn hinderen', null, 47, 8, 2822631, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (983, 'Stand in', null, 47, 9, 2822641, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (984, 'Van goede komaf', null, 47, 10, 2822651, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (985, 'Samen zwanger', null, 47, 11, 2822661, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (986, 'Hallo, is daar iemand?', null, 47, 12, 2822671, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (987, 'Met blijdschap', null, 47, 13, 2822681, 94);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (988, 'Welkom thuis', null, 47, 1, 2822721, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (989, 'Aandacht is macht', null, 47, 2, 2822731, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (990, 'Moeder de deur uit', null, 47, 3, 2822741, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (991, 'Geld moet rollen', null, 47, 4, 2822751, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (992, 'Je weet maar nooit', null, 47, 5, 2822761, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (993, 'Ruilen is huilen', null, 47, 6, 2822771, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (994, 'Makkers staakt', null, 47, 7, 2822781, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (995, 'Moederdag', null, 47, 8, 2822791, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (996, 'The American Dream', null, 47, 9, 2822801, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (997, 'Alarm', null, 47, 10, 2822811, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (998, 'Pas op', null, 47, 11, 2822821, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (999, 'Poppenkast', null, 47, 12, 2822831, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1000, 'Keihard', null, 47, 13, 2822841, 95);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1001, 'Episode 1', null, 48, 1, 390336, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1002, 'Episode 2', null, 48, 2, 390337, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1003, 'Episode 3', null, 48, 3, 390338, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1004, 'Episode 4', null, 48, 4, 390339, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1005, 'Episode 5', null, 48, 5, 390340, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1006, 'Episode 6', null, 48, 6, 390341, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1007, 'Episode 7', null, 48, 7, 390342, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1008, 'Episode 8', null, 48, 8, 390343, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1009, 'Episode 9', null, 48, 9, 390344, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1010, 'Episode 10', null, 48, 10, 390345, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1011, 'Episode 11', null, 48, 11, 390346, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1012, 'Episode 12', null, 48, 12, 390347, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1013, 'Episode 13', null, 48, 13, 390348, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1014, 'Episode 14', null, 48, 14, 390349, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1015, 'Episode 15', null, 48, 15, 390350, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1016, 'Episode 16', null, 48, 16, 390351, 96);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1017, 'Strange Bird (1)', '[Främmande Fågel (1)]

As the bird flu pandemic reaches Gotland Island, panic spreads among the inhabitants who are frantic for an elusive cure. In the desperation that rises, the hunt for scapegoats begins, and extremist and anti-immigrant groups gain ground. Meanwhile, nurse Sandra Hägg makes a gruesome discovery at the health clinic where she works—a discovery that will cost her life. Soon Detective Inspector Maria Wern is assigned to solve the murder.', 49, 1, 390355, 97);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1018, 'Strange Bird (2)', '[Främmande Fågel (2)]

As the bird flu pandemic reaches Gotland Island, panic spreads among the inhabitants who are frantic for an elusive cure. In the desperation that rises, the hunt for scapegoats begins, and extremist and anti-immigrant groups gain ground. Meanwhile, nurse Sandra Hägg makes a gruesome discovery at the health clinic where she works—a discovery that will cost her life. Soon Detective Inspector Maria Wern is assigned to solve the murder.', 49, 2, 390356, 97);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1019, 'Strange Bird (3)', '[Främmande Fågel (3)]

As the bird flu pandemic reaches Gotland Island, panic spreads among the inhabitants who are frantic for an elusive cure. In the desperation that rises, the hunt for scapegoats begins, and extremist and anti-immigrant groups gain ground. Meanwhile, nurse Sandra Hägg makes a gruesome discovery at the health clinic where she works—a discovery that will cost her life. Soon Detective Inspector Maria Wern is assigned to solve the murder.', 49, 3, 390357, 97);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1022, 'All the Tranquil Dead', '[Alla De Stillsamma Döda]

A lawyer driving through the Gotland countryside disappears without a trace. A mink farmer receives a death threat and a sadistic trap is set up on his premises. Maria becomes personally involved in the investigation and finds herself in more danger.', 49, 2, 4357910, 98);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1023, 'May Death Sleep', '[Må Döden Sova]

Two women, seemingly unconnected, die in apparent suicides. With no evidence for murder, Maria Wern and her colleagues at the Gotland police department find themselves looking for a stalker or considering psychosis in the victims.', 49, 2, 4357915, 99);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1024, 'Black Butterfly', '[Svart Fjäril]

The charred body of a suffocated medium lies in the gutted remains of her office after a fire. When two other murders take place in the same manner, Maria Wern is forced to lead an investigation in which the motive and the connection between victims.', 49, 3, 4357916, 99);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1025, 'Boy Missing', '[Pojke Försvunnen]

A ten-year-old boy disappears from a dinner, while another vanishes from a refugee camp. What starts as the search for a missing child ends up being an investigation of hidden agendas, personal betrayals and links to international crime.', 49, 4, 4357917, 99);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1026, 'Not Even the Past', '[Inte Ens Det Förflutna]

When Maria receives anonymous death threats, she''s ordered off the island for her own protection. While her colleagues on Gotland scramble to find the culprit, it becomes increasingly clear that the murderer may have followed Maria to Stora Karlsö Island.', 49, 5, 5070548, 99);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1027, 'Dreams from Snow', '[Drömmar Ur Snö]

It’s Christmas on Gotland when the island is suddenly struck by an unspeakable tragedy — a high-school girl is found dead in the middle of a country road wearing a white Lucia gown. 

What at first appears to be an incomprehensible suicide soon proves to be something far more sinister, when behind the innocent facade it turns out that a group of girls at the local high school is harbouring dark secrets...
Together with her colleagues of the Gotland Police Department, Maria Wern digs ever deeper into the conflicts at the girl’s high school — and when the police discover veiled threats on the Internet,', 49, 1, 6047367, 99);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1028, 'Sleepwalker', '[Drömmen förde Dig Vilse]

After intervening in a fist fight and getting beaten up herself,Maria heads the investigation of a woman who was murdered close to the place where Maria was assaulted.The murderer most likely witnessed what happened to Maria.The motives oscillate between revenge for infidelity and hatred towards homosexuals, and as the number of murders increase so does Maria´s frustration over the reluctance from neighbors and potential witnesses to collaborate in the investigation.Eventually it turns out that all the victims were patients of Erika´s new boyfriend, the psychiatrist Anders. Erika becomes suspicious and tries to escape from Anders. Only to be confronted with the real murderer: Anders’ big secret, his mentally disturbed son, who has escaped from the mental institution and now wants to kill everyone receiving love from his father, including Erika…', 49, 1, 5084744, 100);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1029, 'Not Until The Giver is Dead', '[Först När Givaren är Död]

At the beginning of Medieval Week in Visby an arson occurs in which 65 year old Frida is believed to have perished. When additional murders take place, the trail leads Maria Wern and the police to a summer cottage complex where everyone knows everyone - and where the discovery of Latin texts and arcane drawings raise worries if the attacks are related to the actual celebration.Soon it''s soon clear the woman believed killed in the fire is alive and has disappeared? Under the cover of the festival she intends to unearth relics that threaten to overturn the traditional view of the Christianization of Sweden. If found, the relics would destroy plans for a museum project at Birka, in which several of the residents of the cottage complex have invested their retirement savings . There is no choice but to assassinate Frida before she finds what she is looking for.', 49, 2, 5084746, 100);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1030, null, 'Gotland has been invaded by partying youngsters from Stockholm when the police are notified that a young woman has been found dead in the water at an after party. For Maria, it will be a difficult case because everyone present needs to be processed and they all seem to have something to hide.', 49, 1, 5455839, 101);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1031, null, null, 49, 2, 5455840, 101);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1032, 'The Dead are Silent (1)', 'The police are notified that the doctor and charity director Stefan Helmersson has disappeared. He is found dumped at a roadside, attached to a drip barely keeping him alive. With a dying man as the only witness, the police are faced must decide whether to keep him under anaesthetic or wake him up. Meanwhile, Maria and Sebastian get closer while her children are on the mainland, but Maria begins to doubt whether they really are a good fit for each other.', 49, 3, 5551544, 101);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1033, 'The Dead are Silent (2)', 'The police are notified that the doctor and charity director Stefan Helmersson has disappeared. He is found dumped at a roadside, attached to a drip barely keeping him alive. With a dying man as the only witness, the police are faced must decide whether to keep him under anaesthetic or wake him up. Meanwhile, Maria and Sebastian get closer while her children are on the mainland, but Maria begins to doubt whether they really are a good fit for each other.', 49, 4, 5551545, 101);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1034, null, null, 49, 1, 5551546, 102);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1035, null, null, 49, 2, 5551547, 102);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1036, 'Dirty Intentions (1)', 'During one night, two people are murdered at different locations. Organic farmer Minna Lomén is killed in central Stockholm while her colleague and fiancé is found dead at their home on Gotland. There is no doubt that the murders are linked and Maria must go to Stockholm to investigate alongside the local police.', 49, 3, 5551548, 102);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1037, 'Dirty Intentions (2)', 'During one night, two people are murdered at different locations. Organic farmer Minna Lomén is killed in central Stockholm while her colleague and fiancé is found dead at their home on Gotland. There is no doubt that the murders are linked and Maria must go to Stockholm to investigate alongside the local police.', 49, 4, 5551549, 102);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1038, 'The Fire That Burns (1)', null, 49, 1, 6893638, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1039, 'The Fire That Burns (2)', null, 49, 2, 6893646, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1040, 'Ripples On The Water (1)', null, 49, 3, 6893673, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1041, 'Ripples On The Water (2)', null, 49, 4, 6893679, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1042, 'Wisdom In The Wind (1)', null, 49, 5, 6893680, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1043, 'Wisdom In The Wind (2)', null, 49, 6, 6893683, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1044, '7', null, 49, 7, 6893685, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1045, '8', null, 49, 8, 6893687, 103);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1054, 'Swing That Music! (Swing)', 'For most of its history, popular music has rarely been that which most people like Jazz, for instance, has always been a minority interest.  But in the era which was dominated by swing, the music and its popularity were equally matched.  White musicians became bored with the asinine popular music they were expected to play, music pumped out by Tin Pan Alley, and tried to emulate the style and freedom of their black counterparts.  Most of them were too intelligent as musicians to indulge in mere imitation.  What they created was the first white music based on black music which was not stolen from black music.

featuring
Art Tatum
Artie Shaw
Benny Goodman
Bing Crosby
Bud Freeman
Buddy Rich
Cab Calloway
Dick Vance
Fletcher Henderson
Frank Sinatra
Gene Krupa
Guy Lombardo
Harry James
Lawrence Welk
Lionel Hampton
The Dutch Swing College Band
Tommy Dorsey
Woody Herman', 50, 9, 390383, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1092, 'Ep. 30', null, 51, 30, 2916081, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1093, 'Ep. 31', null, 51, 31, 2916091, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1094, 'Ep. 32', null, 51, 32, 2916101, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1046, 'Introductory Programme', 'Popular music is an essential part of our daily lives.  Yet we know comparatively little about it – where it came from, how it developed, how it has influenced or been influence by social change.  Today, the popular music industry controls billions of dollars; it has a greater revenue than the combined efforts of the cinema, theatre, sport, and all the other entertainment industries put together. Yet the industry depends, ultimately, on the creative talents of a group of remarkable individuals.  The story of popular music, therefore, is a story of the struggle by these individuals to survive the demands of this gigantic industry.

This introductory episode explains some of the aims and ambitions of this seventeen part spectacular entertainment.

featuring
Aretha Franklin
Billie Holiday
Bing Crosby
Bo Diddley
Buddy Rich
Dizzy Gillespie
Duke Ellington
Dusty Springfield
Edith Piaf
Eric Clapton
Everly Brothers
Glen Campbell
Hoagy Carmichael
Jerry Lee Lewis
Joan Baez
Judy Garland
Liberace
Muddy Waters
Paul McCartney and Wings
Richard Rodgers
Ruth Etting
The Beatles
The Bee Gees
The Rolling Stones', 50, 1, 390359, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1047, 'God''s Children', 'It is generally assumed that American popular music comes from the coastal regions of Africa; that the slaves brought drums to the United States; that jazz originated, somehow, in New Orleans; that the blues developed in the Mississippi Delta, and later became the cornerstone of everything from rock n roll to ragtime.  All of these assumptions are untrue, and this episode with seek to uncover the real story – in Africa, on the edge of the Sahara; in Austria and the Salzkammergut; in the Ozark mountains of Arkansas; in New Orleans and in Texas.

featuring
Duke Ellington
Ginger Baker
James Brown
LeRoi Jones
Lightnin'' Hopkins
Rufus Thomas
The Platters
Tina Turner', 50, 2, 390360, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1048, 'I Can Hypnotise ''Dis Nation (Ragtime)', 'Thanks to the hit movie, “The Sting”, everyone reckons they know about Ragtime.  But do they? This Episode includes the oldest known piece of film (1898) showing what the cakewalk was really like.  Also extracts from The Royal Ballet production based on Scott Joplin’s music, “Elite Syncopations”.  Also extracts staged by the Houston Grand Opera of Joplin’s only surviving opera, “Treemonisha”.  There is also rare early film of Irving Berlin (Alexander’s Ragtime Band) as well as film of Joplin’s birthplace and of the madhouse where he died.  Although reference is made to other early ragtime composers, this episode is essentially the story of Scott Joplin – an extraordinary tragedy of failure, frustration, pride, of the black man’s struggle to achieve for himself a proper place in American society.

featuring
Christies Ethiopian Serenaders
Eubie Blake
Houston Grand Opera and the music of Scott Joplin
Irving Berlin
Monica Mason
Rudi Blesh
Terry Waldo', 50, 3, 390361, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1049, 'Jungle Music (Jazz)', 'Jazz is not a black music, nor a white music.  Nor is it structureless improvisation.  Nor did it originate in New Orleans.  As created at the turn of the century throughout the Amerian south, it had a quite specific and limited meaning.  Its form was strict, as were the morals and musical principles which guided its early exponents.  This film will seek to examine the origins of jazz, and show how these were exploited and eventually lost by greed.  Jazz is a story of apartheid in music in which a unique blend of white musical discipline and black sensibility was comprised and laid waste.

featuring
Charles Mingus
Charlie Parker
Chick Corea
Count Basie
Dave Brubeck
Dizzy Gillespie
Duke Ellington
Earl Fatha Hines
George Shearing
Hoagy Carmichael
Ian Carr
John Lewis
Kid Ory
Louis Armstrong
Mike Gibbs
Miles Davis
Paul Whiteman', 50, 4, 390362, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1050, 'Who''s That Comin''? (The Blues)', 'Blues is a word you have to think about before it can be understood.  Contrary to popular belief, blues – as a form of music – does not appear until 1910 or so, that is after ragtime and jazz.  Blues is not, therefore, the cornerstone of popular music.  Rather, it has become an emotional response, through music to a variety of oppressive social conditions.
The Episode begins in the Delta of Mississippi and follow the progress of itinerant blues musicians to the steel mills and automobile factories of Chicago; from harmonica and fiddle, to electric guitar and fashionable nightclub.  Finally, the Episode shows how blues phrases and harmonies were stolen by white rock n rollers in need of a new gimmick.

featuring
B.B. King
Bessie Smith
Billie Holiday
Leadbelly
Memphis Slim
Mighty Joe Young
Muddy Waters
Ray Charles
Roosevelt Sykes
Son House
Victoria Spivey
Willie ''The Lion'' Smith', 50, 5, 390363, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1051, 'Rude Songs (Vaudeville and Music Hall)', 'Music Hall, as a description, means exactly what it says.  A hall, usually at the back of a tavern or pub, in which music was performed by local entertainers for financial gain.  It is thus the earliest example of a popular music industry.  In a sense, through all its manifestations, music hall or vaudeville or variety has remained true to this original description.  Thus, the film begins and ends in Las Vegas (with Judy Garland), a palace of varieties to end all palaces of variety.  En route, we travel via London’s Palace Theatre, the Palladium and the Windmill.

featuring
Charles Aznavour
Charles Coburn
Clara Bow
Danny La Rue
Edith Piaf
Flanagan and Allen
Florrie Forde
Harry Lauder
Judy Garland
Liberace
Little Tich
Mae West
Marie Kendall
Marlene Dietrich
Maurice Chevalier
Mrs Shufflewick', 50, 6, 390364, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1052, 'Always Chasin'' Rainbows (Tin Pan Alley)', 'Tin Pan Alley existed to make money.  IT organized and rationalized an embryonic music industry for the mutual benefit of these who did the organizing.

Tin Pan Alley brought to popular music a collective sense of purpose.  Songs were no longer the creative prerogative of a few gifted, composers.  They could be written to order, in ten minutes, for all combinations of instruments and voices.  Its organization included pluggers, copyists, demonstrators and arrangers.  Songs were written by committee, by number, and by role.  There were “product”, and the greater the “product”, the greater the profit.

featuring
Al Jolson
Bing Crosby
Bob Wills
E. Y. Harburg
George Gershwin
Hoagy Carmichael
Irving Berlin
Irving Caesar
Perry Como
Rudy Vallee
The Carter Family', 50, 7, 390381, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1053, 'Diamonds As Big As the Ritz (The Musical)', 'This is a story of how a remarkable and very different number of theatrical elements were welded together into something also remarkable and very different called “the musical”.  From operetta, vaudeville, variety, burlesque, revue and most importantly British music hall, came “the musical”.  But it did not come about by accident.  It was the deliberate and conscious achievement of lyricist Oscar Hammerstein (who wrote, among others, “Showboat” and “Oklahoma”) and the director Rouben Mamoulian.  Against considerable opposition, both critical and commercial, they created a new art form which was unique and yet familiar.

featuring
Agnes de Mille
Bob Fosse
Galt MacDermott
Glynis Johns
Harold Prince
Joseph Papp
Ken Russell
Lionel Bart
Lorenz Hart
Oscar Hammerstein Jnr.
Richard Rodgers
Rouben Mamoulian
Stephen Sondheim
Tom O''Horgan
William Hammerstein', 50, 8, 390382, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1077, 'Ep. 15', null, 51, 15, 2915931, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1078, 'Ep. 16', null, 51, 16, 2915941, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1079, 'Ep. 17', null, 51, 17, 2915951, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1080, 'Ep. 18', null, 51, 18, 2915961, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1081, 'Ep. 19', null, 51, 19, 2915971, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1082, 'Ep. 20', null, 51, 20, 2915981, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1055, 'Good Times (Rhythm and Blues)', 'In the late forties, white record companies labelled commercial black music “race music”.  Eventually, Jerry Wexler, then working at Billboard magazine as a reporter, thought of the phrase, “rhythm and blues” and it caught on.  Before long, numerous other descriptions appeared – Motown, the Philadelphia Sound, Soul – but all had in common that the music expressed the rising aspirations of the ghetto.  

Meanwhile, a curious imitation of black gospel appeared called white gospel.  And among those who loved the sound were two remarkable men; one a record producer, Sam Phillips, who wanted to create a sound which had the discipline of white gospel but with the abandon of black rhythm and blues; the other was Elvis Presley.

featuring
Aretha Franklin
Bill Haley
Bo Diddley
Clyde McPhatter
Ike and Tina Turner
Jerry Wexler
Johnnie Ray
Pat Boone
Stevie Wonder
The Lefevres Family
The Platters
The Supremes
Wilson Pickett', 50, 10, 390384, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1056, 'Making Moonshine (Country Music)', 'Country music was, originally, home-made music.  It described the births, marriages and deaths that happened in every community.  It celebrated love, just as it bemoaned the ill-fortune that came to every man.  It was music with which all felt they could identify.  As such, it occupied a unique place in white culture.  The music was not manufactured, as in Tin Pan Alley, nor sophisticated, and this episode describes the process by which this change came about.

Finally, we will be backstage at the Grand Ole Opry during one of its regular nationwide broadcasts, with a blessing to finish from Grand Ole Gospel Time.

featuring
Bill Anderson
Doug Kershaw
Ernest Tubb
Jimmie Driftwood
Jimmie Rodgers
Minnie Pearl
Roy Acuff
Roy Rogers
Tex Ritter
Webb Pierce
William Ivey and Stars of the Grand Ole Opry', 50, 11, 390385, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1057, 'Go Down, Moses! (Folk ''War Songs'')', 'After Nashville had raped American country music, it might seem that the folk traditions this music embodied had been lost.  Not so, because these traditions had a purpose other than to entertain.  We shall see how folk music used popular melodies to spell out unpopular themes, how during the American War of Independence filthy words were penned against the British Crown, but all to the tune of ‘God Save The King’.  The same happened during the American Civil War – different words, depending on whether you were from the North or the South but to the same tune.

Song has been used by such as Joan Baez and Bob Dylan, Peter Seeger and Leonard Cohen as a passionate weapon for peace.  The effect these singers managed to achieve in the sixties was one of the stronger causes of the American defeat in Vietnam.

featuring
Arlo Guthrie
Bing Crosby
Country Joe McDonald
James Simmons
Joan Baez
Leon Rosselson
Leonard Cohen
Pete Seeger
Peter, Paul and Mary
The Andrews Sisters
Vera Lynn
Woody Guthrie', 50, 12, 390386, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1058, 'Hail! Hail! Rock n Roll (Rock n Roll)', 'The story of rock n roll begins and ends in Memphis, Tennessee, in the tiny studio of record producer Sam Phillips.  He tells of how he discovered Elvis Presley and of the struggle he had to get Presley accepted.  It was not the overnight success story that is popularly believed.  Before long, however, Presley came to symbolize the spirit of an entire generation.  How did this happen, and why?  Or was it the product of Sam Phillips’ imagination and Presley’s stage presence?

featuring
Bill Haley
Carl Perkins
Chubby Checker
Chuck Berry
Cliff Richard
Conway Twilty
Elvis Presley
Gene Vincent
Jack Good
Jerry Lee Lewis
Little Richard
Lonnie Donegan
Pat Boone
Sam Phillips
Terry Dene
Tommy Steele', 50, 13, 390387, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1059, 'Mighty Good (The Beatles)', '“They were very scruffy” recounts Allan Williams, the Beatles’ first manager, as he describes the Beatles’ early escapades in Hamburg and Liverpool  Soon Brian Epstein appeared on the scene, although he didn’t like the sound the Beatles made.  Nor did any record producer, and even George Martin now admits that he never believed they would make worldwide hit song writers.  There was a cost, of course, which eventually had to paid for this extraordinary euphoria.  But, at the time, no-one seemed to care.

featuring
Allan Williams
Bill Graham
Brian Epstein
Derek Taylor
Donovan
George Harrison
George Martin
John Lennon
Mamas and the Papas
Murray the K
Paul McCartney
Ravi Shankar
Ringo Starr
Roger McGuinn
The Beach Boys
The Byrds', 50, 14, 390388, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1060, 'All Along the Watchtower (Sour Rock)', 'The sixties began, according to Eric Burdon as “a party”.  “The aim of all of us, Hendrix, The Who, The Stones”  Burdon goes on, “was to ball every chick in sight”.  Unfortunately, the party went sour.  After the death of Epstein, the Beatles quarreled and split up.  Jagger was arrested.  Drugs became fashionable.  The swinging sixties tore itself apart in an orgy of self-congratulation and self-indulgence.

featuring
Alexis Korner
Bill Graham
Bill Wyman
Donovan
Eric Burdon
Frank Zappa
Janis Joplin
Jimi Hendrix
John Lennon
Manfred Mann
Mick Jagger
Paul McCartney
Peter Rudge
Pink Floyd
The Doors
The Rolling Stones
The Who', 50, 15, 390389, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1061, 'Whatever Gets You Through The Night (Glitter Rock)', 'This Episode takes place almost entirely on stage; fans are always seen from the performer’s point of view.  Thus, we begin to feel and experience first hand the pressures being put upon various individuals by the music industry.  We are backstage with David Bowie as he makes himself up for a performance.  We watch Alice Cooper ritualistically smashing up a doll, while the fans shriek for more and more.  We are with Ian Anderson of Jethro Tull as he prepares to face a screaming crowd.  We watch Eric Clapton before drugs, during drugs and after drugs.  We are on stage with Keith Emerson as he hurls his electric organ as the audience... 

featuring
Alice Cooper
Bob Marley and the Wailers
Clive Davis
Cream
David Bowie
Elton John
Emerson, Lake and Palmer
Eric Clapton
Gary Glitter
Helen Reddy
Jethro Tull
Keith Moon
Kiss
Labelle
Lester Bangs
Marie and Donny Osmond
Roxy Music', 50, 16, 390390, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1062, 'Imagine (New Directions)', 'The film opens at a pop festival.  Drug-smoking is very much in evidence.  “These fellows will answer to God” says the Rev Jack Wyrtzen, “for all the pollution and evil they have spread around the world.”  “The thing about rock n roll” says Lester Bangs, “is that it is totally about adolescence, and about consumerism brought in the highest degree”.  In fact, as the film begins to point out, neither of these extreme points of view is true.  Tangerine Dream perform religious music in Coventry Cathedral.  Stomu Yamash’ta, a spectacular Japanese percussionist, clearly has nothing to do with adolescence: and no-one could describe Mike Oldfield as the product of consumerism.', 50, 17, 390391, 104);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1063, 'Ep. 1', null, 51, 1, 427760, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1064, 'Ep. 2', null, 51, 2, 427761, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1065, 'Ep. 3', null, 51, 3, 427762, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1066, 'Ep. 4', null, 51, 4, 427763, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1067, 'Ep. 5', null, 51, 5, 427764, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1068, 'Ep. 6', null, 51, 6, 427765, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1069, 'Ep. 7', null, 51, 7, 427766, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1070, 'Ep. 8', null, 51, 8, 427767, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1071, 'Ep. 9', null, 51, 9, 427768, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1072, 'Ep. 10', null, 51, 10, 427769, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1073, 'Ep. 11', null, 51, 11, 427770, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1074, 'Ep. 12', null, 51, 12, 427771, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1075, 'Ep. 13', null, 51, 13, 427772, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1076, 'Ep. 14', null, 51, 14, 427773, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1095, 'Ep. 33', null, 51, 33, 2916111, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1096, 'Ep. 34', null, 51, 34, 2916121, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1097, 'Ep. 35', null, 51, 35, 2916131, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1098, 'Ep. 36', null, 51, 36, 2916141, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1099, 'Ep. 37', null, 51, 37, 2916151, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1100, 'Ep. 38', null, 51, 38, 2916161, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1101, 'Ep. 39', null, 51, 39, 2916171, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1102, 'Ep. 40', null, 51, 40, 2916181, 105);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1103, 'Knowledge', 'In Knowledge, Professor Bartlett explores the way medieval man understood the world as a place of mystery, even enchantment - a book written by God.

The medieval world was full of marvels as revealed through medieval sources. He unearths records of strange sightings of fish men caught off the coast of Suffolk, or green men in Essex. Travelling to Hereford Cathedral he decodes the Mappa Mundi, with its three continents (Europe, Africa and Asia) and its strange beasts thought to exist on the periphery of the earth: hermaphrodites, unicorns, men with the heads of dogs.', 52, 1, 390445, 106);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1104, 'Sex', 'In Sex, we unearth remarkable evidence of the complex passions of medieval men and women.

On the one hand, there was a down-to-earth approach you might expect in a peasant society; on the other was an obsessive abhorrence of desire grounded in religious fervour. Professor Robert Bartlett explores the subject using medieval sources, and quotes some of the questions the 11th century Church recommended priests to ask their parishioners: "Have you committed fornication with your step-mother, your sister-in-law, your son’s fiancée, your mother?"', 52, 2, 390446, 106);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1105, 'Belief', 'In Belief, Robert explores belief in the supernatural. The medieval dead shared the world with the living: encounters with the dead and visions of the next world ensured a two-way traffic between this world and the next. Robert uses medieval sources to create a keen sense of the after-life.

The cult of the saints was part of the medieval preoccupation with death. The holy dead were active in their intercession for the living, and their relics were prized. Robert explores this preoccupation through one of the few medieval relics in Britain, the skull of St Simon Stock at Aylesford Priory.', 52, 3, 390447, 106);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1106, 'Power', 'In Power, Professor Robert Bartlett lays bare the brutal framework of the medieval class system. Inequality was as part of the natural order, the life of serfs little better than those of animals, the knight’s code of chivalry more one of caste solidarity than morality. The class you were born into determined who you were.

There were three classes, or estates: those who pray (the clergy), those who fight (the aristocratic warrior class of knights) and those who work (everybody else – in practice, usually serfs on a knight’s estate).', 52, 4, 390448, 106);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1107, 'Stephen Fry and the Gutenberg Press', 'Stephen Fry examines the story behind the first media entrepreneur, printing press inventor Johann Gutenberg, to find out why he did it and how, a story which involves both historical enquiry and hands-on craft and technology. Fry travels across Europe to find out how Gutenberg kept his development work secret, about the role of avaricious investors and unscrupulous competitors and why Gutenberg''s approach started a cultural revolution. He then sets about building a copy of Gutenberg''s press.', 52, 1, 414962, 107);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1108, 'The Gutierrez Family', 'The clock will be ticking as the Gutierrez family face a variety of tests -- ranging from Lucas naming the cheerleading move that Alexis practices, to Patty remembering the grade her son was in from a photo she passes every day, to Walter discovering which of his gifts to his wife was her least favorite... the 1980s style dress, the electric blanket, a leather jacket or the jellybean print pajamas? With the correct answer, he could win big. Whatever the outcome, the biggest reward will be the experience they share as a family, the opportunity to bring a neighborhood together and the bonds that will be strengthened.', 53, 1, 390449, 108);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1109, 'The Laut Family', 'Can the Laut family from Lakewood, Cal. win tickets to a "Hannah Montana" taping and a cruise? Guests Ashton Krutcher and JD Roth make a surprise appearance as the family gets their chance to win $50,000 by answering one question correctly.', 53, 2, 390450, 108);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1110, 'The Vomvos Family', 'The Vomvos family consist of nine children and are hoping to win a private tour to the new Yankees Stadium, a Mediterranean cruise, a deluxe lawnmower and tickets to a Taylor Swift concert.', 53, 3, 404880, 108);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1111, 'Wanna Fight? Bring It on! Enter Sadamitsu', null, 54, 1, 390481, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1112, 'Blazing Battle! Retrieval Complete!', null, 54, 2, 390482, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1113, 'A New Member - Culon Runs Wild', null, 54, 3, 390483, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1114, 'A Blazing Man''s Spirit', null, 54, 4, 390484, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1115, 'Women are Men''s Death Scythe', 'Sadamitsu discovers the Vulture is actually Kamishiro, and confronts her by asking her why she continues to destroy the alien convicts. Kamishiro escapes, and continues to think about what Sadamitsu said. She wants to stop, and helps an alien, by hiding him from the Police and bringing him food. But when the Police discovers them, she decides it''s time to destroy everybody. Sadamitsu arrives too late and finds both the alien and the policemen killed.', 54, 5, 390485, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1116, 'A Cherry Blossom is a Flower of Man''s Confusion', null, 54, 6, 390486, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1117, 'Man, Eat the Fist of Life!', null, 54, 7, 390487, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1118, 'Man, Sharing an Umbrella of Tears', null, 54, 8, 390488, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1119, 'Man''s Love is a Love for a Struggle to the Death', null, 54, 9, 390489, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1120, 'Man''s Constellation that Sparkles in the Sky', null, 54, 10, 390490, 109);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1121, null, null, 55, 1, 390497, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1122, null, null, 55, 2, 390498, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1123, null, null, 55, 3, 390499, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1124, null, null, 55, 4, 390500, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1125, null, null, 55, 5, 390501, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1126, null, null, 55, 6, 390502, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1127, null, null, 55, 7, 390503, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1128, null, null, 55, 8, 390504, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1129, null, null, 55, 9, 390505, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1130, null, null, 55, 10, 390506, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1131, null, null, 55, 11, 390507, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1132, null, null, 55, 12, 390508, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1133, null, null, 55, 13, 390509, 110);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1134, null, null, 55, 1, 390522, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1135, null, null, 55, 2, 390523, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1136, null, null, 55, 3, 390524, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1137, null, null, 55, 4, 390525, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1138, null, null, 55, 5, 390526, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1139, null, null, 55, 6, 390527, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1140, null, null, 55, 7, 390528, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1141, null, null, 55, 8, 390529, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1142, null, null, 55, 9, 390530, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1143, null, null, 55, 10, 390531, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1144, null, null, 55, 11, 390532, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1145, null, null, 55, 12, 390533, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1146, null, null, 55, 13, 390534, 111);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1147, null, null, 55, 1, 390552, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1148, null, null, 55, 2, 390553, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1149, null, null, 55, 3, 390554, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1150, null, null, 55, 4, 390555, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1151, null, null, 55, 5, 390556, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1152, null, null, 55, 6, 390557, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1153, null, null, 55, 7, 390559, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1154, null, null, 55, 8, 390560, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1155, null, null, 55, 9, 390561, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1156, null, null, 55, 10, 390562, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1157, null, null, 55, 11, 390563, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1158, null, null, 55, 12, 390564, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1159, null, null, 55, 13, 390565, 112);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1160, 'Eric Newby', 'Benedict Allen follows the travels of quintessential British amateur traveller Eric Newby. Born in suburban Hammersmith between the Wars, Newby was dismissed by his public school as ''not clever'', and his life became a catalogue of challenges. As a teenager he went to sea to serve as a deck hand, sailing around Cape Horn. During the Great War he joined the Special Boat Squadron, where he was captured and escaped from an Italian POW camp during which time he met his wife of 60 years, Wanda.

Newby itched to discover the world and, in the mid-1950s, abandoned an unhappy career in the rag trade to head off with diplomat Hugh Carless into remotest Afghanistan and climb Mir Samir. The journey was immortalised in A Short Walk in the Hindu Kush.

50 years on, Benedict Allen finds this lost corner of Afghanistan little changed - and comes away full of admiration for the author. Newby failed to reach the summit, but for all his sardonic understatement and self-deprecation, he was just a hair''s breadth away. And all with the aid of a map drawn on the back of an envelope.', 56, 1, 390510, 113);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1161, 'Laurie Lee', 'Explorer, writer and broadcaster Benedict Allen retraces some of author Laurie Lee''s journey across Spain in 1935, which became the basis for his celebrated travelogue As I Walked Out One Midsummer Morning.

Lee thought of himself first and foremost as a poet, and the book reveals a poet''s sensibility in its meticulous, distilled observations of the country and people he quickly came to love.

Allen tries to find out whether Lee''s evocative prose actually works as travel writing and Lee is revealed as an enigmatic, mercurial figure in the tradition of the wandering minstrel or troubadour, with a huge array of talents and an astonishing facility to charm.', 56, 2, 390511, 113);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1162, 'Patrick Leigh Fermor', 'Benedict Allen follows Patrick Leigh Fermor''s epic 1931 quest across Europe as he traces the inns, haystacks and castles the young adventurer stayed in, as he foot-slogged his way through Holland, Germany, Hungary and Romania towards Byzantium.

With his academic career punctuated by numerous school expulsions, the young Patrick Leigh Fermor put aside his troubles and set out across Europe to reach Constantinople in Turkey. It was the original backpacker journey, but also a quest in the romantic tradition of Lord Byron - that of the Man of Action and the intellectual combined.

His two accounts of that journey, A Time of Gifts and Between the Woods and Water, are a masterly portrait of a Europe about to be swept aside by war, and also an insight into the brilliant, classically-educated mind of the author.

It is in remotest Greece that Benedict Allen finally tracks down the great man himself to discuss the nature, purpose and future of travel writing.', 56, 3, 390512, 113);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1163, 'Die Reise beginnt', null, 57, 1, 390535, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1164, 'Die Herrschaften kommen', null, 57, 2, 390536, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1165, 'Erster Frust', null, 57, 3, 390537, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1166, 'Stress Pur', null, 57, 4, 390538, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1167, 'Ärger im Klassenzimmer', null, 57, 5, 390539, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1168, 'Falsche Hoffnungen', null, 57, 6, 390540, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1169, 'Wäsche auf Null', null, 57, 7, 390541, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1170, 'Nur die Nerven', null, 57, 8, 390542, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1171, 'Für ein paar Mark', null, 57, 9, 390543, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1172, 'Kampf der Hierachie', null, 57, 10, 390544, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1173, 'Donnerwetter', null, 57, 11, 390545, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1174, 'Warten auf Nachwuchs', null, 57, 12, 390546, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1175, 'Duell um Karin', null, 57, 13, 390547, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1176, 'Sie liebt mich, Sie liebt mich nicht...', null, 57, 14, 390548, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1177, 'Eine rauschende Nacht', null, 57, 15, 390549, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1178, 'Zurück in die Gegenwart', null, 57, 16, 390550, 114);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1179, 'Bonus Material: Backstage', null, 57, 1, 390551, 115);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1180, 'The Secret Constitution: Secret Cabinet Committees', 'About a small, secret Cabinet committee that was in reality the Establishment that ruled the United Kingdom.', 58, 1, 390575, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1181, 'We’re All Data Now: Secret Data Banks', 'About the Data Protection Act, which defines a legal basis for the handling in the UK of information relating to living people.  The controversies associated with this act are explored.', 58, 2, 390576, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1182, 'In Time of Crisis: Government Emergency Powers', 'About secret preparations for war that began in 1982 within every NATO country. This programme revealed what Britain would do.', 58, 3, 390577, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1183, 'Association of Chief Police Officers (ACPO)', 'About the Association of Chief Police Officers and how Government policy and actions are determined in the fields of law and order.', 58, 4, 390578, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1184, 'A Gap in our Defences', 'Bungling defence manufacturers and incompetent military planners have botched every new radar system that Britain has installed since World War Two. Why? And can we stop it happening again?', 58, 5, 5231701, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1185, 'Zircon', 'The infamous ''Zircon'' episodes reveals the existence of a £500m British spy satellite programme kept secret from Parliament', 58, 6, 5231702, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1186, '', null, 58, 7, 5250139, 116);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1187, 'Born Genius', 'Marc Yu is a seven-year-old concert pianist with a repertoire of some 40 classical pieces. At the age of two, Marc heard a rendition of ‘Mary Had a Little Lamb’ at a birthday party, pulled himself up to a piano and played it back flawlessly. A year later, he was playing Beethoven from memory. But are his remarkable abilities based on hard work or was he simply born with a brilliant brain?

Developmental psychologist Professor Ellen Winner explains that people have always been fascinated with child geniuses because they are doing things at “the wrong age”. “They’re not supposed to be doing things so advanced,” she explains, “so they shock us.” ', 59, 3, 390579, 117);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1188, 'Make Me a Genius', 'At 38 years old, Susan Polgar has reached heights that few women have ever equalled in the chess world. Despite the common assumption that men’s brains are better at understanding spatial relationships, giving them an advantage in games such as chess, Susan went on to become the world’s first grandmaster. Susan’s remarkable abilities have earned her the label of ‘genius’, but her psychologist father, László Polgar, believed that genius was “not born, but made”. Noting that even Mozart received tutelage from his father at a very early age, Polgar set about teaching chess to the five-year-old Susan after she happened upon a chess set in their home. “My father believed that the potential of children was not used optimally,” says Susan.', 59, 1, 390580, 117);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1189, 'Accidental Genius', 'Psychologist Darold Treffert of the University of Wisconsin has been studying savants for over 40 years. “A savant by definition,” he explains, “is somebody who has a mental handicap of some sort with... an island of genius.” The difference between a savant and a genius, therefore, is the disability. For George Widener, this disability is autism – a condition that leads to awkwardness and social isolation. At the age of seven, George spotted a calendar and was intrigued by “the magic of the rows of numbers.” Since then, he has found comfort in numbers, compiling lists of figures and calendars spanning centuries. He can now identify the day of the week from any given date.', 59, 2, 390581, 117);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1258, 'Vita e morte di Pier Paolo Pasolini', null, 60, 5, 6395578, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1190, 'My Musical Brain', 'My Musical Brain combines the cutting-edge experiments of top neuroscientists and the experiences of top musicians such as Sting, Michael Buble, and Wyclef Jean to reveal why music is so important in our lives. It explores our collective passion for music and illuminates how the brain uses music to create human experience.', 59, 4, 5740471, 117);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1191, 'Alvise (Firenze)', null, 60, 1, 390582, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1192, null, null, 60, 2, 390583, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1193, null, null, 60, 3, 390584, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1194, null, null, 60, 4, 390585, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1195, null, null, 60, 5, 392040, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1196, null, null, 60, 6, 392041, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1197, null, null, 60, 7, 392042, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1198, null, null, 60, 8, 392043, 118);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1199, 'La grotta della Croara. Lea (Bologna)', null, 60, 1, 392044, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1200, 'Luigia e Antonella (Genova)', null, 60, 2, 392045, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1201, 'Il delitto della Cattolica. Simonetta Ferrero (Milano)', null, 60, 3, 392046, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1202, 'Il delitto di Lidia Macchi. Lidia (Varese)', 'Nel 1987 viene uccisa a Varese Lidia Macchi, una ragazza dal carattere forte e solare. E’ una militante attivissima di Comunione e Liberazione. Le indagini sono delicate e viene coinvolto tra gli altri un prete. Una puntata del programma di Enzo Tortora sul caso della Macchi spinge la Magistratura a chiedere la prova del DNA. Ma erano i primi esperimenti e la cosa non funziona. Le indagini sembrano bloccarsi.', 60, 4, 392047, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1203, 'Un delitto a Firenze. Gianfranco Cuccuini', null, 60, 5, 392048, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1204, 'La bottiglia di Rosolio. Clotilde Fossati (Milano)', null, 60, 6, 392049, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1205, 'Binario 10. Duilio Saggia Civitelli (Roma)', null, 60, 7, 392050, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1206, 'Elisa e Patrizio (Cori, Latina)', null, 60, 8, 392051, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1207, 'Massimo, il professore di Aosta. Massimo Vichi (Aosta)', null, 60, 9, 392052, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1208, 'Il delitto della camera chiusa. Mara (Perugia)', null, 60, 10, 392053, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1209, 'L''omicidio di via Caravaggio. Mimmo Santangelo, Gemma e Angela (Napoli)', null, 60, 11, 392054, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1210, 'Il velo della Madonna. Maria Luisa Decìa (Trento)', null, 60, 12, 392055, 119);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1211, 'Antonella di Veroli - Il mistero della stanza chiusa (Roma)', null, 60, 1, 392056, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1212, 'Stevanin. Indagine di un serial killer (Terrazzo)', null, 60, 2, 392057, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1213, 'Anna Laura Pedron - Il delitto di Via Colvera (Pordenone)', null, 60, 3, 392058, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1214, 'Christian Wadner - Delitto al castello (Castelgulcina, Bolzano)', null, 60, 4, 392059, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1215, 'Floride Cesaretti. Omicidio al College (Urbino)', null, 60, 5, 392060, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1216, 'Assunta Marsala. La scomparsa di Susy (Siracusa)', null, 60, 6, 392061, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1217, 'Roberta Lanzino (Falconara Albanese, Cosenza)', null, 60, 7, 392062, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1218, 'I misteri di Alleghe (Belluno)', null, 60, 8, 392063, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1219, 'Vincenzo Mosa - La villa dei misteri (Sabaudia, Latina)', null, 60, 9, 392064, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1220, 'Agata Bornino - Il mistero del fiume (Collio di Vobarno, Brescia)', null, 60, 10, 392065, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1221, 'Il professor Klinger (Milano)', null, 60, 11, 392066, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1222, 'Luigi Bezzi - Il pescatore di Sant’Alberto (Sant''Alberto, Ravenna)', null, 60, 12, 392067, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1223, 'Aurora (Palermo)', 'Aurora Labruzzo, 43 anni, moglie di uno dei titolari del più noto ed esclusivo ristorante della città, il "Regine", meta di vip e magistrati, è morta al quinto piano di un anonimo edificio senza portiere, in via Pianelle, nel cuore di Brancaccio.', 60, 13, 392068, 120);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1224, 'Il caso Michele Sindona	', null, 60, 1, 392069, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1225, 'Il caso Graziella Campagna', null, 60, 2, 392070, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1226, 'Il caso Sergio Castellari. La tangente Enimont', null, 60, 3, 392071, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1227, 'Il caso Gioia Tauro. La strage del 1970', null, 60, 4, 392072, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1228, 'Il caso Antonio Ammaturo', null, 60, 5, 392073, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1229, 'La Banda della Uno Bianca', null, 60, 6, 392074, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1230, 'Il caso Roberto Calvi', null, 60, 7, 392075, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1231, 'Il caso Enrico Mattei', null, 60, 8, 392076, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1232, 'Il caso Mauro De Mauro', null, 60, 9, 392077, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1233, 'Il caso Antonino Gioè. La mafia, Falcone e Borsellino', null, 60, 10, 392078, 121);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1234, 'Il caso Salvatore Giuliano', null, 60, 1, 392079, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1235, 'La strage di Ustica', null, 60, 2, 392080, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1236, 'Il caso Wilma Montesi', null, 60, 3, 392081, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1237, 'Il caso Agostino e Piazza', null, 60, 4, 392082, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1238, 'Il Caso Pier Paolo Pasolini', null, 60, 5, 392083, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1239, 'La strage di Bologna', null, 60, 6, 392084, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1240, 'Il caso Alceste Campanile', null, 60, 7, 392085, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1241, 'Il mostro di Firenze - Prima Parte', null, 60, 8, 392086, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1242, 'Il mostro di Firenze - Seconda Parte', null, 60, 9, 392087, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1243, 'Il caso Beppe Alfano', null, 60, 10, 392088, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1244, 'Il caso Paolo Borsellino', null, 60, 11, 392089, 122);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1245, 'La storia delle Brigate Rosse - Prima Parte', null, 60, 1, 392090, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1246, 'La storia delle Brigate Rosse - Seconda Parte', null, 60, 2, 392091, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1247, 'Delitti del mostro di Firenze', null, 60, 3, 392092, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1248, 'La Mattanza: dai silenzi sulla Mafia al silenzio della Mafia', '11 giugno 1969. Si apre il Processo di Bari. In un susseguirsi di flashback, immagini di repertorio, storia presente e ipotesi future, Lucarelli, come in un film, ci conduce davanti a personaggi e situazioni: il giornalista Mario Francese e la sua uccisione, Totò Riina, Leoluca Bagarella e Bernardo Provenzano, Salvo Lima e Vito Ciancimino, il Sacco di Palermo, Francesca Morvillo e Ninetta Bagarella, La guerra dei Corleonesi, le morti di Boris Giuliano, Cesare Terranova, Pio La Torre, Rocco Chinnici e Carlo Alberto Dalla Chiesa, la strage di Ciaculli, la nascita del Pool antimafia, la stagione dei Pentiti, il maxiprocesso, le stragi di Capaci e di via D’Amelio, la reazione dello Stato e il 41 bis, la morte di don Pino Puglisi, fino a giungere alle relazioni tra Mafia e politica.', 60, 4, 392093, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1249, 'La storia della ''Ndrangheta', null, 60, 5, 392094, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1250, 'Milano calibro nove', null, 60, 6, 392095, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1251, 'La storia della Camorra', null, 60, 7, 392096, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1252, 'La banda della Magliana', null, 60, 8, 392097, 123);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1253, 'La strage di piazza Fontana, un processo senza fine', null, 60, 1, 392098, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1254, 'OSS, CIA, GLADIO, i rapporti segreti tra America e Italia', null, 60, 3, 392099, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1255, 'La violenza politica negli anni ''70', null, 60, 4, 392100, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1256, 'La scomparsa di Mauro De Mauro: un mistero di Stato - puntata aggiornata', 'Mauro De Mauro è scomparso a Palermo il 16 settembre 1970: il rapimento del giornalista per mano di Cosa nostra è un mistero tuttora irrisolto, sul quale sono state formulate numerose ipotesi correlate ad altri grandi enigmi della storia italiana, considerato soprattutto che Mauro De Mauro stava indagando sulla morte di Enrico Mattei. In questa puntata, fra le altre, anche le interviste al fratello Tullio e alla moglie Elda.', 60, 2, 392101, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1257, 'Terra e Libertà. Gli omicidi Miraglia, Rizzotto e Carnevale', null, 60, 6, 392102, 124);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1259, 'Anonima sarda. La criminalità in Sardegna', null, 60, 2, 392103, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1260, 'L''armadio della vergogna', null, 60, 3, 392104, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1261, 'Genova 2001, G8', null, 60, 4, 392105, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1262, 'Piazza della Loggia - Il luogo della memoria', null, 60, 5, 392106, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1263, 'Trapani, coppole e colletti bianchi', null, 60, 6, 392107, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1264, 'Il naufragio fantasma', null, 60, 7, 392108, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1265, 'Una guerra di spie, il rapimento dell''imam Abu Omar', null, 60, 8, 392109, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1266, 'Terra e libertà. Gli omicidi Accursio Miraglia, Placido Rizzotto e Carnevale', 'Nel 1947 viene ucciso in un agguato mafioso il Segretario della Camera del Lavoro di Sciacca Accursio Miraglia. Nel 1955 sarà Salvatore Carnevale, un altro sindacalista di Sciara, un paese della provincia di Palermo, a morire per mano di Cosa Nostra. Carlo Lucarelli racconta la storia di due uomini coraggiosi che hanno osato sfidare i poteri forti per difendere i diritti dei più deboli. Sono gli anni in cui il ministro dell’Agricoltura Fausto Gullo emana i decreti che prevedono l’assegnazione dei latifondi incolti alle cooperative dei contadini.', 60, 1, 5938465, 125);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1267, 'La Mafia al Nord', null, 60, 1, 392110, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1268, null, null, 60, 2, 392111, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1269, null, null, 60, 3, 392112, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1270, 'Amianto: Le morti silenziose', null, 60, 4, 392113, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1271, null, null, 60, 5, 392114, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1272, 'Messina, un enigma da decifrare', null, 60, 6, 392115, 126);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1273, 'L''ombra oscura della P2', null, 60, 1, 4324607, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1274, 'Navi a Perdere', null, 60, 2, 4324608, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1275, 'Ilaria Alpi e Miran Hrovatin', 'Ilaria Alpi e Miran Hrovatin: dopo lunghe e controverse indagini intorno all’agguato di Mogadiscio del 20 marzo 1994 dove i due giornalisti furono uccisi non si ha ancora una verità giudiziaria. Sono molti i dubbi e gli interrogativi che rimangono aperti: dalla dinamica dell’aggressione, passando alla condanna a 26 anni per duplice omicidio del cittadino somalo venuto in Italia per testimoniare, fino alla scomparsa di alcune cassette con l’ultima intervista realizzata da Ilaria e Miran in Somalia. I due giornalisti del Tg3 della Rai forse avevano scoperto qualcosa di inquietante: traffici internazionali di rifiuti tossici e di armi, nascosti dietro la cooperazione internazionale nei paesi in via di sviluppo. Un mistero ancora irrisolto, ma anche una vicenda profondamente umana dove spiccano la figura e la dignità dei genitori di Ilaria Alpi.', 60, 3, 4324609, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1276, 'Dentro Cosa Nostra. Storia del pentitismo mafioso', null, 60, 4, 4324610, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1277, 'Il Clan dei Casalesi. Soldi, silenzio e sangue', null, 60, 5, 4324611, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1278, 'Sicilia nera', null, 60, 6, 4324612, 127);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1279, 'Nelle mani dello stato', null, 60, 1, 4324613, 128);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1280, 'La trattativa', 'L’attentato mancato del giugno 1989 a Giovanni Falcone nei pressi della sua villa all’Addaura, le stragi di Capaci e di via D’Amelio in cui nel 1992 persero la vita i giudici Falcone e Paolo Borsellino, la morte e la scomparsa degli agenti Antonino Agostino e Emanuele Piazza, gli attentati e le stragi mafiose del ’93 a Roma, Firenze e Milano. Perché mettere insieme tante storie più volte raccontate? Perché forse è necessario raccontarle di nuovo, di rivederne alcune e di legarle ad altre meno conosciute per fare un salto in avanti. Alcune novità investigative e processuali, risultato del lavoro della magistratura e delle forze dell’ordine, sembrerebbero aggiungere nuovi elementi a un quadro che potrebbe apparire più chiaro o mostrarsi diverso rispetto a quello finora conosciuto. Questa è la storia di un’ipotesi, l’ipotesi di un filo che ha legato e lega Cosa Nostra non solo all’economia, non solo alla politica, ma anche a una parte dello Stato', 60, 2, 4324614, 128);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1281, 'La morte sul lavoro', null, 60, 3, 4324615, 128);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1282, 'La Mala del Brenta', null, 60, 4, 4324616, 128);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1283, 'La quarta mafia', null, 60, 5, 4324617, 128);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1284, 'Nicola Calipari, in quel luogo e in quel momento', 'La storia di Nicola Calipari, un poliziotto atipico, colto e gentile, con un grande senso dello Stato. Dagli inizi della sua carriera in Calabria, dove contrasta le attività criminali della ‘Ndrangheta, alla Seconda Guerra del Golfo, in Iraq, dove è presente come capo del reparto delle operazioni speciali all’estero del SISMI.', 60, 1, 4324618, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1285, 'Eroi normali', null, 60, 2, 4810442, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1286, 'Il segreto di Paolo Borsellino', null, 60, 3, 4810443, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1287, 'Uomini dello Stato', null, 60, 4, 4810444, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1288, 'Giornalisti nel mirino', null, 60, 5, 4810445, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1289, 'Ladri di futuro', null, 60, 6, 4810446, 129);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1290, 'The mattanza. From silences on the mafia to the silence of the mafia', null, 60, 1, 6811261, 130);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1291, 'Episode 1', null, 61, 1, 1067581, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1292, 'Episode 2', null, 61, 2, 1067591, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1293, 'Episode 3', null, 61, 3, 1067601, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1294, 'Episode 4', null, 61, 4, 1067611, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1295, 'Episode 5', null, 61, 5, 1067621, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1296, null, null, 61, 6, 4131329, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1297, null, null, 61, 7, 4131330, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1298, null, null, 61, 8, 4131331, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1299, null, null, 61, 9, 4131332, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1300, null, null, 61, 10, 4131333, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1301, null, null, 61, 11, 4131334, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1302, null, null, 61, 12, 4131335, 131);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1303, 'Murder, She Said', 'While passing by on a different train, Miss Marple witnesses the strangulation of a young woman in the opposite carriage. The local police dismiss her story as the ramblings of a senile and bored old woman, so, undaunted, she conducts her own investigation, and comes to the conclusion that the body must be buried on the grounds of Ackenthorpe Hall, which adjoins the railway line.
Wheedling her way into a job as housemaid there, Marple copes with the pompous machinations of her difficult employer, Luther Ackenthorpe (James Robertson Justice), so she can search for the mysterious corpse, and eventually finds it while supposedly practicing her golf shots.
As she begins collecting suspects, accompanied by her long suffering companion Jim Stringer (Stringer Davis), Marple finds herself faced with an increasingly devious and resourceful killer, who begins casting his shadow over Ackenthorpe''s heirs...', 62, 1, 390813, 132);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1304, 'Murder at the gallop', 'The old and wealthy Mr. Enderby dies of a heart attack but the ever suspicious Miss Marple has her doubts. Who or what gave him a heart attack? Enderby''s poor relatives gather at the The Gallop, a combined boarding-house and riding school. Miss Marple also gets there to find out if any of them had any particular reasons to see him dead.', 62, 2, 390814, 132);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1322, 'Renate og Arve', 'Renate og Arve har en kaotisk hverdag, hvor barn, hus og hunder tar all energi fra Eidsvoll-paret. De opplever som mange andre at det ikke bare er tiden som ikke strekker til. Arves gjeld fra 80-tallet spøker fortsatt i bakgrunnen og de sliter med å skjøtte familiedrift og faste utgifter. På toppen av det hele har de kjøpt to store hunder på avbetaling, noe som medvirker til at kontoen som regel er tom i god tid før neste lønning. Økonomene Hallgeir Kvadsheim og Magne Gundersen tar turen til Eidsvoll for å hjelpe familien, i håp om at de skal få beholde huset og at de på sikt skal få full kontroll over økonomien.', 64, 4, 856651, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1400, null, null, 64, 4, 4655836, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1305, 'Murder Ahoy!', 'The action takes places mainly on board an old wooden-walled battleship, HMS Battledore, which has been purchased by a Trust for the rehabilitation of young criminals, and intended by the founder to put backbone into young jellyfish.
Shortly after joining the board of management of the Trust, Miss Marple witnesses the sudden death of a fellow trustee, who has just returned from a surprise visit to the ship. She manages to obtain a small sample of his snuff, which is found to have been poisoned. Against police advice, she visits the ship, much to the distress of the Captain and officers.
On her first night on board, one officer is murdered - run through with a sword and then hanged. As the police investigation proceeds, the assistant matron is killed, apparently by a poisoned mousetrap.', 62, 4, 390815, 132);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1306, 'Murder Most Foul', 'Although the evidence appears to be overwhelming in the strangulation murder of a blackmailer, Miss Marple''s sole ''not guilty'' vote hangs the jury 11-1. She becomes convinced that the real murderer is a member of a local theatrical troupe, so she joins them in order to gather information. The clues lead back many years to a single disastrously unsuccessful 1951 performance of a dreadful play written by the group''s hammy director, H. Driffold Cosgood. Although at that time, several of the current cast members were only children, more murders follow before Miss Marple ultimately exposes the killer. ', 62, 3, 390816, 132);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1307, 'Miss Marple Classic', null, 62, 83191, 4456447, 133);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1308, 'Episode 1', null, 63, 1, 390829, 134);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1309, 'Episode 2', null, 63, 2, 390830, 134);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1310, 'Episode 3', null, 63, 3, 390831, 134);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1311, 'Episode 4', null, 63, 4, 390832, 134);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1312, 'Angelina og Børge', null, 64, 1, 390868, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1313, 'Vibece og Dag Magne', 'Vibece og Dag Magne bor sammen i et hus i Dilling, har gode jobber og greie inntekter. Selv om den økonomiske situasjonen tilsynelatende er god, rekker ikke pengene til alle utgiftene de har. Etter flere år med skjødesløst pengebruk trengs det nå en opprydning i Vibeces økonomi, ellers er hun nødt til å selge barndomshjemmet sitt i Asker. Vibece har mistet kontroll over gjeld, betalingsanmerkninger og hemmelige private lån, og hun er fortvilet over uføret hun har havnet i. Luksusfellens økonomiske eksperter Magne Gundersen og Hallgeir Kvadsheim hjelper paret med å rydde opp i rotet.', 64, 2, 390869, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1314, 'Mona', 'Mona er en hardtarbeidende alenemor med to barn som ikke klarer å si nei til noen, det være seg barna, telefonselgere eller frivillig organisasjoner. Økonomien er rotete, hun har angst for å åpne regninger og gjemmer dem uåpnet i skuffer og skap. Kaoset toppes av hektiske dager med mange dyre impulskjøp. Mona ønsker å få råd til å ta til seg et fosterbarn, og vil gjerne rydde opp i rotet. Luksusfellens økonomiske eksperter Magne Gundersen og Hallgeir Kvadsheim skal hjelpe Mona med å få regningene ut fra skuffer og skap.', 64, 3, 390870, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1315, 'Espen og Tove', 'Espen og Tove har sammen startet tre familieforetak i utelivsbransjen. De to første bedriftene gikk konkurs og begge har tapte flere hundre tusen kroner. Tove risikerer å gå personlig konkurs etter at det siste foretaket gikk i vasken. Regningene hoper seg opp og Espen nekter å åpne postkassen i frykt for brev fra kreditorene. Paret drømmer om et stort bryllup, men det ser mørkt ut ettersom økonomien har blitt en stor hodepine for dem begge. De trenger hjelp av Luksusfellens økonomiske eksperter Magne Gundersen og Hallgeir Kvadsheim for å gjenvinne kontroll over økonomien.', 64, 4, 390871, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1316, 'Olav', null, 64, 5, 390872, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1317, 'Kim Daniel og Linn', 'Kim Daniel og Linn fra Tromsø er et samboerpar tidlig i tjueårene som venter sitt første barn. Til tross for sin unge alder har de allerede alt tenkelig utstyr til hjemmet, fin bil, fine ting og ikke minst det nyeste av tekniske og elektroniske innretninger. Kim Daniel simpelthen elsker duppeditter og teknisk utstyr, og i den leide leiligheten har han blant annet fjernkontroll til strømmen, surroundanlegg og en 42” TV. Kim Daniel har imidlertid dårlig økonomisk sans og sliter med inkassogjeld og betalings­anmerkninger. Han innser at det må bli orden på økonomien for familiens skyld, og ekspertene Hallgeir Kvadsheim og Magne Gundersen tar turen til Tromsø for å hjelpe paret med å komme på rett kjøl.', 64, 6, 390873, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1318, 'Hilde', 'Hilde fra Karmøy har gamblet bort mange penger på internett og har høy gjeld. På grunn av dette har hun og mannen ikke lenger felles økonomi. Hun er dessuten hektet på gardiner, tepper, pyntegjenstander og ting til hjemmet, og må smugle nye kjøp inn i huset. Det er viktig for Hilde at huset er i orden og da kjøkkenet nylig ble pusset opp lånte hun kr. 30 000,- av datterens konfirmasjonspenger for å kjøpe blant annet ny komfyr. I tillegg ble kjøkkenet utstyrt med nytt servise og kjøleskap med isbitmaskin. Hilde ser selv at hun trenger hjelp til å kutte ned på sitt høye forbruk. Hvis ikke vil familien aldri stole på henne igjen og huset må i verste fall selges. Ekspertene Hallgeir Kvadsheim og Magne Gundersen skal hjelpe henne med å endre på det usunne forbruksmønsteret.', 64, 7, 390874, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1319, 'Linda og Jon Runar', 'Linda og Jon Runar fra Tingvoll utenfor Kristiansund er et ungt par som lever i nuet uten tanke for konsekvensene. De har et stort forbruk og er materielt sett like etablerte som et middelaldrende par. De har lyst til å gifte seg og få barn, men med høye forbrukslån og en forrykende kredittkortbruk ser det ikke ut til at økonomien strekker til. De har dessuten angst for å snakke med banken sin, og trenger virkelig hjelp til å få tilbake kontrollen over økonomien. Ekspertene Hallgeir Kvadsheim og Magne Gundersen skal hjelpe dem med å endre på det usunne forbruksmønsteret.', 64, 8, 856721, 135);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1320, 'Thomas og Aina', 'Drømmen om å flytte ut på landet og leve med skog, tomt og god plass rundt seg har utviklet seg til et mareritt for Thomas og Aina. Høyt forbruk, netthandel og en rekke avbetalingskjøp har gjort at paret har mistet den økonomiske kontrollen. Thomas arbeider som håndverker, og inntjeningen holder ikke følge med de mange utgiftene. Dermed står de i fare for å miste huset, og økonomene Hallgeir og Magne forstår først omfanget av gjeldsproblemene når de begynner å gå inkassokravene etter i sømmene. Enorme forbrukslån med skyhøy rente begrenser spillerommet til Luksusfellen-teamet, og veien frem til økonomisk kontroll og budsjettbalanse er lang.', 64, 2, 856631, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1321, 'Whence og Levi', 'I kveldens episode av Luksusfellen møter vi Whence og Levi. De lever livets glade dager på Hvam, med et flott hus, fine middager og hyppige vennelag på deres regning. Lokalforretningen kjenner paret, og har en stående avtale om å ringe når det er ekstra godt kjøtt i ferskvaredisken. Men nå er livsførselen i ferd med å innhente dem, diverse oppussingsprosjekter står på hold og pensjonssparingen står i fare. Hallgeir og Magne står parat til å hjelpe, og utfordringen blir å forandre parets forbrukeratferd.', 64, 3, 856641, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1337, 'Nabil', 'Nabil kom til Norge fra Marokko for seks år siden, og ble overrasket over hvor lett det var å låne penger på kredittkort her i landet. Han tok opp mange lån og kjøpte seg både en leilighet han strengt tatt ikke hadde råd til og dyre ferieturer. I tillegg ble han fanget i en dårlig spiral av diverse former for spill finansiert av både private lån og forbrukslån. Nå har han over to millioner i gjeld, og Thor Christian og Lena kommer for å se hva de kan gjøre med situasjonen.', 64, 8, 1538831, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1323, 'Elisabeth og Stian', 'Stian fra Haugesund har hatt vekslende hell med sine investeringer, og har etter hvert innsett at ikke alt går til himmels. Sammen med kona Elisabeth har han levd over evne etter et par vellykkede investeringer, og de har ikke alltid klart å justere ned forbruket i trangere tider. Sammen har de en datter og et barn på vei. Dermed er behovet for forutsigbarhet og trygge rammer ekstra sterkt. Paret drømmer også om å kunne kjøpe seg en egen bolig en gang i fremtiden. Luksusfellens eksperter Hallgeir og Magne skal hjelpe til med å oppfylle drømmen.', 64, 5, 856661, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1324, 'Geir og Kirsten', 'Geir og Kirsten er samboere og sammen har de tre barn. Paret har begynt å kjenne på kroppen alle kreditorene som venter på betaling. En lang rekke bilkjøp og et par kostbare oppussingsprosjekter har ført paret ut i et økonomisk uføre de ikke ser utgangen på. Nye lån har betjent gamle lån slik at paret frem til nå har unngått betalingsanmerkninger og inkassokrav. Nå er tiden inne for en storstilt opprydning i økonomien, en jobb økonomene Hallgeir Kvadsheim og Magne Gundersen tar på seg.', 64, 6, 856671, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1325, 'Siv Mari', null, 64, 7, 856681, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1326, 'Espen og Natasja', 'Espen og Natasja har etablert seg tidlig, og har på kort tid skaffet seg både hus, bil og dyre møbler. Espen betjener lånene fra to boliger, og har samtidig tatt opp et heftig billån. Problemet nå er at lånene som finansierer alt går langt utover hva han evner å betjene. Særlig forkjærligheten for raske biler koster ham dyrt, og de økonomiske ekspertene Hallgeir og Magne står ovenfor en tøff utfordring når de skal rydde opp i den skakkjørte økonomien. Første oppgave blir å etablere sunne forbruksvaner i hverdagen.', 64, 8, 856691, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1327, 'Adrian og Jenny', 'Adrian og Jenny er unge, nyforelskede og suksessfulle på de fleste fronter. Adrian lever herrens glade dager i hovedstaden med mer enn solid inntekt fra selgerjobben. Problemet er at han i altfor stor grad lever over evne. Turer på byen, champagne og høy sigarføring har ført paret ut i et økonomisk kaos. De økonomiske vanskene gjør at paret ikke føler de får pleiet forholdet, og de ser ingen annen utvei enn å kalle på Luksusfellens eksperter Hallgeir Kvadsheim og Magne Gundersen.', 64, 9, 856701, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1328, 'Stig Andre og Laila', 'Stig Andre og Laila har etablert seg tidligere enn de kanskje var modne for og hadde økonomisk kapasitet til. Det har ført til flere betalingsanmerkninger og inkassokrav. Paret ligger etter med strømregninger, TV, bil og barnehageplass, og får ikke tatt opp mer lån. I prosessen har de mistet både oversikt og overskudd til å gjøre noe med den vanskelige situasjonen. De økonomiske ekspertene Hallgeir og Magne rykker inn for å hjelpe paret fra Brandbu, og deres første utfordring blir å lære bort sunnere forbruksvaner.', 64, 10, 856711, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1329, 'Stine og Jørn Kjetil', 'I sesongpremieren på Luksusfellen tar vi turen til Narvik, hvor det unge samboerparet Stine og Jørn Kjetil har havnet i gjeldsfella. Inntektene står ikke i stil til forbruket, og kredittkortgjeld og dyre forbrukslån gjør at de sliter med å klare de nødvendige husholdningsutgiftene. Økonomene Hallgeir og Magne rykker inn, og første steg for det unge paret er å skru ned forbruket, deretter begynne å åpne regninger. Drømmen er å gå fra økonomisk kaos til kontroll og å kunne arrangere et skikkelig bryllup uten å bekymre seg for regningen.', 64, 1, 2074521, 136);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1330, 'Gine', 'Gine er en travel tobarnsmor som har tråkket i Luksusfellen med begge beina – samtidig. Hun jobber som flyvertinne på internasjonale ruter og utsettes altfor ofte for fristelser i shoppinggatene i Roma, London og Paris. Ser hun noe hun har lyst på lar hun gjerne kredittkortet løse den kortsiktige pengeknappheten. Som nordmenn flest bruker Gine kreditt- og kjøpekortene sine aktivt. Det er jo bare å dra kortet, sier hun, og glemmer at gjelden vokser hver gang hun bruker dem. Gines bruk av kredittkort og stadig voksende gjeld har gjort at hun nå står i fare for å miste hus og hjem om ikke hun gjennomfører en drastisk snuoperasjon. Hun har derfor bedt Luksusfellens økonomer om hastehjelp.', 64, 1, 1538761, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1331, 'Solfrid og Adi', 'Solfrid og Adi er et ungt par som bor med sine to barn på idylliske Voss. Adi utdanner seg til grafisk designer og Solfrid er hjemme med deres ti uker gamle baby. Paret har rotet til økonomien med å kjøpe det de har hatt lyst på uten å ha penger til å betale. Det meste er kjøpt på avbetaling eller med kredittkort og nå står de foran en flodbølge av inkassokrav. De nye økonomiekspertene Lena Heimstad og Thor Christian Moen tar turen til Voss for å se om de kan hjelpe det unge paret med å rydde opp i økonomien.', 64, 2, 1538771, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1332, 'Tom', 'Tom er en ung mann som har levd over evne i mange år. Uheldige omstendigheter rundt kjøp og salg av bolig og biler, i tillegg til flittig kredittkortbruk har gjort at han nå står på randen av en økonomisk avgrunn. Nattesøvnen er borte og Tom forfølges av sin stadig tyngre gjeld. Sammen med sin forlovede er han nå bekymret for at de snart kan miste leiligheten. Luksusfellens økonomer Hallgeir Kvadsheim og Christian Vennerød er satt på saken, og tar turen til Asker for å løse floken på best mulig vis.', 64, 3, 1538781, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1333, 'Eva Lill', 'Eva Lill er en ambisiøs frisør som har satset alt hun eier og har på å starte sin egen frisørsalong i Oslo. Salongen drives som et enkeltpersonsforetak og hun har derfor gjort den klassiske tabben, nemlig å blande sin personlige økonomi med salongens økonomi. Skattekrav og privat gjeld gjør at Eva Lill nå bare er noen dager fra å gå konkurs og å måtte legge ned sitt hjertebarn – frisørsalongen. Hallgeir Kvadsheim og Christian Vennerød må trå til, men er det allerede for sent?', 64, 4, 1538791, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1334, 'Mariann', 'Mariann er skilt og har to barn, og hun sliter med å få endene til å møtes med kun en inntekt. Det er mange som opplever at det er vanskelig å nedjustere forbruket etter et samlivsbrudd, og Mariann bor i en altfor dyr leilighet og opererer med samme forbruk som da hun hadde det økonomiske ansvaret for en familie basert på to inntekter. Nå må hun snu på forbruksvanene, og Lena og Thor Christian tar turen til Kristiansand for å hjelpe henne.', 64, 5, 1538801, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1335, 'Sean Helge', 'Sean Helge driver en erotisk butikk vegg-i-vegg med Filadelfiamenigheten i Kristiansand. Han driver et enkeltpersonsforetak og har gjort den klassiske feilen å blande sin personlige økonomi med butikkens økonomi. Dyre utelivs- og reisevaner og rot i foretaket har gjort den økonomiske situasjonen vanskelig og nå trenger han hjelp av Luksusfellens økonomiske eksperter Lena Heimstad og Thor Christian Moen.', 64, 6, 1538811, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1336, 'Tommy og Bodil', 'Tommy og Bodil i Bergen er et ungt par som befinner seg i en kinkig situasjon. Som i mange andre forhold har den ene parten dratt med seg en kjedelig bagasje i form av gjeld og rotete økonomi. Det skaper problemer for dem begge. Tommy har hatt et stort forbruk de senere år, og han har både kredittkortgjeld og forbrukslån. Pengene har gått til alt fra ATV-firhjulinger til gitarer og tekno-duppeditter. Paret leier i dag en del av hennes foreldres gård utenfor Bergen og drømmer om å kunne kjøpe et eget sted. Denne drømmen overskygges nå av trusselen om at Tommy kan gå personlig konkurs. Hallgeir Kvadsheim og Christian Vennerød tar saken.', 64, 7, 1538821, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1373, null, null, 64, 1, 4290758, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1374, null, null, 64, 2, 4291131, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1375, null, null, 64, 3, 4295922, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1376, null, null, 64, 4, 4305222, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1338, 'Torbjørn', 'Torbjørn fra Stord er en klassisk rocker, som elsker å reise på metal-festivaler. Hans største kjærlighet i tillegg til musikken er hunden og en Dodge Ram-bil. Torbjørn har ikke kontroll på pengene, tar ting som det kommer og tenker ikke over hvilke økonomiske konsekvenser hans valg får. Nå er han imidlertid redd for å miste hunden og den flotte bilen, og har bedt Hallgeir Kvadsheim og Christian Vennerød om å ta turen for å få skikk på hans økonomiske situasjon.', 64, 9, 1538841, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1339, 'Elisabeth og Kjell', 'Elisabeth og Kjell har vært sammen i 14 år og er to skikkelige livsnytere. Familien betyr alt og de spanderer mer enn gjerne på både barna og alle barnebarna. Trenger familien noe stiller Kjell og Elisabeth opp og hjelper med alt de kan, selv om det må betales på kreditt. Deres personlige forbruk er kolossalt og de tar gjerne en ekstra Thailandstur når de kjenner seg slitne av hverdagslivet. Etter flere år med kjøpefest har kredittkortene nå blitt overopphetet og paret har blitt innhentet av den økonomiske virkeligheten. Thor Christian og Lena tar turen for å se hva de kan gjøre med situasjonen.', 64, 10, 1538851, 137);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1340, 'Erik', 'Erik fra Oppsal i Oslo opplever at han har mistet grep over økonomien sin. Til tross for at han tjener bra med penger, så får han ikke endene til å møtes mot slutten av måneden. Dyre reiser, luksusgjenstander og et generelt høyt forbruk har ført til at Erik har en rekke kreditorer og smålån. Nå kommer Luksusfellens eksperter for å rydde opp. Hallgeir Kvadsheim og Magne Gundersen vet hva som skal til for å få orden på budsjettet, men for å komme i mål kreves det en voldsom innsats også fra Erik selv.', 64, 1, 1538871, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1341, 'Thomas og Annelie', 'I Horten bor samboerparet Thomas og Annelie. Med jobb og to barn er hverdagen hektisk, men nå stjeler økonomien mer og mer av parets dyrebare tid. Gammel gjeld begynner å bli vanskelig å håndtere, og faren for en personlig konkurs er overhengende. For å realisere drømmen om å kjøpe egen bolig, og en dag bli gjeldfrie, trenger de hjelp. Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød tar saken, men for å komme i mål kreves det hard innsats fra Thomas og Annelie.', 64, 2, 1538881, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1342, 'Jan-Erik og Trude', 'Jan-Erik og Trude fra Narvik opplever som mange andre familier at det er vanskelig å holde orden på økonomien. Med et stort huslån, to biler, hytte og dyre hobbyer er oversikten borte, og resultatet er at de ofte bruker mer penger enn de strengt tatt har råd til. Situasjonen er prekær og de risikerer å miste huset. Det er utgangspunktet når Luksusfellens eksperter Hallgeir Kvadsheim og Magne Gundersen reiser nordover. Deres utfordring blir å få Jan-Erik og Trude til å justere ned forbruket, gjenvinne den økonomiske kontrollen og få paret til å etterleve et realistisk månedsbudsjett.', 64, 3, 1538891, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1343, 'Thomas og Fredrik', 'I årets første episode av Luksusfellen møter vi Thomas og Fredrik (begge 20). De leier en tre-romsleilighet i Bogstadveien, hvor de lever herrens glade dager. En hverdag med mye fest og høy champagneføring koster penger, og de to gutta sparer ikke på noen ting når de skal ut og more seg. Restaurantbesøk, limousintransport og høye barregninger gjør at Luksusfellens eksperter Hallgeir Kvadsheim og Magne Gundersen nå står på døra. De skal sørge for at Thomas og Fredrik forstår hvor mye livsførselen deres faktisk koster, og at de unge gutta må endre forbruksmønster før det er for seint.', 64, 4, 1985341, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1344, 'Marlen', 'Marlen fra Eidsvoll drev tidligere en storslått brudesalong, men måtte legge ned driften. Nå sitter hun igjen med en rekke inkassokrav og frykten for å måtte selge hytta hun er så glad i. Hun drømmer om å finne seg et nytt sted å bo, men trenger hjelp til å få styr på økonomien igjen. Den hjelpen kommer fra Luksusfellens eksperter Christian Vennerød og Hallgeir Kvadsheim. Men skal de redde hytta og Marlens økonomi må hun selv bidra mye. Første steg er å endre forbruksvanene.', 64, 5, 1985371, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1345, 'Trude', 'Trude fra Hakadal måtte legge ned dansestudioet sitt på grunn av en nakkeskade, og lever på stønader mens hun omskoleres. Det er ikke lukrativt, og et huslån på nærmere to millioner gjør at hun frykter å måtte selge drømmeboligen sin. Ekssamboeren står som medlånetager, og den dagen han ønsker å ta opp et nytt lån, risikerer Trude å måtte selge. Det blir en tøff kamp for å beholde huset, men hun får hjelp av Luksusfellens Hallgeir Kvadsheim og Magne Gundersen.', 64, 6, 1985381, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1346, 'Silje og Nils Bjarte', 'På Ågotnes utenfor Bergen bor ekteparet Silje og Nils Bjarte. Med hus, to barn og en hektisk hverdag sliter de med oversikten over økonomien. Det har resultert i en omfattende og stadig voksende inkassogjeld. De ser at denne gjelden kan hindre drømmen om å fortsette å bo i huset, som de på sikt ønsker å pusse opp. Drømmen om en real ferie med barna har de også, men skal den holdes levende trenger de hjelp fra Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød.', 64, 7, 1985391, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1347, 'Jane', 'Jane fra Oslo sliter med høy gjeld etter en lengre periode med høyt forbruk. Kredittgjelden har vokst seg så stor at hun ikke lenger orker å åpne inkassobrevene sine. Nå frykter hun at hun må selge leiligheten, og at hun fullstendig mister kontrollen på økonomien. Kontroll på økonomien er nettopp det Luksusfellens eksperter kan hjelpe til med. Hallgeir Kvadsheim og Magne Gundersen tar saken, og gjør det de kan for at Jane kan realisere drømmen om å gå fra økonomisk kaos til kontroll.', 64, 8, 2074051, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1348, 'Wera og Ilyas', 'Wera og Ilyas fra Oslo kjenner på kroppen at det koster penger å ha barn, bil og god plass. Det har ført til at kredittkortet ofte blir løsningen, men i det lange løp fører det til problemer for paret. Økonomiske vansker i en fra før av hektisk hverdag tærer på kreftene, og det må hjelp fra utenforstående til for å løse vanskene. Den hjelpen bidrar Luksusfellens eksperter med, når de oppsøker Wera og Ilyas for å se på saken.', 64, 9, 2074061, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1349, 'Cato', 'Cato fra Sellebakk betjener et omfattende huslån alene, samtidig som økonomien lider under et større inkassolån forårsaket av gambling. Prosessoperatøren ser varsellampene blinke, og nå trenger han hjelp for å komme ut av uføret. Først og fremst må han slutte å spille, deretter må han gjenvinne oversikten over den kaotiske økonomien. Hjelpen kommer fra Luksusfellens eksperter Christian Vennerød og Hallgeir Kvadsheim.', 64, 10, 2074111, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1350, 'Kjetil', 'Yrkessjåføren Kjetil fra Holmestrand begynner å kjenne på kroppen at forbrukslånet på over en halv million kroner preger hverdagen. Faren er at han blir slått personlig konkurs, og grunnen er en årrekke med impulsivt forbruk. Røyk, mat fra bensinstasjoner og ikke minst hyppige bilbytter har styrt økonomien helt ned i grøfta. Men Hallgeir Kvadsheim og Magne Gundersen fra Luksusfellen ønsker å bidra til at Kjetil gjenvinner kontrollen.', 64, 11, 2215611, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1377, null, null, 64, 5, 4314651, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1378, null, null, 64, 6, 4314652, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1379, null, null, 64, 7, 4314654, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1380, null, null, 64, 8, 4323925, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1381, null, null, 64, 9, 4329346, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1382, null, null, 64, 10, 4334839, 141);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1383, null, null, 64, 1, 4391707, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1384, null, null, 64, 2, 4391708, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1385, null, null, 64, 3, 4396360, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1386, null, null, 64, 4, 4403813, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1387, null, null, 64, 5, 4403814, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1388, null, null, 64, 6, 4407126, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1351, 'Joakim og Jeanette', 'På Åmot bor Joakim og Jeanette på Joakims gutterom. Der ønsker de ikke å bli boende for lenge, men skal de realisere drømmen om et eget sted å bo må de få skikk på økonomien. De siste årene har Joackims appetitt på biler kostet mye penger, og i en alder av 21 år har han hatt hele 42 stykker. Nå må han fokusere på sparing, planlegging og budsjett skal han ha muligheten til å flytte ut og kanskje også ta en videre utdannelse. Joakim og Jeanette er klare for å brette opp ermene, og hjelp til det får de av Luksusfellens økonomiske eksperter.', 64, 12, 2215621, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1352, 'Asgeir', 'Asgeir fra Trondheim lever herrens glade dager, og unner seg gjerne god mat og champagne når han er ute på byen. Med solid inntekt har han i utgangspunktet råd til en noe påkostet livsstil. Men for Asgeir overstiger utgiftene inntektene, og nå står han i fare for å miste leiligheten sin. Økonomene fra Luksusfellen må prøve å stable på beina en økonomi som nå har gått helt ut av kontroll. Første steg blir å justere ned det høye forbruket.', 64, 13, 2215631, 138);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1353, 'Janne og Thomas', 'For to år siden kjøpte Janne og Thomas i Vestfossen et hus som måtte pusses opp. De økonomiske problemene tårnet seg derimot opp på grunn av Thomas sin gamle kredittkortgjeld. Thomas hadde en gjeld på over 600 000 kroner før paret startet på oppussingsprosjektet, og han aner ikke hvordan han skal få betalt ned gjelden. Thomas gjemte også unna regninger for Janne og dette førte til at hun satte hengelås på postkassen. Forholdet deres lider under de økonomiske problemene, og de trenger hjelp til å få orden på Thomas sin gamle gjeld og endre hans syn på pengeforbruk. Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter reiser til Vestfossen for å hjelpe paret med å få økonomien på rett kjøl.', 64, 1, 4161639, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1354, 'Anders', '23 år gamle Anders har levd et liv som ikke står i forhold til inntekten, og har allerede påført seg en kredittgjeld på 400-500 000 kroner. Pengene har han brukt på lek og moro. Anders har unnlatt å betale tilbake pengene han har lånt, og dette har ført til at han har betalingsanmerkninger, lønnstrekk og at banken har sperret kontoen hans. Anders må derfor dele både bankkort og konto med samboeren Benedikte. Det er ikke bare økonomien Anders bekymrer seg for, han er også redd for å miste Benedikte på grunn av situasjonen han har endt i. Hvis Anders ikke tar tak i sin økonomiske situasjon kommer ikke Benedikte til å klare å leve sammen med ham lengre. Anders har derfor tatt kontakt med Luksusfellen for å ordne opp i livet sitt.', 64, 2, 4161644, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1355, 'Elisabeth', 'Elisabeth er en kreativ tobarnsmor fra Bergen som bruker pengene sine på klær, sminke og alt annet enn regninger. Hun er en impulsiv shopper som trøster seg med å kjøpe noe til seg selv om livet butter imot, regningene blir lagt vekk i skapet. Nå er Elisabeths forbruk ute av kontroll og hun ligger etter med de faste utgiftene, noe som har ført til varsel om tvangssalg. Postkassen har blitt hennes verste fiende, og hun har fullstendig mistet oversikten over egen økonomi. Hvis Elisabeth fortsetter slik så mister hun leiligheten sin, derfor har Luksusfellens eksperter tatt saken.', 64, 3, 4161645, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1356, 'Arvid', 'Arvids økonomi er en tikkende bombe. Han har ikke betalt regninger på flere år, mange regninger har gått i søpla og resten er trygt oppbevart i en koffert. Han har gitt blaffen og heller brukt pengene på god mat og på byen i Arendal. Fordi Arvid har unnlatt å betale regninger har han fått namsmannen på nakken. Arvids samboer Jeanette trodde at han hadde mye penger da de møttes, og fikk sjokk da hun fant alle de uåpnede regningene hjemme hos ham. Arvid drømmer om å eie eget hus og egen bil, men drømmen virker uoppnåelig da han er helt uvitende om hvor mye penger han skylder. Arvids økonomiske problemer tærer på forholdet til Jeanette, og derfor har han søkt Luksusfellens eksperter om hjelp til å få orden på økonomien.', 64, 4, 4161647, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1357, 'Renate', 'Renate er selvstendig næringsdrivende og leier et lite hus på Nesøya utenfor Oslo. Hun har en allsidig yrkeskarriere bak seg, og har nylig sagt opp som butikksjef for å realisere drømmen om å jobbe som coach innen selvutvikling på heltid. Renate brukte tidligere mye penger på både uteliv og shopping, og hun betalte med kredittkort og forbrukslån – uten å tenke på konsekvensene. Selv estimerer hun gjelden til å være rundt en halv million kroner, noe hun ikke klarer å håndtere med sin ustabile inntekt som coach. Renate blir nå nektet både lån og kredittkort, og i regningsbunken ligger brev fra både politiet og namsmannen. Stor gjeld og varierende inntekt setter en stopper for drømmen om å eie egen leilighet, og hun frykter at hun må gi opp som selvstendig næringsdrivende. Luksusfellens eksperter, Hallgeir Kvadsheim og Christian Vennerød, tar turen til Nesøya for å gjøre et forsøk på å hjelpe Renate ut av gjeldsknipa.', 64, 5, 4161649, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1358, 'Phillip og Marianne', 'Småbarnsforeldrene Phillip og Marianne fra Moss er på dypt vann på grunn av Phillips forbruksgjeld og ufornuftige bruk av penger. Han har ikke betalt de viktigste regningene sine på 15 år, og nå ser han konsekvensene. Inkassogjelden har vokst til flere hundre tusen, og den voksende regningsbunken har begynt å tære på forholdet hans til Marianne. Phillip bruker penger på elektronikk og duppeditter, han kjøper klokker og biler som han med god intensjon skal selge videre. Marianne frykter at den økonomiske situasjonen ødelegger forholdet deres og hun vil ikke gifte seg med Phillip før han har ordnet opp i økonomien sin. Derfor har han kontaktet Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter.', 64, 6, 4161650, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1359, 'Sevil', 'Sevil har kjøpt leilighet på Skøyen i Oslo, men det har begynt å koste mer enn det smaker. Hun makter ikke de store utgiftene på boliglånet sitt, og løsningen har blitt kredittkort. Med kredittkortet bruker Sevil penger på impulsiv shopping, på uteliv og hun betaler også regninger med kortet. I tillegg bruker hun mye penger på feriereiser og blir rastløs hvis hun ikke har vært på tur på tre måneder. Nå er Sevil redd for at hun må flytte til et annet sted, fordi hun disponerer pengene sine helt feil. Derfor er det på tide at hun får besøk av Luksusfellens eksperter.', 64, 7, 4161651, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1360, 'Vedis og Michael', 'Vedis er fra Island og Michael er fra Danmark, men de har bosatt seg i Bærum på grunn av jobb. Med venner og familie i Danmark og på Island blir det brukt mye penger på reising og shopping. Vedis elsker tax-free-butikkene og hun kjøper det hun har lyst på så lenge hun har penger på kontoen. For å finansiere livsstilen har Vedis flere kredittkort. Fordi paret har regninger i tre ulike land, er det vanskelig å holde orden på alt, og forbruksgjelden bare øker. Michael og Vedis eier en leilighet i København som de frykter vil bli solgt på tvangsauksjon, hvis de ikke får ordnet opp i den rotete økonomien sin. Derfor har de bedt om hjelp fra Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød.', 64, 8, 4161653, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1389, null, null, 64, 7, 4415927, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1390, null, null, 64, 8, 4422658, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1391, null, null, 64, 9, 4422659, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1392, null, null, 64, 10, 4427413, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1393, null, null, 64, 11, 4433679, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1394, null, null, 64, 12, 4433683, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1395, null, null, 64, 13, 4437239, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1396, null, null, 64, 14, 4443168, 142);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1397, null, null, 64, 1, 4640537, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1398, null, null, 64, 2, 4640538, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1399, null, null, 64, 3, 4645294, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1361, 'Stian', '21 år gamle Stian er en livsnyter som har store økonomiske problemer grunnet overforbruk. Han er opptatt av å se bra ut og bruker flere tusen i måneden på klær og hos frisøren. Han bruker også mye penger på duppedingser og på å gå på byen. Denne livsstilen passer ikke inntekten hans som renholder, og han har nå en gjeld på flere hundre tusen kroner. Å åpne postkassen har blitt et mareritt for Stian, og han forfølges av brev og telefonopprigninger fra de ulike kreditorene. Stian orker ikke dette lenger, men drømmer om å være en normal ungdom med et sunt forhold til penger. For å få kontroll over sitt usunne pengeforbruk har han kontaktet Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter.', 64, 9, 4161655, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1362, 'Tom Jørgen', 'Tom Jørgen fra Ålesund er far og samboer, men er mye borte hjemmefra på grunn av sin jobb som fisker. Han tjener gode penger på havet, mens samboeren Camilla er hjemmeværende med datteren. Tom Jørgen er gavmild når han kommer hjem fra lange fisketurer og i tillegg bruker han mye penger på bilinteressen sin, dermed forsvinner pengene fort. Drømmen er å kjøpe noe eget, men Tom Jørgen har flere hundre tusen i forbruksgjeld og inkassokrav, og han har ingen oversikt over økonomien sin. Han får ikke lån i banken på grunn av betalingsanmerkninger og har forsøkt å ordne opp i økonomien sin tidligere uten å lykkes. Dette er en sak for Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter.', 64, 10, 4161657, 139);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1363, 'Morten', 'Morten Nystuen er redd for at han aldri skal få seg en kjæreste eller familie på grunn av den økonomiske situasjonen han har satt seg i. Han jobber som DJ noen ganger i uken, men mens Morten danser med musikken øker gjelden i samme takt. Morten skylder nærmere en million kroner og mye er gjeld til staten på grunn av manglende betaling av skatt. Han har et enormt forbruk både på uteliv og klær, men setter ikke av penger til skatten. Mortens gjeld er enorm og han eier ingenting av verdi, så Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter får en tøff oppgave med å hjelpe ham.', 64, 1, 4167741, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1364, 'Jinn og Frank', 'Etter flere år med overforbruk kom brevet fra Namsmannen i postkassen til Jinn og Frank. Ekteparet har økt de faste utgiftene ved å stadig ta opp nye lån og pengene har de brukt på ny bil, seilbåt, reise og klær på kjøpekonto. Nå klarer de verken å betjene gjeld eller regninger og huset er pantsatt til pipa. Ekteparet har allerede gått fra hverandre èn gang på grunn av de økonomiske problemene, nå håper de at Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter kan hjelpe dem med å redde ekteskapet en siste gang.', 64, 2, 4167742, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1365, 'Roger', 'Roger fra Horten kaller seg Ducati-boy og leker seg gjennom livet med motorsykkel og RC-biler. Han har et enormt forbruk på hobbyer, men betaler ingen regninger. Nå står Roger i fare for å miste motorsykkelen som betyr så myefor ham og han har fått varsel om utkastelse fra leiligheten han leier. Når Luksusfellens eksperter kommet til Horten er det èn uke til Roger står uten bosted. Men kan han reddes? Dette blir en krevende sak for Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød, aldri har de stått ovenfor en mann med så akutte problemer.', 64, 3, 4167743, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1366, 'Ann-Kristin', 'Ann-Kristin elsker det urbane livet i Oslo med shopping og uteliv. Samtidig som hun skåler i cava med venninnene, har hun store problemer med å få kontroll på økonomien. Det hele toppet seg da Ann- Kristin på sensommer i fjor ble skadet i en trafikkulykke og sykemeldt. Nå er inntekten redusert, men Ann Kristin klarer likevel ikke å kutte ned det høye forbruket. På knappe tre måneder har hun brukt nesten 120 000 kroner som hun ikke har, og forbruket finansierer hun med et lån med moren som kausjonist.', 64, 4, 4167744, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1367, 'Therese og Rune', 'Therese og Rune har på tre år kjøpt leilighet, fått barn og giftet seg. Alt ligger til rette for et lykkelig samliv, men med seg på lasten har de en forbruksgjeld på 870 000 kroner. For i samme periode har paret brukt kredittkort og forbrukslån for å reise, shoppe og pusse opp rekkehusleiligheten. Det er Therese som tar seg av det økonomiske og Rune tror hun har full kontroll, men med både bolig- og billån i tillegg, klarer ikke ekteparet å betjene forbruksgjelden. Nå er de redd for å miste rekkehusleiligheten som er en trygg base for parets barn. Kjøpefesten er over og Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød må få Therese og Rune til å innse at begge må involveres i den økonomiske hverdagen for at de skal lykkes.', 64, 5, 4179885, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1368, 'Jørgen', 'Jørgen har nettopp blitt pappa og ønsker å være et godt forbilde for datteren, men på det økonomiske planet styrer Jørgen mot grøfta. Luksusfellens eksperter mener Jørgen utnytter sine nærmeste, allerede en gang har faren betalt ut Jørgens inkassogjeld på 90 000 kroner. Likevel fortsetter Jørgen overforbruket og har opparbeidet seg nye inkassosaker og gjeld til familie og venner.', 64, 6, 4179886, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1369, 'Kristina', 'Kristina er en firebarnsmor med kjøpedilla. Hun kjøper ofte gaver til både barna og seg selv, men har samtidig ikke penger til å betale strømregninger og andre viktige ting. Nå bugner huset over av ting og leker, men Kristina klarer ikke å betjene lånene. Hun unngår inkassokrav med å betale på kredittkortene den ene dagen, for så å ta ut de samme pengene kort tid etter. Av kommunen har hun blitt rådet til å selge huset for å dekke gjelden. Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød må få Kristina til å innse at gavekjøp og overforbruk må stoppes, for det barna virkelig trenger er et trygt sted å bo.', 64, 7, 4179887, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1370, 'Camilla og Daniel', 'Camilla og Daniel drømmer om å kjøpe en egen leilighet til seg og sin ett år gamle datter. Paret har nettopp underskrevet kjøpskontrakt på drømmeleiligheten, men Daniels forbruksgjeld står i veien for at paret kan få lån. På et tidspunkt hadde Daniel så mange uåpnede brev fra kreditorer at han satte fyr på alle, men gjeldsproblemene forsvant ikke av den grunn. Nå håper de at Luksusfellens eksperter Hallgeir Kvadsheim og Elin Ørjasæter kan hjelpe dem med Daniels gamle gjeld.', 64, 8, 4179888, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1371, 'Raymond', 'Raymond har store muskler og kan trekke lastebiler om han vil, men når det kommer til økonomi så er han ikke like sterk. Til tross for sin unge alder har Raymond levd et økonomisk liv som en 40-åring. Han har byttet bil flerfoldige ganger og kjøpt alt han har hatt lyst på uten å spare opp til noe, betalingsmåten har vært forbrukslån og kredittkort. Når Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød kommer er det lenge siden Raymond har klart å betale regninger. Nå er han redd for å ikke kunne gi sønnene sine det livet han ønsker på grunn av sin økonomiske situasjon.', 64, 9, 4194557, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1372, 'Patrick og Veronica', 'Patrick og Veronica startet samlivet med å kjøpe en sofa på avbetaling og 10 år etter betaler de fortsatt på sofalånet. Patrick styrer økonomien i familien og hver måned bruker han familiens ulike kredittkort for å få pengene til å strekke til. Samtidig tror Veronica at hun kan kjøpe det hun vil fordi Patrick sier det er greit, men Patrick har ikke kontroll og har mistet nattesøvnen. Nå er ekteparet redde for at de må selge leiligheten for å bli kvitt de 400 000 kronene de har i forbruksgjeld. Når Luksusfellens eksperter Hallgeir Kvadsheim og Christian Vennerød kommer til Nordby må ekteparet innse at de må slutte å bruke penger de ikke har, og at begge må være involvert i økonomien fremover.', 64, 10, 4200901, 140);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1401, null, null, 64, 5, 4656616, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1402, null, null, 64, 6, 4660064, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1403, null, null, 64, 7, 4665383, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1404, null, null, 64, 8, 4665384, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1405, null, null, 64, 9, 4680950, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1406, null, null, 64, 10, 4687934, 143);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1407, null, null, 64, 1, 4777245, 144);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1408, null, null, 64, 2, 4777630, 144);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1409, null, null, 64, 3, 4777631, 144);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1410, null, null, 64, 4, 4777632, 144);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1411, null, null, 64, 5, 4777633, 144);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1412, '1923 - 1933', null, 65, 1, 390876, 145);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1413, '1933 - 1941', null, 65, 2, 390877, 145);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1414, '1942 - 1955', null, 65, 3, 390878, 145);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1415, null, null, 65, 1, 1768881, 146);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1416, null, null, 65, 2, 1768891, 146);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1417, null, null, 65, 3, 1768901, 146);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1418, 'Making Of', null, 65, 4, 2821041, 146);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1419, 'Bombs at kilometre 92', null, 66, 1, 390889, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1420, 'Red roses, Black death', null, 66, 2, 390890, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1421, 'The new Partner', null, 66, 3, 390903, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1422, 'Blood and Thunder', null, 66, 4, 390904, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1423, 'Death at 100 km/h', null, 66, 5, 390905, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1424, 'The old one and the young one', null, 66, 6, 390906, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1425, 'Fake police beacon', null, 66, 7, 390907, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1426, 'The Samurai', null, 66, 8, 390908, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1427, 'End of the line for everybody', null, 66, 9, 390909, 147);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1428, 'Abandoned', null, 66, 1, 390910, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1429, 'Cold-blooded', null, 66, 2, 390911, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1430, 'Shotgun', null, 66, 3, 390912, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1431, 'Emergency Landing', null, 66, 4, 390913, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1432, 'The Assassination', null, 66, 5, 390914, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1433, 'The prodigal daughter', null, 66, 6, 390915, 148);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1434, 'Crash', null, 66, 1, 406481, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1435, 'Dress rehearsal', null, 66, 2, 406482, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1436, 'Child Problems', null, 66, 3, 406483, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1437, 'Brake failure', null, 66, 4, 406484, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1438, 'Revenge is sweet', null, 66, 5, 406485, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1439, 'Robber baron', null, 66, 6, 406486, 149);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1440, 'Lonesome victory', null, 66, 8, 406488, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1441, 'Fuel', null, 66, 1, 406506, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1442, 'Lethal landing', null, 66, 2, 406507, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1443, 'Burning ambition', null, 66, 3, 406508, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1444, 'Shadow warrior', null, 66, 4, 406509, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1445, 'Taxi 541', null, 66, 5, 406510, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1446, 'The Judge', null, 66, 6, 406511, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1447, 'The death of a boy', null, 66, 7, 406512, 150);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1448, 'A leopard goes postal', null, 66, 1, 406498, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1449, 'The last chance', null, 66, 2, 406499, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1450, 'Deadly Sand', null, 66, 3, 406500, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1451, 'In the crosshairs', null, 66, 4, 406501, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1452, 'Lost in the Fog', null, 66, 5, 406502, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1453, 'The hitchhiker', null, 66, 6, 406503, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1454, 'The dead witness', null, 66, 7, 406504, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1455, 'The Joker', null, 66, 8, 406505, 151);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1456, 'Death trip on line 834', null, 66, 1, 433983, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1457, 'Fever dreams', null, 66, 2, 433984, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1458, 'Death from the engine', null, 66, 3, 433985, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1459, 'Between a rock and a hard place', null, 66, 4, 433986, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1460, 'Crash commerce', null, 66, 5, 433987, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1461, 'Love till death', null, 66, 6, 433988, 152);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1462, 'Lost memories', null, 66, 1, 434221, 153);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1463, 'Janina', null, 66, 2, 434222, 153);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1464, 'The mole', null, 66, 3, 434223, 153);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1465, 'Checkmate', null, 66, 4, 434224, 153);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1466, 'Schumann''s big chance', null, 66, 5, 434225, 153);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1467, null, null, 66, 1, 490731, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1468, null, null, 66, 2, 490741, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1469, null, null, 66, 3, 490751, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1470, null, null, 66, 4, 490761, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1471, null, null, 66, 5, 530661, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1472, null, null, 66, 6, 958061, 154);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1473, null, null, 66, 3, 508461, 155);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1474, 'Easy prey', null, 66, 1, 629091, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1475, 'Without a back door', null, 66, 2, 629101, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1476, 'Heinrich and Paul', null, 66, 3, 629111, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1477, 'In death''s sights', null, 66, 4, 629121, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1478, 'Sabotage', null, 66, 5, 629131, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1479, 'The death list', null, 66, 6, 629141, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1480, 'Undercover', null, 66, 7, 629151, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1481, 'Familiar enemy', null, 66, 8, 629161, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1482, 'The witness', null, 66, 9, 629171, 156);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1483, 'Hunt', null, 66, 1, 629241, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1484, 'Deadly craft', null, 66, 2, 629251, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1485, 'In the crossfire', null, 66, 3, 629261, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1486, 'Defenceless', null, 66, 4, 629271, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1487, 'Till the bitter end', null, 66, 5, 629281, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1488, 'The perfect murder', null, 66, 6, 629291, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1489, 'Father and son', null, 66, 7, 629301, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1490, 'The clique', null, 66, 8, 629311, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1491, 'Late revenge', null, 66, 9, 629321, 157);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1492, 'Death of a reporter', null, 66, 1, 629401, 158);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1493, 'A deep drop', null, 66, 2, 629411, 158);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1494, 'Sold down the river', null, 66, 3, 629421, 158);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1495, 'Shadows of the past', null, 66, 4, 629431, 158);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1496, 'The parting', null, 66, 5, 629441, 158);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1497, 'Baptism of fire', null, 66, 1, 629511, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1498, 'False signals', null, 66, 2, 629521, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1499, 'Against time', null, 66, 3, 629531, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1500, 'Family ties', null, 66, 4, 629541, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1501, 'Deadly cargo', null, 66, 5, 629551, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1502, 'The impact', null, 66, 6, 629561, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1503, 'Rock''n Roll', null, 66, 7, 629571, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1504, 'Countdown', null, 66, 8, 629581, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1505, 'The detective', null, 66, 9, 629591, 159);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1506, 'Truckstop', null, 66, 1, 635931, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1507, 'Foul play', null, 66, 2, 635941, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1508, 'Brief bliss', null, 66, 3, 635951, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1509, 'A matter of honour', null, 66, 4, 635961, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1510, 'The racing barn', null, 66, 5, 635971, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1511, 'The little one', null, 66, 6, 635981, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1512, 'Black sheep', null, 66, 7, 635991, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1513, 'Black Out', null, 66, 8, 636001, 160);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1514, null, null, 66, 2, 1041031, 161);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1515, null, null, 66, 1, 1041041, 161);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1516, null, null, 66, 1, 1047531, 162);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1517, null, null, 66, 2, 1049961, 162);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1518, null, null, 66, 3, 1213581, 162);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1519, 'Lesson 1: Minutes from Death', 'In a series of master classes, Doctors Gunther von Hagens and John Heyworth recreate serious injuries on human bodies. They reveal what happens to the body when faced with assaults or accidents, and show what doctors, nurses and first-aiders can do, working against the clock, to try to preserve life.', 67, 1, 4020151, 163);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1520, 'Lesson 2: Massive Blood Loss', 'Doctors Gunther von Hagens and John Heyworth reveal the effect of massive blood loss from different parts of the body and show what doctors, nurses and first-aiders can do, working against the clock, to try to preserve life.', 67, 2, 4020161, 163);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1521, 'Lesson 3: Violent Impact', 'Gunther and his team discuss and demonstrate the problems affecting the number-one priority for doctors in an emergency room: the airway.', 67, 3, 4020171, 163);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1522, 'The Gunther von Hagens Body Appeal', null, 67, 1, 4020181, 164);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1523, 'Liars', 'It´s been estimated that there are 111 different types of lie. Or did someone just make that up?  Some good, some bad, and a few just plain evil. Individually, we each tell as many as 15 porkies a week (is that all?),and are on the receiving end of even more. And yet despite the fact lying is everywhere, few other human traits are so little understood.

In this episode, Exposed attempts to unravel some of the mysteries surrounding this most powerful and seemingly instinctive human trait.', 68, 1, 390899, 165);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1524, 'Heartbreak', 'We´ve all been there. It can cut like a knife, tear our lives apart, even make us kill?

In this episode, *Exposed* investigates the devastating effect that social and romantic rejection can have on our brains, our bodies and our behaviour.  Using the latest neuro-imaging technology, we explore the links between social rejection and physical pain.', 68, 2, 390900, 165);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1525, 'Persuaders', 'Parents, advertising, friends and politicians... Persuaders and Persuasion are all around us. But how do the great persuaders tempt us to part with our hard earned cash, behave in a certain way, even feel the way we do?

Why do we allow ourselves to be manipulated, and how can we make people do what we want them to do?

In this episode, we find out how some of the most pervasive persuaders, including salesmen, advertisers, shop owners and composers, manage to get what they want.', 68, 3, 390901, 165);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1526, 'City Life', 'What is it that can make a simple journey to work so stressful? Do city dwellers behave differently to their rural counterparts? Has the urbanite struggle to cope with the pressures of city life made them behave like animals?  Is this why thousands are now abandoning cities in search of stress-free lives in the country?

To answer these questions, Dr Marsden reveals the strange rules of Urban Etiquette.  Through experiments on unwitting subjects he tests whether sensory overload and urban anonymity really make us irresponsible, confused and violent.', 68, 4, 390902, 165);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1527, 'Finale', null, 69, 15, 390939, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1528, 'No Going Back', 'The contestants, handpicked by Fox and his team of trainers, were introduced and brought to their loft where they would be staying during the course of the competition. The fighters were then divided into two groups: Blue Team and Red Team. Blue Team and Red Team were given the names "Wild Boars" and "Tiger Kings" respectively, based on legendary Muay Thai fighters.

Fight: Naruepol vs. Trevor Smandych', 69, 1, 390940, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1529, 'It''s Just Soft Tissue Damage', 'The Tiger Kings were devastated with Trevor Smandych''s loss and felt unwell that they did not gave him a decent farewell. Meanwhile, the Wild Boars were triumphant with Naruepol declaring that the fight was "easy". Other members began contemplating about the pressure of defeating Thai fighters especially in their national sport, but Rafik Bakkouri stayed firm that he was not afraid of the Thais in and out of the ring.

Fight: Sean Wright vs. James Martinez', 69, 2, 390941, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1530, 'Boiling Point', 'The Wild Boars celebrated their second consecutive win, while the Tiger Kings were starting to feel angry at the their opponents. This anger was channelled on the following training session as Dzahbar Askerov felt offended by the Wild Boars'' fits of laughter during a discussion. Dzahbar Askerov and Rafik Bakkouri had a shouting match which resulted in a brawl between the two. The informal fight was broken up by several trainers.

Fight: John Wayne Parr vs. Rafik Bakkouri', 69, 3, 390942, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1531, 'Big Guns', 'The Tiger Kings were ecstatic as they celebrate the loss of the opposing team''s captain Rafik Bakkouri, while John Wayne Parr had his nose stitched. He even quipped that he already had 186 stitches in his face alone and this number might reach 200 sooner than later. Meanwhile, the Wild Boars elected Bruce as their new captain. But the Wild Boars'' problems were compounded when David Pacquette, Zidov Dominik, Naruepol, Joakim Karrison, and Alain Sylvestre fell ill. Soren Monkongtong used this as an opportunity to train harder.

Fight: Yodsaenklai vs. Bruce Macfie', 69, 4, 390943, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1532, 'Captain Killers', 'The Tiger Kings once again were elated at their win, finally evening the fight at 2-2. In a show of sportmanship, even the Wild Boars congratulated Yodsaenklai for his victory. Later, when David Pacquette saw that the food Alain Sylvestre was eating was not very appetizing, he explained to David Pacquette that he had to eat this way because he has Crohn''s Disease. After training, the Wild Boars once again elected for a new captain, this time giving the helm to David Pacquette. He, meanwhile, had reservations because of his new "jinxed" role, considering his predecessors were both eliminated.

Fight: Soren Monkongtong vs. Alain Sylvestre', 69, 5, 390944, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1533, 'A Battle of Heart', 'The Tiger Kings had tipped the scales in their favor securing yet another win for them. The gloomy Wild Boars were encouraged by the newest captain to work even harder in the challenge to gain the opportunity to tip the scales back in their favor. At the Courts Megastore challenge, the Tiger Kings defeated the Wild Boars again by barely mere second. The triumphant Tiger Kings were juxtaposed with the frustrated Wild Boars over losing the opportunity to choose for the fourth time in a row. For their reward, the Tiger Kings won another shopping spree in Courts Megastore.

Fight: Dzhabar Askerov vs. David Pacquette', 69, 6, 390945, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1534, 'Friends & Brothers', null, 69, 7, 390946, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1535, 'This Is a Competition... Not a Holiday', null, 69, 8, 390947, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1536, 'Not Happy', null, 69, 9, 390948, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1537, 'Is It All In the Cards?', null, 69, 10, 390949, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1538, 'Careful What You Wish For', null, 69, 11, 390950, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1539, 'Sacred Sport With Huge Consequences', null, 69, 12, 390951, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1540, 'Muaythai Force of Four', null, 69, 13, 390952, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1541, '...And Then There Were Two', null, 69, 14, 390953, 166);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1542, 'Teenage Rebels (1960-61)', 'The Beatles'' decade began in Liverpool in July 1957 when 16 year old John Lennon and 15 year old Paul McCartney met. This chance encounter produced one of the most important musical partnerships of the 20th Century. They listened to American artists and hung out in the Jacaranda coffee bar. They were part of a new breed of ''teenagers'' who benefited from their parents increasing affluence. Fashion was changing too, and Mary Quant designed youthful and colourful dresses. In America, youth was winning too, and Kennedy was elected President. The Beatles went to Hamburg in 1960 and it was there they discovered freedom, sexual freedom.

It was during this time that the Cuba Missile Crisis posed a great threat to world peace and for a while the world waited to see if peace would be shattered. Working class writers and actors started to emerge along with the Beatles. Everything was changing. Music, consumer goods, fashion - the sixties generation really did seem to have it all. ', 70, 1, 390930, 167);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1598, 'Does Salvation Lie In Old Fashioned Skills?', 'Two new porky arrivals give Te Radar the run around while his produce turns a few heads at the local A & P Show.', 74, 9, 1547181, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1775, 'Gerber - 05 - Finderlohn', null, 79, 5, 391147, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1543, 'Sex, Spies and Rock and Roll (1962-64)', 'In Liverpool in 1962 the Beatles caused a sensation at the Cavern Club. They had only one single to their name. But a fateful meeting with Brian Epstein was to help them top the charts. Epstein changed their image from the American biker look and soon realised the sixties was the selling decade. Youth was all the rage and the old Tory Prime Minister Harold McMillan seemed out of step with the times. The Profumo sex scandal nailed the Tories and before long Harold Wilson''s Labour government took power. The age of deference had passed and the Beatles played up their cheeky persona. As ''Beatlemania'' was exported around the world, it embodied the optimism and national pride which had infected Britain. By the end of 1964 Britain had shifted into a modern age. The Beatles success was evidence that a more meritocratic society had arrived and class barriers had fallen. ', 70, 2, 390931, 167);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1544, 'Swinging Britain (1965-66)', 'By 1965 the cultural renaissance of Britain was in full swing and the Beatles embodied the feeling of optimism. Having won over the British public the Beatles were ready to take on the world. The new fashion labels like Biba, new faces like Twiggy and hair dressers like Vidal Sassoon were an important ingredient in the Swinging London explosion. However, the economy was in a terrible state Harold Wilson had inherited huge debts and done little to stem the problem. And The Beatles lives as superstars had turned into a living hell by 1966. ', 70, 3, 390932, 167);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1545, 'Peace and Protest (1967-68)', 'In April 1967 The Beatles produced the drug fuelled Sgt Peppers, an Album that was to change everything. The Beatles had turned to eastern mysticism and become distant from their mentor, Epstein, who died suddenly. Britain was undergoing a radical transformation from the legalisation of homosexuality and abortion to the relaxation of theatre censorship and introduction of the ''no contest'' divorce. But soon the social revolution was overtaken by political revolt on the streets against the Vietnam War.

At the beginning of 1968 the Beatles took control of their own careers. They had a grand vision of a media empire and set up a number of companies under the name Apple. It proved to be a disaster. Privately the Beatles were arguing - about Yoko, about what they should record, about the future. Outwardly they were still sensationally successful. But there was trouble brewing.', 70, 4, 390933, 167);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1546, 'The Party Is Over (1969-70)', 'As the decade came to an end a more chaotic world was to come. But what had changed dramatically during the 1960s was the education system and the introduction of the 11+. (Both John Lennon and Paul McCartney went to Liverpool Grammar schools).

Paul and John''s wives, Linda and Yoko, had one thing in common - they were strong, independent women, but with very different personalities. They typified the changing relationship between men and women which was beginning to emerge in the late sixties. The Beatles split up and Harold Wilson had been gone, the sixties had well and truly ended. By the end of the decade, Britain had genuinely changed. Youth culture had been born. Political protest had taken to the streets; and blind, class deference had gone forever. The Beatles had personified this social revolution - and their split coincided with the return of conservatism. But in the historical ebb-and-flow of the decades that followed much of this change would be permanent. The world really would never be the same again.', 70, 5, 390934, 167);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1547, 'Jacques Benveniste', 'Focuses on the immunologist Jacques Benveniste, who in the late 1980''s claimed he had scientific proof of the principles of homoeopathy. There was an investigation into his findings, and the conclusions were that his findings were flawed, if not fraudulent. His colleagues disowned him and he was even accused of disgracing his country.', 71, 1, 390954, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1548, ' Linus Pauling', 'The heresy of Linus Pauling was that he claimed a range of diseases could be cured by taking large amounts of vitamin C. He was condemned until a few years ago when other scientists began to have second thoughts.', 71, 2, 390955, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1549, 'Rupert Sheldrake', 'Documentary on Rupert Sheldrake, a Cambridge biologist who was condemned as a heretic for challenging the principle that life can be explained in terms of DNA. He proposed a new theory called Formative Causation, the idea of which was that all life depends on morphic fields.', 71, 3, 390956, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1550, 'Hans Eysenck', 'Portrait of the psychologist who is considered beyond the pale by all except a small band of devotees.', 71, 4, 390957, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1551, 'Robert Jahn', 'Portrait of the man forced to resign as Dean of Engineering at Princetown University, because of his unorthodox views on psychokinesis.', 71, 5, 390958, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1552, 'Eric Laithwaite', 'Portrait of the unorthodox scientist who has been shunned for the last 20 years because of his belief in an "anti-gravity" machine.', 71, 6, 390959, 168);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1553, 'Episode 1', null, 72, 1, 390960, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1554, 'Episode 2', null, 72, 2, 390961, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1555, 'Episode 3', null, 72, 3, 390962, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1556, 'Episode 4', null, 72, 4, 390963, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1557, 'Episode 5', null, 72, 5, 390964, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1558, 'Episode 6', null, 72, 6, 390965, 169);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1559, 'Episode 1', null, 72, 1, 390966, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1560, 'Episode 2', null, 72, 2, 390967, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1561, 'Episode 3', null, 72, 3, 2663191, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1562, 'Episode 4', null, 72, 4, 2663201, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1563, 'Episode 5', null, 72, 5, 2663211, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1564, 'Episode 6', null, 72, 6, 2663221, 170);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1565, '1', null, 72, 1, 3196781, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1566, '2', null, 72, 2, 3196791, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1567, '3', null, 72, 3, 3196801, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1568, '4', null, 72, 4, 3196811, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1569, '5', null, 72, 5, 3196821, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1570, '6', null, 72, 6, 4173904, 171);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1571, 'Katy Brand’s Big Ass Songs', 'Presenters Rory Kinnock and Gaz Cotton guide viewers through the best of the year''s charts with songs like Leona Lewis'' Heart Bypass Love, The Ting Tings'' We''re All The Same, Usher''s Love in da Pub and Katy Perry''s I Licked a Chick.', 72, 1, 5569560, 172);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1572, 'Bang to Rights', 'Series about helicopter police in South Yorkshire. Car thieves are making life hell for the police so the team of 11 sky cops are brought in to help sort things out.', 73, 1, 390970, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1573, 'Cycle of Crime', 'Another instalment of life as a helicopter cop. Teenagers on motorbikes are driving police mad, but it''s too dangerous to chase them on the road. The Sky Cops are drafted in to help deal with the troublemakers.', 73, 2, 390971, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1574, 'Turning the Tide', 'Series about helicopter police in South Yorkshire. PC Tim Scothern and members of the Car Crime Unit launch a bid to stop the theft of keys to luxury cars.', 73, 3, 390972, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1575, 'In the Nick of Time', 'Jamie Theakston narrates a series about Britain''s helicopter police. Cameras follow London''s sky cops as they help keep the peace at the Notting Hill Carnival.', 73, 4, 390973, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1576, 'No Hiding Place', 'Jamie Theakston narrates a series about Britain''s helicopter police. London''s sky cops go after some of the capital''s most devious and desperate criminals. Their ageing helicopters feel the strain, but help is on the horizon - a fleet of brand new machines which will transform their jobs. ', 73, 5, 4771262, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1776, 'Haferkamp - 10 - Spätlese', null, 79, 6, 391148, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1952, '', null, 82, 20, 4629259, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1577, 'Flat Out', 'Dangerous drivers take desperate measures as they try to outdrive the traffic police in stolen or uninsured cars. But, as Jamie Theakston reveals, they stand little chance of getting away from South Yorkshire''s police helicopter crews and their 150mph machine.
', 73, 6, 4771263, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1578, 'Night and Day', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston.', 73, 7, 4771268, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1579, 'Operation Ocean', 'With burglars taking the keys to hundreds of thousands of pounds'' worth of luxury cars, PC Tim Scothern and members of South Yorkshire Police''s car crime unit enlist the help of Sierra Yankee Nine Nine and its crew for a crackdown codenamed Operation Ocean. Narrated by Jamie Theakston.', 73, 8, 4771269, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1580, 'On the Ball', 'Jamie Theakston narrates the documentary series following Britain''s helicopter police.

As South Yorkshire''s Sky Cops get called to help police a football match, they find themselves hunting a man with a shotgun.

Meanwhile, the air support unit''s chief pilot and one of their top air observers face the prospect of losing a suspected car thief until the helicopter''s unique video rewind system saves the day.', 73, 9, 4771270, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1581, '25/07/2008', 'Documentary series narrated by Jamie Theakston following the drama of Britain''s air support operation.

Utilising unprecedented access to the Metropolitan Police''s Air Support Unit and the specialist unit with South Yorkshire Police, the series follows the units as they chase car thieves, find missing persons and catch criminals.', 73, 10, 4771271, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1582, 'Bad Boys', 'Documentary series narrated by Jamie Theakston following the drama of Britain''s air support operation.

Utilising unprecedented access to the Metropolitan Police''s Air Support Unit and the specialist unit with South Yorkshire Police, the series follows the units as they chase car thieves, find missing persons and catch criminals.', 73, 11, 4771272, 173);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1583, 'New Tricks', 'Following the work of Britain''s helicopter police. With 15 million pounds'' worth of new helicopters to help them fight crime in the capital, the sky cops are casting their net wider than ever. Their targets include a crossbow-wielding man and a 14-year-old boy who is living dangerously.', 73, 1, 909411, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1584, 'Rookies', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston. As twelve wannabes compete for two vacancies in the unit, the rookies from Hendon take part in a raid on a suspected drug dealer.

Also, a newly qualified cop gets an early collar when he apprehends a crook.', 73, 2, 909421, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1585, 'Under Pressure', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston.

The pressure is on for five young police officers vying to fill two vacant positions with the sky cops.

As the hopefuls take to the skies for the first time, the veterans in the unit decide to shake things up a bit. For PC Bearman things end in tears, and PC Brandon regrets letting slip that he hates flying.', 73, 3, 909431, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1586, 'Two Wheel Terrors', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston. The helicopter squad are called in by police in South London tackling street robbers who use scooters to get away from police cars. In a combined operation the helicopters and ground cops work together to try and trap the perpetrators.

But they must also deal with another conflict, as hundreds of protestors opposed to the war in Iraq threaten to break the law by marching on Parliament.', 73, 4, 909441, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1587, 'Gone to the Dogs', 'The Sky Cops get help from their four-legged friends as together they catch criminals who try to hide from the police. With India 99 above using their thermal image camera and the dogs below sniffing them out, there is no cover even in the darkness.

Back at the Sky Cops'' base, the dogs from the Metropolitian Police specialist arms dogs unit are training with PC Pat Agnew so they can use the new helicopters to get to where they are most needed more quickly.

But all is not well for one of the dogs, and his fear of flying leaves its mark on the crew.', 73, 5, 909451, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1588, 'Tooled up', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston.

The team investigates a firearms-related tip-off. With no way of telling whether the guns are loaded or even real, the Sky Cops are in charge of directing Trojan units into a pitch black garden in North London while children play a few houses away.

In East London the local cops have a strange case on their hands - someone has been shooting deer in a local park with a hire powered rifle.', 73, 6, 909461, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1589, 'Sparks Flying', 'Series that follows the work of Britain''s helicopter police, narrated by Jamie Theakston.

The Sky Cops deal with sparks flying, as gangs terrorise the streets with fireworks, aiming rockets at each other and causing mayhem. Also, teenage graffiti artists who risk life and limb as they paint the railway tracks of London. And, in the capital, drama at the State Opening of Parliament as the screens go blank.', 73, 7, 909471, 174);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1590, 'How Sustainable Am I?', 'Comedian Te Radar has signed up for an experiment ..... to try to learn to live sustainably.

He is ditching suburbia to create his own shelter, hunt and grow his own food. He has the challenge of turning a small block of land into a sustainable haven in ten months.', 74, 1, 390974, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1591, 'What Can I Sustainably Consume?', 'Te Radar''s sustainability experiment cranks up with his egg production facility taking off.

He finds possum elusive but eel appealing which means the new cookhouse needs finishing.', 74, 2, 1547111, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1592, 'What Can I Recycle?', 'Te Radar discovers his newly built shed may be non compliant. One of his chooks goes off the lay and he tries to unleash the Bonsai Lawn on an unsuspecting public to boost his coffers.', 74, 3, 1547121, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1593, 'What Are The Snags To Sustainability?', 'Learning to make cheese leads to Te Radar discovering the forgotten wanders of scything.

He starts a field of unconventional trail gardens and builds a worm farm from junk.', 74, 4, 1547131, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1594, 'Will Water Sustain me?', 'A waterlogged Te Radar finds whitebait and flounder are a happy by product of his wet environment while an early morning goat milking delivers a welcome change to the breakfast menu.', 74, 5, 1547141, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1595, 'How Much Hard Yakka Can I Sustain?', 'Te Radar calls on neighbour Pete to help him build a safe sustainable shelter and heads off to market with his first excess crop.', 74, 6, 1547151, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1596, 'Is Modern Christmas Sustainable?', 'This is the Christmas episode of the green living series in which comedian Te Radar ditches the city and consumer luxuries in an experiment to see if he can live sustainably, for 10 months on a remote patch of land west of Auckland. His back-to-basics mission covers everything from worm farms to homekill. In this excerpt he hosts a ''Last Supper'' lunch for 17 family, made from food he''s grown or hunted himself. "Here''s a toast to the fact that you''ve raised a son who now lives in a caravan in the middle of a paddock - you must all be so proud!"', 74, 7, 1547161, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1597, 'What Can Co-Operation and Community Achieve?', 'Te Radar finds his sand castle-building skills work wonders when building a mud oven and his pig hunting expedition delivers more than
expected.', 74, 8, 1547171, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1950, '', null, 82, 18, 4629257, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1599, 'Is Preserving Power The Answer?', 'Goat hunting and the ensuring salami leaves a bad taste in Te Radar''s mouth while solar power proves to be a welcome highlight.', 74, 10, 1547191, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1600, 'Will My Water Ever Become Wine?', 'Possum find its way onto Te Radar''s plate and then into his bed while Rudolph the local brewer finds a useful way to preserve the farm''s excess apple crop.', 74, 11, 1547201, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1601, 'Can Sustainability Be Civilised?', 'Duck shooting season opens with a bang but not a lot of duck. And Te Radar''s attempts to add value to his flock''s fleece ends in disaster.', 74, 12, 1547211, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1602, 'The Last Supper', 'As his ten months on the land conclude, a slightly more sustainable Te Radar hosts his ''Last Supper'', to celebrate what can be achieved with good will from all.', 74, 13, 1547221, 175);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1603, 'The Suite Life Sets Sail', 'London, Zack, Cody and Mr. Moseby set sail on the S.S. Tipton for their semester at sea. London convinces her roomate to leave the ship so she can have a room to herself. Cody finds himself sharing a room with Woody, who is very messy, and Zack shares a room with Bailey, who is a neat freak. Nobody knows that Bailey is a girl who disguised herself as a boy in order to gain a position on the ship after she found that there were no more vacancies for girls. Zack and Cody agree to switch roommates, but Zack changes his mind after he finds out that Bailey is a girl. After everyone else eventually finds this out Bailey is allowed to stay, filling the position vacated by London''s ex-roommate, and Bailey becomes London''s new roommate. This is the last straw for London and she escapes to Parrot Island via helicopter.', 75, 1, 390975, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1604, 'Parrot Island', 'When the S.S. Tipton makes a special trip to pick up London from Parrot Island, Bailey, Moseby and Woody find themselves in jail because all the parrots left for Seal Island after Tipton Industries cut down all the trees. It''s up to Zack and Cody to get them out of it but Zack and Cody end up in jail along with the others, and Bailey has to use her pig, Porkers, to rescue them. Zack and Cody fight for Bailey and Zack lets Cody have her after finding out about her ex-boyfriend Moose and seeing she has too much "baggage".', 75, 2, 399388, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1605, 'Broke ''n'' Yo-Yo', 'Bailey is mad that London is hogging all the space in their cabin, so she makes up a "Sea Snark" attack, but later feels guilty and tells her the truth. Meanwhile, when Zack uses up both his and Cody''s meal cards buying things for all of the girls on the ship, they go broke. To make up for it, Moseby puts them to work. Because of that, Zack thinks that Cody should win the yo-yo contest for its $1,000 prize, but Cody finds himself up against the pro, Johan Yo.', 75, 3, 399389, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1606, 'The Kidney of the Sea', 'Zack has a crush on a cute passenger named Violet, but must deal with her wealthy "boyfriend" Ashton and snooty mother who will do anything to keep Zack and Violet apart. Meanwhile, Cody referees an intelligence test between London''s dog Ivana and Bailey''s pet pig Porkers. The episode includes plot elements from the 1997 film Titanic, where Jack was framed for stealing the "Heart of the Ocean" necklace.', 75, 4, 399390, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1607, 'Showgirls', 'London and Bailey are on a mission to prove that Miss Tutweiller is dating Mr. Moseby after overhearing a conversation between the two. Meanwhile, Zack convinces Cody to sneak out after curfew to catch the Starlight Follies show on the ship. When they finally make it past the security guard and into the show, they become convinced that their teacher, Miss Tutweiller, is one of the showgirls by seeing her heart shaped anklet in the show, and during class, so Zack sends Bailey and London undercover as two showgirls to find out.', 75, 5, 399394, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1608, 'International Dateline', 'The ship is struck by lightning when it crosses the International Dateline, which places Cody in the same day over and over. He tries to use each day as a chance to let Bailey know how he feels about her, but something gets in the way every time. It''s then up to Cody to divert the ship from the lightning to set them back on the right course.', 75, 6, 404898, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1609, 'It''s All Greek to Me', 'The S.S. Tipton visits Greece. While they are there, Bailey crushes on the tour guide, which makes Cody jealous. To impress her, Arwin''s cousin, Milos, gives him a replica of the ancient amulet of the Greek goddess Aphrodite to give as a gift to her, but in a mix up, he ends up getting the real one. Meanwhile, London has to write a speech for her father, who is funding a new exhibit, but finds it very difficult, but then has a dream about Greek history, which inspires her.', 75, 7, 404899, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1610, 'Sea Monster Mash', 'The class has a school project to complete and Cody chooses Bailey to be his partner, disappointing Zack who had hoped to get Cody to complete his and Woody''s project for them. After Bailey tells London that she has partnered with Cody, London teams up with Zack and Woody. Cody is trying to catch a famous sea monster, but keeps failing and disappointing Bailey. Zack tries to sabotage Cody''s project. However, his own project turns into a monster when London pours a smoothie into their plant project, causing it to grow and eventually trapping Zack, Woody, and London. The sea monster shows up at the end of the episode.', 75, 8, 404900, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1611, 'Flowers and Chocolate', 'Chelsea, Barbara, and Bob visit the S.S Tipton. Cody is worried about how he''s going to tell Barbara about his feelings for Bailey, but Barbara has to dump Cody because she and Bob are now dating. Right before Cody tells her about Bailey, Barbara tells him about her and Bob. To make Barbara jealous, Cody tells her that he and Bailey are also dating, thinking he can get away with the lie because Bailey is off the ship, but she returns early. London tells Chelsea that her room is her shoe closet, and that Woody is her servant. Woody agrees to help her because he has a crush on Chelsea. During movie night, Cody tries to make Barbara think that he and Bailey are dating, but Bailey eventually finds out. Cody apologizes and Bailey forgives him and says if he wanted her to be his pretend girlfriend, all he had to do is ask. To show it, she tickles him, wraps her arms around him, and finishes with a kiss on the cheek (causing Cody to faint) saying that would have made Barbara really jealous. Chelsea finds out that London is just a regular student, but instead of telling everyone, tells London she will tell everyone that London was "abducted by aliens" instead.', 75, 9, 409875, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1612, 'Boo You', 'When Cody and Kirby don''t allow Zack to bungee-jump off the side of the ship, the brothers accidentally knock Kirby off the ship, but Kirby lands in the hot tub. To make it up to him, Zack and Cody tutor Kirby so he can pass his high school equivalency exam to earn a better job. Meanwhile, London embarrasses Bailey on her internet show in a new segment called "Boo You!"', 75, 10, 413160, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1613, 'seaHarmony', 'Zack and London play matchmaker for Mr. Moseby and Ms. Tutweiller, but with little success. Eventually, they get Moseby and Tutweiller together, and although they have an argument, they remain together. Meanwhile, Cody tries to impress Bailey by acting like someone else based on her dating test results. However, what Cody doesn''t know is that some of her answers were for fun, while others were true.', 75, 11, 413161, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1653, 'Rat Tale', 'No longer a couple, Cody and Bailey must choose who keeps Buck, their pet rat. Kirby investigates both to see who will make the better owner, but Woody is bitten by Buck, creating a super-hero alter-ego "Ratman."
', 75, 2, 2493921, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1614, 'The Mommy and the Swami', 'When the ship stops in India, Cody takes Zack with him to visit his guru, a Swami who lives in the top of a mountain who charges high prices for everything he sells. Eventually, Zack and Cody run out of money and join the Swami''s worldwide call center. Meanwhile, Mr. Moseby is having computer problems and is trying to contact the call center for help, but without any success. Padma, who was originally London''s roommate on the ship, but left after London bribed her, asks London to help convince her mother that she was still at sea. It is later shown that the help center Moseby was calling was run by the Swami, who used an American accent.', 75, 12, 413162, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1615, 'Maddie On Deck', 'Maddie Fitzpatrick visits the S.S. Tipton and gains a new friend in Bailey. Prince Jeffy of Linchtenstamp, who''s only 8 years old, falls in love with Maddie and forces her to marry him. However, Zack challenges the Prince to a joust, with Maddie being the prize. Zack beats Prince Jeffy on a bouncing ball and using a water noodle weapon. Also, Zack finally gets his long-awaited kiss from Maddie.', 75, 13, 413163, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1616, 'When In Rome...', 'The ship docks near Rome and London falls for a young, handsome musician named Luca while playing in the streets. Later, as Bailey searches for her money belt key, she overhears that Luca and his uncle, Marco, are actually con men and had already conned London for twenty thousand dollars. Bailey talks to Luca and finds out that he actually doesn''t want to be a con man and really likes London. So, they hatch a plan to get the money back from his uncle which includes Bailey dressing up as Naomi Wyoming, a parody of Hannah Montana. Meanwhile, Zack and Cody get themselves hired by Chef Gigi so they can eat at her restaurant. At the end, Cody is fired, but Zack enjoys a delicious meal with Gigi.', 75, 14, 413164, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1617, 'Shipnotized', 'A famous hypnotist visits the S.S. Tipton and accidentally hypnotizes London to act like Bailey, which gets her really annoyed. Meanwhile, Harvard''s Dean of Admissions, Monroe Cabbit, is also visiting with his daughter Olivia. Cabbit is fond of Cody, but thinks lowly of Zack, although Zack wants to date Olivia. Since Cabbit does not approve of the relationship, Zack and Cody concoct a plan where Cody will pretend to date Olivia, which Cabbit approves of, but Zack will actually be the one who goes on the date.', 75, 15, 413165, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1618, 'Mom and Dad On Deck', 'The boys plan to have an all-guys weekend with their dad, but a surprise visit from their mom ruins it. When Kurt and Carey get a show on the ship, Mr. Moseby says they can stay on board, but worried their parents will permanently stay on the ship, the twins hatch a plan to sabotage their parents'' show. Meanwhile, London tries to find the perfect belated birthday gift for Mr. Moseby by following him around all day. In the end, London makes Mr. Moseby very happy that he got a present from her because even his own mother forgot his birthday.', 75, 16, 430049, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1619, 'The Wrong Stuff', 'London holds a competition between Cody and Woody to decide which one of them will accompany her on her trip to the Tipton Space Station. Desperate to win, Cody and Woody each try to sabotage the other during the competition. Meanwhile, Zack is in charge of the senior citizen''s activities and meets a passenger who is unwilling to participate in any of the activities. Zack makes multiple attempts to find something he wants to do and finally discovers that he enjoys playing pranks on other people. Together, they try to pull off a series of pranks on the other passengers.', 75, 17, 430050, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1620, 'Splash & Trash', 'Zack and Woody are convinced that a girl the S.S. Tipton rescued from the ocean is actually a mermaid. They make multiple attempts to prove it, but are unsuccessful. Upon her telling Zack that she is really a competitive swimmer and extremely busy training for the Olympics, Zack decides to teach her how to relax. Meanwhile, Cody is fired as the ship''s towel boy after he doesn''t allow passengers to use multiple towels in an attempt to protect the environment. He also puts up a show to portray the future of the Earth if this kind of overuse continues, which ultimately gets him re-hired as towel boy.
', 75, 18, 430051, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1621, 'Mulch Ado About Nothing', 'When Bailey starts feeling homesick, Cody decides to recreate her hometown festival. However, thanks to London, Bailey''s hometown boyfriend, Moose, shows up. He and Cody compete in corn bobbin'', arm wrestling, and chess to win Bailey''s heart, but Cody loses every competition. Moose asks Bailey to come home, so she asks Cody what to do. Cody says to follow her heart and Bailey stays because she would miss her friends', 75, 19, 430052, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1622, 'Cruisin'' for a Bruisin'' ', 'After Kirby injures Moseby, Connie takes over Moseby''s work and breaks a boat in a bottle intended as a gift for the captain. Everyone tries to comfort Moseby, but none of them do any good. Moseby overhears mention of a problem with the boat and thinks there is a problem with the full-size ship. London eventually fixes the boat in a bottle. Moseby falls down the stairs and injures everyone except London. Finally, Moseby accidentally breaks the boat and doesn''t have enough time to repair it.', 75, 20, 566351, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1623, 'Double-Crossed (2)', 'Hannah Montana boards the S.S. Tipton on her way to a concert performance in Honolulu. To impress Bailey, Cody desperately tries to get tickets to the show. Meanwhile, the Russo''s are still aboard the ship on their vacation in which Alex pulls a prank on Justin by putting blue dye in the hot tub, making him turn blue, for which Mr. Moseby blames Zack, while Max tries to impress London with his magical suitcase.', 75, 21, 841541, 176);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1624, 'The Spy Who Shoved Me ', 'A microchip with secret information on it goes missing and the twins help a spy recover it. Cody gives the chip to Bailey, telling her to hide it and not to look at what''s in it, but Bailey looks it up on her computer anyway. When Cody finds out that Bailey ignored him, breaking her promise, he has mixed emotions. Bailey kisses Cody on the lips as a way of telling him he can trust her, so he forgives her.', 75, 1, 959071, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1625, 'Ala-ka-scram!', 'London wants to become the assistant to the ship''s magician after she develops a crush on him. Meanwhile, Zack wants to spend more time with Woody.', 75, 2, 1008041, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1626, 'In the Line of Duty', 'As punishment for setting off a stink cloud, Zack is made hall monitor, a role which he takes way too seriously. After sending half of the school to detention, Zack experiences the repercussions of upsetting all of his friends. Meanwhile, Bailey gets a job at London''s boutique, an extension of London''s personal closet.', 75, 3, 1059571, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1627, 'Kitchen Casanova', 'Bailey gets jealous when Cody gets attention from other girls after he becomes the substitute home-ec teacher. Meanwhile, London tries to sell Zack''s "paintings" which are things he''s had in his mouth when he sneezed.', 75, 4, 1059581, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1628, 'Smarticle Particles', 'After Bailey and Cody try to get London to be smart for a bet, London becomes smart from a perfume. Meanwhile, Zack''s prank for Woody goes awry when it accidently gets pulled on a female wrestler.', 75, 5, 1117551, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1629, 'Family Thais', 'London visits her grandmother in Thailand. Meanwhile, Zack asks Cody to go on a double date with him.', 75, 6, 1117561, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1630, 'Goin'' Bananas', 'When Zack turns in one of Cody''s old essays as his own, Ms. Tutweiller thinks he has a fear of bananas. Meanwhile, London goes through withdrawal when her cell phones are taken away in class.', 75, 7, 1187281, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1631, 'Lost At Sea', 'Shortly after the start of a new semester on the ship, Zack, Cody, London, Bailey, and Woody are all cast-away on a life boat London was using as a closet and eventually find their way onto a deserted island. Cody''s relationship with Bailey starts falling apart after an argument over wind patterns emerges and causes a fall out with the remainder of the group. Back on deck, Ms. Tutwieller and Mr. Moseby are put in exactly the same predicament as the others and even have the same disagreement over control of the operations. Cody and Bailey mend their relationship at the end of the episode.', 75, 8, 1187291, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1632, 'Roomies', 'Zack is surprised to learn that he has a new roommate who used to be a famous rapper until he hit puberty and his voice got deep.', 75, 9, 1232791, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1633, 'Crossing Jordin', 'Jordin Sparks comes aboard the S.S. Tipton and Zack, Cody and Marcus try to write a song for her. Meanwhile, as one of London''s Yay Me! contest, one of her fans gets to spend a couple days with her on the ship, but London''s fan is a little crazy.', 75, 10, 1232801, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1634, 'The Beauty and the Fleeced', 'Zack, Marcus, and Woody create a fake beauty pageant so they can meet girls. When Mr. Moseby learns of their plans, he punishes them by forcing them to see it through. Meanwhile, Bailey enters the pageant to try to beat London and hires Cody as her coach, but gets mad at him when he becomes too controlling.', 75, 12, 1334261, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1635, 'The Swede Life', 'Zack and Cody talk to Mayor Ragnar when the boat docks in Sweden, and they are shocked to learn that their ancestors were scoundrels and not heroes like the twins originally thought. Meanwhile, Moseby gets help from Marcus to find the missing screw for his nightstand, but they accidentally get stuck in a furniture store.', 75, 13, 1334271, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1636, 'Bermuda Triangle', 'Zack and Cody receive a $200 check from their parents for their 16th Birthday, but have an argument about how to spend it. During the argument, they both wish they were an only child and once the ship enters the Bermuda Triangle, their wish comes true.', 75, 11, 1334291, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1637, 'Any Given Fantasy', 'After Mr. Moseby forbids the gang from playing football, they become interested in fantasy football.', 75, 16, 1369851, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1638, 'Mother of the Groom', 'Esteban boards the boat to get married, however his mother doesn''t approve of his future wife.', 75, 14, 1582921, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1639, 'The Defiant Ones', 'Cody creates a web of lies to cover the fact that he didn''t do his homework and it gets out of hand. Mr. Moseby and Zack get handcuffed together when their fighting gets worse.', 75, 15, 1582931, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1640, 'Rollin'' With the Holmies', 'Cody tries to find out who stole a valuable book.', 75, 17, 1582941, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1641, 'Can You Dig It?', 'While searching through an archaeological site in South America, Zack awakens the spirit of an ancient princess.', 75, 18, 1670381, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1642, 'London''s Apprentice', 'When London''s father gives her one million dollars to find an invention to market, she enlists her friends to come up with a unique invention and offers them the cash as a prize. At first everyone comes up with their own ideas, but then they combine their resources, wreaking havoc on the ship with their multifunctional robot.', 75, 19, 1670391, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1643, 'Once Upon a Suite Life', 'The gang all have dreams of being characters in three different fairy tales; Hansel and Gretel, Snow White, and Jack and the Beanstalk.', 75, 20, 1724601, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1644, 'Marriage 101', 'A class assignment requires the students to simulate marriage to learn the challenges that face married couples in everyday life. Cody ''marries'' Bailey, Zack ''marries'' London, and Woody ''marries'' Addison. However, when the "Wheel of Life" gives Cody as injury, he and Bailey begin to fight.

', 75, 21, 1724611, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1645, 'Model Behavior', 'When Mr. Moseby leaves to go to a reunion, Zack and Marcus decide to throw a party on the sky deck with models. Janice and Jessica, from the Boston Tipton, come aboard the ship as models and while Janice tries to draw Zack''s attention, Cody believes Bailey is jealous of Jessica. Meanwhile, to distract the modeling agent from discovering the party, Woody pretends to be a male model named Woodlander.

', 75, 22, 1724621, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1646, 'Rock the Kasbah', 'Cody wants to buy earrings for Bailey, but Zack insists he bargain with the cashier for a better price. Meanwhile, London, Bailey, Marcus, and Woody discover a magic lamp that contains a genie willing to grant wishes, causing them to argue over which wishes should be granted.

', 75, 23, 2194031, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1647, 'I Brake for Whales', 'The SS Tipton is going straight in the path of endangered blue whales motivating Zack, Cody, Bailey, and Marcus to try their best to change the ship''s course. They lock themselves into the engine room hoping the whales will safely pass, however they discover it''s not as easy as it seems. Cody begins to faint due to heat exhaustion, Marcus becomes desperate for water, and Zack loses it and tries to break free. Eventually, Kirby and Mr. Moseby break into the engine room to attempt to stop them, but after seeing the whales on Cody''s laptop, they decide to go along with plan.

', 75, 24, 2194041, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1648, 'Seven Seas News', 'While producing a news show for Ms. Tutweiller''s class, each of the kids find their own set of problems. Zack and Bailey clash as co-anchors, Cody makes a shocking discovery linked to London during his investigative reporting, Kirby reminisces about the good ole days, while London is having trouble with the green screen.', 75, 25, 2200881, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1649, 'Starship Tipton', 'Centuries in the future, Starship Tipton resident prankster Zerk (Zack''s great-great-great-great-great grandson) plays a joke on feuding aliens and because of it, they vow to destroy the starship. The kids must travel to the future to save their descendants and fix the problem before it''s too late. Meanwhile, London discovers that she has a great-great-great-great-great grandson, Rome, and that the Starship Tipton belongs to her family.', 75, 26, 2200891, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1650, 'Mean Chicks', 'Bailey bets London $1 million dollars that she cannot go on one week without insulting her, so London asks Mr. Blanket for help to try not to insult Bailey. When Bailey loses the bet, London insults her one million times. Meanwhile, Cody attempts to avoid the assaults of a seagull after not permitting the seagull to eat fries.

', 75, 27, 2200901, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1651, 'Breakup In Paris', 'Cody and Bailey are planning to celebrate their one year anniversary when the SS Tipton docks in Paris. Cody asks London to help him make his date perfect. However, a big misunderstanding begins when Bailey sees Cody with London (who were just practicing the date) and mistakes her as the "hideous French girl". The next day, the day of the anniversary, Cody sees Bailey with another guy, Jean Luc, who was just trying to cheer her up. Bailey and Cody start arguing about the misunderstanding, and decide it would be better if they broke up. Meanwhile, Zack and Woody are pursued by art thieves.

', 75, 28, 2200911, 177);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1652, 'Silent Treatment', 'Cody leaves the ship following his break up with Bailey to join an elite, non-religious, monk-like club which he hopes will help him get over the break up. Zack and Woody are determined to go there and save Cody. Meanwhile, London and Miss Tutweiller try to console Bailey by giving her relationship advice.', 75, 1, 2428151, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1745, 'Marek - 04 - Mord im Ministerium', null, 79, 9, 391110, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1746, 'Brammer - 01 - Kneipenbekanntschaft', null, 79, 10, 391111, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1654, 'So You Think You Can Date?', 'The Seven Seas High dance is coming up. Having broke up, Cody and Bailey lie about having dates to the dance, so they quickly try to find a backup date to backup their lie. Now the pressure is on to see who has the best game. Meanwhile, Woody is tired of Tutweiller and Moseby arguing about who should get the skydeck for the school dance, so he makes them share the skydeck. It is revealed though flashback that Mr. Moseby and Miss Tutweiler''s interest in the Middle Ages and 1980s, respectively, comes from the tribulations they endured as outcasts in their youth. Through understanding, Mr. Moseby convinces Emma that they both have become successful adults and have overcome their painful pasts.
', 75, 3, 2497991, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1655, 'My Oh Maya', 'Zack becomes attracted to a girl named Maya, but when he realizes he is actually falling in love with her, he attempts to use the six month plan Cody devised to date Bailey. Meanwhile, Dante, the boy who stole Marcus''s identity in Paris, stows away on board to have Marcus produce his next album. In addition, Cody is trying to condition himself to forget about Bailey by flicking a rubber band against his wrist every time he thinks about her while she is visiting her home in Kettlecorn.
', 75, 4, 2527691, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1656, 'Das Boots', 'Zack, London, Woody, and Maya are all trapped in London''s shoe submarine with only enough air for thirty minutes. Meanwhile, Marcus helps Cody prepare to play chess against a beautiful Russian junior champion.
', 75, 5, 2527701, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1657, 'Bon Voyage', 'When the new aqua lounge is flooded, Mr. Moseby vows to expel the student responsible for the mess. Although Mr. Moseby assumes Zack is the culprit, Cody, Bailey (who had just returned from Kettlecorn), and Woody all believe they are each responsible for the disaster for different reasons. Meanwhile, Marcus leaves the ship to make a Broadway musical based on his hit song "Retainer Baby."
', 75, 6, 2527711, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1658, 'Computer Date', 'Arwin comes on board the SS Tipton to improve the ship by adding a robot. However, problems start to occur when it begins to have feelings for Cody. Meanwhile, London and Woody enlist Zack''s help to pass a gym class.', 75, 7, 2527721, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1659, 'Party On!', 'Maya''s birthday is coming up and Zack decides to do something special for her. When singer Sean Kingston comes on board, he immediately becomes attracted to London. Zack misleads Sean Kingston into throwing a surprise party for London and also making Mr. Moseby believe it is for him, when it is actually a party for Maya. Meanwhile, Cody goes with Bailey to a Belgian chocolate factory on a couple''s tour and runs into Woody who mistakenly came instead of attending a hiking trip.
', 75, 8, 2850131, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1660, 'Love and War', 'Zack and Maya are officially together and she hopes he''ll be able to attend her poetry reading on stage. The trouble is it''s scheduled at the same time he, Cody, Woody, and Mr. Moseby are competing in an online war game for the championship against an Australian team. As a result, Zack splits his time between the two events. Meanwhile, for a community service project, London and Bailey run a daycare program for young children who seem to prefer London and Bailey doubts herself until trouble arises.', 75, 9, 2954961, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1661, 'Trouble In Tokyo', 'Carey joins the boys while they''re in Japan when she''s selected to star in a soda commercial by a businessman who''s taken a liking to her when he saw her perform at the Tipton. Shooting the commercial is difficult enough since the soda is flavored with shrimp and tastes awful. Things get worse when Zack smashes an expensive camera and the family has to pay for it by becoming tasters at the soda factory. Meanwhile, Woody is able to defeat a sumo wrestler in the ring to win an unlimited ship gold card. However, having lost his confidence, the wrestler continuously hangs around Woody, getting him annoyed to the point of facing him in the ring again in hopes he finally leaves the ship. Also, London does everything she can to avoid going to the dentist.', 75, 10, 2954971, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1662, 'The Ghost and Mr. Martin', 'When the ship is docked in New Orleans, Mr. Moseby tells the tale of the ghost of Captain Entenille, whose old steamship, the Jessie Belle, sunk 150 years ago. His spirit makes contact with Zack, sending him on a mission to prove the sinking of the old ship wasn''t the captain''s fault. Meanwhile, London and Bailey try to help Moseby overcome his fear of performing in public.', 75, 11, 2954981, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1663, 'Senior Ditch Day', 'London and Woody go to a posh beach club for senior ditch day, but when the bouncer won''t let Woody in, London and Zack go without him. Meanwhile, in an effort to keep their perfect attendance records, Bailey and Cody show up for class, which annoys Ms. Tutweiller who was looking forward to her day off.', 75, 12, 2954991, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1664, 'My Sister''s Keeper', 'Cody shows Woody''s sister around the ship. Meanwhile, London hires a double to do her chores, but she falls in love with Zack.', 75, 13, 3153951, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1665, 'Frozen', 'Cody goes to a scientific research facility in Antarctica, and Zack and Woody tag along to go snowmobiling. But after they arrive, the head scientist steals their snowmobile, stranding the boys at the facility, leaving them to find ways to survive until help arrives. Meanwhile, London''s favorite fashion designer comes on board to announce he''s quitting the business. She eventually tries to inspire him to find some new ideas for designs and come out of retirement.', 75, 14, 3153961, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1666, 'A London Carol', 'London''s magic mirror takes her to a Christmas past, present and future, and realizes something which may change her forever.', 75, 15, 3153971, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1667, 'The Play''s the Thing', 'After assigning the class to write their own play, Ms. Tutweiler selects Cody''s play to be presented in class. However, Bailey refuses to participate after realizing the play antagonizes her role in the break-up between her and Cody, forcing Cody to act as Bailey and Zack as Cody.', 75, 16, 3441801, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1668, 'Twister (1)', 'London offers to take Bailey to Kettlecorn to celebrate her grandmother''s 90th birthday, but when their blimp malfunctions they are forced to drive the rest of the way. Elsewhere, Zack, Cody, and Woody challenge Mr. Moseby and his brother, who is visiting with his teammates, to a game of basketball, that is until they learn his brother is NBA star Dwight Howard. Meanwhile, Cody is unsure of where or why Bailey has gone to and laments her absence, until he discovers that she went to her family farm. He decides to go there to ultimately win her affections back.

', 75, 17, 3503211, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1669, 'Twister (2)', 'Cody arrives in Kettlecorn and is surprised to see that Moose is also there to get Bailey back. A tornado approaches and everyone evacuates into the Pickett''s storm shelter. As the tornado hits, Bailey is knocked out and dreams that she is Dorothy Gale and is trying to find her way back home through the Land of Oz. As Bailey unwittingly re-enacts the story of The Wonderful Wizard of Oz, she encounters Moose as the Scarecrow, Cody as the Tin Woodman, Woody as the Cowardly Lion, Zack as a Flying Monkey, London as Glinda the Good Witch and the Wicked Witch of the West, and Mr. Moseby as a Munchkin. She wakes up from her dream and has to decide between Moose and Cody.

', 75, 18, 3503221, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1747, 'Haferkamp - 03 - Der Mann von Zimmer 22', null, 79, 11, 391112, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1748, 'Konrad - 05 - Die Rechnung wird nachgereicht', null, 79, 1, 391113, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1749, 'Veigl - 05 - Als gestohlen gemeldet', null, 79, 2, 391114, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1951, '', null, 82, 19, 4629258, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1670, 'Twister (3)', 'The group starts rebuilding Kettlecorn after the tornado, but they continue to struggle to pay off the damage. As a result, London''s father, Mr. Tipton arrives (who finally reveals himself) to discuss aiding their monetary costs. Meanwhile, Zack, Woody, and Mr. Moseby attempt to sneak into Kettlecorn with a Search and Rescue team.

', 75, 19, 3503231, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1671, 'Snakes On a Boat', 'It''s couples game night and the gang has a hard time finding a fun game everyone finds interesting. London tries to play a prank on Woody and it results in the release of a crate full of snakes. Meanwhile, Cody tries to prove he can be funny to Bailey and Zack tries to get forgiven by Maya when she learns how many girls he has dated.', 75, 20, 3831821, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1672, 'Prom Night', 'After the students pull a prank on Mr. Moseby, he cancels the senior prom. So, Zack comes up with a plan to have a "secret prom". Meanwhile, Bailey tries to get everybody to vote her for prom queen while Cody helps Woody ask Addison to prom. Ultimately, the kids award the roles of king and queen to Mr. Moseby and Ms. Tutweiller.', 75, 21, 3957221, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1673, 'Graduation on Deck', 'Mr. Moseby announces that London''s dad, Mr. Tipton is selling the ship and that it will be dismantled within a week.', 75, 22, 4096332, 178);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1674, 'The Suite Life Movie', 'After making the perfect plans to spend spring break with Bailey (Debby Ryan), Cody (Cole Sprouse) ditches the plans and goes off to work as an intern at a prestigious research firm, leaving Bailey infuriated and refusing to speak to him. Meanwhile, Zack keeps asking Cody for Cody''s car, which his mom and dad will get Cody when he goes to college. But after Zack (Dylan Sprouse) runs a billion-dollar submarine into Vancouver''s seawall, and Cody does the same trying to stop him, the equipment is lost and Cody is kicked out from the program and fired from his internship, vowing to never again speak to Zack.

Dr. Olsen (Matthew Glave) approaches the boys and tells them that they would be ideal for the Gemini Project, a massive project studying the effects of twins. Though it takes them much thought, they eventually decide to participate, and land themselves among dozens of other twins. They start out with physical and mental tests, which end in disasters. After eating a special fruit given to them by the researcher, they start to feel each other''s physical feelings. Later, they become emotionally similar. After overhearing the doctor speak to the other twins about a "merge," they decide to break into the research office and find out that the Gemini Project is meant to control minds. They decide to run away, but they are seen by the doctor.

Meanwhile, London ate some fruit given to the dolphins, which consequently allowed her to comprehend whatever an animal says because London becomes enabled to hear the dolphins communicating in the English language. Because of London''s communication with the dolphin in Dr. Spaulding''s tank, she discovers that Zack and Cody are at the Gemini Project 50 miles away. Alarmed, she tells the gang and Bailey calls Mr. Moseby to the site of the Gemini Project, while they all go to save Zack and Cody. During this time, Zack and Cody attempt to run away from the mind controlled twins when they realize they can now communicate telepathically and try to battle each other, but end up just hurting themselves. They are captured, taken to the office, where in a few minutes, Woody, London, Bailey, and Dr. Spaulding came. The doctor makes a shield, so that while Zack and Cody go through the third task, London and the others cannot try to help them. The doctor eventually reveals that he is Dr. Spaulding''s evil twin, since earlier in the movie Dr. Olsen says he has a twin.

London and the others find out that he has been spying on Cody, and has been pretending to be the janitor at Dr. Spaulding ''s project. Finally, after telling each other off, Zack and Cody become one, but are stopped, because of what they do best - fight. Their fighting ends up breaking Dr. Olsen''s project, and he then says he will kill all of them, but is stopped by the police. With Cody''s quick thinking, he tells Zack to get the special fruit. After Zack gives the fruit to Dr. Spauldng, Dr. Olsen and his twin feel like brothers again by telepathically finding out that they wanted to be each other. Zack and Cody now understand that they make a pretty good team.

In the epilogue, London brags about saving the day and Zack is driving his car, which Cody let him have, when he reads a sign that says "Do not park, shipping equipment exempted" but interprets it as "Do not park, Zack Martin excepted". Zack parks there and sees his friends and brother on the ship when there''s a bang as a gigantic box containing London''s summer clothes lands on the car. While Zack lets out a cry, the movie ends with Mr. Moseby saying "Spring break is over, now if I could just make it to summer vacation."', 75, 4, 3993111, 179);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1675, 'Whale House, Windmill, Darwin House', 'First visit a windmill in Holland that’s still grinding corn. A young family in Mexico lives inside the belly of their whale house. Finally, down in Australia a family beats the heat in an open-air house. ', 76, 1, 390976, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1676, 'Holland Houseboat, Brazilian Box, New Zealand Earth House', 'In Mexico, visit a home in the shape of a snake and in Australia, tour a home perched on a pole.', 76, 2, 4471463, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1677, 'Towering Cottage, Very Down Under, Hilltop Home', 'A typical British clapboard cottage is atypically placed atop a 70-foot tower. At the other end of the housing height spectrum, an Australian family beats the searing heat by burrowing underground. And it’s back in the clouds for a South African couple living in a luxurious hilltop haven. ', 76, 3, 4471464, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1678, 'Haunted English Country Home, Brazilian Tree House, Junk Decor', 'Rainthorpe is an English country home filled with quite a bit of history, including the ghost of a previous owner. The Baeta home in Brazil is actually built around a massive tree. A New Zealand homeowner has fashioned most of his decor from castoff junk. ', 76, 4, 4471465, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1679, 'African Lodge, Chile Modular Home, New Zealand Haven', 'Visit a lodge in the heart of South Africa where the residents have some unusual neighbor, including antelope and rhino, who drop in for a visit. A simple home in Chile was delivered on the back of a truck and goes by the equally simple name of M7. A tranquil haven of a home in New Zealand includes a huge glass conservatory filled with lush green plants. ', 76, 5, 4471466, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1680, 'French Dome, Australian Plains, British Banquet Hall', 'A family of French circus performers lives in a wooden dome home that rotates 360-degrees with a slight push. A house in Australia can be opened up, allowing for marvelous views of the sun setting over the plains. An 18th century banquet hall includes an ancient ice house 95 feet below the elegant home above.', 76, 6, 4471467, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1681, 'Swedish Cabin, Brazilian Soccer Ball, Australian Glass House', 'An extraordinary Swedish home was built to organically blend into its surroundings and resembles a prehistoric creature with scaly skin walls, windows that look like shining eyes and even antennae. In Brazil, where fans are intense in their love of soccer, a mobile phone executive and his dog live in a huge red ball atop a pole. Down in Australia, an architect creates a funky twist on the tree house with a glass and steel construction. ', 76, 7, 4471468, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1682, 'Netherlands Lighthouse, Casa Dos Estrellas, New Zealand Mud House', 'Thijs and Liliane Spijker live a functioning 1839 lighthouse. The Marken Lighthouse also contains the couple''s large collection of naval memorabilia. Actress Luciana Paluzzi played Fiona Volpe in the James Bond flick Thunderball. Now she lives in a stunning home in Mexico on the Costa Careyes. New Zealander Donn Groom built a house out of mud bricks and generates his own electricity from a nearby waterfall.', 76, 8, 4471469, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1683, 'Welsh Lighthouse, Subterranean in Mexico, Skinny in Amsterdam', 'Danielle and Frank Sheahan turn a short, squatty lighthouse in Wales into a fun eclectic six-bedroom home. Magali Mayorga Rivas and Fernando Becker live with their young family in a unique underground home in Mexico, where the garden is on the roof of their house. Teun Van Wely''s home is just 8-feet wide, and the Amsterdam house comes complete with a mythical story of its creation.', 76, 9, 4471470, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1684, 'Merry Olde Water Tower, Tanks for the Home, Rotating House', 'A British family built a sleek, modern home around a 19th century water tower. And atop the tower host Ruth England finds a roof garden complete with sun loungers and a hot tub, where guests can lie back and look over the countryside. An Australian woman turns three derelict water tanks into a fun-filled family home. A remarkable home in New Zealand can rotate 360 degrees at the touch of a button.', 76, 10, 4471471, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1685, 'New Zealand Beach Cliff, South Africa Retreat, British Fort', 'Karl and Robin Lieffering’s wooden home clings to a rock above the beach near Whangarei. In fact this home is so much a part of the landscape that the rock surface has been left exposed on the interior to make up one wall of the house. Silvio Rech and Lesley Carstens built what looks like a safari retreat in Johannesburg, inspired by traditional African design with round rooms and thatched roofs. The Martello Towers on the coast of Britain were built to repel the French Army during the Napoleonic wars, and now surveyor Guy Ruddy has transformed one into a cozy home. ', 76, 11, 4471472, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1686, 'Notting Hill Minimalist, South Africa Lodge, Netherlands Castle', 'Architect Alex Michaelis spotted a great plot in London''s fashionable Notting Hill district, but planning restrictions limited him from building anything higher than the 6-foot high garden wall. So Michaelis dug a 20-foot pit and built the home in the crater. Mandy and Michael Millsap enjoy a tremendous view from the deck of their South African game lodge home. Kasteel Amstenrade has been in the d''Ansembourg family for over two centuries, and the decor in the 64-plus room castle has hardly changed in that time. ', 76, 12, 4471473, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1687, 'German Castle, Chilean Beach House, New Zealand', 'Schloss Sommersdorf is a 26-room fairy tale castle that has been the Von Crailsheims family homestead since the mid 16th century. Francisca and Juan Forch live in an extraordinary concrete creation with unbeatable views on a beach in Chile. Lea Chapman used found objects to create a unique home in New Zealand with touches of American Wild West, Tudor England and even the South of France.', 76, 13, 4471474, 180);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1688, 'Part 1', 'In the first of two parts, American genealogist Tony Burrows consults biblical historians and archaeologists to identify factual evidence suggesting the existence Jesus'' half and full-blood siblings. Join Burrows as he travels from ancient sites in Judea to forensic labs in Europe to dissect the clues revealing an alternate perspective on Jesus'' family.', 77, 1, 390996, 181);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1750, 'Gerber - 03 - Tod eines Einbrechers', null, 79, 3, 391115, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1751, 'Haferkamp - 04 - Wodka Bitter-Lemon', null, 79, 4, 391116, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1689, 'Part 2', 'The second part of the special examines the practical and moral backing of a family that extended beyond Jesus'' parents to his grandfather Joachim; his cousin John the Baptist; his "brothers" Simon, Jude, Joses and James; his uncle Clophas and his aunt Mary; his "nephew" Simon and his "great nephews" Zoker and James. ', 77, 2, 390997, 181);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1690, 'Arrivederci Venezia', 'Architect and historian Francesco da Mosto embarks on a journey to cross the Mediterranean sea, retracing the trade routes of his ancestors in a sailing clipper from the 19th century.

Before he leaves his home in Venice, however, there is research to do for the voyage and new skills to acquire - not least gaining the respect of the crew of the White Swan, with whom he will spend the next few months in cramped quarters and sometimes dangerous situations as he visits the greatest treasures of the Mediterranean.

Francesco also visits the Doge''s Palace for reminders of the greatest age of Venice, when the city''s empire stretched across the Mediterranean, and he marks the Festival of the Redentore, a fantastic night of Venetian celebrations and fireworks.', 78, 1, 391014, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1691, 'Istria and Split', 'Architect and historian Francesco da Mosto embarks on a journey to cross the Mediterranean sea. Francesco and the crew of the Black Swan hit the open sea and head down the Croatian coast. The hard life of a working sailor is creating some problems for our doughty presenter, but he is learning the ropes as best he can. His first challenge is to scale the heights of the main mast to hang the Venetian flag aloft. In spite of his best attempt to hide his fear, it''s a terrifying ordeal.

Next stop is Pula and the extraordinary amphitheatre, where fights to the death were regular Roman entertainment, as well as the Temple of Augustus and the great Arch of the Sergians. Nearby, Francesco goes in search of the extraordinary fresco of the Dance of Death in the little village of Beram. But here he has every traveller''s nightmare - how do you find the villager who holds the key to the church?

Next up is a stopover at the isolated lighthouse of Porer which has saved many a Venetian ship navigating these treacherous waters. And then to the beautiful city of Split where the astonishing palace of Diocletian - the oldest inhabited palace in the world. Only it is not lived in by any one rich or Royal - after Diocletian moved on it became home to the biggest collection of squatters a palace has ever seen. And now it is still packed to the rafters with people and their ramshackle conversions with some architectural oddities to show for it.

On the coast of Split the trip ends with Francesco and the crew playing the oldest ball game of the region - the weird and wonderful game of Picigin - a cross between tennis and football, played in the sea. Francesco tries to understand the rules but it''s all Croatian to him.', 78, 2, 391015, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1692, 'Bosnia and Dubrovnik', 'Conditions at sea are turning rough as Francesco da Mosto continues his journey, sailing from Venice to Istanbul. The coastline is stunning but he cannot fail to notice the scars of war that followed the collapse of Yugoslavia.

His first stop is the great Mostar bridge - an ancient symbol of unity destroyed in a moment of madness in war and now rebuilt. Once again the young men of the town take their lives in their hands and leap from the bridge to prove their manhood. Francesco travels to nearby Medugorje where the Virgin Mary appears to the villagers promising a new era of peace and prosperity.

Then begins some island-hopping and reminders of Venice - the beautiful island of Hvar is like a home from home - so the crew enjoy their first night out on the town. Heading for Korcular, Francesco berates the locals for trying to claim it was birthplace of Marco Polo.

Then on to the medieval city of Dubrovnik, a great trading city-state and still one of the most beautiful cities in the world. What better place for Francesco to discover the secret of eternal youth than in the great Franciscan monastery at the heart of the old town.', 78, 3, 391016, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1693, 'Montenegro and Albania', 'On the next step of his sea voyage from Venice to Istanbul, Francesco da Mosto is sailing into the Bay of Kotor where Venetian sailors knew they were leaving safe waters for the dangers of pirates and the ships of rival powers.

So perhaps it''s wise for Francesco and the crew to stop off at the magical little church of Santuario della madonna della scarpello, perched on a few rocks in the open sea. Here Venetian sailors prayed for a safe voyage or, if they were lucky, where they offered thanks to God for a safe return.

Many Venetian ships came to grief here - if not through attack then they fell victim to the elements. Off the coast of Montenegro, Francesco dives to a shipwreck deep on the ocean bed.

Next is Ulcinj - a pirate fortress town - where captives taken by pirates were held before being sold into slavery. Even today it has an air of menace. Francesco sees the original cells where Venetians unlucky enough to fall into the hands of the pirates were imprisoned.

Next stop is Durres on the coast Albania - poor and facing an uncertain future after the all-too-recent rule of Communist dictator, Enver Hoxha. The capital city of Tirana is still the stuff of spies and Cold War intrigue but the colourful city Mayor is pinning his hopes to a dramatic make-over of the city.', 78, 4, 391017, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1694, 'Corfu and Greece', 'Architect and historian Francesco da Mosto embarks on a journey across the Mediterranean sea. As Francesco and the crew of the Black Swan enter Greek waters, the boat is making the fastest headway since leaving Venice on the long voyage to Istanbul. But disaster strikes as the mainsail rips and they limp into the next port, the island of Corfu. Corfu has more relics of British rule than Venetian, and Francesco is soon drawn into a game of cricket on the island''s best cricket pitch.

In the romantic setting of the British Garden Cemetery there are many reminders of British occupation. And Corfu is the island setting of the hugely popular novel, My Family and Other Animals. Author Gerald Durrell is long since dead, but his good friend David Bellamy is there to point Francesco in the direction of the island''s animal life. While the Black Swan puts in for repairs Francesco takes the ferry to the Greek coast and heads inland. His first stop is the surprising town of Ioninna - a little bit of Turkey in the middle of Greece. Once it was the stronghold of the evil Ali Pasha whose cruelty was the talk of Europe at the beginning of the 19th century. But peace and hope is restored as Francesco ascends the incredible mountain realm of Meteora - a sacred kingdom in the clouds. Here ancient monasteries perch perilously on the mountaintops with, seemingly, no way to get up to them. Inside are some of the least seen but most brilliant frescoes of the medieval age.', 78, 5, 391018, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1752, 'Veigl - 06 - Das zweite Geständnis', null, 79, 5, 391117, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1753, 'Haferkamp - 05 - Die Abrechnung', null, 79, 6, 391118, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1754, 'Brammer - 02 - Mordgedanken', null, 79, 7, 391119, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1755, 'Lutz - 05 - Schöne Belinda', null, 79, 8, 391120, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1756, 'Marek - 05 - Urlaubsmord', null, 79, 9, 391121, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1757, 'Haferkamp - 06 - Treffpunkt Friedhof', null, 79, 10, 391122, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1758, 'Schmidt - 01 - Tod im U-Bahnschacht', null, 79, 11, 391123, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1759, 'Finke - 05 - Kurzschluß', null, 79, 12, 391124, 188);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1760, 'Lutz - 06 - Augenzeuge', null, 79, 1, 391125, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1761, 'Gerber - 04 - Kassensturz', null, 79, 2, 391126, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1762, 'Haferkamp - 07 - Zwei Leben', null, 79, 3, 391134, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1763, 'Konrad - 06 - Zwei Flugkarten nach Rio', null, 79, 4, 391135, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1695, 'The Gulf of Corinth', 'Architect and historian Francesco da Mosto embarks on a journey across the Mediterranean sea. Amidst a sea of dolphins, The Black Swan enters the Gulf of Corinth off the coast of Greece as Francesco continues his voyage from Venice to Istanbul. The boat must manoeuvre under the Rio Antirio bridge and then navigate the narrow Corinth Canal, which separates mainland Greece from the Peloponnese.

At Mount Parnassus, Francesco visits the mystical site of the great Delphic Oracle, the greatest prophetess of the ancient world. She would talk in riddles but her pronouncements determined everything from events of state to romance and marriage. Mount Parnassus was also home to the Pythian games, forerunners of the modern Olympic Games.

Next stop is Athens. Often dismissed as a busy, noisy and overcrowded city, the Greeks prefer to see Athens as the biggest village in the country. Athens was the capital of the ancient Classical world and home to the Acropolis. Birthplace of Western Art, it is also the site of one of Venice''s greatest atrocities against art and culture - an attack on the sacred temple of Parthenon that almost destroyed it. The attack also resulted in a massive loss of human life. Francesco sees the damage from the 700 cannonballs, still evident today. Francesco also has a date in Athens - the woman with the greatest singing voice ever to emerge from Greece - Nana Mouskouri. As they stroll through the romantic setting of Athens'' National Gardens, can Francesco persuade Nana to serenade him?', 78, 6, 391019, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1696, 'The Peloponnese', 'Architect and historian Francesco da Mosto embarks on a journey across the Mediterranean sea. The Black Swan docks near Athens - on route for Istanbul - so Francesco heads off alone on motorbike into the wild west of Greece, the Peloponnese. Here the people in the south have a reputation for, at best, unfriendliness, and it isn''t long before Francesco runs into trouble with the locals. But there is plenty to marvel at.

Mystra, the ruined Byzantine town, once known as ''the Florence of the East'', the ancient theatre at Epidaurus where a stage-whisper can be heard throughout an auditorium seating thousands, a tiny cave-like church that boasts incredible frescoes, and Vathia - the abandoned town of towers where neighbour fought against neighbour to get the upper hand.

Meanwhile, in the aptly named region of Arkadia, Francesco finds a sweet surprise - a field of beehives where the bees make the best honey in Greece and the biggest worry bead shop in Greece. At Methoni, he visits a great Venetian fortress at the sea''s edge, the site of a massacre of his ancestors at the hands of the Ottoman empire.', 78, 7, 391020, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1697, 'The Cyclades', 'Francesco da Mosto continues his sea tour around the Mediterranean from Venice to Istanbul by visiting the magical, mystical Greek islands known as the Cyclades.

First stop is the most sacred island of all, Delos, the birthplace of the god Apollo. Francesco encounters the lions of Delos and the great phalli of Dionysus.

On Tinos, a place of miracle and pilgrimage, he meets a woman who crawls on her hands and knees for a kilometre uphill to give thanks to the Virgin Mary for the recovery of her sick husband.

The island of Naxos was a key port for the Venetian empire and even the houses feel Italian - a home-from-home for the travel-weary Francesco, who enjoys the island''s traditional and very strong liqueur.

After a spot of octopus hunting, Francesco arrives at the great sunken, flooded volcano of Santorini which boasts a civilisation older than the Classical world and the best sunset in Greece.', 78, 8, 391021, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1698, 'Crete', 'Francesco da Mosto continues his sea tour around the Mediterranean. The stormy seas of the Cyclades take a turn for the worse as Francesco approaches Crete, the biggest of the Greek islands. As the storm passes, his first stop is the beautiful but abandoned island of Spinalonga - just off the coast of Crete. It is an island haunted by sadness and tragedy.

Docking at Iraklion, capital of Crete, Francesco sets off for the deep underground caves where Zeus, king of the gods, is reputed to have been born. Just down the road lies the immense palace of Knossus - excavated by an Englishman - reputedly the home to King Minos and the legendary Minotaur. There, he tries his hand at the ancient Cretan art of pot-making.

At the beautiful monastery of Arkadhi he stands in the very spot Cretan independence fighters blew themselves up with gunpowder rather than be captured. Their skulls, together with the remains of their enemies, are stacked on shelves in the monastery.

Then a surprise for Francesco - an invitation to a Cretan wedding - but first he must help prepare the wedding feast. With 1,500 guests invited, the task is enormous: 150 sheep make up the main course alone. Francesco dances until dawn and the boat has left Crete before he even knows it.', 78, 9, 391022, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1699, 'The Dodecanese', 'Francesco da Mosto has been at sea for two months now as he travels from Venice to Istanbul. He approaches the last group of the Greek islands - the Dodecanese.

Rhodes was home to the legendary crusader knights of St John. Over the centuries, it was repeatedly caught up in fighting between the Christian and Islamic worlds, and even today it has the feel of a fortress island.

Next stop is the exotic Turquoise Coast. The coast is too shallow for the Black Swan to explore, so Francesco swaps boats and heads for the extraordinary Dalyan Tombs - great classical burial temples carved out of the high clifftops. They were deliberately carved high in the mountains so the spirits of the dead had less far to travel to heaven. On the way he encounters the huge loggerhead turtles of the region, which enjoy nothing more than crunching their way through the shells of giant crabs.

One of the most unexpected islands of the area - and an uncomfortable reminder for Francesco of his country''s recent past - is the island of Leros. Mussolini redesigned Leros as a launch pad for his dreams of a Fascist empire that would dominate the Mediterranean. He rebuilt the main town as a military town with wide straight boulevards for army parades.

Next stop is Patmos, where St John the Divine is said to have experienced his revelations that make up the Book of Revelation in the Bible - foretelling the end of the world and the final struggle between God and Satan. The Cave of the Apocalypse on Patmos is said to be the actual site, and Francesco sees the crack in the roof of the cave out of which apparently the voice of God emerged.

And, at last, a surprise for Francesco renders him speechless.', 78, 10, 391023, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1700, 'The Dardanelles', 'Francesco da Mosto reaches the outer limits of the old Venetian empire on his voyage from Venice to Istanbul. Now he enters Turkish waters, the Strait of the Dardanelles, gateway to the east.

First stop are the haunting beaches of Gallipoli - scene of one of the worst massacres of the First World War. It was here that the Anzac forces of New Zealand and Australia were decimated as, alongside British troops, they tried to retake the Dardanelles.

After the bumpiest of bus rides inland, Francesco arrives at the city of Edirne, which boasts Turkey''s finest - and biggest - mosque. The incredible acoustics of the giant dome are demonstrated by a local imam with the biggest pair of lungs in town.

In Edirne the most popular sport is wrestling. Naked, except for skin-tight leather trousers and covered in olive oil, the local wrestlers are giants of men. The sport is a severe trial of strength and the rules uncertain - it''s even acceptable to put your hands down your opponent''s trousers. Francesco is forced to give it a try.

The White Swan embarks on its final lap to Istanbul. But one detour is irresistible - to Bursa, birthplace of the doner kebab.', 78, 11, 391024, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1701, 'Istanbul', 'Franceso da Mosto reaches Istanbul, the final stop of his marathon voyage from Venice following the trading routes of the Venetian empire.

Istanbul straddles the Bosphorus as well as two continents. It has been home of both Christian and Islamic civilisations, and Francesco is eager to explore this great city.

First stop is the Palace of Topkapi - centre of power for the Ottoman empire. Most haunting of all is the palace harem, a prison to the sultan''s many concubines. Beneath the city is a vast network of underground tunnels dating back more than a thousand years.

Donning hard hat and waders, Francesco enters one of the huge underground cisterns - looking more like a Roman emperor''s palace than a water tank. Two giant heads of Medusa lie abandoned in the water.

Istanbul''s Grand Bazaar is one of the world''s biggest undercover markets and Francesco has a mission in mind. He is going to learn how to sell a Turkish carpet. As he learns the secrets of the trade, he is shown one of the most expensive and beautiful carpets in the city.

A visit to Istanbul would not be complete without the experience of a Turkish bath, however, so Francesco offers himself up for a vigorous soap and scrub. But soon it is time to say goodbye. A final celebration aboard the Black Swan with its long-suffering crew brings Francesco''s journey to an end.', 78, 12, 391025, 182);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1702, null, null, 79, 1, 391053, 183);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1703, null, null, 79, 2, 391054, 183);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1704, 'Kressin - 01 - Kressin und der tote Mann im Fleet', null, 79, 1, 391055, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1705, 'Lutz - 01 - Auf offener Straße', null, 79, 2, 391056, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1706, 'Kressin - 02 - Kressin und der Laster nach Lüttich', null, 79, 3, 391057, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1707, 'Konrad - 01 - Frankfurter Gold', null, 79, 4, 391058, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1708, 'Kressin - 03 - Kressin stoppt den Nordexpress', null, 79, 5, 391059, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1709, 'Finke - 01 - Blechschaden', null, 79, 6, 391060, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1710, 'Trimmel - 02 - Exklusiv!', null, 79, 7, 391061, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1711, 'Trimmel - 03 - Flug AE 612 ohne Landeerlaubnis', null, 79, 8, 391062, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1712, 'Trimmel - 04 - Der Richter in Weiß', null, 79, 9, 391063, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1713, 'Marek - 01 - Mordverdacht', null, 79, 10, 391064, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1714, 'Kasulke - 01 - Der Boss', null, 79, 11, 391065, 184);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1715, 'Veigl - 01 - Münchner Kindl', null, 79, 1, 391066, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1716, 'Pflüger - 01 - Wenn Steine sprechen', null, 79, 2, 391067, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1717, 'Konrad - 02 - Der Fall Geisterbahn', null, 79, 3, 391068, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1718, 'Lutz - 02 - Kennwort Fähre', null, 79, 4, 391069, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1719, 'Kressin - 04 - Kressin und die Frau des Malers', 'Im Kölner Raum häufen sich Einbrüche in Kirchen und Museen. Eines Tages machen Zollbeamte in der Frachtabteilung des Flughafens eine merkwürdige Entdeckung: Eine Sendung Schaufensterpuppen hat zu lange in der Sonne gestanden, die Figuren - offensichtlich aus Wachs gefertigt - beginnen zu zerfließen, unter der Oberfläche einer Puppe erscheint eine kostbare Madonna aus dem 16. Jahrhundert. Die Spur führt nach Amsterdam.

Kressin sieht sich einer hinreißenden Frau gegenüber, der Frau eines willenlosen Malters, die zu allem fähig ist und selbst vor einem Mord nicht zurückschreckt.', 79, 5, 391070, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1720, 'Finke - 02 - Strandgut', 'Der 53-jährige Dekan Herbert Sebastian kommt am 23. Juni von einem Sylt-Urlaub zurück. Nach Auskunft seiner Frau ist er verstört und "ein völlig anderer Mensch". Am 5. Juli begeht er Selbstmord. Sein Bankkonto: null Komma null. Wo die 15.000 Euro geblieben sind, die er persönlich abgehoben hat, ist ungewiss.

Robert Nölle aus Frankfurt, Ingenieur für Rohfasergewinnung beim Industriekonzern Baltus und zudem Landtagsabgeordneter, ist 44 Jahre alt, verheiratet und hat zwei Kinder. Vom 2. bis 10. Juli ist er auf Kurzurlaub in Kampen. Wieder zu Hause, unterschlägt er 10.000 Euro. Es gibt keine Erklärung für den Verbleib des Geldes.

Der 62-jährige Dr. Georg Breitenbach, Beauftragter der Bundesregierung für Hochschulfragen, wird am 2. August auf einem einsamen Wanderweg zwischen Wenningstedt und Kampen zusammengeschlagen. Er kann sich an nichts mehr erinnern. Friedrich Wilhelm Warrlau, angehender Staatssekretär im Innenministerium, kommt hilfesuchend aus den Sylter Dünen gelaufen. Sein Arm ist gebrochen und er hat mehrere kleinere Verletzungen. Angeblich ist er unglücklich in die Scherben einer zerbrochenen Flasche gefallen.

Innerhalb weniger Tage werden die Leichen zweier hübscher junger Mädchen am Strand von Kampen/Sylt angespült. Die eine, Christa Kassdorf, hatte kurz vorher den zum Urlaub auf der Insel weilenden Regierungsdirektor Warrlau kennen und schätzen gelernt. Er allerdings dürfte sich an ihrem Tod kaum schuldig gemacht haben: denn als sie ertrank, lag er übel zugerichtet in der kleinen Privatklinik des Inselarztes Dr. Kühne. Die andere Tote, Manuela Borsdorf, war mit diesem Arzt eng befreundet. Sie hatte allerdings dieselben gemeinsamen Bekannten wie Christa Kassdorf: Das Brüderpaar Helmut und Karli Possky.

Wenig später liegt die nächste Leiche am Strand: Manuela, die Geliebte des Kampener Arztes Dr. Kühne. Auch sie stand mit den Erpressern in Verbindung. Selbstmord? Finkes Ermittlungen laufen auf Hochtouren.', 79, 6, 391071, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1721, 'Kressin - 05 - Kressin und der Mann mit dem gelben Koffer', 'Vor dem Portal des Bundeshauses bricht ein Mann tödlich getroffen zusammen. Der Mörder kann unerkannt entkommen. Der Tote soll einen gelben Koffer bei sich gehabt haben - doch dieser Koffer ist verschwunden. Kressin hat den gelben Koffer gesehen und einiges spricht dafür, dass die Spur einmal mehr zu Gansterboß Sievers führt.

Sievers beschafft sich Kriegsmaterial, das von der Bundeswehr ausgesondert und zum Verschrotten bestimmt wurde. Auf diese Weise kann er seine Konkurrenten unterbieten. Konkurrent für Sievers ist Nobiling. Mit einem großangelegten Auftritt im Bonner Bundeshaus, sollte Sievers die einträgliche Bezugsquelle verstopft werden. Die Beweise befanden sich in dem gelben Koffer. Kressin gelingt es, nicht nur Sievers, sondern auch Nobiling zu stellen und der Polizei zu übergeben.', 79, 7, 391072, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1722, 'Trimmel - 05 - Rechnen Sie mit dem Schlimmsten', '"Bitte, nicht...", stammelt Jakob Tonndorf, Leiter eines Hamburger Rechenzentrums, angstvoll. Dann sackt er, von zwei Pistolenschüssen getroffen, vor einem Computer zusammen. Der Mörder drückt dem Toten einen länglichen Bogen Papier in die Hand, ein Computer-Protokoll mit den Textfetzen: "Angebot Nierentransplantat... an Professor Becker vermittelt." Diese Angaben lenken die Nachforschungen des Hauptkommissars Paul Trimmel in eine bestimmte Richtung. Von Tonndorfs Mitarbeiterin Jill Biegler erfährt er, dass der Computer die Daten zwischen den Nierenspender und den Anwärtern auf ein Ersatzorgan vergleicht und damit über das Schicksal des Nierenempfängers entscheidet. Besteht die Möglichkeit zu Manipulationen?

Trimmels Verdacht wächst, als die Polizei in Jills Wohnung gerufen wird. Jemand hat den Gashahn im Badezimmer geöffnet. Als das Mädchen wieder zu Bewusstsein kommt, flüstert es: "Lassen Sie sich vom Computer die Daten über Professor Lachnitz geben." Der Chirurg mit seinen ganz eigenen Vorstellungen vom Eintritt des klinischen Todes hat in den letzten Monaten eine Reihe von Nieren für Organverpflanzung geliefert. Nach dem Gespräch mit Professor Lachnitz verunglückt Trimmel schwer, weil die Steuerung seines Wagens versagt. Sollte er das dritte Opfer nach Jakob Tonndorf und Jill Biegler werden?

Der Kommissar verstärkt seine Bemühungen, den Fall zu klären. Sein Weg führt zum Aufsichtsrat, der die Organvermittlungen durch den Computer überwacht, und zu Professor Becker nach München. Der besessene Chirurg hat in seiner Privatklinik ungewöhnlich viele Nieren auf vermögende Patienten übertragen. Unverblümt beschuldigt Trimmel den Arzt, er habe Tonndorf bestochen. Ehe Becker richtig antworten kann, bricht der Hauptkommissar zusammen. Eine rasche Operation des Chirurgen rettet ihm das Leben.

Als Trimmel aus seinen Fieberträumen erwacht, in denen er mit den Mordverdächtigen ringt, erfährt er: Professor Becker und seine Frau haben Selbstmord verübt. Inzwischen verhören seine Kollegen Jill Bieglers zwielichtigen Freund Bertie Weyer. Sie finden auch heraus, dass Jills Schwester Helena, die ebenfalls mit Bertie befreundet war, zu den Anwärtern auf eine Niere gehört. Mehrere Personen hatten Grund, den bestechlichen Jakob Tonndorf aus dem Weg zu räumen. Während eines Verhörs von Jill und Bertie macht der Kriminalbeamte Petersen plötzlich eine verblüffende Beobachtung. Wenig später können die Beamten ihrem Kollegen Trimmel im Krankenhaus die Lösung des Falls mitteilen.', 79, 8, 391082, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1723, 'Kasulke - 02 - Rattennest', 'Ein kleiner Ganove, der "untergetaucht" ist, wird von seiner Frau, seinem Sohn und Kommissar Kasulke gesucht. Er und seine Familie geraten dabei mehr und mehr in die Fänge einer Bande, deren Spezialität es ist, sich durch Erpressung Kneipen- und Barbesitzer gefügig zu machen und "abzukassieren".

Dieser Fall führt zu einer Eskalation, an deren Ende jener ehemals kleine Ganove, inzwischen zu zweifelhaftem Ruhm in seinen Kreisen gelangt, bei der Abrechnung mit seinem Rivalen den Tod findet, während sein halbwüchsiger Sohn sich wie eine "Ratte" davonmacht.', 79, 9, 391084, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1724, 'Marek - 02 - Die Samtfalle', null, 79, 10, 391085, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1764, 'Veigl - 07 - Wohnheim Westendstraße', null, 79, 5, 391136, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1765, 'Haferkamp - 08 - Fortuna III', null, 79, 6, 391137, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1766, 'Brammer - 03 - ... und dann ist Zahltag', null, 79, 7, 391138, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1767, 'Marek - 06 - Annoncen-Mord', null, 79, 8, 391139, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1768, 'Trimmel - 08 - Trimmel und der Tulpendieb', null, 79, 9, 391140, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1769, 'Haferkamp - 09 - Abendstern', null, 79, 10, 391141, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1770, 'Schmidt - 02 - Transit ins Jenseits', null, 79, 11, 391142, 189);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1771, 'Veigl - 08 - Das Mädchen am Klavier', null, 79, 1, 391143, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1772, 'Lutz - 07 - Himmelblau mit Silberstreifen', null, 79, 2, 391144, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1773, 'Konrad - 07 - Flieder für Jaczek', null, 79, 3, 391145, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1774, 'Finke - 06 - Reifezeugnis', null, 79, 4, 391146, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1725, 'Konrad - 03 - Kennwort Gute Reise', 'Rudi, Jürgen und Fred sind gute Freunde. Keiner von ihnen hat einen richtigen Beruf erlernt; Rudi arbeitet als Aushilfskraft in einer Großmarkthalle, Jürgen geht mit Zeitschriften hausieren, Fred verkloppt alle möglichen Artikel, die auf Auktionen ersteigert. Viel springt dabei nicht heraus. Um endlich an das große Geld zu kommen, planen sie einen Überall auf den Geldtransportwagen einer Sparkasse.

Ihr Plan basiert auf einem Trick, mit dem sie den Geldtransportwagen in einem abgelegenen Waldstück zum Halten bringen wollen. Anfangs klappt alles wie erhofft. Selbst Kommissar Konrads Assistent, der den Transport an diesem Tage vorsorglich begleitet, weil die beiden Fahrer verdächtige Beobachtungen gemacht haben, lässt sich überlisten. Den größten Teil der Beute vergraben die drei jungen Leute im Wald, dann trennen sie sich, um genau nach Plan ein fingiertes Alibi zu inszenieren, falls die Polizei ihnen auf die Spur kommen sollte.

Zunächst finden die Beamten keinen Anhaltspunkt, der irgendeinen Hinweis auf die Täter liefern könnte. Trotzdem lässt sich Kommissar Konrad nicht aus der Ruhe bringen. Er weiß, wer Geld raubt, will es auch ausgeben. Außerdem rechnet er mit dem verhängnisvollen Fehler, den jeder Verbrecher früher oder später macht. In diesem Fall braucht Kommissar Konrad gar nicht lange zu warten, denn Rudi selbst bringt die Polizei auf seine Spur. Nur sind er und seine Freunde damit noch lange nicht überführt.', 79, 11, 391088, 185);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1726, 'Kressin - 06 - Tote Taube in der Beethovenstraße', 'Ein Mann bricht in der Beethovenstraße zusammen. Sein Mörder flüchtet. Der Tote, ein Privatdetektiv aus New York, war einem internationalen Erpresserring auf der Spur.

Unterstützt von Zollfahnder Kressin übernimmt Sandy, des Toten Kompagnon, den Fall. Es gelingt ihm, sich in den Erpresserring einzuschmuggeln. Doch die Turbulenz des Kölner Karnevals macht den Fall immer verwirrender, undurchschaubarer und endet schließlich in einem finsteren, blutigen Alptraum.', 79, 1, 391090, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1727, 'Böck - 01 - Ein ganz gewöhnlicher Mord', 'An einem Abend im Oktober 1970 lernen sich im Wartesaal des Bremer Hauptbahnhofes zufällig vier Männer kennen. Völlig unabhängig voneinander sind sie nach Bremen gekommen: Friedhelm Sacher, Vertreter für Damenoberbekleidung, der gerade an diesem Tag einen günstigen Geschäftsabschluß tätigen konnte, Michael Puczek, der beim Aufbau des Freimarkts Arbeit sucht, der Seemann Kurt Westhoff, der als Abgemusterter gerade seine Heuer ausgezahlt bekam und der Aushilfskellner Wolfgang Henning, der nur einen Besuch in Bremen machen wollte und nun auf die Abfahrt seines Zuges nach Delmenhorst wartet.

Nach einigen Gläsern verstehen sich die vier bereits recht gut. Einer von ihnen lädt zu immer neuen Lokalrunden ein. Man beschließt, den angebrochenen Abend miteinander zu verbringen. Nach einem Bummel durch zahlreiche Kneipen machen sich die vier zu einem Lokal in der Nähe Bremens auf, das Michael Puczek bei einem Aufenthalt in der Stadt im vergangenen Jahr kennengelernt hat.
Am nächsten Morgen ist über Polizeifunk folgende Durchsage zu hören: "Unbekannte männliche Leiche hinter dem Borgfelder Landhaus - Kripo erhält Kenntnis". Hauptkommissar Böck, Leiter des 1. K. in Bremen, leitet sofort die notwendigen Maßnahmen ein: Schutzpolizisten sperren den Leichenfundort ab, Spezialisten der Spurensicherung suchen nach Hinweisen, Reifen- und Schuhsohlenabdrücke werden gesichert, die Bewohner der umliegenden Häuser verhört. Doch niemand hat in der Nacht etwas Auffälliges bemerkt. Da der oder die Täter alle Hinweise, die zur raschen Identifizierung des Opfers führen könnten, sich entfernt haben, verliert Hauptkommissar Böck wichtige Zeit. Erst nachdem der Name des Toten herausgefunden ist, wird es möglich, Schritt für Schritt den Aufenthalt des Ermordeten in Bremen zu verfolgen.
Trotz des Großeinsatzes der Polizei und der Überprüfung aller Spuren und Hinweise tappt Böck völlig im Dunkeln. Dabei gibt es bei der Kripo eine Faustregel, die fast immer zutrifft: Hat der Kommissar in den ersten fünf Tagen nach einer Straftat immer noch keine heiße Spur, die ihn zum Täter führen kann, ist die Lösung des Falles meist unmöglich. Zeugen können sich dann nicht mehr genau erinnern, Spuren werden undeutlich, Hinweise aus der Bevölkerung spärlicher. Hauptkommissar Böck sitzt in dieser Zeit häufig an seinem Schreibtisch und brütet über den Spurenfotos, die seine Beamte aufgenommen haben. Sollte er etwas übersehen haben?', 79, 2, 391092, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1728, 'Gerber - 01 - Cherchez la femme oder die Geister vom Mummelsee', null, 79, 3, 391093, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1729, 'Lutz - 03 - Stuttgarter Blüten', 'In Stuttgart kommen mit schöner Regelmäßigkeit monatlich zwei falsche Hunderter unter die Leute. Der Hersteller ist ein alter Kauz, der in untergeordneter Stellung in einer Druckerei arbeitet. Bei einem Autounfall in der Nähe der Strafanstalt Stammheim fällt der Polizei eine neue 100-Markschein-Druckplatte in die Hände. Der Verunglückte ist nicht vernehmungsfähig. Die Druckplatte ist vergleichbar mit der im ganzen Bundesgebiet lange gesuchten Serie. Der Unfallort liegt so, dass anzunehmen ist, die Druckerei befinde sich in Stammheim. Die Polizei sucht jedoch dort vergeblich. Da spielt ihnen der alte Kauz einen seiner falschen Hunderter mit einem verschlüsselten Hinweis zu, den Kommissar Lutz löst. Die gesuchte Falschgeldserie wird in der Gefängnisdruckerei hergestellt. Der kauzige Alte kann nun ungestört weiter sein Minigehalt aufbessern.', 79, 4, 391094, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1730, 'Finke - 03 - Jagdrevier', 'Dieter Brodschella, der nur noch kurze Zeit seiner Haft zu verbüßen hatte, ist bei Außenarbeiten entwichen. Er will Kresch umbringen. Kresch ist der König von Niederau. Ihm gehören fast alle Grundstücke und Häuser in dem kleinen, abgelegenen Dorf in Schleswig-Holstein. Nach einer Silvester-Party bei Kresch wurde Brodschellas Freundin tot aufgefunden. Kommissar Finke soll nun Brodschella einfangen und Kresch beschützen. Nur: Brodschella will sich nicht einfangen lassen, und Kresch will sich nicht beschützen lassen.

Heise, Ortspolizist in Niederau, kurz vor der Pensionierung, soll Finke helfen. Aber: "Sie werden bei den Leuten hier, schätze ich, wenig Hilfe finden. Also wir sind hier eigentlich alle irgendwie miteinander verwandt," meint Heise. Er ist der Schwager von Brodschella.

Oberrat Mertens, Finkes Vorgesetzter, ist auch nicht sehr glücklich. Er wirft Finke vor: "Sie verwechseln vielleicht ganz einfach die Personen". Es sei zwar bedauerlich, dass eine alte Frau sich das Leben genommen haben, weil Kresch ihr die Miete heraufsetzte. Und die minderjährige Heide Borcherts habe vor der Polizei ausgesagt, dass ein Landstreicher sie vergewaltigt habe. Aber: "Für unseren Fall, Herr Finke, ist das gänzlich unerheblich."', 79, 5, 391095, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1731, 'Veigl - 02 - Weißblaue Turnschuhe', 'Auf einem Münchner Friedhof entreißt ein Penner einer alten Frau die Handtasche mit Brille und zehn Mark. Die alte Dame kann sich nur noch daran erinnern, dass der Täter weiß-blaue Turnschuhe getragen hat.

Anstatt in den wohlverdienten Urlaub zu fahren, übernimmt Kriminaloberinspektor Veigl diesen Bagatellfall, weil er sich über die Denkweise des Täters ärgert, der sich an einer 83-Jährigen vergriffen hat, für die zehn Mark ein kleines Vermögen', 79, 6, 391096, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1732, 'Kressin - 07 - Kressin und die zwei Damen aus Jade', null, 79, 7, 391097, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1733, 'Trimmel - 06 - Platzverweis für Trimmel', null, 79, 8, 391098, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1734, 'Liersdahl - 02 - Das fehlende Gewicht', null, 79, 9, 391099, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1735, 'Veigl - 03 - Tote brauchen keine Wohnung', null, 79, 10, 391100, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1736, 'Marek - 03 - Frauenmord', null, 79, 11, 391101, 186);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1737, 'Finke - 04 - Nachtfrost', null, 79, 1, 391102, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1738, 'Konrad - 04 - Eine todsichere Sache', null, 79, 2, 391103, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1739, 'Gerber - 02 - Playback oder die Show geht weiter', null, 79, 3, 391104, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1740, 'Haferkamp - 01 - Acht Jahre später', null, 79, 4, 391105, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1741, 'Veigl - 04 - 3:0 für Veigl', null, 79, 5, 391106, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1742, 'Haferkamp - 02 - Zweikampf', null, 79, 6, 391107, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1743, 'Trimmel - 07 - Gift', null, 79, 7, 391108, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1744, 'Lutz - 04 - Gefährliche Wanzen', null, 79, 8, 391109, 187);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1777, 'Schäfermann - 01 - Wer anderen eine Grube gräbt', null, 79, 7, 391149, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1778, 'Veigl - 09 - Schüsse in der Schonzeit', null, 79, 8, 391150, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1779, 'Haferkamp - 11 - Drei Schlingen', null, 79, 9, 391151, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1780, 'Marek - 07 - Der vergessene Mord', null, 79, 10, 391152, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1781, 'Schmidt - 03 - Feuerzauber', null, 79, 11, 391153, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1782, 'Brammer - 04 - Das stille Geschäft', null, 79, 12, 391154, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1783, 'Haferkamp - 12 - Das Mädchen von Gegenüber', null, 79, 13, 391155, 190);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1784, 'Lutz - 08 - Rot.. rot.. tot', null, 79, 1, 391156, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1785, 'Buchmüller - 01 - Der Mann auf dem Hochsitz', null, 79, 2, 391157, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1786, 'Bergmann - 01 - Zürcher Früchte', null, 79, 3, 391158, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1787, 'Trimmel - 09 - Trimmel hält ein Plädoyer', null, 79, 4, 391159, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1788, 'Haferkamp - 13 - Rechnung mit einer Unbekannten', null, 79, 5, 391160, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1789, 'Veigl - 10 - Schlußverkauf', null, 79, 6, 391161, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1790, 'Haferkamp - 14 - Lockruf', null, 79, 7, 391162, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1791, 'Finke - 07 - Himmelfahrt', null, 79, 8, 391163, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1792, 'Haferkamp - 15 - Der Feinkosthändler', null, 79, 9, 391164, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1793, 'Marek - 08 - Mord im Krankenhaus', null, 79, 10, 391165, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1794, 'Behnke - 01 - Sterne für den Orient', null, 79, 11, 391166, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1795, 'Veigl - 11 - Schwarze Einser', null, 79, 12, 391167, 191);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1796, 'Haferkamp - 16 - Die Kugel im Leib', null, 79, 1, 391168, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1797, 'Konrad - 08 - Der King', null, 79, 2, 391169, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1798, 'Nagel - 01 - Alles Umsonst', null, 79, 3, 391170, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1799, 'Schäfermann - 02 - 30 Liter Super', null, 79, 4, 391171, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1800, 'Veigl - 12 - Ende der Vorstellung', null, 79, 5, 391172, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1801, 'Haferkamp - 17 - Ein Schuss zuviel', null, 79, 6, 391173, 192);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1802, 'Pilot', null, 80, 1, 391073, 193);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1803, 'Funeral Parlor Murder ', 'When an extremely jealous husband who runs his own mortuary presses his wife to be his assistant, tensions rise. As much as she hates her sales job, she claims that the funeral business gives her the creeps. But what does she have reason to fear more- working with dead bodies, or becoming one herself at the hands of her husband? And if he doesn''t let up, what is she capable of to preserve her freedom?
Special Airtime: 10:30 pm', 80, 2, 391074, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1804, 'Storage Unit Murder ', 'Any marriage that starts out with a pregnant bride vomiting all over the floral arrangements is bound to have some problems. So when the young bride gets frustrated by her husband’s lethargy and drug dealing, she catches the eye of the handsome gentleman who moderates her weekly book club. Needless to say, these developments get her husband off the couch, but what will be in store for him- or her?', 80, 6, 391075, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1805, 'The Airplane Murder ', 'They say that a marriage takes work. Well, so does Blackmail. When a wife attempts to extort cash from her husband during divorce proceedings, what had been a bad relationship turns murderous. Placed against a backdrop of betrayal, wealth, private planes and illicit drugs, the viewer is forced to guess- who will be the killer, and who will be killed?', 80, 1, 391076, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1806, 'Car Keys Murder', 'When a football hero and his "trophy" bride finally tie the knot, their picture-perfect love is soured by adultery, and shattered dreams lead to homicidal rage. But when the bond of love is untied, whose neck will be caught in its noose?', 80, 7, 391077, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1807, 'Time Capsule Murder', 'After Ned and Janet follow their Vegas wedding with a winning streak at the casino, it appeared that their union is blessed. But when the gambling becomes an addiction, the couple''s luck not only runs out, but leads one of them to murder.', 80, 3, 391078, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1808, 'The Strip Club Murder', 'When Jim Hardfield, the owner of a Gentlemen''s club, marries Candy, the venue''s star attraction, the only singles onstage are the ones that customers have put in her G-string. But when a third party comes between them, jealousy leads to murder.', 80, 4, 391079, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1809, 'The Clown Case', 'When a college student marries her math professor boyfriend, it looks like an equation for happiness. But after 10 years, a strange clown at the birthday party of the couple''s child brings out the murderous tendencies in one of them.', 80, 5, 391080, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1810, 'The Pond Scum Murder ', 'When upscale Darin meets trailer park Sheila, their class differences are no match for their love. But when Darin decides to move up in the world and asks the reluctant Sheila to abandon her trashy behavior, their marriage is dissolved by murder.', 80, 8, 391081, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1811, ' The Bog Murder', 'When frequent flyer Marsha and flight attendant Paul soar into marriage with their heads in the clouds, they have no idea that there is turbulence ahead. When a shocking revelation clips the wings of their love, one of them is driven to murder.', 80, 9, 391083, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1812, 'Murder Mystery Weekend ', 'When two amateur actors find that their love for each other is as intense as their love for the theater, the curtain rises on what seems to be a wonderful marriage. But when one spouse aspires to stardom, the final act will be murderous.', 80, 10, 391086, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1813, 'The In-Law Murders ', 'When a man hits it off with his new bride''s parents, they become an inseparable foursome. As the obsession deepens, one spouse’s mind starts drifting to murder. But does the bride want her parents back, or does her husband want them all to himself?', 80, 11, 391087, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1814, 'The Beauty Queen Murder ', 'When Stanley the Donut King wed MaryAnn the Beauty Queen, it looked like the sweetest marriage ever. But when his pastry business started interfering with the beauty pageants of her and their daughter, it would lead one of them to kill.', 80, 12, 391089, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1815, 'A Christmas Murder ', 'When a pair of happily married missionaries leave for a soul-saving trip to Africa, their relationship is as solid as their faith. But when one partner breaks the commandment of coveting a neighbor, the next broken rule will be "Thou Shalt Not Kill."', 80, 13, 391091, 194);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1816, 'Peta.H.Omada', null, 81, 1, 434155, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1817, 'Kata.Fantasian.Asthenis', null, 81, 2, 435792, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1818, 'Klarino.&.Filotimo', null, 81, 3, 435795, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1819, 'Laxtares', null, 81, 4, 435796, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1820, 'Gynaika.Dilitirio', null, 81, 5, 435798, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1821, 'H.Douleia.Thelei.Kynigi', null, 81, 6, 435799, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1822, 'H.Ekdikisi', null, 81, 7, 435800, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1823, 'Kazanovas', null, 81, 8, 435801, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1824, 'Mona', null, 81, 9, 435803, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1825, 'To Kryftouli', null, 81, 10, 435805, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1826, 'Atima Genethlia', null, 81, 11, 435807, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1827, 'Kalin.Esperan.Arxontes', null, 81, 12, 435809, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1828, 'Oi.Magoi.Me.Ta.Dora', null, 81, 13, 435816, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1829, 'Kleftronia', null, 81, 14, 435817, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1830, 'Ena.Sou.Kai.Ena.Mou', null, 81, 15, 435819, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1831, 'O.Kanakaris', null, 81, 16, 435821, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1832, 'Mpouzouki', null, 81, 17, 435822, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1833, 'O.Ekviasmos', null, 81, 18, 435824, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1834, 'Yvonni', null, 81, 19, 435825, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1835, 'Gennithito.Zaxos', null, 81, 20, 435826, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1836, 'Ena.Asteri.Gennietai', null, 81, 21, 435827, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1837, 'Maskarades.Kai.Kyrades', null, 81, 22, 435828, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1838, 'T.V.Star', null, 81, 23, 435829, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1839, 'Ax.Aftes.Oi.Gynaikes', null, 81, 24, 435830, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1840, 'Kindynos.Gamou', null, 81, 25, 435831, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1841, 'To.Proksenio', null, 81, 26, 435832, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1842, 'Par.Oligon.Dystyxima', null, 81, 27, 435833, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1843, 'Xristos.Anesth', null, 81, 28, 435834, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1844, 'To.Gouri.Tis.Manas', null, 81, 29, 435835, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1845, 'O.Giougkerman.Xromatistos', null, 81, 30, 435836, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1846, 'Ton.Pire.O.Ypnos.Ki.Egyre', null, 81, 31, 435837, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1847, 'Koritsia.O.Dogkanos', null, 81, 32, 435838, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1848, 'Tria.Poulakia.Kathontai', null, 81, 33, 435839, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1849, 'Varkoules.Armenizoun', null, 81, 34, 435840, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1850, 'O.Vardaloupas.Zei', null, 81, 35, 435841, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1851, 'Ftera.Kai.Poupoula', null, 81, 36, 435842, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1852, 'Glastra.Eks.Ouranou', null, 81, 37, 435843, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1853, 'Maneken.Gia.Paxoulous', null, 81, 38, 435844, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1854, 'Oute.Mia.Oute.Dyo.Oute.Treis', null, 81, 39, 435845, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1855, 'Oi.Aksexastoi', null, 81, 40, 435846, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1856, 'Savvatokyriako', null, 81, 41, 435847, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1857, 'Ta.Koroida', null, 81, 42, 435848, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1858, 'Dogkanos.Aftoprosopos', null, 81, 43, 435849, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1859, 'O.Kyrios.Vouleftis', null, 81, 44, 435850, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1860, 'Tou.Paidiou.Mou.To.Paidi', null, 81, 45, 435851, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1861, 'Xristougenniatiko.Doro', null, 81, 46, 435852, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1862, 'Gampros.O.Papapetrou', null, 81, 47, 435853, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1863, 'Tsiggana Mavromata', null, 81, 48, 435854, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1864, 'To.Eksogamo', null, 81, 49, 435855, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1865, 'To.Tram.To.Teleftaio', null, 81, 50, 435856, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1866, 'Ax.Afta.Ta.Paidia', null, 81, 51, 435857, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1867, 'En.Anamoni.', null, 81, 52, 435858, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1868, 'Romantiko.Dialeimma', null, 81, 53, 435859, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1869, 'Ax!.Devora', null, 81, 54, 435860, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1870, 'O.Gamos', null, 81, 55, 435861, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1871, 'Eortastiko.Xristougennon', null, 81, 56, 4435247, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1872, null, null, 81, 57, 4570204, 195);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1873, 'Ο Βαρδαλούπας ζεί ', null, 81, 1, 6762053, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1874, 'Φτερά και πούπουλα', null, 81, 2, 6762054, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1875, 'Γλάστρα εξ'' ουρανού', null, 81, 3, 6762055, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1876, 'Μανεκέν για παχουλούς ', null, 81, 4, 6762056, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1877, 'Ούτε μια, ούτε δυο, ούτε τρείς', null, 81, 5, 6762057, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1878, 'Οι αξέχαστοι', null, 81, 6, 6762058, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1879, 'Σαββατοκύριακο', null, 81, 7, 6762060, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1880, 'Τα κορόιδα', null, 81, 8, 6762061, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1881, 'Δόγκανος αυτοπροσώπως', null, 81, 9, 6762062, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1882, 'Ο κύριος βουλευτής', null, 81, 10, 6762065, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1883, 'Του παιδιού μου το παιδί', null, 81, 11, 6762067, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1884, 'Χριστουγεννιάτικο δώρο', null, 81, 12, 6762068, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1885, 'Γαμπρός ο Παπαπέτρου', null, 81, 13, 6762069, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1886, 'Τσιγγάνα μαυρομάτα', null, 81, 14, 6762070, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1887, 'Το εξώγαμο', null, 81, 15, 6762071, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1888, 'Το τράμ το τελευταίο', null, 81, 16, 6762072, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1889, 'Αχ αυτά τα παιδιά', null, 81, 17, 6762074, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1890, 'Εν αναμονή', null, 81, 18, 6762075, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1891, 'Ρομαντικό διάλειμμα', null, 81, 19, 6762076, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1892, 'Αχ! Δεβόρα', null, 81, 20, 6762078, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1893, 'Ο γάμος', null, 81, 21, 6762079, 196);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1894, '1', null, 81, 1, 6762082, 197);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1895, 'Epeisodio Proto', null, 82, 1, 2087401, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1896, 'Epeisodio Deutero', null, 82, 2, 2087411, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1897, 'Epeisodio Trito', null, 82, 3, 2087421, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1898, 'Epeisodio Tetarto', null, 82, 4, 2087431, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1899, 'Epeisodio Pempto', null, 82, 5, 2087441, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1900, 'Epeisodio Ekto', null, 82, 6, 2087451, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1901, 'Epeisodio Evdomo', null, 82, 7, 2087461, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1902, 'Epeisodio Ogdoo', null, 82, 8, 2087471, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1903, 'Epeisodio Enato', null, 82, 9, 2087481, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1904, 'Epeisodio Dekato', null, 82, 10, 2087491, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1905, 'Epeisodio Endekato', null, 82, 11, 2087501, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1906, 'Epeisodio Dodekato', null, 82, 12, 2087511, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1907, 'Epeisodio Dekato Trito', null, 82, 13, 4629211, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1908, 'Epeisodio Dekato Tetarto', null, 82, 14, 4629212, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1909, 'Epeisodio Dekato Pempto', null, 82, 15, 4629213, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1910, 'Epeisodio Dekato Ekto', null, 82, 16, 4629214, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1911, 'Epeisodio Dekato Evdomo', null, 82, 17, 4629215, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1912, 'Epeisodio Dekato Ogdoo', null, 82, 18, 4629216, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1913, 'Epeisodio Dekato Enato', null, 82, 19, 4629218, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1914, 'Epeisodio Eikosto', null, 82, 20, 4629219, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1915, 'Epeisodio Eikosto Proto', null, 82, 21, 4629220, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1916, 'Epeisodio Eikosto Deutero', null, 82, 22, 4629221, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1917, 'Epeisodio Eikosto Trito', null, 82, 23, 4629222, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1918, 'Epeisodio Eikosto Tetarto', null, 82, 24, 4629223, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1919, 'Epeisodio Eikosto Pempto', null, 82, 25, 4629224, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1920, 'Epeisodio Eikosto Ekto', null, 82, 26, 4629225, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1921, 'Epeisodio Eikosto Edvomo', null, 82, 27, 4629226, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1922, 'Epeisodio Eikosto Ogdoo', null, 82, 28, 4629227, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1923, 'Epeisodio Eikosto Enato', null, 82, 29, 4629233, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1924, 'Epeisodio Triakosto', null, 82, 30, 4629235, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1925, 'Epeisodio Triakosto Proto', null, 82, 31, 4629236, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1926, 'Epeisodio Triakosto Deutero', null, 82, 32, 4629237, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1927, 'Epeisodio Triakosto Trito', null, 82, 33, 4629238, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1928, 'Epeisodio Triakosto Tetarto', null, 82, 34, 4629239, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1929, 'Epeisodio Triakosto Pempto', null, 82, 35, 4629240, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1930, 'Epeisodio Triakosto Ekto', null, 82, 36, 4629241, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1931, 'Epeisodio Triakosto Evdomo', null, 82, 37, 4629242, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1932, 'Epeisodio Triakosto Ogdoo', null, 82, 38, 4629243, 198);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1933, 'Epeisodio Proto', null, 82, 1, 4629228, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1934, 'Epeisodio Deutero', null, 82, 2, 4629229, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1935, 'Epeisodio Trito', null, 82, 3, 4629230, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1936, 'Epeisodio Tetarto', null, 82, 4, 4629231, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1937, 'Epeisodio Pempto', null, 82, 5, 4629232, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1938, 'Epeisodio Ekto', null, 82, 6, 4629244, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1939, '', null, 82, 7, 4629245, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1940, '', null, 82, 8, 4629246, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1941, '', null, 82, 9, 4629247, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1942, '', null, 82, 10, 4629248, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1943, '', null, 82, 11, 4629250, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1944, '', null, 82, 12, 4629251, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1945, '', null, 82, 13, 4629252, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1946, '', null, 82, 14, 4629253, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1947, '', null, 82, 15, 4629254, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1948, '', null, 82, 16, 4629255, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1949, '', null, 82, 17, 4629256, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1953, '', null, 82, 21, 4629260, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1954, '', null, 82, 22, 4629261, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1955, '', null, 82, 23, 4629262, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1956, '', null, 82, 24, 4629263, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1957, '', null, 82, 25, 4629264, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1958, '', null, 82, 26, 4629265, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1959, '', null, 82, 27, 4629266, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1960, '', null, 82, 28, 4629267, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1961, '', null, 82, 29, 4629268, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1962, '', null, 82, 30, 4629269, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1963, '', null, 82, 31, 4629270, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1964, '', null, 82, 32, 4629272, 199);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1965, 'The East: A New Dawn', 'David Dimbleby starts his journey in Ely in the spectacular cathedral that dominates the Fens. He explores the world of medieval knights at Hedingham Castle, travels to Norwich to discover the workings of a great medieval city and visits Lavenham which grew fat on the cloth trade.

Join him on a pilgrimage to Little Walsingham and a visit to a rabbit warrener''s lodge before finishing at Cambridge University, the jewel of East Anglia. ', 83, 1, 391203, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1966, 'The Heart of England: Living It Up', 'David Dimbleby looks at how England was transformed by the extraordinary flowering of architecture, ideas and exploration of the Elizabethan Renaissance.
Take a journey that tracks the newly rich to stately homes like Burghley House and follows those who hid, in fear of their lives, in the secret spaces in Harvington Hall.

Discover the bizarre secret codes of Triangular Lodge and the wonders of Chastleton House, one of Britain''s most complete Jacobean houses.', 83, 2, 394955, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1967, 'Scotland: Towering Ambitions', 'David Dimbleby travels north of the border to find out how Scotland developed a style of building quite different from that in England.

Join him on a journey from the extraordinary visions of Stirling Castle to the Scottish baronial of Dunrobin; from the crofter''s community of Gearrannan on the Isle of Lewis to Charles Rennie Mackintosh''s masterpiece, The Glasgow School of Art; and ending up at the new Scottish Parliament building in Edinburgh.', 83, 3, 394956, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1968, 'The West: Putting on the Style', 'David Dimbleby encounters the grace and elegance of the Georgian terraces of Bath and Bristol, the magnificent country houses of Blenheim and the gardens of Stourhead.

He discovers where the seeds of the Industrial Revolution were sown, in the canals and locks of the West Country and the tin mines of Cornwall. He also travels across Wales to Thomas Telford''s Menai Bridge and to Ireland to tell the story of Georgian Dublin.', 83, 4, 394957, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1969, 'The North: Full Steam Ahead', 'At the start of Victoria''s reign, the north of England seemed out of control. Enormous industrial cities lacked basic amenities whilst many of their inhabitants lived in slums. David Dimbleby travels to Manchester, Leeds, Newcastle and the Tower Ballroom, Blackpool, to tell the story of Britain''s greatest construction boom. Find out how factories, town halls, sewers, churches, hospitals and dance halls were built in a dramatic attempt to deal with the rapidly expanding urban population.', 83, 5, 394958, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1970, 'The South: Dreams of Tomorrow', 'David Dimbleby completes his journey through Britain, discovering how the nation''s history has shaped its buildings, in the south of England, exploring its dramatic transformation in the 20th century. Modern technology opened up new worlds to ordinary people, changing the way they worked, lived and played. He begins in Metroland, part of the suburban explosion of the 1920s and 1930s, with its ''Tudorbethan'' houses and sumptuous cinemas like Moorish palaces, traces the arrival of the bold new modern style at a glorious public swimming pool on the south coast, and sees what effect the war had on what we built – from much-loved prefabs to high-rise blocks. And he visits the new temples of money in the City of London – breathtaking towers of steel and glass – and asks how many of them will still be there one hundred years from now. ', 83, 6, 394959, 200);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1971, 'Reflection', 'Scottie reflects on his status as a Black, male “professional student” and joins a church and Black-pride/support group ‘B.O.N.C.E.R.S’ for direction. ', 84, 1, 391219, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1972, 'Anytime Minutes', 'Scottie moves out to focus on school, but his rowdy new neighbors make it difficult for him to focus on anything – expect getting them evicted. ', 84, 2, 391239, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1973, 'The Money Touch', 'Lusting for the busty secretary at the local Boy’s Club, Scottie struggles to evade the maintenance man’s incessant player hating and win her affection. ', 84, 3, 391240, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1974, 'Taste Test', 'Scottie expresses his distaste for “eating after people” while out with Diva and her co-workers. Meanwhile, the guys look to an overbearing, but generous White evangelist to fill the void left by Scottie’s rent check.', 84, 4, 393784, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1975, 'Anger Management', 'Scottie and Marlo fall out over Marlo’s incessant mooching. Diva dates an exuberant neophyte, and Marlo finds a new mooching victim. ', 84, 5, 393785, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1976, 'Dad-O-Lantern', 'Marlo has “daddy issues" that come back to haunt him and the fellas, while Scottie and Diva attend a less-than-pc costume party. ', 84, 6, 393786, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1977, 'Ami Aggin', 'Scottie’s new class assignment and the arrival of an African student force the fellas to rethink their understanding of the N-word and “slave mentality.” ', 84, 7, 393787, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1978, 'You Motherpunkers', 'Frustrated by his mother’s constant prying into his love life, Scottie concocts a devious prank to teach her a lesson, while Jelly''s disciplinarian father finds an unpleasant surprise in his son''s couch.
', 84, 8, 393788, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1979, 'Giving Back Pt.1', 'In this one-hour, two part season finale, Diva, inspired by Scottie’s newly turned philanthropic leaf, offers to sleep with him after a lengthy sabbatical, but their romantic reunion is put on hold when the Athens, GA annual Pleasure Palace Party goes terribly awry and the nearby housing projects burn to the ground, leaving hundreds homeless. ', 84, 9, 393789, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1980, 'Giving Back Pt.2', 'In this one-hour, two part season finale, Diva, inspired by Scottie’s newly turned philanthropic leaf, offers to sleep with him after a lengthy sabbatical, but their romantic reunion is put on hold when the Athens, GA annual Pleasure Palace Party goes terribly awry and the nearby housing projects burn to the ground, leaving hundreds homeless. ', 84, 10, 393790, 201);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1981, 'Lapsed Psychologists v Knitters', '  ', 85, 1, 1053051, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1982, 'Crossworders v Birkbeck Alumni', null, 85, 2, 1053061, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1983, 'County Councillors v Ombudsmen', null, 85, 3, 1053071, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1984, 'Science Writers v Travel Writers', null, 85, 4, 1053081, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1985, 'Edinburgh Scrabblers v Solent Scrabblers', null, 85, 5, 1053091, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1986, 'Urban Cyclists v Country Walkers', null, 85, 6, 1053101, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1987, 'Bankers v Bookkeepers', null, 85, 7, 1053111, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1988, 'Cricket Supporters v IT Supporters', null, 85, 8, 1053121, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1989, 'County Councillors v Science Writers', null, 85, 9, 1053131, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1990, 'Crossworders v  Edinburgh Scrabblers', null, 85, 10, 1053141, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1991, 'Bankers v IT Supporters', null, 85, 11, 1053151, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1992, 'Lapsed Psychologists v Country Walkers', null, 85, 12, 1053161, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1993, 'Crossworders v  Science Writers', null, 85, 13, 1053171, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2495, null, null, 95, 81, 392277, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1994, 'Bankers v Lapsed Psychologists', null, 85, 14, 1053181, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1995, 'Crossworders v Lapsed Psychologists', null, 85, 15, 1053191, 202);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1996, 'Cambridge Quiz Society v Oxford Librarians', 'Three lads from the Cambridge Quiz Society battle a trio of Oxford Librarians.', 85, 1, 1053231, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1997, 'Mathematicians v Wordsmiths', 'Three maths graduates take on a team of wordsmiths, one of whom is an avid proofreader.', 85, 2, 1053241, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1998, 'History Boys v Rugby Boys', 'Three lovers of history square up to a trio of Welshmen devoted to their national game.', 85, 3, 1053251, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (1999, 'Chessmen v Charity Puzzlers', 'Three chess players take on a team who write puzzles for charity in the connections quiz.', 85, 4, 1053261, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2000, 'Mathematicians v Cambridge Quiz Society', 'Three mathematicians pit their skills against the wits of the Cambridge Quiz Society.', 85, 5, 1053271, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2001, 'Chessmen v Rugby Boys', 'Three chess players pit their wits against the brawn of the Rugby Boys.', 85, 6, 1053281, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2002, 'Chessman v Mathematicians', 'Three chess players take on three mathematicians in the battle for third place.', 85, 7, 1053291, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2003, 'Cambridge Quiz Society v Rugby Boys', 'We discover what connects Spock, Lisa Simpson, Brachiosaurus and Adolf Hitler.', 85, 8, 1053311, 203);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2004, 'Philosophers v Hitchhikers', 'Three philosophy students pit their wisdom against a trio of Hitchhiker''s Guide To The Galaxy fans.', 85, 4, 1618441, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2005, 'Archers Admirers v Music Lovers', 'A team of three civil servants with a shared love of Radio 4''s The Archers pit their wits against a trio of music lovers who between them perform or enjoy everything from pub rock to choral sung mass. They compete to draw together the connections between things which, at first glance, seem utterly random, from AC battery to compass wrench to glass hammer to long stand.', 85, 1, 1618541, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2006, 'Polymaths v Strategists', 'The Polymaths pool their disparate skills in chicken husbandry, musical theatre and urban geography to challenge the brainpower of the Strategists, a team unified by their love of sophisticated strategy board games. They compete to draw together the connections between things which, at first glance, seem utterly random, including Cakes and Ale, The Dogs of War, Brave New World and The Darling Buds of May.', 85, 2, 1618581, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2007, 'Choir Boys v Brasenose Postgrads', 'Three members of the Brighton and Hove Gay Men''s Chorus square up to a trio of postgraduates of Brasenose College, Oxford.', 85, 3, 1618591, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2008, 'Neuroscientists v Rugby Fans', 'Three neuroscientists hailing from Australia, South Africa and Canada scrum down against the intellectual brawn of three rugby fans, as they compete to draw together the connections between many disparate elements that, at first glance, seem utterly bereft of associations. So what connects cream, quotation marks, tennis matches and yellow lines?', 85, 5, 1618611, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2009, 'Exeter Alumni v Gourmands', 'Three former flatmates and graduates of Exeter University pit their wits against a news producer, a civil servant and an IT consultant who share a passion for fine food. Who will win the battle as they compete to draw together the connections between things, which, at first glance, seem utterly random?', 85, 6, 1693701, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2010, 'Insurers v Gamblers', 'A team of insurance professionals face off against a trio of committed gamblers. Who will win the battle as they compete to draw together the connections between things, which, at first glance, seem utterly random - such as Prince of Darkness, Bambi, Grocer and Tarzan?', 85, 7, 1728841, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2011, 'Booksellers v Bowlers', 'Three senior managers from a national bookstore face off against a team drawn together by their love of London''s retro bowling alleys. Who will win the battle as they compete to draw together the connections between things, which, at first glance, seem utterly random?', 85, 8, 1728851, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2012, 'Archers Admirers v Exeter Alumni', 'In the first of the quarter-finals, three fans of the Archers radio series take on the combined knowledge of three flatmates who all met up at Exeter University. They compete to draw together the connections between things, which, at first glance, seem utterly random - from Castor and Pollux to Brahma to Yoshi to Orville the Duck.', 85, 9, 1772651, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2013, 'Brasenose Postgrads v Hitchhikers', 'In the second of the quarter-finals, three postgraduate students from Brasenose College, Oxford, pit their wits against a trio of Douglas Adams fans who call themselves the Hitchhikers, in honour of the Hitchhiker''s Guide to the Galaxy. They compete to draw together the connections between elements which, at first glance, seem utterly random: P J Tracy, Nicci French, Ellery Queen and Grant Naylor.', 85, 10, 2072601, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2014, 'Neuroscientists v Strategists', 'In the third of the quarter-finals, three studying for their PhDs at Oxford set out to challenge the brainpower of the strategists, a team unified by their love of sophisticated strategy board games. They compete to draw together the connections between things, which, at first glance, seem utterly random - from maypoles to horse racing to spoken theatre to mince pies.', 85, 11, 2072611, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2015, 'Gamblers v Bowlers', 'In the last of the quarter-finals, three committed gamblers take their chances against a team unified by their love of ten-pin bowling. They compete to draw together the connections between things, which, at first glance, seem utterly random - from birdsong to breakout to shotgun to takeover.', 85, 12, 2072621, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2016, 'Archers Admirers v Gamblers', 'How will they respond to the threat of cavalier risk-taking from a team of confirmed Gamblers? They''ll compete to draw together the connections between elements which at first glance seem utterly random, including purple dye and the Jules Rimet trophy.', 85, 13, 2072631, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2017, 'Hitchhikers v Strategists', 'In the second semi-final, three fans of the Hitchhiker''s Guide to the Galaxy lock horns with the cunning of the Strategists, a team bound by their love of obscure European board games.', 85, 14, 2072641, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2018, 'Gamblers v Strategists', 'In the series final, cunning and tactics combine with logic, recall and tangential inspiration, as three committed Gamblers resist the temptation to take too many risks and the Strategists fight the impulse to err on the side of caution. Whose approach will win out in this battle of the giants? They''ll compete to draw together the connections between elements which at first glance seem utterly random, from Captain Scarlet to Reg Cox to Marty Hopkirk to Arnold J Rimmer.', 85, 15, 2072651, 204);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2019, 'Epicureans v Courtiers', 'A team of three old university pals with a shared love of exotic foods and fine dining pit their wits against a trio of Ulstermen from the Northern Ireland Court Service. They compete to draw together the connections between things which, at first glance, seem utterly random, from USS Constitution to Edmund II to Cromwell''s cavalrymen to Raymond Burr.', 85, 1, 3015491, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2020, 'The Wrights v Urban Walkers', 'The Wright family from Leeds pool their knowledge of IT, Electrical Engineering and Mexican cinema to challenge the brainpower of the Urban Walkers, a team unified by their love of taking extended inner city hikes across various European capitals.', 85, 2, 3015501, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2199, 'Second Democratic Primary Debate (2)', null, 90, 4, 7259129, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2496, null, null, 95, 82, 392278, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2021, 'Radio Addicts v Taxonomists', 'A doctor, a teacher and an accountant with a shared passion for radio square up to a trio of professional taxonomists - three women who make companies more successful through their precise use of language.', 85, 3, 3015511, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2022, 'Brit Poppers v Geocachers', 'Three stalwarts of the Camden music scene (including the man who discovered Blur) pit their wit and wisdom against a husband, wife and pal who share a love of geocaching, the craze for treasure-hunting using GPS. They compete to draw together the connections between things which, at first glance, seem utterly random, from Mao to David Hume to Casanova to Philip Larkin.', 85, 4, 3015521, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2023, 'Fantasy Writers v Bridge Players', 'Three fantasy writers, captained by a man who has written for Doctor Who, lock horns with a trio of bridge players, each with post-grad qualifications from Oxford University. They compete to draw together the connections between things which, at first glance, seem utterly random, from monocaine to the helmet of Perseus to Siegfried''s cloak to James Bond''s Aston Martin.', 85, 5, 3015531, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2024, 'Mensans v Bloggers', 'Three friends who originally met through British Mensa pit their wits against a team drawn together by their love of TV blogs and forums. They compete to draw together the connections between things which, at first glance, seem utterly random, from mice to Madeleine to Gabriel.', 85, 6, 3015541, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2025, 'Mountain Men v In-Laws', 'Three dedicated hill walkers from Derbyshire face off against a family threesome of husband, wife and brother-in-law. They compete to draw together the connections between things which, at first glance, seem utterly random, from Race for Life to the Sanctuary Spa to the Oaks Stakes to the Orange Prize for Fiction.', 85, 7, 3015551, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2026, 'Alesmen v Pool Sharks', 'Three men joined by their enthusiasm for real ale confront two maths graduates and a pharmacist who are a regular fixture at their local pool hall. They compete to draw together the connections between things which, at first glance, seem utterly random, from Pugachev''s Cobra to Split S, Cuban Eight and Barrel Roll.', 85, 8, 3046431, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2027, 'Epicureans v Bridge Players', 'In the first of the quarter-finals, three old chums from university days who share a passion for fine dining take on the combined knowledge of three Oxford graduates with a love of bridge. They compete to draw together the connections between things which, at first glance, seem utterly random, from Agamemnon to Jim Morrison, Marion Crane and Jean-Paul Marat.', 85, 9, 3046571, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2028, 'Wrights v Bloggers', 'In the second quarter-final, the Wright family of mum, dad and daughter return to pit their wits against a trio of committed bloggers who met on TV gossip forum sites. They compete to draw together the connections between things which, at first glance, seem utterly random, from Unloose to Debone, Irregardless and Inflammable.', 85, 10, 3442061, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2029, 'Radio Addicts v Brit Poppers', 'In the third quarter-final, a doctor, a teacher and an accountant with a unifying love of the radio return to challenge the brainpower of three Camden-based lynchpins of the British music industry. They compete to draw together the connections between things which, at first glance, seem utterly random, from Rachel Stevens to Newfoundland dog, Stalin and Donald Duck.', 85, 11, 3442071, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2030, 'In-Laws v Alesmen', 'In the last quarter-final, a family team featuring a patent lawyer, a graphic designer and a business analyst return to the field of conflict to take their chances against a trio unified by their love of authentic cask-conditioned ales. They compete to draw together the connections between things which, at first glance, seem utterly random, from early return from transportation to destroying a fishpond, sacrilege and treason.', 85, 12, 3442091, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2031, 'Epicureans v Wrights', 'In the first semi-final, three lovers of luxurious wines and exotic dishes set aside their shared passion to address the challenge of the combined wits of the Wright family. They compete to draw together the connections between things which at first glance seem utterly random, such as completing the sequence: 1950: Soap; 1952: Tea; 1953: Cream, eggs, sweets, sugar; ????', 85, 13, 3442101, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2032, 'Alesmen v Radio Addicts', 'In the second semi-final, three lovers of authentic beer lock horns with the cunning of a team bound by their love of the airwaves. They compete to draw together the connections between things which at first glance seem utterly random, from Norman Conquest begins to Stella Artois brewery founded to Great Fire of London to ????', 85, 14, 3442111, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2033, 'Wrights v Alesmen', 'In this play-off between semi-final losers, the Wright family combine their wits to take on the mental firepower of the alesmen in a last battle for glory. They compete to draw together the connections between things which, at first glance, seem utterly random - from I, Libertine to Venus on the Half-shell to the Tales of Beedle Bard to Fly Fishing.', 85, 15, 3442121, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2034, 'Epicureans v Radio Addicts', 'In the series finale, cunning and tactics combine with logic, recall and tangential inspiration as three committed gourmands set aside their love of fine foods to concentrate on the job in hand - battle for victory over the radio addicts, a team with the diverse combined knowledge of a doctor, a teacher and an accountant.', 85, 16, 3442131, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2035, 'PLEASE DELETE', null, 85, 17, 4186131, 205);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2036, 'Children in Need: Wheel Men v Larks', 'A special Children in Need episode of the quiz show presented by Victoria Coren in which knowledge will only take you so far, as patience and lateral thinking are also vital.

The cunning wiles of the Wheel Men (Rev Richard Coles, Adam Hart-Davis and Grub Smith) take on the combined brains of the Larks (Michael Bywater, Sir Andrew Motion and Stuart Maconie), trying to work out what connects the likes of Fawlty Towers to St Joseph''s Wort, Pesto and the Great Mouse Detective.', 85, 2, 3442141, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2037, 'University Challenge: Crossworders v University Challengers', 'Victoria Coren presents a special edition of the quiz show in which knowledge will only take you so far, as patience and lateral thinking are also vital. Undefeated champions of champions, the Crossworders, risk their reputation by confronting the awesome brainpower of the University Challengers, captained by the illustrious Alex Guttenplan.
It isn''t going to be an easy ride for either team, as they try to connect Fortis shareholders with Muntadar al-Zaidi, sabateurs and Nikita Kruschchev.', 85, 4, 3559141, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2038, 'Wall Night 1: Part 1', 'The first half of Only Connect''s inaugural Wall Night Special, in which eight teams return to face off against the Wall.', 85, 7, 4222382, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2039, 'Wall Night 1: Part 2', 'The second half of Only Connect''s inaugural Wall Night Special, in which eight teams return to face off against the Wall.', 85, 8, 4222383, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2040, 'Champion of Champions: Crossworders v Epicureans', null, 85, 9, 4222384, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2041, 'Comic Relief: Treesome v Larks', 'The Treesome (Brian Sewell, Adam Hart-Davis and Grub Smith) lock intellectual brains with the Larks (Michael Bywater, Sir Andrew Motion and Stuart Maconie) as they try to work out what connects the Golden Gate Bridge and David Dickinson.', 85, 5, 4227791, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2200, 'Third Democratic Primary Debate', null, 90, 5, 7259140, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2201, 'Fourth Democratic Primary Debate', null, 90, 6, 7259150, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2497, null, null, 95, 83, 392279, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2042, 'Children in Need: Great Believers v Free Speakers', 'In this Pudsey Special, two teams of clever celebrities prepare to lose their dignity in honour of Children in Need. The cunning wiles of the Great Believers ''Nick Hornby, Dame Joan Bakewell and John Lloyd'' take on the combined brains of the Free Speakers (Ian Hislop, Simon Singh and John Sessions). So join Victoria if you want to know what connects Erte, Herge, Jeep and Esso.', 85, 6, 4227798, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2043, 'Mastermind: Crossworders v Masterminders', null, 85, 10, 4352595, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2044, 'Sport Relief: Cutters v Backhanders', null, 85, 13, 4352596, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2045, 'Children in Need: Goldfingers v Fowls', 'Victoria Coren hosts a very special celebrity edition of the quiz where knowledge will only take you so far, and patience and lateral thinking are also vital. In this Pudsey Special, two teams of clever celebrities prepare to lose their dignity in honour of Children in Need. The cunning wiles of the Goldfingers (Charlie Higson, Daisy Goodwin and Matthew Parris) take on the combined brains of the Fowls (Rosie Boycott, Richard Osman and Clarke Carlisle). So join Victoria if you want to know what connects Mark Antony, Henry VIII, Sir Sidney Ruff-Diamond and the Black Fingernail.', 85, 14, 4403298, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2046, 'Wall Night 2: Part 1', 'Eight seasoned Only Connect teams return to take part in a Connecting Wall mini-tournament.', 85, 11, 4403299, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2047, 'Wall Night 2: Part 2', 'Eight seasoned Only Connect teams return to take part in a Connecting Wall mini-tournament.', 85, 12, 4403300, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2048, 'Eggheads v Davids', 'Three Eggheads take on three champion captains all called David, drawing together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Apollo 12, Pan Am Flight 214, Lee Trevino and York Minster.', 85, 16, 4473755, 206);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2049, 'Social Networkers v Vegetarians', 'A trio of social networkers who met online take on three committed vegetarians. They compete to draw together the connections between things which, at first glance, seem utterly random, from the Barghest of Yorkshire to the Mail on Sunday''s political column to Winston Churchill''s depression to Gnasher.', 85, 1, 4186135, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2050, 'Edwards Family v Inorganic Chemists', 'A father, son and daughter-in-law square up to three postgraduate chemistry students from Oxford University. They compete to draw together the connections between things which, at first glance, seem utterly random, from French nuclear tests in 1960 to the Krzysztof Kieslowski film trilogy to the Luxembourg flag to the Minis in The Italian Job.', 85, 2, 4186136, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2051, 'Analysts v Editors', 'A team of professional analysts with degrees in modern languages, English and maths pit their wits against a trio of editors who delight in their meticulous attention to detail. They compete to draw together the connections between things which, at first glance, seem utterly random, from Ho to Beetlejuice to I Divorce You to White Rabbits.', 85, 3, 4186137, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2052, 'Joggers v Technologists', 'Three running enthusiasts play three colleagues from a creative engineering company', 85, 4, 4186138, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2053, 'Fantasy Footballers v Antiquarians', 'Three online football team managers take on a team who love historical things. ', 85, 5, 4186139, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2054, 'Listeners v Steel City Singers', 'Three Listener crossword fans play a trio of choristers from Sheffield University.', 85, 6, 4186140, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2055, 'Rowers v Linguists', 'Three rowers play a trio of linguists. ', 85, 7, 4186224, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2056, 'Rock ''n'' rollers v Trade Unionists', 'Three aficionados of the Scottish rock music scene pit their wits against three members of an executive council trade union group. They compete to draw together the connections between things which, at first glance, seem utterly random, from Isabelle Dinoire to Tycho Brahe to the Maid in the Garden to the Sphinx.', 85, 8, 4186225, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2057, 'Social Networkers v Antiquarians', 'Three online pals take on a trio of history buffs in the first of the quarter-finals. They compete to draw together the connections between things which, at first glance, seem utterly random, from elephant to hippopotamus to Mississippi to one thousand', 85, 9, 4193113, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2058, 'Rowers v Listeners', 'A team of rowers encounter three fans of the Listener crossword in the second of the quarter-finals. They compete to draw together the connections between things which, at first glance, seem utterly random, from Steiff to Veuve Clicquot to Deutsche Grammophon to Boddingtons.', 85, 10, 4193114, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2059, 'Edwards Family v Trade Unionists', 'A father, son and daughter-in-law pit their wits against three members of an executive council trade union group in the third of the quarter-finals. They compete to draw together the connections between things which, at first glance, seem utterly random, from Little Venice to Silver to Christopher Columbus to The Equator.', 85, 11, 4193115, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2060, 'Analysts v Technologists', 'Three professional analysts square up to three colleagues at a creative engineering firm in the last of the quarter-finals. They compete to draw together the connections between things which, at first glance, seem utterly random, from Private Wilhelm to Jelly Babies to Mandrakes to David Sutch.', 85, 12, 4193116, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2061, 'Listeners v Antiquarians', null, 85, 13, 4222378, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2062, 'Analysts v Trade Unionists', null, 85, 14, 4222379, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2063, 'Listeners v Trade Unionists', null, 85, 15, 4222380, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2064, 'Analysts v Antiquarians', null, 85, 16, 4222381, 207);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2065, 'Joinees v Draughtsmen', 'Three members of Danny Wallace''s Join Me campaign pit their wits against three beer lovers. They compete to draw together the connections between things which, at first glance, seem utterly random. Connections include: Family planning, Nazi badge for political prisoners, England''s oldest trademark and youth hostel.', 85, 1, 4395899, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2066, 'TEFL Teachers v IT Specialists', 'Three teachers square up to a team of IT specialists as they compete to draw together the connections between things which, at first glance, seem utterly random, from Desert Attack to MI-5 to Clue to Murder in the Calais Coach.', 85, 2, 4395900, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2067, 'Footballers v Second Violinists', 'A trio of footballers pit their wits against three orchestral players as they compete to draw together the connections between things which, at first glance, seem utterly random, from True Lies to Three Men and a Baby to Sommersby to The Birdcage.', 85, 3, 4395901, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2068, 'Wordsmiths v Educators', 'Three writers face three high school teachers as they compete to draw together the connections between things which, at first glance, seem utterly random, from manufacturing gunpowder to Roman mouthwash to thickening wool to marking territory.', 85, 4, 4399699, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2069, 'Trenchermen v Numerists', 'Three friends who share hearty appetites take on a trio of young mathematicians, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria if you want to know what connects a heart, the Once and Future King, post-war Berlin and this question.', 85, 5, 4399700, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2091, 'The Mutineers', 'Crusoe and Friday need to find a way to outsmart a group of mutineers, who have landed on their island in search of supplies. Crusoe contemplates forming an alliance with the ship''s trapped captain in hopes that he can lead Crusoe and Friday back home.', 88, 4, 397426, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2070, 'Wintonians v Quitters', 'Three friends from Winchester pit their wits against a team who have all recently quit smoking, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Estee Lauder, Frida Kahlo, Dorothy Parker and Elizabeth Taylor.', 85, 6, 4399733, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2071, 'Scribes v Ciphers', 'Three professional writers take on a trio of friends united by their love of codes and puzzles, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria if you want to know what connects Holly Golightly''s flatmate, avian resident of Hundred Acre Wood, Columbo''s basset hound and knitted sidekick of Johnny Vegas.', 85, 7, 4399734, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2072, 'Accountants v Cinephiles', 'Three colleagues in an accountancy firm pit their wits against a team of cinema lovers, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Touched by Death, electrocuted by hospital generator, squashed by cartload of underpants and shot by Mr Garrison.', 85, 8, 4399735, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2073, 'Draughtsmen v Numerists', 'Three beer drinkers take on a trio of mathematicians in the first of the quarter-finals, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Chichester''s round the world yacht, Nicholas Breakspear, Henry Bolingbroke and Star Wars: A New Hope.', 85, 9, 4399736, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2074, 'Footballers v Cinephiles', 'A team of committed football fans encounters three film lovers in the second of the quarter-finals, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria if you want to know what connects sachertorte, valrhona chocolate, custard cream biscuits and polo mints.', 85, 10, 4399737, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2075, 'Teachers v Scribes', 'Three teachers encounter a trio of writers in the third of the quarter-finals, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Sara Lee, Brita, Wendy''s and Lily O''Brien''s.', 85, 11, 4399738, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2076, 'Wintonians v Wordsmiths', 'Quiz show presented by Victoria Coren in which knowledge will only take you so far, as patience and lateral thinking are also vital. Three friends from Winchester square up to a team united by their passion for reading and writing in this quarter-final, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria if you want to know what connects the 69th Infantry Regiment, Münchner Kindl, Serjeant-at-Arms and the Greek Olympic team.', 85, 12, 4399739, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2077, 'Footballers v Draughtsmen', 'In the first of the semi-finals three football fans take on a trio of beer enthusiasts, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Hercule Poirot 06/08/1975, Tour de France 26/07/2007, Captain Birdseye 07/06/1971 and English cricket 02/09/1882.', 85, 13, 4399740, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2078, 'Scribes v Wordsmiths', 'In the second of the semi-finals, a trio of scribes and three wordsmiths fight it out for a place in the series finale, competing to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Yesterday, sewing machine, benzene ring and Kubla Khan.', 85, 14, 4399741, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2079, 'Footballers v Wordsmiths', 'In the play-off for third place, a trio of football fans and three writers compete to draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Jed Clampett: 9.5, Artemis Fowl II: 13.5, Scrooge McDuck: 44.1 and Rich Uncle Pennybags: 2.6.', 85, 15, 4399742, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2080, 'Scribes v Draughtsmen', 'In the series final and the 100th episode, three writers square up to a trio of beer lovers for the right to be named Series 6 champions. They must draw together the connections between things which, at first glance, seem utterly random. So join Victoria Coren if you want to know what connects Marty Feldman''s last film, captain of Queen Anne''s Revenge, Holy Roman Emperor Frederick and wife-murdering Perrault character.', 85, 16, 4399743, 208);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2081, 'Part 1', 'Harry Perkins, a Labour MP from Sheffield, is elected British Prime Minister, having stood on a platform promising huge social change. The election of Perkins, however, has caused uproar amongst the Establishment, and Perkins is soon under fire from the right-wing press, the US administration, and even the British Security Services.', 86, 1, 391625, 209);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2082, 'Part 2', 'Having survived his first crisis, Prime Minister Harry Perkins, now secure in Downing Street, faces the forces ranged against him. He loses his right-hand man in a sex scandal and now he faces a power workers'' strike.
', 86, 2, 391626, 209);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2083, 'Part 3', 'Harry has been in office for a year and everything has improved - even the weather. When he decides that US bases and missiles must leave the country, the Americans decide that it is time that Harry went.
', 86, 3, 391627, 209);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2084, 'Episode 1', 'Laurence Llewelyn-Bowen and a panel of experts scrutinise some of the country''s most extraordinary gardens.
This instalment profiles an easy-care cottage plot in Hertfordshire and an exotic jungle in a Norfolk yard.', 87, 1, 393453, 210);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2085, 'Episode 2', 'Laurence Llewelyn-Bowen and a panel of experts scrutinise some of the country''s most extraordinary gardens.
This instalment features a pretty stable yard in Hampshire and an elaborate fantasy garden in Wales.', 87, 2, 393454, 210);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2086, 'Episode 3', 'Laurence Llewelyn-Bowen and a panel of experts scrutinise some of the country''s most extraordinary gardens.
The judges study an impressive formal garden in Shropshire and a three-part garden in Oxfordshire that blends
domestic spaces with wild woodland.
', 87, 3, 393455, 210);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2087, 'Episode 4', 'Laurence Llewelyn-Bowen and the panel of experts visit Oxfordshire to explore a modern, designer landscape, the centrepiece of which is a distinctive grid, densely planted with fashionable flowering perennials and ornamental grasses. They also examine a historic garden in Hampshire that was originally designed by green-fingered pioneer Gertrude Jekyll', 87, 4, 4239247, 210);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2088, 'Rum', 'Crusoe leaves his family to head out to the new world in hopes of finding new riches and getting out of debt. However, when an assassin gets aboard the ship, Crusoe wakes up to find himself stranded on a deserted island. There saves a native man from a band of cannibals and makes a friend for life. Together they must struggle to survive the harsh terrain. ', 88, 1, 391928, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2089, 'Sacrifice', 'After attempting to fix the water source to the tree house, Crusoe loses his wedding ring. Meanwhile, Friday has an unusual dream about a young woman who is lost and yearning for the sea. Crusoe and Friday attempt to discover the truth and set her spirit free.', 88, 3, 391929, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2090, 'High Water', 'Crusoe and Friday find hope on the deserted island, when they stumble upon an old abandoned boat that is stuck up in a tree. As they begin to repair it, they find a compass, which they believe will aid them on their finding their way home.', 88, 5, 397424, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2092, 'Long Pig', 'Crusoe is racked with guilt as he contemplates stealing the boat of cannibals that have arrived on the island because of the two surprising captives that they would be leaving behind with them.', 88, 6, 402120, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2093, 'Bad Blood', 'Friday has become severly ill and insane, and it''s up to Olivia and Crusoe to find the rare plant that will cure him.', 88, 7, 406599, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2094, 'Heroes and Villains', 'Now that the mutineers'' ship has been fixed, he must think of a new plan to get on it and off the island, once someone discloses his plan to the ship''s captain.', 88, 8, 408940, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2095, 'The Name of the Game', 'Crusoe helps Friday by trying to bring back some of the bad things from his past, so he can help Friday get through them. Friday''s past helps him in making the treehouse safer from intruders.', 88, 9, 408941, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2096, 'Gunpowder', 'Crusoe leaves his family to head out to the new world in hopes of finding new riches and getting out of debt. However, when an assassin gets aboard the ship, Crusoe wakes up to find himself stranded on a deserted island. There saves a native man from a band of cannibals and makes a friend for life. Together they must struggle to survive the harsh terrain.', 88, 2, 411438, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2097, 'Smoke and Mirrors', 'Crusoe is overjoyed--and somewhat mystified--when Susannah appears on the island. Later, while searching for Friday, Crusoe and Susannah''s lives are endangered after coming across someone else on the island.', 88, 10, 421080, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2098, 'The Hunting Party', 'A mysterious warrior steals a lock of Crusoe''s hair and he later finds out that people are looking for him. Friday has to decide to save Crusoe or himself after he is defeated by three warriors.', 88, 11, 421081, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2099, 'The Traveler', 'Friday and Crusoe help rescue men from the water after another boat sinks their tiny ship. Crusoe is puzzled to find Mr. Blackthorn among the men, and Friday wonders what he is up to.', 88, 12, 423105, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2100, 'The Return', 'Crusoe and Friday struggle to fend off the men from the sunken boat, once they realize that Mr. Blackthorn and his men are there to harm them and steal their belongings from the treehouse. Crusoe finds out what Mr. Blackthorn is up to from an unwilling Samuel Tuffley.', 88, 13, 428845, 211);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2101, 'Come Fly with Me', 'In the first of a new series James May travels the globe in search of his ultimate flying machine. He begins by heading into the frozen wastes of Russia to pilot one of the best kept secrets of the Cold War. He then heads to the US to fly the world''s only surviving flying car.
In Japan he watches a man struggle with his tiny chopper, before returning to the suburban gardens of Sussex where James turns himself into a human rocket - all in pursuit of finding a better way to get from A to B.
Finally, in California, James encounters his ultimate dream - a flying car capable of vertical take off, and one so simple that anyone can pilot it, but is the world ready for a flying car?', 89, 1, 391931, 212);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2102, 'Man Machine', 'As a child, James May dreamed of a world populated by humanoid robots. Robots which would tidy his room and do the washing up. In the second programme of his Big Ideas series, he sets off to discover how close his vision of a robot-world is to becoming a reality and in doing so enters an intriguing, mysterious and often rather strange world.
In Japan, James meets the closest thing to Robocop. It’s a woman who can double her strength thanks to an extraordinary electro-mechanical jumpsuit, but what will this bizarre mix of human intelligence and machine brawn be used for?
He also has a close encounter of the weird kind with the most disturbing robot he has ever seen – a robot designed to look and behave exactly like its creator.
Continuing his travels James heads to the US, to explore the possibilities of bionic implants and talks to the doctor who is making them a reality, and in doing so has created a real 2 million dollar bionic woman.
And finally, in the unlikeliest of laboratories he encounters the world’s most advanced walking robot: Asimo – it can tackle stairs and has even mastered running, however when faced with a closed door, the robot proves he isn’t all that smart. Cue Asimo’s twin brother, who has learnt to recognise everyday objects. But will he amaze James when asked to identify a Mini car? And is this all enough to restore James’s vision of a robot filled future world?', 89, 2, 391932, 212);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2103, 'Power to the People', 'In the last of his Big Ideas journeys, James May sets off to find smarter, brighter and bolder ways of powering the planet for future generations.
James begins his journey by looking at the energy produced by the sun. In a unique experiment, he tries a solar-powered car. It might have raced thousands of miles across the Australian desert - but just how far will a solar car travel in Guildford at night?
In Seville, James visits the world’s first solar power station. This extraordinary cathedral of lights towers over the Spanish countryside, but for all its high tech glory, James discovers a curiously low tech Achilles’ heel.
Continuing his journey to the US, James encounters a group of dedicated aerospace engineers who are planning to make a lift that will reach 20,000 miles into the skies. Their idea is to build a power station in space. James watches enthralled as they take their first tentative steps towards their goal - and a crack at a $2million [£1million] prize.
While in Holland, James meets the first Dutchman who once travelled into space. This man has now put away his rockets and spacesuit, swapping them instead for kites in an attempt to harvest the powerful winds of a high-altitude jetstream.
And finally, James heads off into the deserts of New Mexico to seek out some modern-day alchemists. This group of scientists are hoping to conjure petrol out of thin air, with the help of only a few mirrors.', 89, 3, 392660, 212);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2104, 'Saddleback Presidential Forum', 'Sen. John McCain (R-Ariz.) and Sen. Barack Obama (D-Ill.) discuss faith, values and leadership.', 90, 1, 391935, 213);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2105, 'First Presidential Debate', 'At the University of Mississippi-Oxford, candidates John McCain (R) and Barack Obama (D) discuss issues; Jim Lehrer moderates.

Site: University of Mississippi
Topic: Foreign Policy & National Security
Moderator: Jim Lehrer
Staging: Podium debate
Answer Format: The debate will be broken into nine, 9-minute segments. The moderator will introduce a topic and allow each candidate 2 minutes to comment. After these initial answers, the moderator will facilitate an open discussion of the topic for the remaining 5 minutes, ensuring that both candidates receive an equal amount of time to comment', 90, 2, 391936, 213);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2106, 'Vice Presidential Debate', 'The eyes of the world were on Washington University Oct. 2 as it hosted the most anticipated vice presidential debate in U.S. history. Millions in the United States and around the world watched as Gov. Sarah Palin of Alaska and Sen. Joe Biden of Delaware squared off on stage at the Field House in the University''s Athletic Complex.

Site: Washington University (St. Louis)
Moderator: Gwen Ifill
Staging/Answer Format: Debate will consist of both foreign and domestic policy questions asked by the moderator. Format will be similar to the presidential debates.', 90, 3, 391937, 213);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2187, 'Third Presidential Debate', null, 90, 3, 5987243, 224);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2188, 'Vice Presidential Debate', null, 90, 4, 5987244, 224);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2189, 'First Presidential Debate', null, 90, 1, 5987245, 225);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2190, 'Second Presidential Debate', null, 90, 2, 5987247, 225);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2191, 'Vice Presidential Debate', null, 90, 3, 5987248, 225);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2107, 'Second Presidential Debate', 'Senators McCain and Obama meet at Belmont University in a town hall setting for the second of the 2008 presidential debates.  Moderated by Tom Brokaw.

Site: Belmont University
Moderator: Tom Brokaw
Staging: Town Hall debate
Format: The moderator will call on members of the audience (and draw questions from the internet). Each candidate will have 2 minutes to respond to each question. Following those initial answers, the moderator will invite the candidates to respond to the previous answers, for a total of 1 minute, ensuring that both candidates receive an equal amount of time to comment. In the spirit of the Town Hall, all questions will come from the audience (or internet), and not the moderator.', 90, 4, 391938, 213);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2108, 'Third Presidential Debate', 'Presidential debate with domestic policy focus, Hofstra University, Hempstead, NY

Site: Hofstra University
Topic: Domestic and Economic Issues
 Moderator: Bob Schieffer
Staging: Candidates will be seated at a table
Answer Format: Same as First Presidential Debate
Closing Statements: At the end of this debate (only) each candidate shall have the opportunity for a 90 second closing statement.', 90, 5, 391939, 213);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2109, 'First Presidential Debate', 'Topic: Domestic policy
Air Time: 9:00-10:30 p.m. Eastern Time
Location: University of Denver in Denver, Colorado (Tickets)
Sponsor: Commission on Presidential Debates
Participants: President Barack Obama and Governor Mitt Romney
Moderator: Jim Lehrer (Host of NewsHour on PBS)', 90, 1, 4410696, 214);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2110, 'Vice Presidential Debate', 'Topic: Foreign and domestic policy
Air Time: 9:00-10:30 p.m. Eastern Time
Location: Centre College in Danville, Kentucky (Tickets)
Sponsor: Commission on Presidential Debates
Participants: Vice President Joe Biden and Congressman Paul Ryan
Moderator: Martha Raddatz (ABC News Chief Foreign Correspondent)', 90, 2, 4410697, 214);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2111, 'Second Presidential Debate', 'Topic: Town meeting format including foreign and domestic policy
Air Time: 9:00-10:30 p.m. Eastern Time
Location: Hofstra University in Hempstead, New York (Tickets)
Sponsor: Commission on Presidential Debates
Participants: President Barack Obama and Governor Mitt Romney
Moderator: Candy Crowley (CNN Chief Political Correspondent)', 90, 3, 4410698, 214);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2112, 'Third Presidential Debate', 'Topic: Foreign policy
Air Time: 9:00-10:30 p.m. Eastern Time
Location: Lynn University in Boca Raton, Florida (Tickets)
Sponsor: Commission on Presidential Debates
Participants: President Barack Obama and Governor Mitt Romney
Moderator: Bob Schieffer (Host of Face the Nation on CBS)', 90, 4, 4410699, 214);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2113, 'First Republican Primary Debate', null, 90, 1, 5300882, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2114, 'Second Republican Primary Debate', null, 90, 2, 5337476, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2115, 'First Democratic Primary Debate', 'The first debate is scheduled for October 13, 2015, at the Wynn hotel in Las Vegas, beginning at 8:30 p.m. Eastern time. It will air on CNN, and will also be broadcast on radio by Westwood One. Anderson Cooper will be the moderator of the debate, with Dana Bash and Juan Carlos Lopez asking additional questions and Don Lemon presenting questions submitted by voters via Facebook.', 90, 3, 5369349, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2116, 'Third Republican Primary Debate', null, 90, 4, 5386586, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2117, 'Fourth Republican Primary Debate', null, 90, 5, 5394578, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2118, 'Second Democratic Primary Debate', 'The second debate occurred on November 14, 2015, at the Sheslow Auditorium at Drake University in Des Moines, Iowa. It aired on CBS News and was also be broadcast by KCCI and The Des Moines Register. This was the first debate to be broadcast over nationwide network television, the previous debate having gone over cable.   

CBS News Political Director John Dickerson was the principal moderator, with participation by Kevin Cooney of KCCI.   

The day before the debate, November 13, was the day of the November 2015 Paris attacks, where nearly 130 civilians were killed by radical Jihadist terrorists - specifically, members of ISIS - across the city of Paris. As a result of the attacks, after initial speculation that the debate might be cancelled, CBS announced that, while the debate would go on as planned, the focus of the debate''s content would be dramatically shifted over to foreign policy and terrorism.   In addition, a moment of silence was held at the beginning of the debate in memory of the victims.  

One of the most memorable moments of the debate was when Clinton defended against claims that she had ties to Wall Street bankers, particularly when Sanders pointed out that some of Clinton''s largest donors were from Wall Street. Clinton retaliated by claiming that, as the Senator from New York during the September 11 attacks, she had to work closely with Wall Street since the attacks were so close to Wall Street.  Clinton immediately received scrutiny over these comments, including when Dickerson highlighted a Tweet from a viewer reading, "Never before have I heard someone use 9/11 to justify millions of Wall Street donations," which drew thunderous applause from the audience, and led to both Sanders and O''Malley also attacking Clinton for those comments.  Post-debate criticisms arose from all across the political spectrum, from Republican National Committee Chairman Reince Preibus, to Clinton''s own former campaign manager, Patti Solis Doyle, who said that the 9/11 reference would''ve been better used in the previous discussion on terrorism and foreign policy, not justifying her Wall Street connections.   

The New York Times and many other media organizations have heavily criticized Clinton for invoking 9/11 to cover her Wall Street connections.', 90, 6, 5402024, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2119, 'Fifth Republican Primary Debate', null, 90, 7, 5440960, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2120, null, null, 90, 0, 5441359, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2121, 'Third Democratic Primary Debate', 'The third debate occurred on December 19, 2015, in Goffstown, New Hampshire at St. Anselm College. It aired on ABC News and was moderated by journalist David Muir, anchor of “World News Tonight”, and Chief Global Affairs Correspondent Martha Raddatz. On December 11, 2015, the DNC had announced that it would revoke the sponsorship of the debate by WMUR-TV because of a labor dispute with its unionized employees. The topics covered during the debate included Sanders'' campaign''s breach of Clinton''s campaign data, strategy for defeating ISIS, gun control, the issue of whether to depose President Assad of Syria, if Wall Street favored each candidate, stability in the Middle East enforced by dictators and whether regime change was necessary, and the role of the First Spouse.', 90, 8, 5445433, 215);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2122, '2016 Republican Candidates - Voters First Forum', 'All 16 currently filed Republican presidential candidates were invited to take part in a “Voters First Republican Presidential Forum” on the campus of St. Anselm College in Manchester, New Hampshire. This event was the first opportunity to hear all of the 2016 Republican presidential candidates on one stage. The candidates appeared one at a time, answering questions determined by the editors of the New Hampshire Union Leader based on the topics suggested by the public, with immigration and the economy topping the list. Senators Cruz (R-TX), Paul (R-KY), and Rubio (R-FL) appeared via video link from Washington, D.C. Jack Heath moderated.', 90, 1, 5394579, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2123, '2016 Democratic Candidates - First in the South Democratic Candidates Forum', 'The “First in the South Democratic Candidates Forum” will be moderated by Rachel Maddow and will air live on MSNBC beginning at 8 p.m. ET. Maddow will speak with Democratic presidential candidates Hillary Clinton, Martin O’Malley and Bernie Sanders separately on a variety of topics including the economy, policing in America, the state of the Democratic Party in the South and the 2016 campaign.', 90, 2, 5394581, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2124, '2016 Republican Candidates - Jack Kemp Forum', 'The Kemp Forum is a debate and discussion series providing a platform for the civil competition of ideas. Based on the premise that ideas, like athletes, become sharper in competition, the Kemp Forum examines cutting edge public policy questions through the kind of restless, spirited debate that Jack Kemp practiced from the heart.

Jeb Bush, Ben Carson, Chris Christie ', 90, 3, 5441231, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2125, '2016 Democratic Candidates - Brown & Black Democratic Presidential Forum', 'The Iowa Brown & Black Presidential Forum is an element of Urban Dreams’ non-partisan Project V.O.T.E. It is the nation’s only presidential forum in which all candidates have the opportunity to answer essential concerns of African-Americans and Latinos.', 90, 4, 5479781, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2126, '2016 Democratic Candidates - The CNN Iowa Presidential Town Hall', null, 90, 5, 5490763, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2127, 'Seventh Republican Primary Underdog Debate', null, 90, 6, 5497548, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2128, 'CNN New Hampshire Democratic Town Hall', null, 90, 7, 5503404, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2129, 'ABC News Your Voice, Your Vote with George Stephanopolous', null, 90, 8, 5509349, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2130, 'CNN South Carolina Republican Town Hall - Part 1', null, 90, 9, 5521148, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2131, 'CNN South Carolina Republican Town Hall - Part 2', null, 90, 11, 5521902, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2132, 'MSNBC Donald Trump Town Hall', 'On Wednesday night, Morning Joe hosts Mika Brzezinski and Joe Scarborough moderated a Town Hall for MSNBC featuring exclusively Donald Trump. The Republican frontrunner took the stage in South Carolina at 8 p.m. ET, where he is expected to face questions from both the Morning Joe hosts as well as the audience.
Ben Carson, Ted Cruz, and Marco Rubio CNN will feature three of the remaining Republican candidates for President in a televised Town Hall beginning at 8 p.m. ET Wednesday night. The event, which will be moderated by Anderson Cooper live from South Carolina, will feature Ben Carson, Ted Cruz, and Marco Rubio answering questions from voters.

Wednesday’s Town Hall from Greenville comes just three days before the state-wide primary, the first time voters will head to the polls since Donald Trump was named the winner of the New Hampshire Primary.

The remaining candidates from the GOP — Trump, Jeb Bush, and John Kasich — were be featured in a separate Town Hall on CNN Thursday night from Columbia. That event will also be moderated by Anderson Cooper.', 90, 10, 5522028, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2133, 'MSNBC Las Vegas Democratic Town Hall', 'A sixth forum, a Town Hall event, happened on February 18, 2016, at the "KMA event center" in Las Vegas, Nevada. It was aired on MSNBC and Telemundo.[72]', 90, 12, 5522031, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2134, 'CNN South Carolina Democratic Town Hall', null, 90, 13, 5528770, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2135, 'Fox News Detroit Democratic Town Hall', 'The eighth democratic forum, a Town Hall event, was held at 6:00 p.m. E.S.T. on March 7, 2016, at the Gem Theatre in Detroit, Michigan on the Fox News Channel.[83] The forum was moderated by Bret Baier.', 90, 14, 5544502, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2136, 'MSNBC Marco Rubio Town Hall', null, 90, 15, 5544503, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2137, '2016 Republican Candidates - Family First Forum', 'The Presidential Family Forum was held in the Community Choice Credit Union Convention Center in Des Moines, Iowa. Ben Carson, Ted Cruz, Carly Fiorina, Mike Huckabee, Rand Paul, Marco Rubio, and Rick Santorum attended the forum hosted by evangelical Christian advocacy groupThe Family Leader. It was hosted by politician and political activist Bob Vander Plaats and moderated by political consultant and pollster Frank Luntz. Protesters interrupted the beginning of the event and were removed by police.', 90, 16, 5544712, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2138, 'The Republican Jewish Coalition Presidential Candidates Forum', 'The Republican Jewish Coalition Presidential Candidates Forum was held in the Ronald Reagan Building and International Trade Center by the lobbyist group Republican Jewish Coalition. All candidates except Rand Paul attended the eight hour long forum.', 90, 17, 5544713, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2139, '2016 Republican Candidates - Megyn Kelly Town Hall', 'Megyn Kelly hosted a two-hour town hall event on the Kelly File with Kasich, Cruz, Rubio, and Carson in attendance. Trump did not participate in the forum.', 90, 18, 5544716, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2140, '2016 Republican Candidates - Fox News Town Hall', 'John Kasich was on On the Record w/ Greta Van Susteren at 7pm. Ted Cruz was on The Kelly File at 9pm. Donald Trump was on Hannity at 10pm. Marco Rubio was on The Kelly File at 11pm.', 90, 19, 5544717, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2141, '2016 Democratic Candidates - Virtual, Moveon.org', 'The second forum for the Democratic primaries occurred on November 24, 2015. On October 21, 2015, MoveOn announced that it would host a candidate forum to be recorded and aired online in mid-November. The announcement came amid ongoing unrest within the Democratic party over the unusually low number of Democratic debates allowed by the DNC. While five candidates – Lincoln Chafee, Hillary Clinton, Lawrence Lessig, Martin O''Malley, and Bernie Sanders – were invited, only Sanders and O''Malley appeared at the event. Although this was the first forum between the candidates in which Lessig was invited, he dropped out of the race before the forum was to be held.

The two candidates delivered responses on Social Security, student debt, gun violence, immigration, campaign finance reform, climate change, the progressive movement, the Syrian refugee crisis, the economy, racial profiling, and police brutality, and gave closing statements.', 90, 20, 5544718, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2142, 'CNN Ohio Democratic Town Hall 2016', 'Hillary Clinton and Bernie Sanders both accused Donald Trump of inciting violence, with the former secretary of state calling him "bigoted" and alleging he had perpetrated "political arson," while the Vermont senator labeled him a "pathological liar" at a town hall on Sunday night.

"It is clear that Donald Trump is running a very cynical campaign pitting groups of Americans against one another. He is trafficking in hate and fear," Clinton said during the event at Ohio State University hosted by CNN and TV One. "He actually incites violence in the way he urges his audience on, talking about punching people, offering to pay legal bills."

Clinton charged that Trump was guilty of a case of "political arson" by throwing fuel on political divisions in the country.', 90, 21, 5549580, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2143, 'Commander-in-Chief Forum', 'During this one-hour forum, both Hillary Clinton and Donald Trump will be on stage back-to-back taking questions on national security, military affairs and veterans issues from NBC News and an audience comprised mainly of military veterans and active service members.

To the protest of many Gary Johnson was excluded from this townhall despite polling higher with veterans than either of the other candidates.', 90, 22, 5762250, 216);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2144, 'Sixth Republican Primary Debate', 'On December 8, 2015, it was announced that Fox Business Network would host an additional debate two days after the State of the Union address.[128] The debate was held in the North Charleston Coliseum in North Charleston, South Carolina. The anchor and managing editor of Business News, Neil Cavuto, and anchor and global markets editor, Maria Bartiromo, reprised their roles as moderators for the prime-time debate, which began at 9 p.m. EST. The earlier debate, which started at 6 p.m. EST, was again moderated by anchors Trish Regan and Sandra Smith.[', 90, 1, 5482733, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2145, 'Fourth Democratic Primary Debate', 'With less than two weeks until the Iowa Caucus, Hillary Clinton and Bernie Sanders sharpened their attacks in the NBC News-YouTube Debate Sunday night.
', 90, 2, 5483550, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2192, 'First Presidential Debate', null, 90, 1, 5987249, 226);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2193, 'Second Presidential Debate', null, 90, 2, 5987250, 226);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2194, 'Third Presidential Debate', null, 90, 3, 5987251, 226);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2195, 'Vice Presidential Debate', null, 90, 4, 5987252, 226);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2196, 'First Democratic Primary Debate (1)', null, 90, 1, 7259114, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2498, null, null, 95, 84, 392280, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2146, 'Ninth Republican Primary Debate', 'The ninth debate was held in another early primary state, South Carolina, and aired on CBS News. The debate was moderated by John Dickerson in the Peace Center in Greenville, started at 9 pm ET and went for 90 minutes. Major Garrett of CBS and Kimberley Strassel of WSJ also asked questions.[165] To participate in the debate, a candidate had to have either (1) placed among the top five candidates in the popular vote of the New Hampshire primary, (2) placed among the top three candidates in the popular vote of the Iowa caucuses, or (3) be among the top five candidates in an average of national and South Carolina polls over the four weeks beginning January 15 (that are recognized by CBS) and have received at least 3% in Iowa or New Hampshire or the South Carolina or national polls. The day before the debate, Ben Carson was invited to join the other participants: Jeb Bush, Ted Cruz, John Kasich, Marco Rubio, and Donald Trump.', 90, 7, 5490729, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2147, 'Seventh Republican Primary Debate', 'The seventh debate was held in Iowa, which holds the first caucuses, and was the second debate to air on Fox News Channel. As in Fox''s first debate, the moderators were Bret Baier, Megyn Kelly, and Chris Wallace. It was the last debate before actual voting begins with the Iowa caucuses on February 1, 2016

The debate was, again, divided into undercard and primetime rounds; to qualify for the primetime debate, candidates must have, in polls recognized by FNC, either placed in the top six nationally based on an average of the five most recent national polls; place in the top five in Iowa, based on an average of the five most recent Iowa state polls, or place in the top five in New Hampshire, based on an average of the five most recent New Hampshire state polls. In order to qualify for the first debate, candidates must have registered at least one percent in one of the five most recent national polls', 90, 3, 5496033, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2148, 'Eighth Republican Primary Debate', 'The eighth debate was held in New Hampshire, the first state to hold primaries, was organized by ABC News and the Independent Journal Review. It was scheduled to be held in the St Anselm''s College Institute of Politics. The eighth debate was the first to not feature an undercard event for minor candidates. David Muir and Martha Raddatz were moderaters, along with WMUR political director Josh McElveen and Mary Katherine Ham.

To participate in the debate, a candidate had to have either placed among the top three candidates in the popular vote of the Iowa caucus, or placed among the top six candidates in an average of New Hampshire or national polls recognized by ABC News. Only polls conducted no earlier than January 1 and released by February 4 were included in the averages.

On February 4, 2016, Jeb Bush, Ben Carson, Chris Christie, Ted Cruz, John Kasich, Marco Rubio, and Donald Trump were invited to the debate.[158] Carly Fiorina and Jim Gilmore were not invited as they did not meet the criteria', 90, 5, 5496226, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2149, 'Fifth Democratic Primary Debate', 'On January 26, NBC News and the New Hampshire Union Leader announced plans to hold an unsanctioned debate in New Hampshire on February 4, to be moderated by Chuck Todd and Rachel Maddow.[50] Clinton, Sanders, and O''Malley all received an invitation to the debate, with O''Malley being the first to confirm his participation.[51] On January 31, the DNC officially sanctioned the debate but removed the Union Leader as a sponsor, and each major Democratic candidate confirmed their attendance.[52][53] O''Malley suspended his campaign after a poor showing in the Iowa caucuses, thereby leaving Clinton and Sanders as the remaining participants. The debate aired on February 4, 2016, from 9 to 11 pm ET on MSNBC.

Commentators of the debate cited the elevated discourse between the candidates. There was discussion on the death penalty (federal versus state), money in politics, and assessing Russia, Iran, and North Korea as threats to national security. Clinton demanded that Sanders explain his "artful smears" of Clinton receiving campaign donations. Sanders responded by critiquing the inherently "quid-pro-quo" nature of Wall Street campaign donations. The exchange between the two candidates was called by Eric Levitz one of the best 10-minute exchanges in the history of American political debates.', 90, 4, 5496227, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2150, 'Tenth Republican Primary Debate', 'After the caucus in Nevada, the tenth debate was held at the University of Houston in Houston and broadcast by CNN as its third of four debates, in conjunction with Telemundo. The debate aired five days before 14 states vote on Super Tuesday, March 1. While the debate was to be held in partnership with Telemundo''s English-language counterpart NBC, RNC Chairman Reince Priebus announced on October 30, 2015, that it had suspended the partnership in response to CNBC''s "bad faith" in handling the October 28, 2015, debate. On January 18, 2016, the RNC announced that CNN would replace NBC News as the main host of the debate, in partnership with Telemundo and Salem Communications (CNN''s conservative media partner). The debate was shifted a day earlier at the same time. National Review was disinvited by the Republican National Committee from co-hosting the debate over its criticism of GOP front-runner Donald Trump. On February 19, the criteria for invitation to the debate was announced: in addition to having official statements of candidacy with the Federal Election Commission and accepting the rules of the debate, candidates must have received at least 5% support in one of the first four election contests held in Iowa, New Hampshire, South Carolina, and Nevada. By these criteria, all five remaining candidates, Carson, Cruz, Kasich, Rubio, and Trump, qualified for invitation to the debate. This was the tenth and final debate appearance of Carson, who skipped the following debate on March 3, and dropped out of the race the following day.', 90, 8, 5496228, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2151, 'Sixth Democratic Primary Debate', 'A sixth debate was held at 8:00 PM CST on Thursday, February 11, 2016, in Milwaukee, Wisconsin, at the University of Wisconsin–Milwaukee. It aired on PBS and was simulcast by CNN. Two anchors of PBS NewsHour, Gwen Ifill and Judy Woodruff, moderated for the two candidates.   The debate preshow ran for 30 minutes before the debate. Clinton noted it was a new milestone among presidential debates owing to the fact that more women were on the debate stage than men (3:1). After opening statements with Sanders going first, each candidate had 90 seconds to answer and then the other was given a 30-second response. There were two short breaks. During a break, highlights of the debate were shown by Hari Sreenivasan with political commentary from Lisa Desjardins, Amy Walter, and Tamara Keith weighing in on what had been said.  The candidates debated on race relations, the size of government, funding their goals, Medicaid/Medicare, campaign contributor''s influence, the prospect of a first woman president, affordable college, reducing areas of government, readiness for an attack on America, Henry Kissinger, Russian relations, the U.S. role with respect to refugees, influential leaders on foreign policy, and criticism of President Barack Obama. In closing statements, Sanders talked about bringing people together to create a representative government. Clinton''s closing talked about not being a single issue candidate and taking on all barriers to people achieving their individual potentials.  After the debate, the commentators were asked if the candidates did what they needed to do. Then Sreenivasan interviewed journalists David Brooks and Mark Shields in the postdebate coverage.', 90, 6, 5496229, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2197, 'First Democratic Primary Debate (2)', null, 90, 2, 7259116, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2198, 'Second Democratic Primary Debate (1)', null, 90, 3, 7259128, 227);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2152, 'Twelfth Republican Primary Debate', 'The twelfth debate will be the fourth and final debate to air on CNN, and will lead into the Florida, Illinois, North Carolina, Missouri and Ohio primaries on March 15. The moderator will be Jake Tapper. The debate was scheduled considering the unlikelihood that a Republican candidate would have clinched by then due to the overall size of the field. The Washington Times will cohost the debate.', 90, 12, 5496230, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2153, 'Eleventh Republican Primary Debate', 'The eleventh debate was held on March 3, 2016, at the Fox Theatre in downtown Detroit, Michigan. It was the third debate to air on Fox News Channel. Special Report anchor Bret Baier, The Kelly File anchor Megyn Kelly and Fox News Sunday host Chris Wallace served as moderators. It led into the Maine, Kansas, Kentucky, Louisiana, Michigan, Mississippi, Idaho, and Hawaii contests. Fox announced that in order for candidates to qualify, they must have at least 3 percent support in the five most recent national polls by March 1 at 5 pm. Ben Carson said on March 2 he would not be attending the debate. The debate drew controversy for an allusion Trump made to his penis in response to Rubio''s comment about the size of his hands.', 90, 9, 5496231, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2154, 'Ninth Democratic Primary Debate', 'The Democratic Party''s ninth presidential debate ahead of the 2016 U.S. presidential election was held on April 14, 2016 at the Duggal Greenhouse in Brooklyn Navy Yard. The debate was aired on CNN and NY1. Wolf Blitzer of CNN served as moderator.', 90, 15, 5496232, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2155, 'First Presidential Debate', 'The First Presidential Debate was held on September 26, 2016 at 9PM EDST.  It was moderated by NBC''s Lester Holt and located at Hofstra University in Hempstead, New York.', 90, 17, 5496233, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2156, 'Vice Presidential Debate', 'Virginia Sen. Tim Kaine and Indiana Gov. Mike Pence met face-to-face for the first time Tuesday October 4, 2016, as the running mates took part in the only vice-presidential debate of the 2016 election.', 90, 18, 5496234, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2157, 'Second Presidential Debate', '
The second presidential debate will take the form of a town meeting, in which half of the questions will be posed directly by citizen participants and the other half will be posed by the moderator based on topics of broad public interest as reflected in social media and other sources. The candidates will have two minutes to respond and there will be an additional minute for the moderator to facilitate further discussion. The town meeting participants will be uncommitted voters selected by the Gallup Organization.', 90, 19, 5496235, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2158, 'Eighth Democratic Primary Debate', 'The eighth debate took place on March 9, 2016, at 9:00 PM Eastern Standard Time in Building 7 of the Kendall Campus of Miami Dade College in Miami, Florida. It was broadcast through a partnership between Univision and The Washington Post. The debate was discussed during a job interview conducted in early 2015 between the Democratic National Committee''s then-Communications DirectorMo Elleithee and future Hispanic Media Director Pablo Manriquez. After starting at the DNC in April 2015, Manriquez "talked about the idea for a debate for Democratic candidates on Univision to anyone who had ears to listen." The debate was officially announced on November 2, 2015.', 90, 11, 5503407, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2159, 'Seventh Democratic Primary Debate', 'The seventh debate was conducted on March 6 at 8.00 pm EST, in Flint, Michigan at the The Whiting at the Flint Cultural Center. The city chosen was the epicenter of the ongoing Flint water crisis. It aired on CNN and was moderated by Anderson Cooper  He was joined by CNN''s Don Lemon in asking questions. The debate ran for almost two hours. At the end of the debate, Cooper announced a labor union fund had committed $25 million in low-interest loans towards repairing the water system. The Michigan Democratic Party claimed the organization had no tickets to distribute leading up to the debate for the general public, party volunteers & major party donors, however sent out open public emails with links to open invites for any person interested in attending a pre-debate reception and dinner on March 5, combined with debate tickets for March 6, that would be willing to purchase tickets for $1,000 to $20,000 per package via EventBrite Candidates were given 75 seconds to respond and 30 seconds for follow-ups. Members of the audience, made up of democrats and independents, were also given the chance to field questions, which were screened to avoid overlapping in content. Sanders and Clinton were given 60 seconds for opening statements and for closing statements at the end of the debate.  Sanders attracted controversy when he quoted a Black Lives Matter advocate who said "When you are white, you don''t know what it''s like to be living in a ghetto. You you [sic  don’t know what it’s like to be poor," when answering a question in the debate  Commentators and supporters criticized Sanders for being insensitive and racially inflammatory.', 90, 10, 5507288, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2160, 'Stossel Libertarian Debate Part 1', 'This is the first Libertarian Party forum to be live broadcast on national television. The three candidates invited; Former New Mexico Gov. Gary Johnson, cybersecurity guru John McAfee, and Libertarian Republic founder Austin Petersen.', 90, 13, 5581755, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2161, 'Third Presidential Debate', null, 90, 20, 5586651, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2162, 'Stossel Libertarian Debate Part 2', 'Part 2 of the Libertarian Presidential Forum, the three leading Libertarian candidates: Former New Mexico Governor Gary Johnson, tech entrepreneur John McAfee, and The Libertarian Republic founder, Austin Petersen answer questions about drugs, gambling, prostitution, security, and immigration.', 90, 14, 5621632, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2163, 'Las Vegas Libertarian Debate', 'Gary Johnson, Austin Peterson, John McAfee. Hosted by Penn Jillette on The Blaze network.

With questions asked by
GREG GUTFELD
CLAY AIKEN of AMERICAN IDOL
RATSO
DEE SNIDER of TWISTED SISTER
DREW CAREY
CARROT TOP
GLENN BECK
FRANK MIR
LAWRENCE KRAUSS
', 90, 16, 5621667, 217);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2164, 'First Presidential Debate', null, 90, 1, 5488070, 218);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2165, 'Second Presidential Debate', null, 90, 2, 5488073, 218);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2166, 'Third Presidential Debate', null, 90, 3, 5488074, 218);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2167, 'Fourth Presidential Debate', null, 90, 4, 5488075, 218);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2168, 'First Presidential Debate', null, 90, 1, 5488077, 219);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2169, 'Second Presidential Debate', null, 90, 2, 5488078, 219);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2170, 'Third Presidential Debate', null, 90, 3, 5488079, 219);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2171, 'Vice Presidential Debate', null, 90, 4, 5987210, 219);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2172, 'First Presidential Debate', null, 90, 1, 5987216, 220);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2173, 'Second Presidential Debate', null, 90, 2, 5987217, 220);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2174, 'Third Presidential Debate', null, 90, 3, 5987219, 220);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2175, 'Fourth Presidential Debate', null, 90, 99, 5987223, 220);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2176, 'Vice Presidential Debate', null, 90, 4, 5987225, 220);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2177, ' Presidential Debate', null, 90, 1, 5987233, 221);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2178, 'Presidential Debate 2', null, 90, 2, 5999711, 221);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2179, ' First Presidential Debate', null, 90, 1, 5987234, 222);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2180, 'Second Presidential Debate', null, 90, 2, 5987235, 222);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2181, 'Vice Presidential Debate', null, 90, 3, 5987236, 222);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2182, 'First Presidential Debate', null, 90, 1, 5987237, 223);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2183, 'Second Presidential Debate', null, 90, 2, 5987238, 223);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2184, 'Vice Presidential Debate', null, 90, 3, 5987239, 223);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2185, 'First Presidential Debate', null, 90, 1, 5987240, 224);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2186, 'Second Presidential Debate', null, 90, 2, 5987241, 224);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2202, 'Mark Thomas on Coca-Cola', 'Coca-Cola is one of the most iconic brands of both the 20th and 21st centuries. Promoting itself as the drink of freedom, choice and US patriotism, the company''s feel-good factor is recognised worldwide and reflected in its enormous profits.

But behind this carefully crafted image exists a company accused of environmental damage, human rights violations and questionable business practices.

Political activist and journalist Mark Thomas travels to South America, India and the US to investigate the way in which Coca-Cola and its suppliers operate and the extent to which they upholds moral and ethical obligations.

Thomas, a long-term critic of Coca-Cola''s more controversial practices, finds disturbing evidence which undermines its effervescent image as a force for good and which has prompted a global consumer backlash.', 91, 1, 426809, 228);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2203, 'Iraq''s Missing Billions', 'Investigation into what has happened to the twenty-three billion dollars entrusted to the British and American coalition for the rebuilding of Iraq. Looks at whether promises of reconstruction, restoration of basic services, and building of schools and medical centres have been kept. Considers the problems of a children''s and maternity hospital and also looks into a trail of fraud, corruption and incompetence leading back to the USA, which has meant the disappearance of vasts sums of much-needed money.
', 91, 6, 473171, 229);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2204, 'What Muslims Want', 'What do Muslims in Britain really want? Are they a homogenous group sharing similar values? Is religion more important to them than nationality?
', 91, 16, 473181, 229);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2205, 'Burma''s Secret War', 'Dispatches exposes the surge in violence inflicted on the Burmese people by their own regime. Enslaved by a brutal military dictatorship which wields absolute power, Burma is a secretive state where suppression reigns and dissent is not tolerated. ', 91, 22, 2555161, 229);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2206, 'Undercover Mosque', 'Documentary investigating the extreme views being preached in a number of British mosques run by organisations that claim to advocate moderation.', 91, 3, 473191, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2207, 'Cameron - Toff At The Top', 'Political columnist Peter Hitchens gives a personal assessment of Conservative Party Leader David Cameron, looking at his background, career, image changes and copying New Labour spin and image tactics with regard to image and policy making.', 91, 12, 473201, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2208, 'Mark Thomas on Coca-Cola', 'Investigative report by Mark Thomas into the accusations of exploitation of workers, human rights violations, environmental damage, and questionable business practices by Coca-Cola. Looks at its suppliers and operations in India, South America and the US.', 91, 38, 594301, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2209, 'Iraq''s Death Squads', 'Iraq''s Death Squads follows on from a previous Dispatches investigation that revealed the close links between high-ranking Shia politicians and the death squads that rampage through Iraq''s main cities. ', 91, 5, 2555121, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2210, 'China''s Stolen Children', 'More than a decade after producing The Dying Rooms - a powerful film about the neglect of abandoned babies in Chinese orphanages - the same award-winning team returns to a very different China, where the infamous One Child Policy has created the horrific side-effect of a boom in stolen children.', 91, 32, 2555131, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2211, 'Abortion: What We Need to Know', 'Featuring the findings of a survey into doctors'' opinions on abortion, Dispatches reveals why many doctors would like to see the law changed, and lifts the lid on the private debates that are happening within the medical profession.', 91, 33, 2555141, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2212, 'Britain Under Water', 'Dispatches investigates what the authorities are doing to protect the public from an increased risk of flooding and questions whether adequate resources are being spent on flood defences.', 91, 39, 2555151, 230);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2213, 'Gordon Brown: Where Did It All Go Wrong?', 'Andrew Rawnsley, the award-winning broadcaster, who presented last year''s widely acclaimed The Rise and Fall of Tony Blair, assesses Gordon Brown''s first year as Prime Minister.
', 91, 20, 473211, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2214, 'Saving Africa''s Witch Children', 'In some of the poorest parts of Nigeria, where evangelical religious fervour is combined with a belief in sorcery and black magic, many thousands of children are being blamed for catastrophes, death and famine: and branded witches. Denounced as Satan made flesh by powerful pastors and prophetesses, these children are abandoned, tortured, starved and murdered: all in the name of Jesus Christ.

This Dispatches special follows the work of one Englishman, Gary Foxcroft, who has devoted his life to helping these desperate and vulnerable children. Gary''s charity, Stepping Stones Nigeria, raises funds to help Sam Itauma who, five years ago, rescued four children accused of witchcraft. He now struggles to care for over 150 in a makeshift shelter and school called CRARN (Child Rights and Rehabilitation Network).
', 91, 40, 1990431, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2215, 'Jon Snow''s Hidden Iraq', 'Five years after the invasion, Channel 4 News anchor Jon Snow examines the brutal reality of life inside post-invasion Iraq, meeting a variety of its citizens - from victims of bomb blasts and war widows, to human rights activists and politicians. ', 91, 11, 2555041, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2216, 'Undercover in Tibet', 'Tibetan exile Tash Despa returns to the homeland he risked his life escaping from to carry out secret filming with the award-winning, Bafta-nominated director Jezza Neumann. ', 91, 12, 2555051, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2217, 'Undercover Mosque: The Return', 'A year-and-a-half after the critically acclaimed film Undercover Mosque was first screened, Dispatches goes undercover again to see whether extremist beliefs continue to be promoted in certain key British Muslim institutions. The film also investigates the role of the Saudi Arabian religious establishment in spreading a hard-line, fundamentalist Islamic ideology in the UK - the very ideology the Government claims to be tackling.', 91, 29, 2555061, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2218, 'What''s In Your Wine?', 'With wine consumption in the UK hitting record levels, Jane Moore investigates the many different substances - including fish and dairy products - that can be used to produce wine but which rarely appear on the label of the average bottle.', 91, 31, 2555071, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2219, 'Cameron''s Money Men', 'Originally broadcast in 2008, Antony Barnett investigates the funding of the Tories under Cameron and examines how the party is using its newfound resources to ensure its leader becomes the next Prime Minister.', 91, 33, 2555081, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2220, 'The Human Cost of the Credit Crunch', 'Dispatches travels across Britain to meet the families who feel let down after more than a decade of struggling to better themselves. Having thought there lives were getting better, these families now see themselves sliding back down the social ladder.', 91, 32, 2555091, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2221, 'Mum Loves Drugs, Not Me', 'In this Dispatches film, award-winning filmmakers Brian Woods and Kate Blewett reveal the devastating impact that illegal drugs have on neglected children, whose childhoods are blighted by chaos.', 91, 39, 2555101, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2222, 'Iraq: The Legacy', 'Peter Oborne returns to Iraq in a follow-up to his Dispatches film, Iraq: The Betrayal. His aim is to find out whether - as Barack Obama hoped in the build-up to his presidency - that it is ''safe'' for Western forces to leave.', 91, 41, 2555111, 231);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2388, 'Kino Webisode 29 : Favorite Meal of All Time', 'Eli asks everyone what their "favorite meal of all time" is. ', 94, 30, 2024731, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2223, 'Pakistan''s Taliban Generation', 'Award-winning Pakistani journalist Sharmeen Obaid-Chinoy investigates how the war on terror is creating a generation of child terrorists in her homeland - children prepared to kill both inside and outside Pakistan.
  Sharmeen investigates how the Taliban are recruiting increasingly younger fighters to their campaign. She meets a 14-year-old boy in her home city of Karachi who is desperate to become a suicide bomber. She then follows the elite unit of the anti-terror police squad - who warn that the Taliban are hiding out in the city''s sprawling slums and recruiting children from small madrassas in deprived neighbourhoods.
  Sharmeen also interviews a Taliban commander responsible for child recruitment, who reveals that children as young as five are now being used by the Taliban.', 91, 10, 899251, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2224, 'The True Cost of Cheap Food', 'As the credit crunch bites, thousands of families are cutting back by swapping expensive premium-range food for cheaper budget lines - but at what cost? Food critic and author Jay Rayner examines what goes into these budget products and asks why, too often, low cost means low quality.', 91, 3, 993291, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2225, 'Battle Scarred', 'As British forces fight on two fronts in military operations, award-winning filmmaker David Modell examines the devastating trauma suffered by many soldiers - which leaves no visible scars, but great psychological injury.

The programme tells the moving stories of four soldiers as a result of their experiences in combat zones.

To many here, the conflicts may seem remote, but this film provides an intimate portrait of its impact on the lives of individual soldiers and their families.

Examining the consequences of long and repeated tours of duty, the film raises serious questions about the adequacy of existing support structures to help returning soldiers cope with any trauma they may be suffering.

In addition to the film, this website details more individual cases, plus information and research into the key issues of alcohol, mental health, relationships and suicide.', 91, 28, 1065521, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2226, 'Middle Class and Jobless', 'Dispatches examines one of the biggest surprises of the credit crunch: middle-class unemployment.

From company directors to university graduates, this film follows the experience of several people who have found themselves out of work and desperately in search of a job, with some going to extraordinary lengths to try to secure one.

Dispatches highlights the practical realities of trying to find work, even when armed with a degree or a glowing CV.', 91, 29, 1077431, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2227, 'Who Took Your Pension?', 'Dispatches lifts the lid on the pensions crisis. The programme names some of the blue-chip companies that have abandoned final salary pension schemes. It shows how widespread the problem of underperforming pensions is, and how difficult it is to get full compensation if things go wrong.
Dispatches also reveals the extent to which public sector pensions are under threat, and how far private pensions have failed to deliver in the recession. The programme asks whether the government has failed to protect pensions, and examines their ideas for tackling the crisis in the future.', 91, 32, 1269281, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2228, 'Lords, Billionaires and the Russian Connection', null, 91, 37, 1469841, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2229, 'MPs, Planes and Gravy Trains', 'Alex Thomson investigates how MPs have spent their 82-day summer recess, and what is expected of them during this time.

With publicly funded trips jetting off all around the globe, who are the frequent fliers and how accountable are these visits?

Dispatches travels around the world in 82 days to look at what is on offer during the summer break and how open and transparent our elected representatives really are.

Thomson examines whether taxpayers are getting value for their money from their elected representatives, with politicians desperate to regain trust after the expenses scandal in May 2009.', 91, 31, 1713491, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2230, 'Christmas on Credit', 'As banks and building societies close their doors to all but the least ''risky'' borrowers, Dispatches reporter Jane Moore investigates a highly lucrative financial industry that has stepped in to provide loans to the millions of people denied credit elsewhere.

She discovers that many of the loans offered by some of these doorstep operators, payday lenders, and rent-to-buy companies come with sky-high interest rates that can financially overwhelm families already steeped in debt. And the sting in the tail is that these loans are entirely legal.

While the Bank of England''s rate remains at an all-time low, these companies are able to charge whatever interest they like.

The programme asks why the Government has resisted calls to impose interest rate ''caps'' on the various loans on offer, allowing the market to be so under-regulated that foreign loan companies are switching their operations to Britain.

In the run-up to Christmas, the impact of these high interest rate charges can be financially devastating for some families. Dispatches visits areas of the country where whole streets, and sometimes virtually entire estates, are in hoc to such lenders.', 91, 38, 1990231, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2231, 'Return to Africa''s Witch Children', 'In 2008 a Bafta and Emmy Award-winning Dispatches told the story of how children in Africa''s Niger Delta were being denounced by Christian pastors as witches and wizards and then killed, tortured or abandoned by their own families.

The film, which prompted international outrage against a practice conducted in the name of Jesus, forced the Nigerian authorities and the UN to act.

Child rights legislation came into force making it illegal to brand children as witches and some pastors were arrested. Financial support also poured in to assist a small British charity (Stepping Stones Nigeria) providing the only safe refuge for hundreds of youngsters attacked after claims that they were possessed by the Devil.

In Return to Africa''s Witch Children, Dispatches reveals what happened to some of the children and church leaders who originally featured, and discovers that even now children as young as two are still being stigmatised as witches and treated as outcasts.

Gary Foxcroft of Lancaster-based charity Stepping Stones Nigeria also returns to Nigeria and discovers that since his last visit the rescue centre that houses many of these children was the target of an attack. He also learns that the number of children living there has in fact risen.

Two-and-a-half-year-old Ellin is one such child. She was found at the side of the road, her body having been severely burnt with boiling water. Nwanakwo Udo Edet, around eight years old, wasn''t so fortunate. He had acid poured over him after being labelled a wizard and later died.', 91, 36, 1990241, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2239, 'Terror in Mumbai', 'The untold story of 2008''s terrorist attack, in the words of its victims and the gunmen. The programme contains graphic images and descriptions of the atrocity which may upset some viewers. Produced and directed by award-winning filmmaker Dan Reed, Terror in Mumbai tells the story of what happened when 10 gunmen held one of the world''s busiest cities hostage; killing and wounding hundreds of people while holding India''s crack security forces at bay.

Featuring footage of the attacks and interviews with senior police officers and hostages, including the testimony from Kasab - the sole surviving gunman, Dispatches reveals what happened, hour by hour, from the perspective of the security forces, the terrorists, their masterminds and the victims.', 91, 24, 1990321, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2389, 'Kino Webisode 30 : Not Being There', 'Hunter Riley records his diary entry. ', 94, 31, 2024741, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2499, null, null, 95, 85, 392281, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2500, null, null, 95, 86, 392282, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2232, 'Inside Britain''s Israel Lobby', 'Dispatches investigates one of the most powerful and influential political lobbies in Britain, which is working in support of the interests of the State of Israel.

Despite wielding great influence among the highest realms of British politics and media, little is known about the individuals and groups which collectively are known as the pro-Israel lobby.

Political commentator Peter Oborne sets out to establish who they are, how they are funded, how they work and what influence they have, from the key groups to the wealthy individuals who help bankroll the lobbying.

He investigates how accountable, transparent and open to scrutiny the lobby is, particularly in regard to its funding and financial support of MPs.

The pro-Israel lobby aims to shape the debate about Britain''s relationship with Israel and future foreign policies relating to it.

Oborne examines how the lobby operates from within parliament and the tactics it employs behind the scenes when engaging with print and broadcast media.', 91, 35, 1990251, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2233, 'What''s in Your Breakfast?', 'It is the most important meal of the day, but all too often, breakfast in the UK is far from healthy.

In this edition of Dispatches, reporter Jane Moore reveals how nutritious the nation''s breakfasts really are and the marketing techniques employed by this lucrative industry. Manufacturers are using health claims to sell their breakfast cereals, drinks and bars.

Dispatches investigates the evidence provided to support these claims and asks if some of the healthy-sounding cereals and pro-biotic yoghurts are all they are cracked up to be.

Moore uncovers what is actually in your breakfast food. Do you really know just how much sugar and salt are in children''s cereals, particularly those marketed as ''healthy''?

Moore finds that the unwillingness of retailers and manufacturers to adopt the traffic light systems recommended by food standards authorities is confusing things further. Even if you want to eat the right thing, it is not always easy to tell what that is.

She also tests the regulators'' rules on ''healthy'' branding by baking a cake that could still make many of the health claims made by cereals.

Moore examines the recent shifts in cereal marketing which enable manufacturers to stay ahead of the regulators. With advertising of sugary children''s foods banned during kids TV programming, Moore discovers that their marketing has moved to prime-time TV and the internet.', 91, 34, 1990261, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2234, 'Ready for a Riot', 'The death of Ian Tomlinson during the G20 protests in April 2009 and the images of police batons raining down on protestors have put the spotlight on the tactics police deploy during public demonstrations.

Dispatches has been given exclusive access to the Metropolitan Police to find out what training officers are given.

The programme looks at how the police are taught to judge the level of force required to suppress disorder, and examines controversial crowd control tactics like ''containment'', which brings protestors face-to-face with heavily-protected and armed police officers.

Dispatches asks why, if the vast majority of protests pass off peacefully, police training still focuses on the worst-case scenario of riots and petrol bombs, and hears from critics of the current training who argue it is out of step with 21st century protest.

The programme examines the evolution of this training and asks whether the requirements of health and safety legislation have had an adverse effect on policing public order: whether the rules designed to protect the police from harm actually put them at greater risk.

And when Climate Camp returned to the capital in summer 2009, Dispatches was there to find out if lessons had been learnt from the events of G20.', 91, 33, 1990271, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2235, 'Cops on the Cheap?', 'They''re known as ''Blunkett''s Bobbies'' or ''Plastic Police''. There are 16,500 Police Community Support Officers (PCSOs) walking the ''beat'', costing the taxpayer hundreds of millions of pounds per year.

Critics have always attacked them for providing policing on the cheap and a political gimmick, but their supporters say they have been useful in curbing antisocial behaviour and visible reassurance to the public.

Filming with PCSOs at work on the streets of Lancashire, Dispatches investigates whether PCSOs have proven to be a policing success story or an expensive mistake.', 91, 30, 1990281, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2236, 'Bankrolling Mugabe', 'Dispatches investigates how Robert Mugabe and politicians in his ZANU-PF party are still clinging on to power in Zimbabwe, focusing on the businessmen who are benefiting from or supporting his campaign of political violence.

According to opposition politicians in Zimbabwe, those businessmen include well-known figures and companies based in the City of London. Following last year''s disputed elections and political violence, a power-sharing ''National Unity Government'' was established in Zimbabwe. Robert Mugabe remains as President, with the leader of the Movement for Democratic Change, Morgan Tsvangirai , Prime Minister. Tsvangirai has been touring the world trying to get aid to Zimbabwe to help its hungry people and restart its decaying economy.

However, working undercover in Zimbabwe, Dispatches reporter Aidan Hartley discovers that Mugabe has maintained his grip on the police, army and central bank, enabling him and his allies to continue carrying out violence and corruption on a vast scale.', 91, 27, 1990291, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2237, 'Undercover Debt Collector', 'Dispatches goes undercover to investigate one of Britain''s least loved but booming industries - the debt collection business.

Presented by Jane Moore, the programme reveals some of the tactics deployed to get debtors to pay up, and talks to those unfortunate enough to be on the receiving end of this treatment.

Reporter Tom Randall gets a job as a debt collector inside one of the UK''s fastest-growing agencies. He discovers that in recession-hit Britian some of the biggest high-street businesses are cutting their losses and selling on their bad debts to agencies for as little as 16 pence in the pound. Agencies who buy up these debts are entitled to pursue debtors for the full amount.

In this multi-billion pound industry the stakes are high; Dispatches reveals the lengths that collectors will go to to recover their debts.', 91, 26, 1990301, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2238, 'The Children Britain Betrayed', 'Almost 10 years after the death of Victoria Climbié, Dispatches investigates the failures still present in Britain''s child protection system. With a child being killed by their parent or carer every seven days in the UK, and over 160 child killings since 2004, journalist Peter Oborne examines how such horrific murders might be prevented in the future.

The death of Baby Peter in 2007 focussed attention on the failures of social services but as Dispatches demonstrates, the failures in child protection reach beyond the realms of just social work departments to include police forces, health services and - as one mother claims - even the family court system.', 91, 25, 1990311, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2240, 'Orphans of Burmas Cyclone', 'As Burma''s pro-democracy leader, Aung San Suu Kyi, faces trial by the country''s military government, this timely and remarkable Dispatches film follows the lives of eight Burmese orphans as they struggle to survive the aftermath of Cyclone Nargis.

Filmed covertly over the course of a year by two Burmese cameramen, who risked an instant 30-year jail sentence if caught, Orphans of Burma''s Cyclone exposes the official intransigence of one of the world''s most brutal and secretive regimes and, for the first time, reveals what day-to-day life is like for the ordinary people of Burma.', 91, 20, 1990331, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2501, null, null, 95, 87, 392283, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2502, null, null, 95, 88, 392284, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2241, 'Britains Challenging Children', 'With primary schools across the country being stretched by the violent and disruptive behaviour of a small minority, Dispatches reveals the results of an extensive, in-depth survey of teachers to identify the impact on their ability to teach, and documents the efforts of five schools which are tackling the problem head on.

The survey, the largest if its kind ever undertaken and supported by the teaching union NASUWT, reveals the extent of deteriorating standards of behaviour in classrooms across the UK. With millions of teaching hours being lost; it''s the majority of well-behaved kids that are paying the price.

But while the crises in classrooms appear to be escalating for many schools, Britain''s Challenging Children follows the efforts of five primaries trying innovative methods to regain a calm teaching environment. Filmed as observational documentary, in Glasgow, Wigan and Luton, Dispatches explore what works by focussing on their most challenging pupils.

Through early intervention methods such as parental outreach, target-setting for badly behaved children and ''nurture groups'', these schools go beyond punitive measures, to address why children are acting out - helping the individual child to get back on track, and the rest of the class to get on with their work.', 91, 1, 1990411, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2242, 'Mum, Dad Alzheimers and Me', 'Fiona Phillips investigates the struggle of Alzheimer''s sufferers and their families to get adequate care and support.

Monday 11 January 2010In this update, Fiona returns to the issue, examining whether there has been any improvement in the provision of financial support and respite care available for them and their carers. Fiona''s father has Alzheimer''s and her mother died after developing an aggressive, early-onset form of the disease. Fiona continues to face her own dilemma about how best to care for her father as his condition deteriorates.

Mum, Dad, Alzheimer''s and MeThe number of people suffering from dementia, the majority with Alzheimer''s, is projected to rise from 700,000 to over 1 million by 2025 and 1.7 million by 2051. Fiona investigates whether the level of financial support for sufferers, and respite care for those looking after them, is adequate. And with numbers set to increase, is the Government prepared to cope?

Fiona''s father has been recently diagnosed with Alzheimer''s and her mother died after developing an aggressive, early-onset form of the disease. As Fiona faces her own dilemma about the care of her father, she talks to families around the country about the difficulties they have faced in obtaining help, from both the NHS and local authorities.', 91, 2, 1990421, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2243, 'Afghanistan - Mission Impossible?', null, 91, 12, 2374301, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2244, 'Afghanistan''s Dirty War', null, 91, 22, 2374311, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2245, 'Congo''s Forgotten Children', null, 91, 5, 2374331, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2246, 'Rape In The City', 'Journalist Sorious Samura examines gang rape in the wake of two recent high-profile cases, investigating why such violent attacks are now happening in the UK. He uncovers the extent of the problem by meeting four victims who describe their traumatic experiences, learns the shocking truth about a group of teenagers'' attitude to sex and relationships, and hears from youth workers, police officers and academics', 91, 23, 2374341, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2247, 'Unseen Gaza', 'With reporters unable to enter Gaza, attempted media manipulation from both sides and strict regulations governing what images that can be shown on British TV, Jon Snow asks a range of journalists from at home and abroad about the challenges of getting the full story. ', 91, 4, 2374351, 232);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2248, 'The Runaway Cars', null, 91, 18, 1230231, 233);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2249, 'Post Office Undercover', 'Two reporters go undercover as agency postmen to find out if the Royal Mail has delivered on claims that it is modernising and improving its service.

In 2004 and again in 2005, Dispatches went undercover to investigate the Royal Mail. These reports exposed serious systemic and individual failures within the organisation, resulting in an enquiry by the postal regulator, followed by a fine of almost ten million pounds. Five years on, the Royal Mail claims it is modernising and improving its service.

The reporters find an antiquated system with lax security, poorly trained agency workers - many of whom are clearly not up to the job - damaged and defective equipment and allegations of stealing.

Out on their rounds, they are bombarded with complaints from angry members of the public who have experienced damaged mail, delays and poor service, and behind the scenes some managers and workers express contempt for the customer and their concerns.

Joining just before the busy Christmas period, when an industrial truce has been publicly announced by both management and the unions, both reporters find that normal service is far from being resumed. Managers tell the reporters that disputes with unions over working times and the size of postmen''s rounds are causing continued disruptions to the service.

With over four million pounds a year being paid in compensation to customers for lost post and a recent dip in Royal Mail''s delivery performance, Dispatches asks if the organisation is fit for purpose.', 91, 4, 1747531, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2250, 'Kids Don''t Count (Part 1 of 2)', 'In 2009 more than one in five children left primary school having failed to grasp the basic maths skills required by the national curriculum. In a two-part special, Dispatches asks why and how are we failing Britain''s children when it comes to maths.

Dispatches follows a class of final-year pupils at Barton Hill Primary School in Bristol as their staff adopt a radical approach to teaching, in a bid to improve the maths ability of these children before they head off to secondary school.

The problem couldn''t be more urgent. Research shows that failing to grasp the fundamentals of maths at primary school leaves only a one in ten chance of catching up by the age of 16.

Dispatches hears from leading lights in the worlds of business and academia - including the CEO of Sainsbury''s, Justin King, and George Davies, formerly of Next and Asda - about the impact on the economy and on adult life of leaving school without basic maths skills.

In a provocative nationwide exercise, Dispatches examines the standard of primary maths teaching in this country by testing the teachers. No tricks; just 27 questions that a bright 11-year-old would be able to answer. The shocking results are revealed in the programme.', 91, 5, 1747541, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2257, 'Children of Gaza', 'In December 2008, the Israeli Defence Force unleashed a campaign to destroy the ability of Hamas to launch rockets and mortars into Israel. Around 300 children were among the 1,300 Palestinians that were killed.

After the ceasefire, BAFTA-winning filmmaker Jezza Neumann arrived in Gaza to follow the lives of three children over a year.

Surrounded by the remnants of the demolished Gaza Strip and increasingly isolated by the blockade that prevents anyone from rebuilding their homes and their lives, Children of Gaza is a shocking, touching and uniquely intimate reflection on extraordinary courage in the face of great adversity.', 91, 9, 2208201, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2312, 'Premiere', 'In the first episode of Top Gear Australia, Charlie, Warren and Steve go all-wheel driving on the sand and snow. We get a glimpse at Lamborghini''s new supercar, the LP560 and Charlie tests the latest Porsche 911. Warren gets up-close and personal with Great White Sharks off the coast of Port Lincoln using himself as bait and Vince Colosimo is the Star in a Reasonably Priced Car.', 93, 1, 392123, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2390, 'What Else Is Going On?', 'Director Ivon Bartok gives a behind the scenes look at filming the web-only Kino scenes.', 94, 32, 2881621, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2251, 'Kids Don''t Count (Part 2 of 2)', 'In the second half of this two-part special, maths specialist Richard Dunne returns to Barton Hill Primary School, with Countdown''s Rachel Riley, to help the pupils with their mental arithmetic.

Kids Don''t Count asks why and how we are failing Britain''s children when it comes to maths. The programmes follow a class of final-year primary school pupils in Bristol as their staff adopt a radical approach to teaching, in a bid to improve the maths ability of these children before they head off to secondary school.

In the first programme, the Head drafted in maths specialist Richard Dunne. Children who had previously struggled with maths thrived under his programme, which taught them how to understand abstract concepts and relate sums to the real world, and gave them lots of opportunities to repeat the basics so they could be memorised.

But as their SATs approached, under pressure to improve results, the Head temporarily set aside Dunne''s methods.

In this second programme, the SATs are over but many of the children have lost enthusiasm for the subject and still do not have a grasp of the basic building blocks for maths.

Dunne returns to Barton Hill to help the children with their mental arithmetic, joined by Countdown presenter Rachel Riley, who visits the school to help encourage the children to tackle their maths demons.

Sitting in on a maths lesson, Riley is shocked that many of the children struggle to do sums in their heads and do not know their times tables. In a bid to inspire the children in a subject she feels passionate about, she organises a ''children versus adults'' Countdown competition at the school.', 91, 6, 1747551, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2252, 'My Family and Alzheimer''s', 'In 2009, Fiona Phillips investigated the struggle of Alzheimer''s sufferers and their families to get adequate care and support in Dispatches: Mum, Dad, Alzheimer''s and Me.

In this update, she returns to the issue, examining whether there has been any improvement in the provision of financial support and respite care available for them and their carers.

Fiona''s father has Alzheimer''s and her mother died after developing an aggressive, early-onset form of the disease. Fiona continues to face her own dilemma about how best to care for her father as his condition deteriorates.', 91, 1, 1747561, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2253, 'The Slumdog Children of Mumbai', 'Dispatches reveals the brutal reality of life on the streets and in the slums of Mumbai, following the daily struggles of four young children to survive.

A few weeks after running away from his abusive stepmother, 11-year-old Salam is living rough outside the main train station. Befriended by a gang of begging boys, run by 20-year-old Asif, Salam speaks fondly of his new ''brother''. But it soon appears that there is a much darker side to being in Asif''s gang.

Deepa (pictured) is lucky to be alive after rats attacked her when she was just three months old. Now aged seven, she runs barefoot through the hectic Mumbai traffic to sell flowers to help support her family, doing shifts of up to 20 hours at a time. She lives with her grandmother and brothers in a slum with no electricity or sanitation, next to an open rubbish dump. They survive on less than £1 day since her alcoholic father died two years earlier and her mother abandoned them.

Twins Hussain and Hussan, aged 11, live in a shanty town, balanced precariously on a 10-foot-wide water pipe. Five days a week they collect scrap metal and plastic bottles to sell so they can earn money to eat. They also fish utensils out of the canal that runs alongside their back door to sell, despite the risk of cholera and infection. They say they like where they live; ''We are emperors of the night!'' jokes Hussan. But they don''t want to think about their futures.

Dispatches provides a deeply moving portrait of the lives of India''s real slumdogs, blighted by substance abuse, hardship and heartache, yet proof of the infinite resilience of children, and forced to reach adulthood long before they should.', 91, 2, 1747571, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2254, 'Afghanistan: Behind Enemy Lines', 'While most new troops stationed in Afghanistan head to the volatile south of the country, a new frontline, operating almost under the radar of NATO, is encircling the north of the country.

The insurgents are aiming to take over the countryside surrounding the towns and cities and to block the main supply route, the Kunduz-Baghlan road, which services coalition troops across much of Afghanistan since the traditional route through Pakistan became too treacherous.

Dispatches goes inside the enemy camp in northern Afghanistan as award-winning Afghan reporter Najibullah Quraishi is granted access to an army of extreme Islamic combatants.

Quraishi spent almost two weeks with the Central Group of fighters, known to be among the most dangerous and fanatical factions involved in the war, with Chechens, Arabs and other foreign fighters in their ranks and with close links to Al Qaeda and Osama bin Laden. He captures their leisure time, training and planning and accompanies them on an operation targeting the Afghan army.', 91, 3, 1747581, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2255, 'Britain''s Islamic Republic', 'Dispatches investigates a fundamentalist Islamic group headquartered in Britain, and its claims to have placed its ''brothers'' in positions of political power here.

Using undercover recordings, investigative journalist Andrew Gilligan reveals the group''s ambitions to create a worldwide ''Islamic social and political order,'' and the concerns of a mainstream party that they are being ''infiltrated''; and talks to the Muslims who want to stop it.', 91, 7, 1852011, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2256, 'Cameron Uncovered', 'Award-winning columnist and writer Andrew Rawnsley has caused a furore while lifting the lid on Gordon Brown''s premiership. Now Rawnsley presents an inside portrait of David Cameron and the government that might be...

According to opinion polls, after 13 years in the political wilderness, the Conservatives under David Cameron''s leadership seem likely to form the next government. He has been working hard to change his party''s image from ''the nasty party'' and to demonstrate economic competence.

Yet many voters still don''t feel they know his new Tories. How does Cameron operate? Do his closest colleagues work as a party within a party, creating disgruntled outsiders? How much harsher will their cuts in public services be than Labour''s? Will they really lead the country out of recession faster than Gordon Brown? Can the so-called ''toffs'' identify with the concerns of the vast majority of the population?

Rawnsley interviews the man who could be Prime Minister, and his colleagues George Osborne, William Hague and Michael Gove, the men who hope to run our economy, foreign affairs and education system. He gets an opponent''s perspective from Lord Mandelson.

The programme reveals how these ministerial hopefuls plan to put their policies into action the day after the election. They''ve promised a budget within 50 days. What can we expect to happen to taxes, wages, public services and unemployment? Have they really done the homework that would get them off to a running start?

The country seems to want change. But has David Cameron, whose only experience outside politics has been in public relations, done no more than just tinker with the presentation of old Tory attitudes and added some more diverse candidates to the old mix?', 91, 8, 2208191, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2336, 'Stunt School', 'Stunt School Part 1
Jaguar XJ Supersport vs HSV Grange
Stunt School Part 2
Celebrity Challenge - Glen Boss & Damien Oliver
Dick Johnson''s Tribute to Peter Brock
V8 to the Rescue', 93, 4, 4282933, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2391, 'Kino Webisode 31 : One Long Endless Night', 'Lt. James talks about keeping time on the Destiny. Camile wishes James a happy birthday. ', 94, 33, 4098436, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2503, null, null, 95, 89, 392285, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2258, 'Politicians for Hire', 'Following the scandal surrounding MPs'' expenses, Dispatches delves into the mostly unregulated world of political lobbying. The programme reveals how politicians are offering to help companies and lobby the government for salaries of up to £5,000 a day.

Journalist Antony Barnett leads an undercover investigation which examines:

- How senior politicians are seeking to trade on their Westminster connections to earn money from lucrative positions in the private sector.

- Whether the regulations safeguarding the public interest in this regard are both adequate and effective.

Dispatches set up a fictional US public affairs company and contacted several senior politicians and asked them if they were interested in a position on the advisory board of our bogus London office. The programme-makers contacted 20 politicians, 15 agreed to meet and ten were invited in for interviews. Nine of the interviews were filmed secretly and genuine issues of public interest arise from these: the public is entitled to know how retiring politicians see themselves and the services they are offering the corporate and business world in their life after Westminster.

Most suggested that our US company''s clients could get privileged access into the corridors of powers; some agreed to help us win government contracts and lobby the right people. Some even boasted about what they have already achieved for private corporate interests while still serving as MPs.

Those politicians featured in undercover filming are Geoff Hoon, Stephen Byers, Patricia Hewitt, Baroness Sally Morgan, Margaret Moran and Sir John Butterfill.', 91, 10, 2208211, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2259, 'Tracing the Marathon''s Millions', 'Journalist Ben Laurance looks at what it costs to stage the London Marathon, how much money it generates and the extent of its charitable giving.

In 2009, 36,000 participants in the London Marathon raised a phenomenal £47 million, cementing the Marathon''s place as the biggest one-day fundraising event in the world.

In the course of his investigation, Ben discovers who the lucky recipients are of some of the money distributed by the London Marathon race organisers. He also talks to leading charities about the amount they pay to take part, the competition for places, and asks why hundreds of desperate charities are left without a place in Britain''s biggest fundraising event.', 91, 11, 2208221, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2260, 'Election Uncovered', 'Journalist Ben Laurance analyses the political parties'' campaigns in the run up to polling day.

He investigates each party''s campaign and gets a real taste of what''s happening behind the scenes in the run up to the election.

The programme looks at the debates, how the leaders have been styled and their performances fine-tuned as they compete to get their policies across to the British public and asks what impact the debates have really had on informing the voter.

Ben examines how the parties are financing their campaigns, considers the voting postcode lottery and reports on the work of two teams of foreign election observers as they travel the country to assess just how democratic our elections are.', 91, 12, 2208231, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2261, 'The Lost Girls of South Africa  ', 'In South Africa a child is raped every three minutes and AIDS continues to spread with epidemic ferocity.

Dispatches follows four girls aged 11 to 13 as they struggle to come to terms with the crimes committed against them and fight the social stigma that comes with the abuse.', 91, 13, 2507631, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2262, 'Undercover Social Worker ', 'In the wake of the tragic death of Baby P and other high-profile cases of child abuse and murder, Dispatches investigates allegations that child protection procedures and practices continue to be inadequate. ', 91, 14, 2507641, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2263, 'How the Banks Won', 'As the government prepares an emergency budget to help pay for the bank bailout, Will Hutton investigates the banks and what they''ve done with our money.', 91, 15, 2507651, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2264, 'How to Save £100 Billion - Live', 'Filmed live on the eve of the emergency budget announcement, Dispatches sets out controversial cuts that could save Britain £100 billion. Krishnan Guru-Murthy presents a team of experts who believe their radical proposals could get Britain''s budget back in shape; but can the nation stomach such swingeing cuts or tax increases? ', 91, 16, 2507661, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2265, 'Africa''s Last Taboo', 'Gay people in Africa are facing increased persecution in a continent where two thirds of countries retain laws against homosexuals.

Award-winning filmmaker Sorious Samura investigates for Dispatches what it is like to be a gay person in Africa, discovering shocking levels of prejudice and hate, driven by governments, religious organisations and communities. ', 91, 17, 2507671, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2266, 'Gun Nation', 'For two years, Dispatches has followed an undercover police operation as it tracked a criminal gang trying to smuggle guns into Britain', 91, 18, 2507681, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2267, 'Britain''s Witch Children', 'Dispatches goes undercover in some African churches in the UK, where evangelical pastors perpetuate a strong belief in witchcraft. They preach that some people are possessed by evil spirits, and that these spirits bring bad luck into the lives of others.', 91, 19, 2507691, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2268, 'When Cousins Marry', 'Dispatches reveals the tragic consequences of first cousin marriage in Britain. Every year such marriages cause hundreds of children to be born with terrible disabilities; one third of whom are so ill that they die before they are five years old.', 91, 20, 2682451, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2269, 'Britain''s Secret Slaves', 'Over 15,000 domestic workers leave their families to come to Britain every year. Charities claim that many are not only badly treated but that they are living as slaves.

This report investigates the plight of overseas domestic workers brought to the UK, and enslaved behind closed doors by rich and powerful employers in the upper levels of British society.

Dispatches goes undercover as some of the employers accused of modern-day slavery are confronted on camera about how they have treated their workers.

Many workers make the sacrifice to leave their country for the UK in order to better provide for their families back home. But lobby groups and charities communicate that a worrying proportion of domestic workers have their passports taken away from them, are kept locked up and subjected to sexual, physical and psychological abuse.

Many are paid less than £50 a week for 20 hour days and some wages are withheld completely.

Even children face similar horrendous conditions; the filmmakers meet young people who were trafficked over to the UK as children and endured years of violence and forced labour.

The programme also investigates claims that foreign diplomats are among the worst offenders in this flourishing form of modern slavery.', 91, 21, 2918271, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2285, 'Young, Nazi and Proud', 'As the British National Party seeks to present itself as a more electable proposition, Dispatches reporter David Modell spends eight months with Mark Collett, leader of the Young BNP, to reveal the future face of the far right in Britain. From the BNP''s electoral inroads in this year''s local elections to their annual Red, White and Blue festival and confrontations with the Anti-Nazi League, Modell follows Collet into the murky world of right-wing politics and offers a shocking insight into the thoughts and beliefs of the far right''s most charismatic youth leader.', 91, 8, 2555211, 237);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2392, 'Kino Webisode 32 : Horrible Accident', 'Sgt. Riley uses the Kino to check up on Eli in the infirmary. ', 94, 34, 4098437, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2504, null, null, 95, 90, 392286, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2505, null, null, 95, 91, 392287, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2270, 'How the MOD Wastes Our Billions', 'Veteran war correspondent Sam Kiley turns his sights on the critical issue of whether the British tax payer, and British soldier, are getting value for money from the Ministry of Defence.

As the MoD puts the finishing touches to the first Strategic Defence and Security Review in 12 years, Kiley uncovers a ministry barely fit for purpose while men and women are fighting and dying in Afghanistan.

Britain''s £42 billion defence budget puts it in the top four in the world so why do we appear to be struggling to support just 10,000 frontline troops?

The answers lie in the squandering of billions designed to prop up the British defence industry, resulting in the MoD going an estimated £36 billion over its equipment budget over the next ten years.

Kiley argues that poor decisions to buy the Eurofighter, a new Nimrod spy plane, and the Lynx Wildcat helicopter have cost billions and have left our troops dangerously exposed on the ground.', 91, 22, 2918281, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2271, 'What''s The Point Of The Unions?', 'As Britain braces itself for the severest cuts in public spending in more than 60 years, Dispatches examines the response of the trade unions and what their threats of potential mass industrial action mean for the country.

Representing the interests of millions of British workers, trade unions are perceived to wield a great deal of political might - in this programme Dispatches reporter Deborah Davies investigates just how much power the unions really have to protect pay and jobs, and what the impact of industrial action might be for the public at large.

By looking at the inner workings of three of Britain''s most important unions, Dispatches asks do they, and their leaders, really represent their members and what tactics do they have at their disposal to fight the impending cuts?

Trade Union Congress leader Brendan Barber has warned Britain will become a ''darker, brutish and more frightening place'' as the government''s austerity measures take effect.

With the potential to cripple transport systems, close schools and government buildings and hit vital public services, Dispatches asks if the unions could combine to bring about the kind of mass protests staged in Greece and Portugal this summer or if their rhetoric is all bluster?', 91, 23, 2918291, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2272, 'Tabloids, Tories and Telephone Hacking', 'Dispatches examines allegations that during Andy Coulson''s time as editor of News of the World, phone hacking was a routine practice at the paper and carried out with his knowledge.

Political journalist Peter Oborne investigates the paper''s working relationship with the police and claims of undue influence together with claims of intimidation against politicians, and explores the broader links between News International and the current government.', 91, 24, 2918301, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2273, 'Bravo''s Deadly Mission', 'In February 2010, US Marines launched the biggest operation since the start of the war in Afghanistan: Operation Mushtaraq. Bravo''s Deadly Mission covers hour-by-hour the entire operation to liberate the strategically vital town of Marjah in February and contains some of the most intense fighting footage ever caught on camera.

Filmed under extremely dangerous circumstances and in the toughest conditions imaginable, this Dispatches special is an extraordinary human story and an unflinching portrayal of war at first hand.

Operation Mushtaraq was massive news all over the world when it happened. But only one journalist was with the Marines inside Marjah. Ben Anderson spent two months with Bravo Company 1/6 Marines, eating, sleeping, running and sweating alongside them every step of the way.

The access he achieved and the 50 hours of battle footage he obtained is intimate and unprecedented and forms the basis of this extraordinary film. The result is unlike any other war documentary: personal, intense, incredibly close-up and dangerous.

Bravo Company was the first and only platoon dropped into the centre of Marjah. These young Marines found themselves in a maze of IEDs, bunkers, trenches and ambushes, set by very well-trained fighters.

The film features strong characters such as Captain Sparks, a Special Forces veteran of Falluja, Haditha and Afghanistan who''s charged with seeing the young Marines in his charge through to the bitter end of the operation. Thoughtful and insightful, Sparks knows this is the most dangerous mission of his life. He knows they will lose men. He knows he takes responsibility when that happens.

Made by a BAFTA and Grierson award-winning team, the film returns to Marjah four months after the original invasion to find IEDs again being laid just 2km from the Marines'' base, Taliban fighters, including snipers, still active and mobile, and a local population that is far from won over.

Bravo''s Deadly Mission is a breathtaking film that shows just how dangerous and difficult the situation in southern Afghanistan has become, and how hard it will be to turn around.', 91, 25, 2918311, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2274, 'How the Rich Beat the Taxman', 'How do the rich avoid paying tax and protect their fortunes? Dispatches reveals the clever devices they use.

With more than 20 millionaires in the cabinet, reporter Antony Barnett examines the financial affairs of some ministers and others who have helped the coalition.

George Osborne says ''we''re all in this together'' but are ministers and top Tories paying the same rates of tax as the rest of us?

Barnett visits a number of offshore tax havens around the world still under control of Britain, including the Cayman Islands and the British Virgin Islands, to find out more about tax avoidance ploys.', 91, 26, 2996831, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2275, 'Iraq''s Secret War Files', 'Dispatches, Channel 4''s flagship current affairs strand, exposes the full and unreported horror of the Iraqi conflict and its aftermath, revealing the true scale of civilian casualties; and allegations that after the scandal of Abu Ghraib, American soldiers continued to abuse prisoners; and that US forces did not systematically intervene in the torture and murder of detainees by the Iraqi security services. The programme also features previously unreported material of insurgents being killed while trying to surrender.

Channel 4 is the only UK broadcaster to have been given access to nearly 400,000 secret military significant activities reports (SIGACTS) logged by the US military in Iraq between 2004 and 2009. These reports tell the story of the war and occupation which the US military did not want the world to know.

Initially, the Americans claimed that they were not recording casualty figures and President Bush stated that America would do its utmost to avoid civilian casualties. In the files, Dispatches found details of over 109,000 deaths; 66,000 of these were civilians; 176,000 civilians and others were reported as wounded.

Under rules of engagement, known as escalation of force, anyone approaching the US military was warned to slow down and stop. The analysis reveals more than 800 people were killed in escalation of force incidents: 681 (80%) of these were civilians; a further 2,200 were wounded. Thirteen coalition troops were killed during these incidents. Dispatches found 30 children had been killed when shots were fired near civilians by US troops at checkpoints.

Over a six-year period, the data records the imprisonment of 180,000 Iraqis: one in 50 of the adult male population. Dispatches found more than 300 reports alleging abuse by US forces on Iraqi prisoners after April 2004.

The Americans effectively ignored the torture and murder of many detainees by Iraqi security forces. Dispatches has found evidence of more than 1,300 individual cases of the torture and abuse of Iraqi prisoners by Iraqis in police stations and army bases: witnessed or reported on by American troops. Dispatches reveals that US troops were ordered not to investigate Iraqi-on-Iraqi violence.

The data shows that the Americans were aware of the horrific level of violence inflicted by Iraqi sectarian militias: over 32,500 murders; more than 10,000 shot in the head; nearly 450 decapitated; over 160 were children.

One of the reasons given for the invasion of Iraq was the suggestion of links between Iraq and Al Qaeda. The US told the UN Security Council in 2003 that Iraq ''harboured'' the terrorist network. However, in the leaked data there are only seven reports mentioning Al Qaeda in 2004, and none of these refer to Al Qaeda killing anyone. By 2008, there are 8,208 reports mentioning Al Qaeda attributing to it the deaths of 45 coalition soldiers, 486 members of the Iraqi Security Services and 1,291 civilians.', 91, 27, 3035161, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2286, 'Beneath the Veil', 'Documentary looking at life in Afghanistan under the repressive Taliban rule, with much of it secretly shot film. Looks particularly at what life is like for girls and women and the effects on them of no access to education, work or proper medical treatment. Saira Shah meets groups of women who run schools for girls in secret, and others who visit households for illicit makeup and beauty treatments. Includes film shot by other Afghans of public executions within the Kabul football stadium. Saira also visits the North of the country in an area not held by the Taliban where opposition forces are still fighting them. She uncovers evidence of disturbing and systematic massacres and abuse of civilians by the Taliban in these areas of fighting.
', 91, 4, 2555221, 238);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2506, null, null, 95, 92, 392288, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2276, 'Britain''s Street Kids', 'Every day hundreds of kids are forced to leave home. According to charities like Railway Children, the number of homeless children is bound to rise as a result of the recent government budget cuts.

This crisis in Britain''s families has created an itinerant population of young people without support or a roof over their heads. The state has to provide, at an immense cost, while voluntary organisations try to plug the gaps in the face of drastic cutbacks and closures.

Dispatches follows four teenagers over six months who are struggling to fend for themselves on the streets. They''re simultaneously at risk and a risk to society, and for all four of them drugs become a way of life, a means of dealing with the stresses and challenges of life away from family and home comforts.

All talk candidly and eloquently about why they take flight: family breakdowns, addiction, violence, neglect and abuse. The unspoken truth behind their stories points to both inadequate parenting and severe lack of consistent and effective care once they have left home.

Dispatches explores the hidden world of runaway and evicted teenagers, giving them a voice for the first time, and celebrating their extraordinary ability to fend for themselves.', 91, 28, 3150451, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2277, 'Fashion''s Dirty Secret', 'Dispatches investigates the working conditions of clothing manufacturing units in the UK. With British consumers keen to buy the latest designer looks at cheap prices, this film exposes the real human cost behind high street fashion.

Over three months, secret filming is carried out inside a number of textiles factories and suppliers and the footage shows the poor treatment and illegally low pay of workers as they make clothes destined for major fashion retailers.

The working conditions are dangerous, poorly ventilated, dirty and cramped, and workers are paid as low as under half the minimum wage.

The film also reveals the high street brands whose clothes are being made by these workers.

Dispatches exposes shocking practices, more commonly associated with sweatshops in the developing world, but existing right here in modern Britain.', 91, 29, 3150461, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2278, 'Riding Europe''s Gravy Train', 'On the same day the British public heard details of the unprecedented cuts in government spending that will affect almost everyone in the country, taxpayers also learnt they''d have to pay extra hundreds of millions of pounds a year to Brussels, as MEPs voted in favour of an increase in their budget.

Calling the proposed 5.9% increase ''completely irresponsible and unacceptable'', David Cameron has just managed to get the EU to limit the budget rise to 2.9%.

Dispatches reveals that, despite the worldwide credit crunch, it''s still possible to get rich out of Europe. The programme details the exceptionally generous package of salary, pension and expenses that MEPs receive and how some have abused the rules to pocket as much cash as possible. While Westminster has tightened up on the expenses system, Brussels still hands out some cash allowances without the need for receipts.

The programme also looks at the system of agricultural payments, which are supposed to help those British farmers struggling to earn a livelihood and continue producing food. Dispatches shows how millions of pounds in grants have ended up going to some of the best known - and richest - landowners in the country.

Dispatches also examines how money meant to help deprived areas has actually been spent. In one case the programme discovers that hundreds of UK workers are being laid off and their jobs moved to Poland, funded in part by a multi-million-pound European grant.

In another case the programme investigates allegations of fraud when a man with a criminal conviction for dishonesty ended up running a project given hundreds of thousands of pounds of EU money.', 91, 30, 3150471, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2279, 'City of Fear', 'For one year, Dispatches follows the police and people of Islamabad as Pakistan''s capital battles to overcome an unprecedented wave of terrorist attacks, providing a powerful insight into a normally closed world in which everyone battles to survive the daily threat of death with courage and resilience.

Pakistan is in chaos; more than 3,500 people have been killed in suicide blasts in the past three years. Only a few years ago, attacks in the capital were rare, but disparate terrorist groups are increasingly working together and Islamabad has become their ultimate target.

Featuring intimate, direct-to-camera interviews of startling candour - from a teenage girl whose best friend was blown up, to the Inspector General of Police - Dispatches follows those affected as they attempt to continue their lives on the frontline of a war on terror - and refuse to be beaten by it.

With unprecedented access, including interviews filmed in the immediate aftermath of explosions and behind-the-scenes footage of police investigations, the film documents the real war on terrorism fought on the streets of the metropolis... with bloody and tragic consequences.', 91, 31, 3190801, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2280, 'The Kids Britain Doesn''t Want', 'Every year, thousands of children come from all over the world to Britain seeking refuge from persecution, terrorism and war. But many arrive to find this country is not the place of safety that they hoped. Instead they are met by a culture of disbelief and an asylum system that in some cases causes them profound psychological and physical harm.

Through the stories of a 10-year-old Iranian boy, a 16-year-old Afghan and a 22-year-old Ugandan woman, Dispatches explores the experiences of young people who have been brutalized by the British asylum system. This is the story of the kids Britain doesn''t want.', 91, 32, 3226151, 234);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2281, 'Re-Opening The Post', 'Fourteen months after the original Royal Mail undercover investigation, Dispatches returns to secretly film and establish whether the service, as they claim, has dramatically improved. Has Chief Exec Adam Crozier taken control of untrained staff, outdated machinery, ineffective managers and poor industrial relations as he promised? ', 91, 11, 2555171, 235);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2282, 'Third Class Post', 'Documentary in which reporter Simon Barnes goes undercover as a postal worker and highlights serious problems of bad management, machinery problems, lack of training, workers operating skivving or overtime scams, and targetting by professional thieves and criminals after credit cards and passports.', 91, 2, 2555181, 236);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2283, 'MMR: What They Didn''t Tell You', 'In February 1998 Dr Andrew Wakefield claimed to have discovered a possible link between the MMR vaccine and autism. A global health scare ensued. This documentary investigates the scare and some of the facts that parents were not told at the time.', 91, 7, 2555191, 236);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2284, 'Sex on the Street', 'In an unprecedented investigation that took almost a year and involved interviewing over 100 street prostitutes in red light districts in 18 towns and cities, a terrifying pattern of violence emerged - one that, until now, has gone hidden and unreported. Sixty per cent of the sex workers interviewed said that they had been raped or seriously beaten by clients in the previous 12 months. What''s more they''re being attacked because they are available and vulnerable - and worse - our prostitution laws are making them easy targets.', 91, 7, 2555201, 237);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2309, 'The Making Of Little Britain USA', null, 92, 2, 6719374, 243);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2310, 'Little Britain USA - Deleted Scenes', null, 92, 3, 6719375, 243);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2311, 'Little Britain USA - Bloopers', null, 92, 4, 6719377, 243);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2393, 'Kino Webisode 33 : Painful Moments', 'Brody, Park, Morrison, Sgt. Riley and Eli recount their most emotionally painful moments in life. ', 94, 35, 4098438, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2507, null, null, 95, 93, 392289, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2287, 'The Battle for Haiti', 'On the night of the Haiti earthquake something happened in downtown Port au Prince - the Haitian capital - which would leave the fate of all the aid efforts and the country''s future hanging in the balance: 4,500 prisoners escaped from Haiti''s terrifying and overcrowded prison, the National Penitentiary.

They included many of the hardcore criminals, kidnappers and gang bosses who''d reduced Haiti to anarchy from 2004 to 2007, but had then been subdued after an all-out military onslaught by the police and heavily-armed UN peacekeepers. Now they were free to regain control of the slums and the tent cities where most Haitians live, using murder and rape to enforce their rule, with Haiti more vulnerable and less well-policed than ever before.

Helping battle the escaped gangsters is Mario Andresol, Haiti''s police chief, who put many of them in prison in the first place. At great personal risk, he played a key role in the United Nations offensive that smashed the power of the gangs. Now, four years later, he has to do it all again. His force is riddled with corruption and many of his officers are without homes and living in tent camps.

BAFTA-winning director Dan Reed captures the daily battle for Haiti''s future, filming with Andresol, escaped gangsters, the beleaguered special police unit that''s trying to capture them, UN peacekeepers, and the despairing and philosophical inhabitants of the slums and tent cities.', 91, 1, 3448071, 239);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2288, 'Fish Unwrapped', 'Dispatches investigates the fish sold on Britain''s high street to find out where it is sourced, how it is processed and what is actually in it, as Channel 4 News presenter Alex Thomson unwraps one of the nation''s favourite dishes.

Through DNA testing Thomson discovers the fish in fish and chips may not be quite as advertised and exposes how one major supermarket is misleading consumers about the sustainability of the cod it sells.

The apparent health benefits of fish have driven demand from consumers and made it a lucrative multi-billion-pound industry in the UK. But Thomson reveals the chemical additives used in some fish products.

He also uncovers that packaged fish on sale in the chilled section of the supermarket may have been frozen for nine months before it''s defrosted and sold to consumers, some of whom assume this is fresh.

Dispatches also goes undercover to investigate the prawn industry in Bangladesh, which supplies Britain with several thousand tonnes of prawns each year, and finds a dangerously unregulated industry. Secret filming reveals serious hygiene issues and the use of a widely banned pesticide to combat disease in prawn ponds. The report also exposes how prawns are injected with a dirty bulking liquid to increase weight and profit.', 91, 2, 3461221, 239);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2289, 'Dispatches', 'First in a new series of weekly documentary reports. this week, the black market in weapons grade ureanium operated from Khartoum.', 91, 1, 3475871, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2290, 'In The Red', 'Investigation of the alledged misuse of funds at three Labour Party Social Clubs in Dundee.', 91, 2, 3475891, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2291, 'AIDS - The Unheard Voices', 'The program challenges the theory that AIDS is caused by the H.I.V. virus and discusses the social pressures on those diagnosed as H.I.V. positive.', 91, 3, 3475921, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2292, 'Divided by Law', 'Explains how new D.N.A. testing techniques could help to re-unite divided immigrant families and looks at claims that the government has delayed progress pending on legislation. Includes an interview with Timothy Renton, Minister of State at the Home Office, and talks to Asian immigrants wanting to bring their families to join them in the UK.', 91, 4, 3475931, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2293, 'Selling the Tunnel', 'TVS''s Business Unit tells the inside story of the Eurotunnel Management Team''s battle to persuade the City and the public to back the issue of shares and raise capital. Includes an interview with Robert Maxwell who invested £37 million.', 91, 5, 3475941, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2294, 'Gunning for Government', 'The undercover world of arms dealing is revealed by a defector (Frank Turner) who reveals his involvement with the CIA and British Ministry of Defence.', 91, 6, 3475951, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2295, 'Kimberly Carlile - Falling Through the Net', 'Rehearsed `All-Star'' cast reading some of the evidence from the inquiry into the death of four-year-old Kimberley Carlile. Louis Blom-Cooper QC is interviewed by Anna Ford.', 91, 7, 3475971, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2296, 'Korea: Poverty Prohibited', 'Investigation into the democratic government of South Korea which selectively ignores the tragic plight of its urban poverty by evicting them forcibly to make way for up market apartment blocks. Includes an interview with Jesuit priest Father John Daly.', 91, 8, 3476031, 240);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2297, 'The Miner''s Debate', null, 91, 1, 3476481, 241);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2298, 'Waiting for the Consultant', null, 91, 2, 3476491, 241);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2299, 'Danger! Men at Work', null, 91, 3, 3476501, 241);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2300, 'Interview with John Stalker', null, 91, 4, 3476511, 241);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2301, 'Iran', null, 91, 5, 3476521, 241);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2302, 'Episode 1', 'While on vacation to Mississippi, British tourist Lou And Andy check into a motel; Ellie Grace heads to a summer camp; and a sheriff shows off his guns.', 92, 1, 392018, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2303, 'Episode 2', 'A couple from Ohio welcomes their British relatives; a socialite raises the stakes while gambling, during a luxury cruise to Rio; Mildred shows her true colors to her grandson; and a teenage delinquent is sent to boot camp.', 92, 2, 392019, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2304, 'Episode 3', 'Sebastian interrupts the President''s cabinet meeting; Vicky lets some steam loose during her boot-camp counseling session; and Bubbles tries to seduce the cruise-ship captain. (NOTE This Episode Is Rated TV-14-V)', 92, 3, 392020, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2305, 'Episode 4', 'Lou and Andy go and search out a miracle; two bank robbers become nervous while they rob a bank; George and Sandra share some tea; Sebastian gives the President a diamond necklace before a meeting with Japanese leaders.', 92, 4, 392021, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2306, 'Episode 5', 'Emily gets processed at a Pittsburgh police station; Linda Flint talks to Steven about when his essay is due; Mark & Tom horse around in the men''s locker room; Vicky tries to escape boot camp; Ellie Grace prepares for a tonsillectomy; The team at Starbucks talks about expanding; Senator David White holds a press conference with his loyal wife by his side; Steve and Wendy Ashby meet Steve and Wendy Ashby; Darren asks Linda about getting an extension on his dissertation; Lou takes Andy to see the lions at the zoo; Phyllis takes Mr. Doggy on another walk through town; Bubbles makes a surprise appearance at dinner; Sebastian passes notes to President Steele at the United Nations', 92, 5, 401571, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2307, 'Episode 6', 'In the Season One finale, Ellie Grace turns the table on her mom before her first sleepover; a convalescing Vicky Pollard finds a new voice; yet another U.S. senator apologizes for an airport indiscretion; Marjorie Dawes defends her insult tactics with the Fatfighters class; Carol Beer clashes with an old man; transvestite Emily Howard turns up for a blind date; George and Sandra end a holiday to forget; Dafydd Thomas confronts a pair of lesbian neighbors; astronaut Bing Gordyn threatens a student writing his thesis about the faked moon landings; Celia is insulted by her Ohio hosts but Harvey turns the other cheek; body-building buddies Mark and Tom engage in surgical show-and-tell; and Lou and Andy stagger off into the sunset as Little Britain USA wraps up.', 92, 6, 403252, 242);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2308, 'Comic Relief 2009', 'Comic Relief special guest starring Robbie Williams.', 92, 1, 1670221, 243);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2313, 'Ford vs Holden!', 'It just wouldn''t be Australian if the lads did not delve into the great debate that has divided the nation for decades - Holden or Ford? So Charlie and Steve take the HSV Clubsport and Ford FPV F6 to Wakefield Park for the ultimate test drive to settle the argument once and for all.

Then Top Gear Australia shuts down the biggest open pit gold mine in the country, the Kalgoorlie Super Pit, to get its hands dirty. In the toughest ute challenge, Charlie, Warren and Steve test their ute of choice in a race against time and The Stig.

After surviving his stint as human shark bait in episode one, Warren "Why is it every episode of Top Gear I nearly get killed?" Brown, in preparation for his next outlandish idea, convinces Steve to convert a Smart Car into a hearse for under $200. While the two load a coffin into their new budget Smart Hearse and take it for a test drive, Charlie spends his time slipping into something a lot faster and much cooler - the Ford GT Supercar.

As the studio guest, Australian actor, Steve Bisley (Mad Max, Water Rats), will attempt to knock Vince Colosimo off the celebrity Lap Time leader board.', 93, 2, 394927, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2314, 'Scrap Metal Challenge', 'Whose car is the best? Fastest? Coolest? Strongest? Well there''s only one way to settle this - a Top Gear Australia challenge. The lads and their precious motoring masterpieces assemble at Oran Park for a race showdown. By the end of the day - a star will be born, and egos bruised.

Then the world''s first Sports Activity Coupé, the revolutionary BMW X6 Coupé 4WD, is put through its paces. Is it a visionary triumph or an impressive blunder? Warren takes a drive to find out.

Steve Pizzati reviews the F1-inspired Mercedes CLK 63 AMG Black Series coupe and SBS''s own delightfully hilarious hostess, Julia Zemiro (RocKwiz), is the "Celebrity in a Bog Standard Car". ', 93, 3, 395014, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2315, 'Bowls Of Thunder', 'The ramp is set – the jack in place – and the kettle is on!

Our fearless hosts step into a world of scones, walking sticks, and shoes with zippers. There is little margin for error, or bright colours for that matter, in this age old sport. Yet roling an Astra down a steel ramp and steering from the passenger seat is not as easy as it looks. By the end of the day there is a special sub-committee established by Warren to investigate the stolen over-sized novelty jack.

From the grassy flats of lawn bowls to the open plains of the outback, the lads pit satellite navigation against Aboriginal tracking skills. Warren will have to rely on his tracker, Diesel with trusty steed Ned, while Steve guides a Toyota HiLux TRD fitted with Follow Me GPS through the picturesque Home Valley Station in remote Western Australia. Who will become champion of the outback and conquer the land before nightfall?

Steve Pizzati takes the HSV W427 for a raging spin around Holden’s mysterious ‘Proving Ground’ in Lang Lang, Victoria. Track limit: 250kph. Heart rate limit: unrestricted! And, iconic Australian actor Jack Thompson (the soon to be released Australia, Breaker Morant, Sum of Us) is our weekly “Celebrity in a Bog Standard Car”.', 93, 4, 397416, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2316, 'The Practical Supercar', 'The Audi R8 is claimed to be the ''practical supercar''. "It looks like a nuclear powered supercar but it''s really practical," said Charlie. "It''s like a non-threatening scud missile, safe explosives, or user friendly hand grenade." His ''Top Gun'' moment blasting down the tar mac leaves little debate on the issue.

While in town the lads also enter their DIY style amphibious masterpiece in Hamilton Island''s prestigious Audi Race Week. Getting into the spirit of the week-long sailing event, the lads get busy converting their own Audi into a road and seafaring machine. Enter the NautiCar or as the lads dubbed it - the Audi H2O. But will it sink or swim?

Warren and Steve stretch the ''Toorak Tractor'' phenomenon to its limit. 4WDs are meant for the bush but they''re so common in affluent suburbs they''ve become known as ''Toorak Tractors''. How will Toorak react to a real tractor as a shopping and commuting vehicle?

Steve also checks out the sporty BMW 135 Coupé.

And Australia''s favourite Idol, Shannon Noll (What About Me, Drive, Loud), is the "Celebrity in a Bog Standard Car".', 93, 5, 401602, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2317, 'Outback Odyssey', 'It''s a once and for all 4WD showdown and to the victor goes the spoils - exclusive dinner party bragging rights. The TGA team are bound for Cairns in north Queensland after starting out in central Australia to settle which 4WD can go the distance.

“I have been to a tonne of dinner parties where people have said “My 4WD is good enough to go to Kakadu if I wanted to”. Now everybody knows that they probably never will so we thought we would help with bragging rights for the next party,” said Steve Pizzati.

Charlie opts for the luxurious Lexus LX 570, Warren sides with the very capable Range Rover Vogue TDV8, and Steve feels the power of Audi''s Q7. It''s a 2,400kms test drive for the record books as the lads set out from Alice Springs on a seven night stint under the stars and along the open desert planes - their sanity is sure to be the first victim.

Not a fan of being one with nature, Charlie said, “When I was a kid about 12 years old on the family camping holidays I used to lie back at night and look back the stars and think to myself “When I grow up I am going to get really rich so I never have to go camping again”.”

Also around the streets of Sydney, Charlie takes the sporty Mercedes SL 63 AMG for a cruise, “A car this stylish can even make a mug like me look good, well not that bad anyway.”

Car enthusiast, James Morrison, talks to Top Gear Australia about meeting his wife in a celebrity car race, owning 96 cars and his goal to beat Julia Zemiro on the lap time leader board.', 93, 6, 401795, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2318, 'Search And Destroy', 'It''s a review with a difference as Subaru''s latest weapon shows its strength against the military''s secret airborne attack asset. Known for excelling at "going about as fast as they can from point to point cross country" Steve has asked the Army to indulge in a search and destroy mission with the Tiger Armed Reconnaissance Helicopter against his rally driving skills in the WRX STI.

Then V8 Supercars drivers and Bathurst 1000 podium place winners, Greg Murphy in second and James Courtney in third, take their super fierce competitiveness from Mount Panorama to the Top Gear Australia test track. This time it''s not Holden versus Ford, it''s man versus man as they race the "Bog Standard Car" like it''s never been driven before. Who will be crowned King of the Proton?

Also, is diesel a better, more efficient fuel than petrol? With skyrocketing petrol prices affecting the pockets of drivers countrywide, Top Gear Australia gave Charlie and Warren identical Volkswagen Golfs with only one difference, one is powered by diesel the other petrol. It''s diesel versus petrol, and every man for themself, as they take to the roads to find out which is more economical and which is faster.

And Steve falls in love with the Nissan GTR R-35 supercar.  "I just love it! ... It might be as polite as a Japanese waiter but press the right button and she''s a samurai."', 93, 7, 405367, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2337, 'Renault Clio RS vs Ford Falcon GT', 'Renault Clio RS vs Ford Falcon GT
Peel 50
The Stig takes the Peel 50 around the track
Celebrity Challenge - Natalie Gruzlewski
Subaru "All Will Drive" car
V8 to the Rescue', 93, 5, 4282934, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2338, 'Cars As Beach Buggys', 'Lexus LFA
Cars as beach buggys Part 1
Alternative fuel Cars
Celebrity Challenge - Jamie Durie
Hot Rodding
Cars as beach buggys Part 2', 93, 6, 4282935, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2394, 'Kino Webisode 34 : All The Stages', 'Lt. James documents all the stages she''s gone through while aboard the Destiny.', 94, 36, 4098439, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2319, 'Road Trip of Dreams', 'Charlie Cox, Warren Brown and Steve Pizzati are each given free reign to pick the car of their choice for a weekend road trip through the Apple Isle. Meeting at the Spirit of Tasmania departure point in Port Melbourne the lads arrive in style - Charlie in a Porsche 911 Turbo, for Warren, a Bond fan, it''s the Aston Martin DB9 and Steve saddles up the Lamborghini Superleggera. Once across the Strait, they take off for the ultimate boys and their toys weekend away. With closed roads and assistance from the team that operates one of the world''s best tarmac rallies - Targa Tasmania - Top Gear Australia negotiates the luxury sports cars along the long and winding deserted roads in the pristine wilderness of Tasmania''s West Coast.

Then it''s Holden versus Ford take two and this time we answer the all important question. After taking a look at the performance vehicles earlier in the series, Top Gear Australia goes back to basics with these iconic brands and compares the entry-level Commodore Omega and Falcon XT on the test track to see how they stack up. Will the Ford be favoured or will the lion roar?

Also, Charlie test drives the new stylish Jaguar XF SV8. Excited about the ''surprise and delight'' features in the new luxurious sports Jaguar, Charlie compares the features to the older unreliable models. "In the old days with Jags, you were surprised and delighted if it started".

Award winning actress, Claudia Karvan (Love My Way) is the final Celebrity in the Bog Standard Car for series one. The popular actress admitted to Charlie that she wanted to beat her The Secret Life of Us on-screen husband, Vince Colosimo on the lap board and joked that doing her hotlap on the Top Gear Australia test track was better than winning a Logie.', 93, 8, 406742, 244);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2320, 'Long Weekend Traffic Challenge - Lambo Vs Jetski', 'Top Gear Australia welcomes their new co-Host James Morrison and for his first order of business he test drives the Mitsubishi Lancer Ralliart Evolution X. Steve tries to take him down a peg by racing against him in the BMW 135i.
The Long Weekend Challenge takes the Top Gear Team to Melbourne where they will race to Portsea. Steve takes a Lamborghini Murcielago LP640 across land where Warren and James take a Supercharged Jet Ski across Port Phillip Bay.
Mark Skafie becomes the new leader of the Stars in the bog standard car.', 93, 1, 639501, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2321, 'Reversing Challenge', 'Steve takes the Holden HSV Clubsport R8 around the Top Gear test track putting it up against it’s big brother, the Superclubby.
Steve and Warren take two cheap petrol cars turning them into Electric cars; Steve takes a Suzuki Mighty Boy gluing in 4 battery powered drills and Warren takes a V8 HZ Holden Kingswood installing 300kgs worth of batteries and an electric motor.
Warren teaches Steve how to drive a Ford Model T and Ian Moss is our star in the bog standard car.', 93, 2, 657651, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2322, 'The Ute Challenge ', 'We celebrate the 75th birthday of the UTE in natural Top Gear style, by taking hammers and an angle grinder to two cars; a Honda Prelude and Toyota Tarago.
Warren takes the Maserati GTS around the Top Gear Australia test track, James is sent to Stunt driving school and Ahh Doh is the Star in a bog standard car.', 93, 3, 657661, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2323, 'Sports Wagons', 'Steve test drives the AUDI RS6 and the Holden HSV Wagon.
Olympic gold medallist Leisel Jones is our Star in the Bog Standard car and the team tries to find some un-drift able cars.', 93, 4, 709471, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2324, 'Aussie Armoured Cars', 'The Top Gear team attempt to turn three every day cars into Armoured Limousins and Steve test drives the Elfin T5 and its big brother the Streamliner MS8.
HG Nelson is the Star in the Bog Standard Car.', 93, 5, 736451, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2325, 'Lawnmower Challenge', 'James test drives the new Nissan 370Z and then travels to Los Angeles to drive the Australian built Pontiac G8 GXP.
Warren sets out to build a ride on lawnmower from a Toyota Hilux Ute for under $4,000 and Amanda Keller is our Star in the Bog Standard Car.', 93, 6, 746851, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2326, 'City Cars in the Outback', 'We find out which cars pull chicks, Steve and Warren challenge the city dwelling Fiat 500 and Smart Fortwo to one of the toughest off-road tracks in the world and a new Nissan Patrol is put up against a 1979 Toyota Landcruiser in a series of tests. Gary Sweet is the Star in the Bog Standard Car.', 93, 7, 788831, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2327, 'Luxobarges', 'Warren takes on a horse, Man from Snowy River style, with a Porsche Cayenne Diesel to prove which is better - horse power or a horse. Steve wins the right to review the Ford Falcon GTHO. James and Warren check out the Mercedes S-Class and Lexus LS. Gyton Grantley is the Star in a Bog Standard Car.', 93, 8, 816521, 245);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2328, 'The Ashes Special', 'The Top Gear Australia team, Shane Jacobson, Steve Pizzati and Ewen Page, travel to the UK to meet the original Top Gear hosts for more motoring and mucking about in Top Gear style. It will see the boys travel through the UK, as they get up to their usual antics. Its Australia v England in our Top Gear Ashes Special, will our Aussie boys head back down under with their tails between their legs?', 93, 1, 2894911, 246);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2329, 'Lake Eyre Challenge', 'This episode the crew re-traces the steps of David Norrish. In 1974, when northern Australia experienced a once-in-500-year weather event, and the river flow from such heavy rainfall caused Lake Eyre in South Australia to fill with water, Norrish packed a boat on the roof of his Kingswood and set off for a spot of outback sailing.

The first celebrity in this new season is Lisa McCune. Steve explains the changes they''ve made to the test track, and Shane Warne drops in for a high-speed blast in the Morgan Aero Supersports.', 93, 1, 2993041, 247);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2330, 'V8 Supercar on the Loose', 'Cricketer Michael Clarke takes on the test track, Ewen stops city traffic in a V8 supercar, and the boys meet their match on New Zealand''s most dangerous road.', 93, 2, 3001471, 247);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2331, 'Grey Nomads', 'Shane, Ewen and Steve have a budget Grey Nomad experience. Shane Warne drives the world''s fastest supercar, and the celebrity guests are The Chaser''s Andrew Hansen and Craig Reucassel.', 93, 3, 3036231, 247);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2332, 'People Movers vs SUVs', 'People Movers vs SUVs
Hulme Supercar
Celebrity Challenge - Jimmy Barnes
Porsche Cayenne Turbo vs BMW X5M
V8 to the Rescue
Commodore V8 Group A', 93, 4, 4282932, 247);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2333, 'Blind Rallying', 'Top Gear is back - bigger, brighter and faster than ever. Shane, Steve and Ewen add some spice to rally driving by introducing a dangerous twist: blindfolding the driver. Ewen declares his long-held dirty secret: he loves Volvos. Plus, Ewen and Shane head out to review the new Toyota iconic FJ Cruiser, and six-time world champion surfer Layne Beachley attempts to break a world record. Also special guest Andy Lee.', 93, 1, 4160692, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2334, 'Self-Help Guide for Cyclists', 'In an attempt to understand the inner workings of the cyclist mind, Ewen dons the lycra, waxes the legs and takes to the road and footpaths in what he dubs a "self-help video for cyclists". Plus, will Hamish Blake top his colleague''s lap time from last week? And the boys cook up a storm using a jet-powered car.', 93, 2, 4161792, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2335, '24 Hour Chery Test', 'In the toughest test the show has ever undertaken on a car, Steve, Ewen and Shane take Australia''s cheapest new vehicle, the Chinese-built Chery, and drive it flat out for 24 hours to replicate 10 years of ordinary wear and tear.', 93, 3, 4164740, 248);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2490, null, null, 95, 76, 392272, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2491, null, null, 95, 77, 392273, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2492, null, null, 95, 78, 392274, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2339, 'Air (1)', 'When Icarus Base is attacked, it''s inhabitants are forced to flee through the Stargate. The base was created on a distant planet to take advantage of a powerful energy supply located there. Their goal is to try and determine the purpose of the mysterious ninth symbol of the Stargate which they have never been able to lock in. In going through the Stargate, they are transported not to Earth but onto an very old, apparently uninhabited but huge spacecraft. With the group''s commander injured, Lt. Scott and the chief scientist, Dr. Nicholas Rush lead the exploration of the craft. Several areas of the ship have been damaged but it is basically functional. They are able to learn that they are in fact billions of light years from Earth.', 94, 1, 418910, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2340, 'Air (2)', 'The survivors arrive on an uninhabited ship floating billions of light years away from Earth. Panic spreads throughout the group and Col. Young, who was severely injured during the escape, transfers command to Lt. Matthew Scott, before lapsing into unconsciousness. Teams led by Dr. Rush and Sgt. Greer try to make sense of the situation, while Lt. Tamara Johansen, a medic who was days away from leaving the program, is thrust into the role of chief medical officer.', 94, 2, 418911, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2341, 'Air (3)', 'With the air supply failing on the Destiny, a team disembarks to a desert-like planet in search of the mineral needed to scrub the ship’s air of carbon dioxide. After testing numerous sand samples without success, and with their window of opportunity closing fast, the group opts to split into two to cover more ground, despite the unbearable heat.', 94, 3, 418912, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2342, 'Darkness', 'The Destiny suffers a power crisis, putting the lives of the stranded crew in jeopardy and forcing them to consider abandoning the ship.', 94, 4, 422778, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2343, 'Light', 'With the ship on a collision course, the crew must decide who will stay and who will flee on the shuttle to try and find a habitable planet.', 94, 5, 422779, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2344, 'Water', 'Severe rationing can''t save the Destiny''s dwindling water supply, forcing Colonel Young and Lieutenant Scott to seek out drinkable water on a deadly ice planet.', 94, 6, 422780, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2345, 'Earth', 'With the situation onboard the Destiny dire, General O''Neill and Home World Command orders Col. Young to execute a high risk plan concocted by the I.O.A. scientists which, in theory, could return the crew to earth.', 94, 7, 443676, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2346, 'Time', 'Visiting a newly discovered jungle planet, the crew is amazed to recover a Kino by the gate. Downloading the Kino data, Eli discovers video of the team, which appears to have been shot during an earlier visit. The mystery of the video’s origin becomes a secondary concern as members of the team start falling ill.', 94, 8, 443677, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2347, 'Life', 'Aboard Destiny, Dr. Rush supervises the exploration of new areas of the ship. Looking for resources to make their everyday lives easier, the crew stumbles upon a piece of Ancient technology that carries the promise of a way home. While somewhat familiar with the find, Dr. Rush can’t guarantee the safety of using it, bringing him and Col. Young to a standoff on what to do.', 94, 9, 443678, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2348, 'Justice', 'Everyone is shocked when a member of the crew is found dead from a gunshot wound. While at first glance it appears to be suicide, the gun is nowhere to be found. The crew is confined to quarters while a search is performed and when the gun shows up in Col. Young’s quarters, he becomes the number one suspect.', 94, 10, 446592, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2349, 'Space (1)', 'A snafu with the communications stones lands Col. Young''s consciousness in an unknown being, resulting in a standoff between the Destiny and an alien vessel and the abduction of Chloe.', 94, 11, 508451, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2350, 'Divided (2)', 'Dr. Nicholas Rush and Chloe suffer nightmares following their ordeal on the alien vessel, and Rush suspects that a tracking device may have been placed on the ship''s hull. Later, a splinter group on Destiny executes a coup with life-threatening consequences.', 94, 12, 584891, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2351, 'Faith', 'Dr. Rush struggles to determine why Destiny has no record of this star system while Col. Young directs Lt. Scott and a small team to shuttle down to the planet''s surface on a fact finding mission. Upon landing, everyone is amazed to discover that the atmosphere and terrain are idyllic. Relishing the sunshine, fresh air, clean water and abundance of food, many are reluctant to return to the ship, believing that providence has intervened.', 94, 13, 584901, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2352, 'Human', 'The episode focuses on Nicholas Rush, who risks his life from an experiment involving the ship''s computer, and flashes back to the time when he was recruited into the Stargate Program. His now dead wife, Gloria Rush, will be appear in these flashbacks, as will Michael Shanks as Daniel Jackson.', 94, 14, 584911, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2353, 'Lost', 'Trapped on a planet in rubble and left for dead, Ronald Greer must do everything he can to save himself. His ordeal brings back tragic memories of his past with his abusive father and loving mother.', 94, 15, 947131, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2354, 'Sabotage', 'When one of the twelve FTL drive modules on the Destiny explodes due to an overload, the crew calls upon a brilliant scientist from Earth to help find a solution.', 94, 16, 947141, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2355, 'Pain', 'Dr. Tamara Johansen tries to track down what is causing the crew to hallucinate.', 94, 17, 947151, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2356, 'Subversion', 'Earth''s Stargate Program isn''t the only group in the Milky Way that''s interested in the Ancients'' Destiny. What''s worse, this long-time foe may have a spy among those closest to the Icarus project.', 94, 18, 947161, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2357, 'Incursion (1)', 'An enemy from the Milky Way has boarded the Destiny and has taken hostages. Is it possible that they know how to get back or have they stranded themselves as well?', 94, 19, 947171, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2358, 'Incursion (2)', 'As Young and Camille attempt to resolve the hostage crisis with Kiva, Destiny suffers from power fluctuations and blackouts due to its proximity to a binary pulsar.', 94, 20, 947181, 249);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2359, 'Access All Areas', 'Behind the scenes of the sci-fi series, as self-proclaimed superfan Nidai interviews the cast and takes a tour of the show''s Vancouver set.', 94, 1, 1155291, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2360, 'Kino Webisode 1 : Get Outta Here', 'Colonel Young is in his quarters going over paper work. The Kino enters and watches him over his shoulder. He notices it''s presence and closes his folder. He tells Eli that even though he gave him permission to keep an eye on things he does not have permission to spy on him. He stands up and grabs the Kino.', 94, 2, 1349611, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2361, 'Kino Webisode 2 : Not the Com Lab', 'Eli is talking into the Kino and showing us around the ship. He enters a room he thinks is the Communications Lab but it is actually the Infirmary. He says that they don''t know what half of the machines do.', 94, 3, 1349621, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2362, 'Kino Webisode 3 : No Idea', 'Eli again is showing us the ship and he enters a room that he has no idea what it is. He says he doesn''t think he has been in it before.', 94, 4, 1349631, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2363, 'Kino Webisode 4 : The Stargate Room', 'Eli shows us his favorite room on the ship, the Stargate Room. He says that Rush believes this Stargate is older then all other Stargates and might be a prototype.', 94, 5, 1349641, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2493, null, null, 95, 79, 392275, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2494, null, null, 95, 80, 392276, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2364, 'Kino Webisode 5 : Eli''s Room', 'Eli shows us his very small sleeping quarters. He says that he hopes it is only temporary because there are more compartments that can''t be entered because they are damaged. He says Rush wants them to be fixed but Young wants them to focus on getting home and finding food and water. He says he agrees with Colonel Young and says farewell because he has a calisthenics training session with Greer, who he thinks hates him, in the morning and needs to get some sleep.', 94, 6, 1349651, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2365, 'Kino Webisode 6 : Don''t Encourage Him', 'The Kino enters the Mess Hall where Scott, Johansen, and Greer are having lunch. Scott says hello and Johansen tells him not to encourage him because he was caught spying on Lt. James. Eli denies it and says that Riley was driving. Greer grabs the Kino and holds it to his face. He warns Eli that if he does it again he will use the Kino to spy on him from the inside.', 94, 7, 1349661, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2366, 'Kino Webisode 7 : Corridor Conversation', 'The Kino turns a corner and zooms in on Scott and Chloe having a conversation but they are too far away for the mic to pick it up.', 94, 8, 1349671, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2367, 'Kino Webisode 8 : Marked Hatch', 'Eli comes up to a hatch marked with 2 X''s. He says that if he opened the hatch he would be sucked out into space.', 94, 9, 1349681, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2368, 'Kino Webisode 9 : Not Supposed to be in Here', 'Eli enters the Shuttle and explains that Destiny has two of them but one is inaccessible. He says he is not supposed to be in it because it is for military personnel only.', 94, 10, 1349691, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2369, 'Kino Webisode 10 : Nobody Cares', 'Eli is interviewing Chloe in her quarters and asking her personal questions. She tells him that nobody cares what her favorite color is because she is not important. Eli disagrees and tries to cheer her up. She says she is tired and asks him to leave.', 94, 11, 1349701, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2370, 'Kino Webisode 11 : Kino Race', 'Eli and Riley are in the corridor preparing for a Kino race. They start down the corridor and turn the corner and Eli''s almost hits Camille.', 94, 12, 1349711, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2371, 'Kino Webisode 12 : Covered Kino', 'Lt. James enters the shower room and takes off her shirt. She looks up and sees the Kino hovering near the ceiling. She using her shirt to cover the Kino.', 94, 13, 1349721, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2372, 'Kino Webisode 13 : Variety', 'Becker and Inman are trying to isolate flavorful esters (such as banana flavoring) from chemical impurities in the water from the ice planet in order to make the rations more enjoyable. Becker asks if it is possible to get chocolate but Inman says that it contains over 12,000 chemicals and hasn''t been able to be replicated. All of the sudden the ship shakes as if there was an explosion.', 94, 14, 1349731, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2373, 'Kino Webisode 14 : You Okay', 'Scott enters Chloe''s quarters and asks if she is okay. She says she really thought they were going home. Scott says that she must be happy to be going to Earth. She says that seeing her mom that way just makes things harder.', 94, 15, 1349741, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2374, 'Kino Webisode 15 : Do I Look Stupid', 'Scott and Volker are helping Riley and Brody put on the space suits. Brody thinks he looks stupid but Scott assures him he looks cool. Riley realizes he has to go to the bathroom and Scott tells him to go in the suit because they are designed for it but Riley refuses. Brody gets his helmet on and tries to walk. He takes one step and falls on his face.', 94, 16, 1349751, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2375, 'Kino Webisode 16 : All Telford''s Fault', 'Brody is in his quarters and blaming himself for what happened to Riley but Park tells him he couldn''t have done anything. Brody says it is all Telford''s fault and Rush is right that he is going to get everyone killed. Park asks him what they should do and he says they should help Rush.', 94, 17, 1349761, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2376, 'Kino Webisode 17 : What''s That Light', 'While walking down a corridor, Sgt. Ronald Greer and Lt. Matthew Scott (and possibly the entire ship) hear the intercom come on and the voices of Adam Brody and Lisa Park testing something they just invented. The Kino is on Greer and Scott''s faces the entire time. It seems that Park rigged a full duplex interface with the Destiny''s communication system and the frequencies got swapped somehow and now everyone can hear their conversation. It seems that they should have tested the thing thoroughly before talking bad about the military personnel, who Brody declares "can''t walk without dragging their knuckles" let alone work a simple device. Then Brody notices that a light is on, despite Park claiming that the intercom was off. ', 94, 18, 1349771, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2377, 'Kino Webisode 18 : New Kind of Crazy', null, 94, 19, 1349781, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2378, 'Kino Webisode 19 : Only Run When Chased', 'Eli Wallace is sitting with Lisa Park, Dale Volker and Adam Brody are watching an episode of South Park from Eli''s cell phone, and find one scene hilarious. They are then interrupted by Matthew Scott, who notices that it must have been the fiftieth time they seen the same episode. He came in to announce the start of a morning work out Everett Young proposed to keep the crew in shape. Volker notes he only does his running while being chased, but they still have to run. The team hear that Scott can run two miles in 21 minutes for a man his age, probably faster. Eli decides to wager an energy bar, believing he couldn''t do it in time. Scott accepts the bet, and starts the run after Park starts the timer. After Scott leaves, the four continue with the watching South Park, laughing at another scene. ', 94, 20, 1349791, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2379, 'Kino Webisode 20 : Want Me to Bust Him Up', 'Walking down a corridor aboard Destiny followed closely by a Kino, Ronald Greer hears crying. He pauses and motions for the Kino to turn right. In a room around the corner, Dr. Lisa Park is pacing and muttering to herself about being stupid. Greer indicates for the Kino to remain in the hallway as he approaches Park. He wonders if she is okay, and asks her if Dr. Rush is giving her a hard time. She nods yes, and Greer responds by offering to "bust him up". The two laugh. ', 94, 21, 1349801, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2380, 'Kino Webisode 21 : The Apple Core', 'Eli Wallace introduces the Destiny''s Control interface hub. He calls it "apple core" but this name displeases Adam Brody who demands to call it control interface. Brody tries to get support from Lisa Park and Dale Volker but they also call it "Apple core". ', 94, 22, 1349821, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2381, 'Kino Webisode 22 : Not Just For Posterity', 'Dr. Lisa Park records a video diary about her time on Destiny and mentions here friends and family. However, she is interrupted and proceeds to have sex with an apparently close male friend. ', 94, 23, 1561741, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2382, 'Kino Webisode 25 : Drop The Sirs', 'Scott tells Greer to be sometimes less formal. After that they chat a bit. ', 94, 26, 2024671, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2383, 'Kino Webisode 26 : Like A Hug', 'TJ and Dr. Park discuss Rush''s relationship with Dr. Perry.', 94, 27, 2024681, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2384, 'Kino Webisode 28 : Disgusting Habit', 'Adam Brody secretly share a cigarette with sergeant Spencer. ', 94, 29, 2024691, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2385, 'Kino Webisode 27 : Chloe''s Room', 'Eli makes another tour through the ship and comes to Chloe Armstrong''s room. ', 94, 28, 2024701, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2386, 'Kino Webisode 23 : We Volunteer To Do This', 'Eli interviews Airman Kelly, while her consciousness is in Chloe''s body, about why she volunteered to use the communication stones. ', 94, 24, 2024711, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2387, 'Kino Webisode 24 : Wait For It', 'Dr. Brody attempts to take revenge on Sgt. Riley by playing a prank on him. ', 94, 25, 2024721, 250);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2395, 'Intervention (3)', 'Everett and the crew continue their efforts to save Destiny while holding off the Lucian Alliance invaders.', 94, 1, 1798981, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2396, 'Aftermath', 'Desperate for food and water, Rush directs the ship to a planet that has been locked out of Destiny''s controls. Young and Wray clash over what to do with the Alliance prisoners.', 94, 2, 1798991, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2397, 'Awakening', 'The crew encounters a ship remarkably similar to Destiny, which may hold the key to their returning home.', 94, 3, 1799001, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2398, 'Pathogen', 'Chloe behaves in a bizarre way, prompting a search of her quarters, where Lt. Scott finds a journal penned in an alien language. Elsewhere, Eli copes with his mother''s medical condition.', 94, 4, 1799011, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2399, 'Cloverdale', 'When Scott''s team explores a new planet, a plant-like organism infects the lieutenant, causing him to hallucinate a life back on Earth where he is getting married.', 94, 5, 1799021, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2400, 'Resurgence (1)', 'The crew''s new-found control over Destiny''s flight path introduces new risks when they find themselves in the middle of a war between two races.', 94, 10, 1858851, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2401, 'The Greater Good', 'Rush and Young investigate an abandoned alien craft which is just outside the Destiny. While they do this, the crew onboard the ship find the bridge and discover that Rush is responsible for the countdown clock not activating when the ship emerges from FTL. ', 94, 7, 1870291, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2402, 'Trial and Error', 'Young is plagued by mysterious dreams where Destiny is destroyed by alien attackers no matter what he does.', 94, 6, 1887901, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2403, 'Malice', 'Simeon makes his escape from Destiny, sending Nicholas Rush on a vengeful mission. But Young and Greer attempt to retrieve Simeon unharmed.', 94, 8, 1908911, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2404, 'Visitation', 'Members of the crew left behind in another galaxy make a shocking return to Destiny.', 94, 9, 2362581, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2405, 'Deliverance (2)', 'Locked in a battle with a Drone Command Ship, the Destiny is surprised by the arrival of the Aliens that abducted Rush and Chloe.', 94, 11, 2881631, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2406, 'Twin Destinies', 'Rush travels back in time to avert a disaster, meeting a past version of himself. ', 94, 12, 2881641, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2407, 'Alliances', 'Camille and Sgt. Greer are trapped when Homeworld Command comes under attack.', 94, 13, 2881651, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2408, 'Hope', 'Chloe''s body is taken over by another consciousness. Meanwhile, Dr. Volker is stricken with a mysterious illness.', 94, 14, 2881661, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2409, 'Seizure', 'Rush slips into a coma in the neural interface chair, and Amanda connects with him in the ship’s matrix, but Ginn informs Eli of a problem with that scenario. Elsewhere, Dr. Rodney McKay’s plan to dial the ninth chevron address hits a snag. ', 94, 15, 2881671, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2410, 'The Hunt', 'An alien creature attacks an exploration team from Destiny, taking two crew members captive.', 94, 16, 2881681, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2411, 'Common Descent (1)', 'Destiny comes upon a colony where the people claim their civilization was founded two thousand years earlier ... by Destiny''s crew.', 94, 17, 2881691, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2412, 'Epilogue (2)', 'While attempting to return a group of colonists to their home, the crew finds that the planet is on the verge of seismic destruction.', 94, 18, 2881701, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2413, 'Blockade', 'When the command ships blockade stars along Destiny''s path, the crew must find a different, superhot star to recharge at. Eli and Rush are forced to pilot the ship in, while the rest of the crew evacuates to a nearby planet... only to discover that the drones are already there.', 94, 19, 2881711, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2414, 'Gauntlet', 'Blocked by Command Ships at every star and unable to gate for supplies without alerting the drones, Destiny must take a stand or be left adrift.', 94, 20, 2881721, 251);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2415, null, null, 95, 1, 392196, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2416, null, null, 95, 2, 392197, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2417, null, null, 95, 3, 392198, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2418, null, null, 95, 4, 392199, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2419, null, null, 95, 5, 392200, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2420, null, null, 95, 6, 392201, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2421, null, null, 95, 7, 392202, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2422, null, null, 95, 8, 392203, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2423, null, null, 95, 9, 392204, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2424, null, null, 95, 10, 392205, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2425, null, null, 95, 11, 392206, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2426, null, null, 95, 12, 392207, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2427, null, null, 95, 13, 392208, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2428, null, null, 95, 14, 392209, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2429, null, null, 95, 15, 392210, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2430, null, null, 95, 16, 392211, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2431, null, null, 95, 17, 392212, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2432, null, null, 95, 18, 392213, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2433, null, null, 95, 19, 392214, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2434, null, null, 95, 20, 392215, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2435, null, null, 95, 21, 392216, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2436, null, null, 95, 22, 392217, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2437, null, null, 95, 23, 392218, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2438, null, null, 95, 24, 392219, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2439, null, null, 95, 25, 392220, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2440, null, null, 95, 26, 392221, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2441, null, null, 95, 27, 392222, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2442, null, null, 95, 28, 392223, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2443, null, null, 95, 29, 392224, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2444, null, null, 95, 30, 392225, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2445, null, null, 95, 31, 392226, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2446, null, null, 95, 32, 392227, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2447, null, null, 95, 33, 392228, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2448, null, null, 95, 34, 392229, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2449, null, null, 95, 35, 392230, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2450, null, null, 95, 36, 392231, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2451, null, null, 95, 37, 392232, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2452, null, null, 95, 38, 392233, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2453, null, null, 95, 39, 392234, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2454, null, null, 95, 40, 392235, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2455, null, null, 95, 41, 392236, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2456, null, null, 95, 42, 392237, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2457, null, null, 95, 43, 392238, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2458, null, null, 95, 44, 392239, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2459, null, null, 95, 45, 392240, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2460, null, null, 95, 46, 392241, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2461, null, null, 95, 47, 392242, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2462, null, null, 95, 48, 392243, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2463, null, null, 95, 49, 392244, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2464, null, null, 95, 50, 392245, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2465, null, null, 95, 51, 392246, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2466, null, null, 95, 52, 392247, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2467, null, null, 95, 53, 392248, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2468, null, null, 95, 54, 392249, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2469, null, null, 95, 55, 392250, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2470, null, null, 95, 56, 392251, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2471, null, null, 95, 57, 392252, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2472, null, null, 95, 58, 392253, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2473, null, null, 95, 59, 392254, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2474, null, null, 95, 60, 392255, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2475, null, null, 95, 61, 392256, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2476, null, null, 95, 62, 392257, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2477, null, null, 95, 63, 392258, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2478, null, null, 95, 64, 392259, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2479, null, null, 95, 65, 392260, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2480, null, null, 95, 66, 392261, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2481, null, null, 95, 67, 392262, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2482, null, null, 95, 68, 392263, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2483, null, null, 95, 69, 392264, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2484, null, null, 95, 70, 392266, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2485, null, null, 95, 71, 392267, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2486, null, null, 95, 72, 392268, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2487, null, null, 95, 73, 392269, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2488, null, null, 95, 74, 392270, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2489, null, null, 95, 75, 392271, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2508, null, null, 95, 94, 392290, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2509, null, null, 95, 95, 392291, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2510, null, null, 95, 96, 392292, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2511, null, null, 95, 97, 392293, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2512, null, null, 95, 98, 392294, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2513, null, null, 95, 99, 392295, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2514, null, null, 95, 100, 392296, 252);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2515, 'Episode 1', 'Catherine Heathcote (Juliet Stevenson), a high-flying journalist, is putting the finishing touches to a documentary about the case of schoolgirl Alison Carter, who vanished from her home in 1963 and was never seen again. Her film focuses on DI George Bennett, then a young and ambitious detective, who became closely involved with the case. However, Bennett suddenly withdraws his cooperation and Catherine must travel to the place where it all happened to find out why.', 96, 1, 392388, 253);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2516, 'Episode 2', 'Catherine Heathcote reluctantly starts to fear that DI George Bennett manipulated evidence.
', 96, 2, 392389, 253);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2517, 'Episode 3', 'Desperate to end the secrets in Scarsdale, Catherine makes a fateful final visit to the village.', 96, 3, 392390, 253);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2518, 'Avsnitt 1', null, 97, 1, 392416, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2519, 'Avsnitt 2', null, 97, 2, 392429, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2520, 'Avsnitt 3', null, 97, 3, 392430, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2521, 'Avsnitt 4', null, 97, 4, 392431, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2522, 'Avsnitt 5', null, 97, 5, 392432, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2523, 'Avsnitt 6', null, 97, 6, 392433, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2524, 'Avsnitt 7', null, 97, 7, 392434, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2525, 'Avsnitt 8', null, 97, 8, 392435, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2526, 'Avsnitt 9', null, 97, 9, 392436, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2527, 'Avsnitt 10', null, 97, 10, 392437, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2528, 'Avsnitt 11', null, 97, 11, 392438, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2529, 'Avsnitt 12', null, 97, 12, 392439, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2530, 'Avsnitt 13', null, 97, 13, 392440, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2531, 'Avsnitt 14', null, 97, 14, 392441, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2532, 'Avsnitt 15', null, 97, 15, 392442, 254);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2533, 'Avsnitt 1', null, 97, 1, 3350101, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2534, 'Avsnitt 2', null, 97, 2, 3350111, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2535, 'Avsnitt 3', null, 97, 3, 3350121, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2536, 'Avsnitt 4', null, 97, 4, 3350141, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2537, 'Avsnitt 5', null, 97, 5, 3350161, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2538, 'Avsnitt 6', null, 97, 6, 3350171, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2539, 'Avsnitt 7', null, 97, 7, 3350181, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2540, 'Avsnitt 8', null, 97, 8, 3350191, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2541, 'Avsnitt 9', null, 97, 9, 3350201, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2542, 'Avsnitt 10', null, 97, 10, 3350221, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2543, 'Avsnitt 11', null, 97, 11, 3350231, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2544, 'Avsnitt 12', null, 97, 12, 3350241, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2545, 'Avsnitt 13', null, 97, 13, 3350261, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2546, 'Avsnitt 14', null, 97, 14, 3350271, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2547, 'Avsnitt 15', null, 97, 15, 3350281, 255);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2548, 'P som i prutt', null, 97, 1, 4774289, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2549, 'Den jävulska prutteindrycken', null, 97, 2, 4774290, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2550, 'Sista prutten med gänget', null, 97, 3, 4774291, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2551, 'Dr. Mugg och småskitarna', null, 97, 4, 4774292, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2552, 'Dom klonade bajskorvarna', null, 97, 5, 4774293, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2553, 'Den falske kommisarien', null, 97, 6, 4774294, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2554, 'Dom jävulska pruttomobiltelefonerna', null, 97, 7, 4774295, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2555, 'Pruttomotidsmaskinen', null, 97, 8, 4774296, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2556, 'Fallet med pruttolasalladen', null, 97, 9, 4774297, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2557, 'Rederiet Fisy Line', null, 97, 10, 4774298, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2558, 'Rumplund går i fällan', null, 97, 11, 4774299, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2559, 'Mysteriet med det breda arslet', null, 97, 12, 4774300, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2560, 'Dasspappersmaffian', null, 97, 13, 4774301, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2561, 'Dom nerskitna badbrallorna', null, 97, 14, 4774302, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2562, 'Dr. Mugg spolar alla', null, 97, 15, 4774303, 256);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2563, 'Messenger of the Wind', 'Ken Ando is a RT mech trainee trying to get into an environmental restoration organization, DC (Divine Crusaders). While working on clearing debris from submerged city he gets into an accident and has to be rescued. The next day he finds out that he didn''t make in the top 10 students and isn''t allowed to join. After a mysterious box explodes in an abandoned area engulfing the surroundings in a micro black hole, the new recruits are sent out to help when a mysterious mech appears...', 98, 1, 392423, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2564, 'Balcion', null, 98, 2, 392424, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2565, 'The Collapse of Tokyo', null, 98, 3, 392425, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2566, 'La Guias', null, 98, 4, 392443, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2567, 'Artillery Training', null, 98, 5, 392444, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2568, 'Black Trap', null, 98, 6, 392445, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2569, 'Glowing Soil', null, 98, 7, 392446, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2570, 'Offense and Defense at the Sea of Trees', null, 98, 8, 392527, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2571, 'Escape from DC', null, 98, 9, 392528, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2572, 'Balcione', null, 98, 10, 392529, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2573, 'Divine Crusaders', null, 98, 11, 392530, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2574, 'The Spirits of the Wind and the Fire', null, 98, 12, 392531, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2575, 'The Army of Prescion', null, 98, 13, 392532, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2576, 'A Wing in the Flames of War', null, 98, 14, 392533, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2577, 'The Valley of Betrayal', null, 98, 15, 392534, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2578, 'Micro Black Hole Cannon', null, 98, 16, 392535, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2579, 'Granzon', null, 98, 17, 392536, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2580, 'Warrior Robot God of the Water', null, 98, 18, 392537, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2581, 'The Lake Bottom Trap', null, 98, 19, 392538, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2582, 'Peace Settlement', null, 98, 20, 392539, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2583, 'Nostalgia', null, 98, 21, 392540, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2584, 'Zamjeed', null, 98, 22, 392541, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2585, 'Masaki', null, 98, 23, 392543, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2586, 'Through the Dimensional Gap', null, 98, 24, 392544, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2587, 'The Collision', null, 98, 25, 392545, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2588, 'Offense and Defense of La Guias', null, 98, 26, 392546, 257);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2589, 'Episode 1', null, 99, 1, 392448, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2590, 'Episode 2', null, 99, 2, 392449, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2591, 'Episode 3', null, 99, 3, 392450, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2592, 'Episode 4', null, 99, 4, 392451, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2593, 'Episode 5', null, 99, 5, 392452, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2594, 'Episode 6', null, 99, 6, 392453, 258);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2595, 'An American Armchair In London', null, 99, 1, 392454, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2596, 'Inflatable Cactus', null, 99, 2, 392455, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2597, 'George Best: An Apology', null, 99, 3, 392456, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2598, 'Jailbreak', null, 99, 4, 392457, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2599, 'West Side Story', null, 99, 5, 392458, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2600, 'Lucky George', null, 99, 6, 392459, 259);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2601, 'Gas Readers', 'British Gas stakeout / Opening titles / Dead guests / Reckless driver ("I bet he drinks Carling Black Label") / Ayushi XL20 stereo system / Theatrical agent for South Africa / Cannabis judge / Middle Eastern correspondent / Head to head - money / Kwik Fit advert parody / Bomb disposal team / "Just say no thank you" / Bingo (proposed motorway route) / One Man and Somebody Else''s Dog / Collective nouns / Funeral / End credits / Weather report (children''s paintings)', 99, 1, 392460, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2668, 'The Sketchbook 6', null, 99, 20, 3335431, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2669, null, null, 100, 1, 1181511, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2670, null, null, 100, 2, 1181521, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2671, null, null, 100, 3, 1181531, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2672, null, null, 100, 4, 1181541, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2673, null, null, 100, 5, 1181551, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2602, 'Try Not To Look Like A Badger', 'Country code / Opening titles / Chess match / Dog porn cinema / Suicide jumpers / Making an advert out of a crisis / Topical references (George Davis, Cruise missiles, Kathy Kirby) / Police search (golf) / Home made video (new camera) / Points of View letter (accents) / Head to head - astrology / Overpaid reporters / Swellings / Minor MP (song) / Head to head - Friday the 13th / Author menaced by a window cleaner / Baby businessmen (restaurant) / News with subtitles for the militant tendency / End credits / Pub lock-in', 99, 2, 392461, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2603, 'Scuba Diver', 'Author menaced by frogman / Opening titles / Celebrities in ancient Rome / Tat auction with one bidder / Male rape victim / Millwall FC supporters transfer / TeleMexico (Korean and Bulgarian team names) / Head to head - holidays / Fast Lane Loony (song) / Swimming pool poseurs / Charity appeal - Wormigro (World Organization for Middle Income Groups) / Male pregnancy / Head to head - Club 18-30 holidays / Cryptic spies / "I can remember when this was all fields" / Job losses and gains / Medical Watch - venereal disease / Just Buried / End Credits / Message for parents of new born babies', 99, 3, 392462, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2604, 'Football Supporters On A Plane', 'Football supporters (crashing plane) / Opening titles / Introduction - Mel adlibs ("knickers!") / Day centre for ugly children / Police firearms procedure / Blow the Wind Southerly (drama with microphone booms in shot throughout) / Vorsprung Durch Technik (car crash victim) / Home made video - Eastbourne / Bergicoat low fat paints / Don''t drink paint (warning) / Arts Review - the irritable young men (John Upstart) / Head to head - jury duty / Open University physical chemistry course (unpleasant shirt) / Sprakken Ze Afrikaans / Achmed and June / Temporary faults / Money discussion / Actor''s idol / Speeches (erection) / End Credits / Deutsche Direkt', 99, 4, 392463, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2605, 'Getting Ready For The Show', 'Rushing to the studio / Opening titles / Judge berates barrister / Mexico 1910 / Cryptic spies / Arts underfunding / IBA interruption / An actor prepares (70mph crash) / Newsflash and Eastendersflash / Doctor''s surgery - bad test results / Roy Hattersley''s dentist / Head to head - the human body / Local cinema advertising / Suicide jumpers (the lift''s been mended) / Police drug sniffer horse / It Doesn''t Matter What We Play (song) / End credits / The Mattress by Carla Lane', 99, 5, 392464, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2606, 'Mel Gives Birth', null, 99, 6, 392465, 260);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2607, 'Episode 1', null, 99, 1, 392467, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2608, 'Episode 2', null, 99, 2, 392468, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2609, 'Episode 3', null, 99, 3, 392469, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2610, 'Episode 4', null, 99, 4, 392470, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2611, 'Episode 5', null, 99, 5, 392471, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2612, 'Episode 6', null, 99, 6, 392472, 261);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2613, 'Episode 1', null, 99, 1, 392474, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2614, 'The Untreated Version', null, 99, 2, 392475, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2615, 'The Uncut Version', null, 99, 3, 392476, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2616, 'The Untouchable Version', null, 99, 4, 392477, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2617, 'The Undiscovered Version ', null, 99, 5, 392478, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2618, 'The Unprepared Version', null, 99, 6, 392479, 262);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2619, 'Episode 1', 'Womb with a view; Lowlands police video unit; F1 pit stop; Black cab convention; After Dark (Death); The Unfriendly Sea; and other sketches.', 99, 1, 392480, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2620, 'Episode 2', 'Shower room; English city garden;', 99, 2, 392481, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2621, 'Episode 3', 'Rock star''s house; Warren Beatty; Wembley Stadium', 99, 3, 392482, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2622, 'Episode 4', 'Dumping rubbish in Berkshire; A Roof in the desert; After Dark (The Environment); Trouble Shooter', 99, 4, 392483, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2623, 'Episode 5', 'Interrupting Des Lynham; Sports Sat; After Dark (Christmas); Shop floor banter', 99, 5, 392484, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2624, 'Episode 6', 'Hello Wembley; After Dark (Science); Woody Allen; R.I.P. DIY Guy', 99, 6, 392485, 263);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2625, 'Episode 1', null, 99, 1, 392486, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2626, 'Episode 2', null, 99, 2, 392487, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2627, 'Episode 3', null, 99, 3, 392488, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2628, 'Episode 4', null, 99, 4, 392489, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2629, 'Episode 5', null, 99, 5, 392490, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2630, 'Episode 6', null, 99, 6, 392491, 264);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2631, 'Episode 1', null, 99, 1, 392493, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2632, 'Episode 2', null, 99, 2, 392494, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2633, 'Episode 3', null, 99, 3, 392495, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2634, 'Episode 4', null, 99, 4, 392496, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2635, 'Episode 5', null, 99, 5, 392497, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2636, 'Episode 6', null, 99, 6, 392498, 265);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2637, 'Episode 1', null, 99, 1, 392499, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2638, 'Episode 2', null, 99, 2, 392500, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2639, 'Episode 3', null, 99, 3, 392501, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2640, 'Episode 4', null, 99, 4, 392502, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2641, 'Episode 5', null, 99, 5, 392503, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2642, 'Episode 6', null, 99, 6, 392505, 266);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2643, 'Alarm Clock', null, 99, 1, 392506, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2644, 'Flight Simulator', null, 99, 2, 392507, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2645, 'Tanker', null, 99, 3, 392508, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2646, 'Tie Man Of The Year', null, 99, 4, 392509, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2647, 'New TV', null, 99, 5, 392510, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2648, 'Griff''s Accident', null, 99, 6, 392511, 267);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2649, 'The Home Made Xmas Video', 'The TV movie is a spin-off of Alas Smith and Jones (1984). 

The TV movie is based on a sketch from that show which Griff-Rhys Jones plays a man whom is making a home video about his dysfunctional family having a barbecue in the backyard. This is the Christmas Special featuring the family getting ready for and celebrating Christmas. It was first broadcast on the 23rd December 1987, and has rarely been repeated.', 99, 1, 1152981, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2650, 'Alas Sage and Onion', null, 99, 2, 1483751, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2651, 'Smith and Jones in Small Doses: The Boat People', 'A couple of friends meet on a narrow boat in inclement weather. One likes the boating lifestyle, the other''s not so sure.', 99, 4, 2446721, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2652, 'Smith and Jones in Small Doses: Second Thoughts', 'Two men meet at a popular suicide spot.', 99, 5, 2446731, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2653, 'Smith and Jones in Small Doses: The Waiting Room', 'A couple of priests, with differing views on "modern religion", fill in time in a waiting room.', 99, 6, 2446741, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2654, 'Smith and Jones in Small Doses: The Whole Hog', 'A couple meet, after quite some time apart, and some things have changed significantly.', 99, 3, 2446751, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2655, 'The Best Of Smith & Jones Series 1 Part 1', null, 99, 7, 2446761, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2656, 'The Best Of Smith & Jones Series 1 Part 2', null, 99, 8, 2446771, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2657, 'The Best Of Smith & Jones Series 2 Part 1', null, 99, 9, 2446781, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2658, 'The Best Of Smith & Jones Series 2 Part 2', null, 99, 10, 2446791, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2659, 'The Best Of Smith & Jones Series 3 Part 1', null, 99, 11, 2446801, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2660, 'The Best Of Smith & Jones Series 3 Part 2', null, 99, 12, 2446811, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2661, 'The Best Of Smith & Jones Series 4 Part 1', null, 99, 13, 2446821, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2662, 'The Best Of Smith & Jones Series 4 Part 2', null, 99, 14, 2446831, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2663, 'The Sketchbook 1', null, 99, 15, 3335381, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2664, 'The Sketchbook 2', null, 99, 16, 3335391, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2665, 'The Sketchbook 3', null, 99, 17, 3335401, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2666, 'The Sketchbook 4', null, 99, 18, 3335411, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2667, 'The Sketchbook 5', null, 99, 19, 3335421, 268);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2674, null, null, 100, 6, 1181561, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2675, null, null, 100, 7, 1279521, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2676, null, null, 100, 8, 1360681, 269);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2677, null, null, 100, 76, 2493461, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2678, null, null, 100, 121, 2493471, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2679, null, null, 100, 122, 2493481, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2680, null, null, 100, 98, 2493491, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2681, null, null, 100, 77, 2493501, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2682, null, null, 100, 78, 2493511, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2683, null, null, 100, 85, 2493521, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2684, null, null, 100, 86, 2493531, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2685, null, null, 100, 134, 2493541, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2686, null, null, 100, 90, 2493551, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2687, null, null, 100, 137, 2493561, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2688, null, null, 100, 138, 2493571, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2689, null, null, 100, 146, 2493581, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2690, null, null, 100, 147, 2493591, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2691, null, null, 100, 21, 2493611, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2692, null, null, 100, 91, 2493641, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2693, null, null, 100, 135, 2493661, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2694, null, null, 100, 136, 2493691, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2695, null, null, 100, 119, 2493741, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2696, null, null, 100, 120, 2493751, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2697, null, null, 100, 113, 2493761, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2698, null, null, 100, 92, 2493771, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2699, null, null, 100, 129, 2493781, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2700, null, null, 100, 130, 2493791, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2701, null, null, 100, 133, 2493811, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2702, null, null, 100, 131, 2493821, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2703, null, null, 100, 144, 2493831, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2704, null, null, 100, 145, 2493841, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2705, null, null, 100, 117, 2493851, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2706, null, null, 100, 118, 2493861, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2707, null, null, 100, 132, 2493871, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2708, null, null, 100, 107, 2493881, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2709, null, null, 100, 108, 2493891, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2710, null, null, 100, 61, 2493901, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2711, null, null, 100, 62, 2493911, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2712, null, null, 100, 123, 2494221, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2713, null, null, 100, 125, 2494231, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2714, null, null, 100, 195, 2494241, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2715, null, null, 100, 51, 2494251, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2716, null, null, 100, 54, 2494271, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2717, null, null, 100, 15, 2494281, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2718, null, null, 100, 35, 2494291, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2719, null, null, 100, 126, 2494311, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2720, null, null, 100, 26, 2494331, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2721, null, null, 100, 114, 2494351, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2722, null, null, 100, 139, 2494371, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2723, null, null, 100, 81, 2494391, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2724, null, null, 100, 148, 2494411, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2725, null, null, 100, 59, 2494431, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2726, null, null, 100, 1, 4165461, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2727, null, null, 100, 3, 4165462, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2728, null, null, 100, 6, 4165463, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2729, null, null, 100, 9, 4165464, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2730, null, null, 100, 11, 4165465, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2731, null, null, 100, 7, 4165672, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2732, null, null, 100, 4, 4165673, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2733, null, null, 100, 10, 4165674, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2734, null, null, 100, 14, 4165675, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2735, null, null, 100, 28, 4165676, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2736, null, null, 100, 31, 4165677, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2737, null, null, 100, 25, 4165678, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2738, null, null, 100, 30, 4165679, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2739, null, null, 100, 12, 4165680, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2740, null, null, 100, 67, 4399311, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2741, null, null, 100, 72, 4405055, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2742, null, null, 100, 141, 4405056, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2743, null, null, 100, 140, 4405057, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2744, null, null, 100, 23, 4579786, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2745, null, null, 100, 8, 4579787, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2746, null, null, 100, 2, 4579788, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2747, null, null, 100, 27, 4579789, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2748, null, null, 100, 24, 4579790, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2749, null, null, 100, 57, 4579791, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2750, null, null, 100, 58, 4579792, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2751, null, null, 100, 60, 4579793, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2752, null, null, 100, 47, 4579794, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2753, null, null, 100, 48, 4579795, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2754, null, null, 100, 63, 4579796, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2755, null, null, 100, 64, 4579797, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2756, null, null, 100, 65, 4579798, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2757, null, null, 100, 66, 4579799, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2758, null, null, 100, 29, 4579800, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2759, null, null, 100, 32, 4579801, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2760, null, null, 100, 33, 4579802, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2761, null, null, 100, 68, 4579803, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2762, null, null, 100, 69, 4579804, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2763, null, null, 100, 195, 4579805, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2764, null, null, 100, 73, 4579806, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2765, null, null, 100, 115, 4579807, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2766, null, null, 100, 116, 4579808, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2767, null, null, 100, 74, 4579809, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2768, null, null, 100, 18, 4579810, 270);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2769, 'Korean of the Year', 'Margaret announces to her parents that she is being honored as the "Korean Of The Year." Although her parents are excited, Margaret is hesitant to accept the award as it drudges up old memories of the Korean...', 101, 1, 400806, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2770, 'Cho-Universe Pageant', 'After struggling throughout their lives to meet society''s expectations of controversial beauty, Margaret and Selene decide to hold their own mother-daughter beauty pageant', 101, 2, 565011, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2771, 'Off The Grid', 'Interested in exploring the green movement, Margaret decides to take the gang into wilderness in order to disconnect themselves with today''s modern luxuries.', 101, 3, 565021, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2772, 'Two Cho''s, One Cup', 'In a quest to explore the world of paparazzi-obsessed celebrity, Margaret decides to make a pop single and a mock sex tape.', 101, 4, 565031, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2773, 'Dr. 9021-Cho', 'With her 40th birthday quickly approaching, Margaret starts to consider the process of aging in Hollywood.', 101, 5, 565041, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2774, 'Haunt-Gina', 'After being told by a psychic that a ghost was living in her vagina, Margaret starts to experience writer''s block. Worried that the ghost might be causing it, Margaret tries various ways to remedy the situation.', 101, 6, 565051, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2775, 'Cho Place Like Home', 'After receiving news that she will be honored by having a day named after her, Margaret returns to her hometown of San Francisco.', 101, 7, 565061, 271);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2776, null, null, 102, 1, 399564, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2777, null, null, 102, 2, 399565, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2778, null, null, 102, 3, 399566, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2779, null, null, 102, 4, 399567, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2780, null, null, 102, 5, 399568, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2781, null, null, 102, 6, 421302, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2782, null, null, 102, 7, 421303, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2783, null, null, 102, 8, 421304, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2784, null, null, 102, 9, 421305, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2785, null, null, 102, 10, 421306, 272);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2786, 'Avsnitt 1', 'premiärprogrammet är det rockkryssning ombord och vi får träffa bandet Mandylon från Hedemora som ska spela i nattklubben Fun Club. Ombord är också tre av Mandylons allra största fans, Alina och Johanna och Alinas kille Micke.

Håkan kommer hem från sin semester i Thailand och brottas med återanpassningen till livet ombord på Cinderella. Den värmländske kryssningsvärden Per har opererat höften och har inte varit ombord på två hela månader. Nu ska han ta sig ombord och hälsa på innan det är dags att börja jobba på riktigt igen.', 102, 1, 506031, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2787, 'Avsnitt 2', null, 102, 2, 506041, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2788, null, null, 102, 3, 566201, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2789, null, null, 102, 4, 566211, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2790, null, null, 102, 5, 606131, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2791, null, null, 102, 6, 632411, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2792, null, null, 102, 7, 666321, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2793, null, null, 102, 8, 666331, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2794, null, null, 102, 9, 711801, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2795, null, null, 102, 10, 711811, 273);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2796, 'Avsnitt 1', null, 102, 1, 1062191, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2797, null, null, 102, 2, 1079461, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2798, null, null, 102, 3, 1079471, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2799, null, null, 102, 4, 1102311, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2800, null, null, 102, 5, 1102321, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2801, null, null, 102, 6, 1178101, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2802, null, null, 102, 7, 1219621, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2803, null, null, 102, 8, 1232501, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2804, null, null, 102, 9, 4767501, 274);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2805, 'Färjan special - århundradets roligaste ögonblick', 'Här kommer ett program sprängfyllt med de roligaste, tokigaste och smaskigaste godbitarna från tre säsonger med Håkan och de andra personligheterna på Cinderella.', 102, 9, 1439001, 275);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2806, 'Bortklippta scener', null, 102, 8, 5440643, 275);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2807, 'Nu seglar vi ut igen!', 'Sexbarnsmamman Sandra ska på sitt livs första blinddate. Kryssningsvärden Per tar oss med till sitt nya inslag ombord - kändissoffan. Det blir fest med ett härligt raggargäng från Gävle. Dansbandet Zekes från Skövde är ombord, och deras största fans.', 102, 1, 4382947, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2808, 'Håkan är tillbaka ombord!', 'Håkan är tillbaka och hälsar också på i sin gamla bar. Ett komikergäng och ett dansband är ombord. Dansbandet är inga mindre än dansbandsikonerna Lasse Stefanz som avnjuts av paret Ann och Knutte som är tillbaka på färjan för ett rejält firande.', 102, 2, 4382989, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2809, 'Det är midsommar ombord', 'Det är midsommar, solen skiner och partystämningen är på topp. Värmländska kryssningsvärdinnan Nova ska binda 80 midsommarkransar och får hjälp av Håkan som lägger in en stöt i solnedgången. Två partysystrar från Skövde bjuder Färjan på Västgötaröj.', 102, 3, 4382991, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2810, 'Per bjuder på en danskurs', 'Kryssningsvärdinnan Nova lider av att inte kunna dansa och tar hjälp av sin kollega Per. Håkan har fått titeln "nöjeskonsult" ombord och inleder med att arrangera en minst sagt svajig tävling. Samtidigt gör servitören Alfonso sin sista dag som servitör ombord - han ska bli matros istället för att på så sätt börja jobba mot sin dröm, att en dag bli kapten på Färjan.', 102, 4, 4382992, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2811, 'Håkan bjuder ombord en gammal vän', 'Sara och hennes två kompisar ska festa och tävla om vem som kan hångla med flest. Håkan Hallin bjuder ombord sin gamle vän Peter och de ställer till med dragkamp. Färjanveteranerna Knutte och Ann firar bröllopsdag ombord.', 102, 5, 4382993, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2812, 'Håkan träffar en spådam', 'Vi träffar vakten Jacob som patrullerar färjan dag som natt och hjälper passagerare och avstyr fyllebråk. Bartendern och nöjeskonsulten Håkan träffar spådamen Katarina och får veta mer om sin framtid än hade hoppats på.', 102, 6, 4382994, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2813, 'Elvis gör entré på Färjan', 'En finputsad Cinderella varvar upp. Den skönaste och mest älskade besättningen i tv är redo att underhålla, sprida värme och lösa både möjliga och omöjliga situationer. Alla är välkomna ombord. Att åka på kryssning är en resa, en fest och ett folknöje.', 102, 7, 4382995, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2814, 'Raggare på blind dejt tar över Färjan', 'En finputsad Cinderella varvar upp. Den skönaste och mest älskade besättningen i tv är redo att underhålla, sprida värme och lösa både möjliga och omöjliga situationer. Alla är välkomna ombord. Att åka på kryssning är en resa, en fest och ett folknöje.', 102, 8, 4382996, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2815, 'Frieri ombord på Färjan', 'En finputsad Cinderella varvar upp. Den skönaste och mest älskade besättningen i tv är redo att underhålla, sprida värme och lösa både möjliga och omöjliga situationer. Alla är välkomna ombord. Att åka på kryssning är en resa, en fest och ett folknöje.', 102, 9, 4382997, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2816, 'Dansbandsvecka', 'Kryssningsvärdarna Per och Nova åker till dansbandsveckan Malung för att göra reklam för sin egen dansbandsvecka ombord. Nova hamnar på en buggkurs. Håkan gör sitt sista arbetspass innan han återvänder till Thailand.', 102, 10, 4382998, 276);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2817, null, null, 103, 1, 392721, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2818, null, null, 103, 2, 392722, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2819, null, null, 103, 3, 392723, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2820, null, null, 103, 4, 392724, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2821, null, null, 103, 5, 392725, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2822, null, null, 103, 6, 392726, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2823, null, null, 103, 7, 392727, 277);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2824, 'Kapitel 1 - Vem är egentligen denna tant Hedvig?', '[Berättaren lovar att berätta om huset Silfvercrona historia] Direktör Birgersson äger slottet som nu är mycket förfallet. Tant Hedvig och hennes katt hälsar dem välkomna, och hon är inte glad åt att slottet ska ändras. Hedvig tycker sig ha träffat konsulten Silver förut. Lasse tror att alla bodde på slott för i tiden men trädgårdsmästaren Persson berättar hur det egentligen var. Hedvig visar motvilligt slottet för dem och förbjuder dem att gå till de äldsta delarna, framför allt får de inte öppna en viss dörr. Hedvig berättar om skatten, som försvann. Lasse försvinner och hans kusin Lisa hamnar i det förbjudna rummet då hon letar efter honom. Där finns massor av klockor. Lisa följer efter katten genom en spegel. Lisa grips av en vakt. ', 104, 1, 392729, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2825, 'Kapitel 2 - Fånge i det förflutna', 'Lisa skickas till köket. Lasse ser en adelsman (Magnus Bengtsson) samtala med en kvinna som ser precis ut som Hedvig. Hon pratar om uppror bland bönderna och en Puke. Lübeckaren berättar att Bengtsson gått mot kungen. Lisa får veta att året är 1437. Lasse försöker muta sig fri. Borgen kommer inte att klara en belägring då de inte har tillräckligt med mat. Lisa får i uppdrag av 1400-talets Hedvig att befria Måns Nilsson från fängelsehålan. Lisa befriar även Lasse som vill vara kvar och leta efter skatten. Hedvig säger att den finns att hitta i en annan tid. De återvänder hem genom spegeln. Silver undrar vad de håller på med. Nils berättar att Puke avrättades. Lisa och Lasse tycker att Silver spionerar. ', 104, 2, 392730, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2826, 'Kapitel 3', 'Hedvig berättar hur man ska bete sig för att hitta en skatt. En morgon är både Lasse och katten borta. Lisa reser efter. Slottet har fått två nya torn. Hon hör några män prata om Gustaf, och om hur kyrkorna i Småland plundrats på silver. En budbärare läser upp ett meddelande från Dalfolket. De ställer sig på Gustaf Vasas sida i striden mot de upproriska smålänningarna och uppmanar upplänningarna att göra samma sak. En av männen är nog Gustaf själv. Lasse står och tjuvlyssnar på Gustaf Vasa och berättar för Holm att kungen planerar ett svek. Det blir tumult i köket, ärtsoppa spills. Hedvig säger åt barnen att de måste söka i en tid då slottet byggs om efter det stora kriget. Lisa vill ha nyckeln till rummet av Lasse. Tant Hedvig väntar på dem, med ärtsoppa på kjolen. ', 104, 3, 392731, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2879, 'Sphere Today, Gone Tomorrow', 'The Shape Japer turns every sphere into a cube. 6 sorts her out.
Agents: 28, 33, 101, 70 Numberjacks: 3, 4, 5, 6', 109, 3, 393007, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2880, 'In, Out, Shake It All About', 'Things that should be inside end up outside - 5 takes 3 out there to help sort the Puzzler out.', 109, 4, 393008, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2881, 'One More Time', 'When everyone passes under a bridge, they become one higher number: 4 turns into a 5, then 6. It''s 1 that''s causing all the trouble. Brain Gain changes 1''s mind to make things one less.
Agents: 53, 28, 94, 68 Numberjacks: 1, 3, 4, 5, 6', 109, 5, 393009, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3181, 'Episode 8', null, 116, 8, 393362, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3182, 'Episode 9', null, 116, 9, 393363, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2827, 'Kapitel 4 - Det brinner i knutarna', 'Lasse och Lisa reser till "en tid då slottet byggs ut efter de stora krigens slut". Männen som arbetar med att renovera slottet gillar inte Silfvercrona. Lasse sitter i matsalen och lyssnar på adelsmännen. Året är 1676. Lisa hjälper arbetarna att skriva ett upprop. Greve Silfvercrona själv frossar i mat, och kräks emellanåt. Lasse upptäcks men "mutar" sig fri med ett FNL-märke. Arbetarna hittar vad som uppenbarligen är Silfvercronas skatt. Lasse fotograferar med en polaroidkamera som han "lånat" av Silver. Greven får via brukspatronen veta att skatten är funnen. Han kräver att fatburshustrun, Hedvig, berättar var skatten finns. Hon vägrar och anklagas för att vara häxa. Plötsligt utbryter en brand. Barnen återvänder till nutid där Silver tar Lasses kort. Lasse gömmer ett kort, det som visar var skatten gömts. ', 104, 4, 392732, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2828, 'Kapitel 5 - Torsdagsnatt vid fullmåne', 'Lisa och Lasse läser mer om hur man ska hitta skatter. Lasse är tyst och äter inget så Lisa förstår att han har något i sinnet. Hedvig varnar Lasse för att inte hålla på med "farliga" saker. Lisa kommer på Hedvig med att söka igenom Lasses kläder. Lisa hämtar katten för att resa i tiden när hon ser Lasse komma med Nils. Lisa reser, men tappar katten under resan. Lisa sätts i arbete i Silversunda smedja. Den gamle smeden verkar lite förvirrad men berättar en del nyttig information i alla fall innan Lisa får i uppdrag att köra brukspatronen till slottet. När hon kommer fram träffar hon mannen som smeden berättat om. ', 104, 5, 392733, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2829, 'Kapitel 6 - Sök i framtiden!', 'Året är 1790. Silfvercrona är bestämd på att hitta skatten under natten. Bara ett söndagsbarn kan hitta skatten säger en gammal kvinna som ser ut som Hedvig. Kvinnan verkar liksom Lisa resa genom tiden. Lisa ger henne nyckeln och Hedvig skickar hem henne till nutid genom en tavla. [Återblick: Lasse berättar för Nils om deras resor och han lovar motvilligt att hjälpa honom. På Birgerssons fråga svarar Silver att han är söndagsbarn, ja nästan i alla fall (lördag natt).] Lasse gräver på platsen där han tror att skatten finns. Lasse och Nils hittar en kista. Så dyker Lisa och Lasses pappa upp, liksom Silver. Silver hävdar släktskap med Silfvercrona och gör anspråk på skatten. Lisa blir hysterisk över att de inte kan hålla tyst. Hedvig säger att skatten tillhör folket. En del av slottet rasar in och alla glömmer skatten och reglerna för skattjakt. Nästa dag är skatten borta. Tant Hedvig ger dem nyckeln och råder dem att söka i framtiden. "Det är ni som gör historien för dem som kommer efter." Slottet görs om till folkhögskola. ', 104, 6, 392734, 278);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2830, 'Day of the Black Sun', 'The first female President of the United States is assassinated by a sniper as she is giving a speech on Independence Day and it becomes evident that it''s a conspiracy.', 105, 1, 392788, 279);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2831, 'All the Tears of Hell', 'The amnesiac hunts down and kills the ops soldiers one by one as he searches for answers to help him restore his memory.', 105, 2, 392789, 279);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2832, 'Stage 1', 'The story begins with Ital in the care of an aging war-roid named Randis R. Khiezard. Raised from childhood by the machine, he is under the impression that a war is still going on in the world around him. Randis was once part of the imperial forces fighting against the republic, assigned to a distant outpost where he first found Ital. In a skirmish, Randis lost his old human partner and was apparently assumed destroyed. Left at his post, having no contact with the rest of the world, he raised Ital in isolation, and never heard of the end of the war.', 106, 1, 392817, 280);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2833, 'Stage 2', 'After defeating the Beast-Master, Ital, Zaxon and Sahari travel to Metro City, where a gigantic Kampfdraken has reportedly awakened. Our heroes confidently engage the monster, only to discover that it''s more than they bargained for. When the Draken is finally defeated, they discover that it is guarding a treasure, an egg containing a mysterious Elf, a synthetic human named Sakuya—the same Sakuya that the BeastMaster was searching for. But when Sakuya awakens, the mysterious General is able to set his terrible plan into motion...', 106, 2, 392818, 280);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2834, 'Stage 3', 'Sakuya is captured by the diabolical General, who plans to use her to dominate the world—or destroy it in the attempt! Can Ital, Sahari, Fayk and Zaxon the amnesiac War-roid rescue Sakuya, defeat the General, and save Gaiarth from a fate worse than Armageddon?', 106, 3, 392819, 280);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2835, 'Xam''d At The Dawn Of War', null, 107, 1, 401001, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2836, 'Blackout On Sentan Island', null, 107, 2, 401002, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2837, 'The Way To Freedom', null, 107, 3, 401003, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2838, 'Enlightenment', null, 107, 4, 401004, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2839, 'Shattered Bonds', null, 107, 5, 401005, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2840, 'Live Fire', null, 107, 6, 401006, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2841, 'Guardians of Stone', null, 107, 7, 401007, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2842, 'Showdown at Tsumebara Pass', null, 107, 8, 401008, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2843, 'The Astonishing Raigyo', null, 107, 9, 401009, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2844, 'Moving On', null, 107, 10, 401010, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2845, 'Assault: The Zanbani', null, 107, 11, 401011, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2846, 'Flowers blooming into the Dark', null, 107, 12, 401012, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2847, 'Running Barefoot', null, 107, 13, 401013, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2848, 'Cerulean Skies', null, 107, 14, 413356, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2849, 'Souls at Peace', null, 107, 15, 413357, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2850, 'Burning in Our Wake', null, 107, 16, 413358, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2851, 'Lambs to the Altar', null, 107, 17, 413359, 281);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2852, 'Episode 1', null, 108, 1, 392992, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2853, 'Episode 2', null, 108, 2, 392993, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2854, 'Episode 3', null, 108, 3, 392994, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2855, 'Episode 4', null, 108, 4, 392995, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2856, 'Episode 5', null, 108, 5, 392996, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2857, 'Episode 6', null, 108, 6, 392997, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2858, 'Episode 7', null, 108, 7, 392998, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2859, 'Episode 8', null, 108, 8, 392999, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2860, 'Episode 9', null, 108, 9, 393000, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2861, '', null, 108, 10, 393016, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2862, '', null, 108, 11, 393017, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2863, '', null, 108, 12, 393018, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2864, '', null, 108, 13, 393019, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2865, '', null, 108, 14, 393020, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2866, '', null, 108, 15, 393021, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2867, '', null, 108, 16, 393022, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2868, '', null, 108, 17, 393023, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2869, '', null, 108, 18, 393024, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2870, '', null, 108, 19, 393025, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2871, '', null, 108, 20, 393026, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2872, '', null, 108, 21, 393027, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2873, '', null, 108, 22, 393028, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2874, '', null, 108, 23, 393029, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2875, '', null, 108, 24, 393030, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2876, '', null, 108, 25, 393031, 282);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2877, 'The Trouble with Nothing', 'Things keep vanishing. Numberjacks 3 and 4 discover that 0 has disappeared too and is causing things to vanish. He is evading all attempts to get him back. When 3 helps out on the Brain Gain machine, everything is tripled but order is finally restored.', 109, 1, 393005, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2878, 'Going Wrong, Going Long', 'The episode opens with 3 trying to convince 4 that she is taller than him. The alarm goes and an agent says there is a boy having trouble with his pencil. 4 takes the mission to see what is wrong. Can he help?', 109, 2, 393006, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3183, 'Episode 10', null, 116, 10, 393364, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3184, 'Behind Karl XIIs Gamasjer', null, 116, 11, 6450954, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2882, 'Forward Thinking', 'The Problem Blob is causing trouble - and things can''t stop going forwards. 6 hitches a lift in a remote control car to help set things right. ', 109, 6, 393010, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2883, 'Seven Wonders', '4 finds things add up to 7 when the Puzzler''s about, and 7 is caught by the Puzzler.
Agents: 53, 42, 70, 16 Numberjacks: 1, 3, 4, 5, 6, 7', 109, 7, 393011, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2884, 'Getting Heavy', 'Spooky Spoon wants to be higher than everyone else, so she is swapping light things and heavy things to put people down on the ground - 5 and 3 fly out.
Agents: 53, 16, 68, 85 Numberjacks: 3, 4, 5, 6, 9', 109, 8, 393012, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2885, 'Belongings', 'Things don''t belong when Spooky Spoon mixes things up - another problem for 5.', 109, 9, 393013, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2886, '4 He''s a Jolly Good Fellow', 'The Numbertaker is taking all the fours he can find - will 4 be able to escape his clutches? ', 109, 10, 393014, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2887, 'Boxing Day', 'Boxes go wrong when the Shape Japer plays tricks - but 6 can do the trick too!', 109, 11, 393032, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2888, 'Out of Order', 'Spooky Spoon makes sure things are well out of order - until 5 sorts her out.', 109, 12, 393033, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2889, 'Nine Lives', 'The Puzzler has 9 trapped in a puzzle bubble - 6 and 3 come to the rescue. In this episode, 6 turns into two 3''s.
Agents: 25, 34, 88, 100 Numberjacks: 3, 4, 5, 6 (two 3s), 9', 109, 13, 393034, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2890, 'Takeaway', 'Not just a few problems, lots of them - 4 makes the Numbertaker take more than he wants to.
Agents: 28, 101 (Although mixed up with 42), 85, 70 Numberjacks: 3, 4, 5, 6', 109, 14, 393035, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2891, 'The Cuck-Cuck-Cuck-Oo-Oo-Oo Bird', 'There''s a pattern to the problems the Puzzler causes - and 5 has to break that pattern.
Agents: 14, 47, 73, 96 Numberjacks: 3, 4, 5, 6', 109, 15, 393036, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2892, 'Stop and Go', 'Things don''t move when they should, like a walking trash bin etc. - 6 has got to sort Spooky Spoon out.
Agents: 34, 52, 73, 100 Numberjacks: 0, 3, 4, 5, 6', 109, 16, 393037, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2893, 'Off Colour', 'Spooky Spoon wants to be the most colourful character around, by taking other yellow, red, and blue things - 4 is out to stop her.
Agents: 88, 34, 25, 100 Numberjacks: 3, 4, 5, 6', 109, 17, 393038, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2894, 'A Game of Two Halves', 'The Shape Japer makes half a load of trouble, and 4 has to make things whole again.
Agents: 14, 47, 73, 96 Numberjacks: 2, 3, 4, 5, 6', 109, 18, 393039, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2895, 'Out for the Count', '2 is out and about and making everyone count incorrectly - 6 goes after him.
Agents: 96, 61, 100, 25 Numberjacks: 2, 3, 4, 5, 6', 109, 19, 393040, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2896, 'The Container Drainer', 'Everything is empty thanks to the Puzzler - 3 helps 5 to fill things up again but not without 3 getting caught by the Puzzler.
Agents: 25, 61, 96, 100 Numberjacks, 2, 3, 4, 5, 6', 109, 20, 393041, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2897, 'Tens Moments', '1 and 0 get out and about and make ten of everything - creating more work for 5.
Agents: 25, 52, 61, 88 Numberjacks: 0, 1, 3, 4, 5, 6', 109, 21, 393042, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2898, '3 Things Good', '3 is out on her own trying to do battle with the Shape Japer, who does not like things in threes.
Agents: 25, 34, 88, 100 Numberjacks: 1, 2, 3, 4, 5, 6', 109, 22, 393043, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2899, 'Say What You Mean', 'Be clear what you mean or the Problem Blob will make trouble for you, as 4 finds out. In this episode, the Problem Blob sticks on two walls and a cube-shaped bush.
Agents: 34, 47, 100, 14 Numberjacks: 3, 4, 5, 6', 109, 23, 393044, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2900, 'One Won', 'There''s only one of everything, thanks to the Numbertaker - 6 sorts things with help from 1.
Agents: 55, 68, 70, 94 Numberjacks: 1, 3, 4, 5, 6', 109, 24, 393045, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2901, 'Tricky Sixes', 'The Numbertaker likes two lots of three today - 6 is the Numberjack to sort him out. This is the first appearance of the Numbermaker.
Agents: 42, 85, 55, 68 Numberjacks: 3, 4, 5, 6', 109, 25, 393046, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2902, 'May the Fours Be with You', 'The Shape Japer is after things that come in eights - 4 goes on the mission. In this episode, the Shape Japer stays as a cube, and become good eight at the end.
Agents: 16, 42, 68, 101, Numberjacks: 2, 3, 4, 5, 6, 8', 109, 26, 393047, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2903, 'Best Estimate', 'The Problem Blob makes things go wrong when people can''t estimate - 5 to the rescue. Problem Blob''s first word is "What?".
Agents: 28, 55, 70, 101 Numberjacks: 3, 4, 5, 6', 109, 27, 393048, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2904, 'On and Off', 'Spooky Spoon is mixing things up again, so instead of being on things are off - 4 is on the case.
Agents: 16, 33, 68, 85 Numberjacks, 3, 4, 5, 6', 109, 28, 393049, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2905, 'Zero the Hero', '0 to the rescue when just for once, the Numberjacks are the problem, not the answer!
Agents: 33, 55, 85 Numberjacks: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9', 109, 29, 393050, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2906, 'Bad Circles', 'Numbers 3, 4 and 5 are in the gym standing among a mixture of colourful circles, playing the circle game. The Agents call in reporting problems at the beach - 6 takes on the mission. Objects are behaving strangely - they''ve taken on a life of their own. It''s the Shape Japer causing mayhem.', 109, 30, 393051, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2907, 'Famous Fives', 'The Puzzler sets the problem - and 5 is the right Numberjack to sort it out.
Agents: 16, 42, 68, 94 Numberjacks: 1, 2, 3, 4, 5, 6,', 109, 31, 393052, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2908, 'Fair Shares', 'Things aren''t being shared fairly, thanks to the Problem Blob - 6 makes everything all right.
Agents: 28, 101, 85, 33 Numberjacks: 1, 2, 3, 4, 5, 6, 7, 8,', 109, 32, 393053, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2909, 'Being 3', 'The Numbertaker is taking threes today - but he can''t take Numberjack 3: In this episode, 3 turns into a 4.
Agents: 28, 55, 70, 101 Numberjacks: 1, 3, 4, 5, 6', 109, 33, 393054, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2910, 'Into the Teens', 'The Numbertaker has added ten more than 1 - 4 has to sort him out. 4 turns into a 14, and the Numbertaker turns into eleven.
Agents: 33, 55, 70, 85 Numberjacks: 1, 3, 4, 5, 6, 7, 8, 9', 109, 34, 393055, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2911, 'Slide and Turn', 'The Shape Japer is moving things and causing problems - 5 goes out there.
Agents: 17, 41, 60, 106 Numberjacks: 1, 2, 3, 4, 5, 6,', 109, 35, 393056, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2912, 'Six of One', 'The Problem Blob is making trouble with sixes - Numberjack 6 to the rescue.
Agents: 22, 41, 60, 106 Numberjacks: 0, 1, 2, 3, 4, 5, 6,', 109, 36, 393057, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2913, 'Time Trouble', 'Time passes very strangely - thanks to Spooky Spoon. 5 investigates. This is the first appearance of the Beeper.
Agents: 38, 54, 79, 95 Numberjacks: 3, 4, 5, 6', 109, 37, 393058, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2914, '1, 2, 3, Go', 'It''s 1, 2, 3 - pattern time! 3 battles with the Puzzler. This is the only episode where the Brain Gain machine hasn''t been used.
Agents: 17, 54, 60, 106 Numberjacks: 1, 2, 3, 4, 5, 6, 9', 109, 38, 393059, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2915, 'More 4', 'The Shape Japer makes trouble with symmetry - 4 goes out to sort things out. In this episode 4 gets an extra bit of body.
Agents: 17, 22, 41, 38 Numberjacks: 3, 4, 5, 6, 7, 8,', 109, 39, 393060, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2916, 'Almost Human', 'The Problem Blob causes trouble - and 4 tries out being a human being. There is a special Numberjack known as the Numberjack Man (played by Steven Lim), known as 4''s temporary replacement.
Agents: 79, 83, 95, 106 Numberjacks: 3, 4, 5, 6', 109, 40, 393061, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3185, null, null, 116, 31, 6450955, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3186, null, null, 116, 32, 6450957, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3187, null, null, 116, 33, 6450958, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2917, 'Two, Four, Six, Eight', 'The Numbertaker takes all the even numbers - 6 and 8 fly out to put things right.
Agents: 79, 54, 57, 17 Numberjacks: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9', 109, 41, 393062, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2918, 'Round and Round', 'The Problem Blob has gotten people going around in circles - can 5 restore things to normal?
Agents: 41, 60, 83, 106 Numberjacks: 1, 2, 3, 4, 5, 6,', 109, 42, 393063, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2919, 'Square Dancing', 'The Shape Japer''s about - and 1, 4, and 9 sort out problems with squares.
Agents: 22, 41, 79, 95 Numberjacks: 1, 3, 4, 5, 6, 9', 109, 43, 393064, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2920, 'Data Day', 'Spooky Spoon is mixing things up again and makes things at a cafe behave like party things and vice versa - 3 gets ready to take her on.
Agent: 17, 54, 60, 106 Numberjacks: 3, 4, 5, 6', 109, 44, 393065, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2921, 'How? What? Check!', '5 sorts out the Puzzler''s problems - and checks to make sure.
Agents: 22, 38, 83, 95 Numberjacks: 3, 4, 5, 6', 109, 45, 393066, 283);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2922, 'Counting Down to Christmas', 'The Numberjacks save Christmas Day', 109, 1, 423050, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2923, 'Seaside Adventure', ' What starts as a happy holiday in the sun soon gets more complicated as all the Meanies try to make like hard for the Numberjacks.  Only after much excitement do things get back to normal. ', 109, 2, 948681, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2924, 'All About 5', null, 109, 3, 1552481, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2925, 'All About The Cosy Room', null, 109, 4, 1552491, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2926, 'All About The Problem Blob', null, 109, 5, 1552501, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2927, 'All About 6', null, 109, 6, 3584201, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2928, 'All About Spooky Spoon', null, 109, 7, 3584211, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2929, 'All About The Launcher', null, 109, 8, 3584221, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2930, 'All About 7', null, 109, 9, 6418245, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2931, 'All About The Puzzler', null, 109, 10, 6418249, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2932, 'All About The Gym', null, 109, 11, 6418254, 284);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2933, 'Ups and Downs', 'The Spooky Spoon is turning everything upside down, so 1 and 8 are sent out to help 4.', 109, 1, 1457241, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2934, 'Half Time', 'The Numbertaker is halving the numbers of everything - 4 is sent out to stop him. In this episode, 4 turns into a 1, a 2 and an 8.', 109, 10, 1457251, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2935, 'A Close Thing', 'A girl can''t get near to her teddy, and grown ups need help with things being too close. 6 flies out to sort the Problem Blob.', 109, 11, 1457331, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2936, 'A Circle at Both Ends', 'The Shape Japer is having fun with cylinders - 5 to the rescue!', 109, 12, 1472101, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2937, 'Matchmaking', 'Numbers don’t match when the Numbertaker’s about - until 3 saves the day.', 109, 13, 1472111, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2938, 'A Different Sort', 'Spooky Spoon is jumping things about – and 4 is the one to sort her out.', 109, 14, 1472121, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2939, 'Areas Of Concern', 'The Puzzler is making things bigger and smaller – 6 and the buddy tiles save the day.', 109, 15, 1472131, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2940, 'The Dreaded Lurgi', '5 to the rescue when things are going up and down and round and round, all thanks to the Problem Blob.', 109, 16, 1472141, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2941, 'On the Move', 'People keep counting when they don’t need to - thanks to the Problem Blob.  5 sorts things out.', 109, 2, 1502471, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2942, 'Very Shapely', 'The Shape Japer is into extreme shapes – 6 gets busy sorting things out.', 109, 3, 1502481, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2943, 'Wee Three Phone Home', 'The Puzzler sets a puzzle, and 3 is up to the challenge, with a little help from, 7, 8, and 9.', 109, 4, 1502491, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2944, 'Did You Notice Anything?', 'The Numbertaker’s causing problems, but strangely people don’t notice. 4 to the rescue!', 109, 5, 1502501, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2945, 'Measured Response', 'The Shape Japer’s changing the lengths of things – 6 and his buddy sticks are on the case!', 109, 6, 1502511, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2946, 'Think Again', 'Sometimes it’s good to think again, as 5 discovers when she’s dealing with Spooky Spoon’s latest stirrings.', 109, 7, 1502521, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2947, 'Carry On Counting', 'People need to carry on counting, not start again – 6 sorts out the Problem Blob.', 109, 8, 1502531, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2948, 'A Record In The Charts', 'People need more information – so 4 goes out there battling with the Puzzler.', 109, 9, 1502541, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2949, 'Fraction Fiction', 'The Shape Japer is splitting things into fractions, and 3 is on the case.', 109, 17, 1502551, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2950, 'Interesting Times', '7 tells the story of how 3, 4, 5, and 6 had to sort out day and night when Spooky Spoon mixed things up.', 109, 18, 1502561, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2951, 'More Ways Than One', 'When the Puzzler bubbles 8, 4 has to find three different ways making eight to release him.', 109, 19, 1502571, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2952, 'Hundreds and Thousands', '6 saves the day when the Number-taker is taking hundreds and thousands.', 109, 20, 1502581, 285);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2953, 'Crash', 'Premiere. Axel investigates a K-Town murder. Officers Kenny and Bebe collide with a mysterious woman. Ben (Dennis Hopper) hires a limo driver from South Central. And Christine insists that her father move in.', 110, 1, 393101, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2954, 'The Doctor Is In', 'Christine and Peter argue about the remodel of the bathroom, while Lou complains about his nurse. Anthony can’t quite understand Ben’s unusual friendship with the doctor. And Axel’s investigation gets complicated, as he takes steps to insure that Eddie doesn’t share his knowledge of the K-Town murders.', 110, 2, 393102, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2955, 'Panic', 'The cops investigate a shooting of one of their own. Christine is taken with her new architect. Ben gives Anthony a shot at the big time. And a young Guatemalan man begins his perilous journey to the U.S.', 110, 3, 393103, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2956, 'Railroaded', 'Ben''s doctor takes a tumble, but Eddie turns up to help. Anthony samples the show business lifestyle. Kenny''s obsession affects his marriage. And Christine wonders if she''s taken on too much. ', 110, 4, 393104, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2957, 'Your Ass Belongs to the Gypsies', 'A wildfire rages near Peter''s failing development. Kenny digs a deeper hole, bending the law to make a problem go away. And Ben''s life takes an unexpected and traumatic turn.', 110, 5, 403522, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2958, 'Clusterfuck', 'Megan sneaks out with Charles, and Christine and Peter have a blazing row. Annoyed with Ben, Anthony hooks up with an old gang buddy. And Kenny and Bebe interrupt a hold-up at Roger''s barbershop. ', 110, 6, 403523, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2959, 'Los Muertos', 'Ben makes a reluctant Anthony drive him deep into the desert to see his shaman. Cesar takes his first steps on American soil, only to be faced with relentless hunger, thirst and endless desert.', 110, 7, 403524, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2960, 'Three Men and a Bebe', 'Cesar considers his past and the dangerous journey that brought him to Los Angeles. Amy and Kenny''s marriage takes a turn for the worse, making Kenny wonder why he ever pursued Inez.', 110, 8, 403525, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2961, 'Pissing in the SandBox', 'Ben wants to take his company back from his daughter. A new detective causes a few upsets at the precinct. And when Eddie helps a Korean man, he finds a young girl in desperate trouble. ', 110, 9, 403526, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2962, 'The Future is Free', 'Cesar gets a job in a car wash, while Christine learns more about Peter''s departure. A K-Town rapist is questioned, Jules gives Ben a challenge, and Kenny tries to makes amends with Amy.', 110, 10, 416203, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3188, 'Brødrene Dal og Vikingsverdets forbannelse', null, 116, 1, 4605391, 306);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2963, 'F-36, Sprint Left, T-4', 'Kenny and Amy begin counseling. Eddie runs into more trouble as an EMT. Ben hires an MBA graduate to help him with new ideas. And Cooper thinks he has Axel right where he wants him.', 110, 11, 418350, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2964, 'Ring Dings', 'Doubts are raised in the precinct when Axel is questioned about the K-Town shootings. Kenny is left holding the kids for once. And Ben learns some disturbing news about his former business partner.', 110, 12, 418351, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2965, 'The Pain Won''t Stop', 'Anthony and Ben visit Ben''s old partner, while Eddie confronts Mr. Park. Bebe joins the search for Axel, Christine tries to re-enter the job market, and Inez crosses the line with Kenny.', 110, 13, 418352, 286);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2966, 'You Set the Scene', 'Former music mogul Ben Cendars returns to L.A. from a year''s stint in rehab. Billionaire entrepreneur Seth Blanchard plans on bringing L.A. an NFL football team.', 110, 1, 806941, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2967, 'Always See Your Face', 'Seth enlists security guard Kenny Battaglia on his quest to discover the meaning of his bizarre visions. Bo Olinville gets offered a position coaching Tyler.', 110, 2, 1124441, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2968, 'The World''s A Mess, It''s In My Kiss', 'Ben’s investigation into his daughter’s murder leads to a shocking source for black-market surveillance tapes. Inez and Jimmy pay off Jimmy’s gambling debts.', 110, 3, 1124451, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2969, 'Can''t Explain', 'Ben and Anthony visit the athletic club where Cassie was murdered, but are dissuaded from investigating further. Eddie ridicules advice Bo gives Tyler, which prompts Bo to prove his macho prowess. ', 110, 4, 1124461, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2970, 'You, I''ll Be Following', 'Seth moves into an eco-friendly loft where he announces a dramatic venture for the future betterment of Los Angeles. Kenny strikes up a friendship with Tess, who runs a homeless center.', 110, 5, 1176751, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2971, 'No Matter What You Do', 'Ben visits his ex-wife (Peggy Lipton) and her husband (Keith Carradine) and stumbles into a crisis of desperation. Inez is romanced by a new man, while Jimmy ends up in a violent conflict.', 110, 6, 1176761, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2972, 'Johnny Hit and Run Pauline', 'Bo explodes as Wendy pushes him to admit he wants to sell the hobby shop. Inez''s new man, a rich Englishman, takes her to London on a romantic interlude. Kenny takes Tess on a date.', 110, 7, 1274781, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2973, 'Lovers In Captivity', 'Seth gets a visit from a televangelist who wants to join forces. Ben rebuilds his relationship with Suzy as he continues to look for a murderer. Wendy is jealous of Bo''s relationship with Lily.', 110, 8, 1302411, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2974, 'Endangered Species', 'Ben Cendars (Dennis Hopper) and Anthony Adams (Jocko Sims) track down coke-dealer Roxanne Thigpen (Tania Raymonde), who was close friends with Cassie, and Anthony shares his own disappointments with Ben.', 110, 9, 1316371, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2975, 'Master of Puppets', 'Ben and Anthony force Roxanne into withdrawal with the hope that she''ll disclose more about Cassie''s death. Seth mounts a town hall event to muster support for his homeless project.', 110, 10, 1348031, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2976, 'Calm Like a Bomb', 'Seth grows more convinced that God is manifesting through him, although Kenny becomes more doubtful of the illusions. Inez meets a Hollywood director who holds out the promise of a new career.', 110, 11, 1358781, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2977, 'All Alone Or ...', 'Kenney and Maggie pressure Seth to agree to an operation for his brain tumor. Director Bauer Lermontov takes Inez to the Cinematheque''s Moving Picture Ball to fast-track her acting career.', 110, 12, 1398601, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2978, 'Los Angeles', 'A group of Charles Manson fanatics reveal what happened  to Ben''s daughter; Seth has a party to celebrate his homeless city project; a Hollywood director offers Inez relationship advice; honors for Wendy''s work in a project may be interrupted.                                       ', 110, 13, 1420151, 287);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2979, 'Recursos humanos', null, 111, 3, 393132, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2980, 'Segunda oportunidad', null, 111, 1, 393134, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2981, 'Colonoscopia', null, 111, 2, 393136, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2982, 'Acosada', null, 111, 4, 393137, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2983, 'El joven simulador', null, 111, 5, 393139, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2984, 'Impotente', null, 111, 6, 393140, 288);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2985, 'El atraco', null, 111, 1, 393141, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2986, 'Los impresentables', null, 111, 2, 393143, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2987, 'Santos en peligro', null, 111, 3, 393145, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2988, 'Reality', null, 111, 4, 393147, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2989, 'Contacto', null, 111, 5, 393149, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2990, 'Para que tú no llores', null, 111, 6, 393150, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2991, 'Operación invierno nuclear', null, 111, 7, 393152, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2992, 'Vuelve a casa, vuelve', null, 111, 8, 393154, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2993, 'La residencia', null, 111, 9, 393155, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2994, 'La hija del juez Hurtado', null, 111, 10, 393157, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2995, 'Casado con todos', null, 111, 11, 393159, 289);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2996, 'Ambush', 'Great leaders inspire greatness in others.

While trying to negotiate a treaty for the Republic, Jedi Master Yoda and a handful of clone troopers are ambushed by a Separatist army.', 112, 1, 393233, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2997, 'Rising Malevolence', 'Belief is not a matter of choice, but of conviction.

An attack by a devastating new Separatist weapon – the powerful starship Malevolence – leaves Jedi Master Plo Koon and his clone troopers struggling to survive until Anakin Skywalker and Ahsoka can find them.
', 112, 2, 393234, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2998, 'Shadow of Malevolence', 'Easy is the path to wisdom for those not blinded by ego.

Anakin utilizes new long-range Y-wing bombers to lead a strike on General Grievous'' warship.', 112, 3, 393235, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (2999, 'Destroy Malevolence', 'A plan is only as good as those who see it through.

Padmé Amidala and C-3PO are taken hostage by General Grievous, leaving Anakin and Obi-Wan to save the Senator and complete the destruction of the Malevolence.', 112, 4, 393236, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3000, 'Rookies', 'The best confidence builder is experience.

Alone on a distant outpost, clone officers Rex and Cody must inspire their rookie unit to believe in themselves to stave off a Droid Commando invasion. ', 112, 5, 393711, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3001, 'Downfall of a Droid', 'Trust in your friends, and they''ll have reason to trust in you.

During a battle with the Separatists R2-D2 is lost and they must find him before the Separatists do because of the military secrets locked inside the droid.', 112, 6, 393712, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3002, 'Duel of the Droids', 'You hold onto friends by keeping your heart a little softer than your head.

R2-D2 is being held at General Grievous'' secret listening post. Ahsoka, Anakin and replacement droid R3-S6 go on a dual rescue and sabotage mission.', 112, 7, 403518, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3003, 'Bombad Jedi', 'Heroes are made by the times.

The Separatists think that Jar Jar Binks is a Jedi Knight, when the comical Gungan and C-3PO fight to save Padmé Amidala from doom at the hands of evil Viceroy Nute Gunray.', 112, 8, 403519, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3004, 'Cloak of Darkness', 'Ignore your instincts at your peril.

After handing over a captured Nute Gunray to Captain Argyus and his Senate Commandos, Luminara Unduli and Ahsoka Tano must thwart a Separatist boarding, lead by Asajj Ventress.', 112, 9, 403520, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3189, 'The Monday that Changed my Destiny', null, 117, 1, 393366, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3190, 'Preparing for a Journey by Myself', null, 117, 2, 393367, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3005, 'Lair of Grievous', 'Most powerful is he who controls his own power.

Kit Fisto and Nahdarr Vebb, chasing Nute Gunray, enter the sanctuary of General Grievous, on the Vassek moon.', 112, 10, 403521, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3006, 'Dooku Captured', 'The winding path to peace is always a worthy one, regardless of how many turns it takes.

Anakin and Obi-Wan''s jobs are done for them when space pirates capture Count Dooku. ', 112, 11, 417298, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3007, 'The Gungan General', 'Fail with honor rather than succeed by fraud.

In order to escape their capture, Anakin and Obi-Wan team up with Jar Jar Binks. As if that wasn''t bad enough, they must bring Count Dooku with them to the Jedi Knights.', 112, 12, 419505, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3008, 'Jedi Crash', 'Greed and fear of loss are the root that lead to the tree of evil.

When Anakin suffers from extensive injuries in battle, the Jedi Knights must find help on a hostile planet. However, things are only made worse by Ahsoka''s constant attempts at controlling her emotions.', 112, 13, 423943, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3009, 'Defenders of Peace', 'When surrounded by war, one must eventually choose a side.

Anakin, Ahsoka and Aayla Secura offer Lurmen a Republic position in the war. Unfortunately, the Separatists also have their eyes on gaining a new ally.', 112, 14, 423944, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3010, 'Trespass', 'Arrogance diminishes wisdom.

A warring icy planet and its moon find Anakin and Obi-Wan in quite a pickle.', 112, 15, 423945, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3011, 'The Hidden Enemy', 'Truth enlightens the mind, but won''t always bring happiness to your heart.

Anakin and Obi-Wan suspect a traitor is in their midst while on a mission to liberate a planet from a Separatist siege. ', 112, 16, 431037, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3012, 'Blue Shadow Virus', 'Fear is a disease; hope is its only cure.

Padmé and Jar Jar run into trouble while looking for a Separatist bio-weapons lab, leaving Anakin, Obi-Wan and Ahsoka to rescue them and contain a deadly virus.', 112, 17, 431038, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3013, 'Mystery of a Thousand Moons', 'A single chance is a galaxy of hope.

The fatal Blue Shadow Virus is released, infecting Ahsoka, Padmé and many Clone Troopers - and giving Anakin and Obi-Wan just 48 hours to find the antidote on a mysterious planet from which no visitor has ever returned.', 112, 18, 435753, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3014, 'Storm Over Ryloth', 'It is a rough road that leads to the heights of greatness.

Ahsoka disobeys Anakin''s orders and loses most of her squadron which prompts Anakin to give his Padawan a lesson in respect for authority, and the opportunity for redemption', 112, 19, 435903, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3015, 'Innocents of Ryloth', 'The costs of war can never be truly accounted for.

Upon arriving on Ryloth the Republic discovers that the Separatists have enslaved the entire population.', 112, 20, 435904, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3016, 'Liberty on Ryloth', 'Compromise is a virtue to be cultivated, not a weakness to be despised.

Mace, Obi-Wan, Ahsoka, Anakin and The Republic attempts to capture Wat Tambor before he gains control over the whole planet, will they be able to save the planet in time? ', 112, 21, 435905, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3017, 'Hostage Crisis', 'A secret shared is a trust formed.

To free crime lord Ziro the Hutt, bounty hunters seize control of the Senate Building and take hostages -- completely unaware that Jedi Knight Anakin Skywalker is still inside. This episode introduces the bounty hunter Cad Bane. ', 112, 22, 435906, 290);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3018, 'The Clone Wars preview', 'Ashley Eckstein, voice of Ahsoka Tano, hosts an exclusive behind-the-scenes look at the making of Cartoon Network''s newest original series "Star Wars: The Clone Wars."', 112, 2, 393903, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3019, 'The Clone Wars', 'As the Clone Wars sweep through the galaxy, the heroic Jedi Knights struggle to maintain order and restore peace. More and more systems are falling prey to the forces of the dark side as the Galactic Republic slips further and further under the sway of the Separatists and their never-ending droid army. Anakin Skywalker and his Padawan learner Ahsoka Tano find themselves on a mission with far-reaching consequences, one that brings them face-to-face with crime lord Jabba the Hutt. But Count Dooku and his sinister agents, including the nefarious Asajj Ventress, will stop at nothing to ensure that Anakin and Ahsoka fail at their quest. Meanwhile, on the front lines of the Clone Wars, Obi-Wan Kenobi and Master Yoda lead the massive clone army in a valiant effort to resist the forces of the dark side.', 112, 1, 402119, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3020, 'The Untold Stories', 'A sneak peek into the brand new stories, vehicles, planets and battles of season one of Star Wars: The Clone Wars', 112, 4, 1281351, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3021, 'A New Score', 'Composer Kevin Kiner pushes the envelope to create new themes and unique musical styles for the many Star Wars: The Clone Wars worlds and characters in episodes to come.', 112, 5, 1281361, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3022, 'The Voices of The Clone Wars', 'The animated characters perform side by side with a split screen view of the actors in the studio and the matching final animation.', 112, 6, 1281371, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3023, 'Webisode 1: Introducing Star Wars The Clone Wars', 'Introducing Star Wars: The Clone Wars.', 112, 15, 1281481, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3024, 'Webisode 2: Epic Battles', 'A detailed look at the epic battles within Star Wars: The Clone Wars', 112, 16, 1281491, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3025, 'Webisode 3: The Clones are Coming', 'A detailed look at the clone troopers within Star Wars: The Clone Wars.', 112, 17, 1281501, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3026, 'Webisode 4: Heroes', 'A detailed look at the heroes within Star Wars: The Clone Wars.', 112, 18, 1281511, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3027, 'Webisode 5: Villains', 'A detailed look at the villains within Star Wars: The Clone Wars.', 112, 19, 1281521, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3028, 'Webisode 6: Anakin''s Padawan', 'A detailed look at Ahsoka Tano in Star Wars: The Clone Wars.', 112, 20, 1281531, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3029, 'Season 3 Sneak Peek', null, 112, 21, 2825811, 291);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3030, 'Holocron Heist', 'A lesson learned is a lesson earned.

In order to obtain a Jedi Holocron from the Jedi Temple, Cad Bane hires a bounty hunter to help him. Once inside, Bane must deal with Ahsoka and the rest of the Jedi order.', 112, 1, 532351, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3031, 'Cargo of Doom', 'Overconfidence is the most dangerous form of carelessness.

Anakin and Ahsoka have Cad Bane cornered over the planet of Devaron. Upon entering the ship, Cad Bane cunningly gets Anakin to open the Holocron.', 112, 2, 532361, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3032, 'Children of the Force', 'The first step to correcting a mistake is patience.

Darth Sidious has a new dark assignment: kidnap Force-sensitive children from across the galaxy and bring them to Mustafar.', 112, 3, 1147951, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3033, 'Senate Spy', 'A true heart should never be doubted.

Padme is asked by the Jedi Council to look into a Separatist conspiracy dealing with the Senate. ', 112, 4, 1186351, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3034, 'Landing at Point Rain', 'Believe in yourself or no one else will.

Anakin, Ahsoka and Ki-Adi-Mundi lead a landing party to destroy a droid factory on Geonosis. ', 112, 5, 1191431, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3035, 'Weapons Factory', 'No gift is more precious than trust.

Luminara and Anakin act as decoys to divert new enemy super tanks, while Padawans Barriss Offee and Ahsoka attempt to destroy a Separatist droid factory.', 112, 6, 1258111, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3079, 'Nomad Droids', 'Who''s the more foolish, the fool or the fool who follows him?

C-3P0 and R2-D2 encounter danger at every turn when they visit two hostile worlds and have a run-in with pirates.', 112, 6, 4153389, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3036, 'Legacy of Terror', 'Sometimes, accepting help is harder than offering it.

When Luminara goes missing, Obi-Wan and Ki-Adi-Mundi lead a platoon of clones in search of her. When the search leads to a mysterious lair, the Jedi are faced with a horde of undead warriors.', 112, 7, 1271141, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3037, 'Brain Invaders', 'Attachment is not compassion

When Geonosian brain worms take control of their supply ship, Ahsoka and Barriss must battle to stop the vessel from unleashing the deadly plague upon the galaxy and the clones. ', 112, 8, 1366491, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3038, 'Grievous Intrigue', 'For everything you gain, you lose something else.

A Jedi Master is taken hostage and tortured by General Grievous. Anakin, Obi-Wan and Adi Gallia devise a daring rescue plan, but they soon realize the General has a plan of his own.', 112, 9, 1371171, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3039, 'The Deserter', 'It is the quest for honor that makes one honorable.

After escaping to the planet Saleucami, Grievous searches for a ship to get offworld. Meanwhile, Rex is wounded by a commando droid sniper and meets a deserter at the farm where he takes shelter.', 112, 10, 1412531, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3040, 'Lightsaber Lost', 'Easy isn''t always simple

When a wily pickpocket steals Ahsoka''s lightsaber, she enlists the help of an ancient Jedi to track down her weapon and reclaim her honor.', 112, 11, 1550581, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3041, 'The Mandalore Plot', 'If you ignore the past, you jeopardize your future.

Diplomacy or deception? The Council of Neutral Systems speaks for over 1,500 worlds who want to stay out of the war. But rumors have reached the Republic Senate suggesting that the Council''s new leader -- Duchess Satine of Mandalore -- is secretly building her own army to fight for the Separatist cause!

Now, Jedi Master Obi-Wan Kenobi has been sent to Mandalore to discover the truth behind these claims…', 112, 12, 1550591, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3042, 'Voyage of Temptation', 'Fear not for the future, weep not for the past.

As the Jedi and their clones defend Duchess Satine from assassination attempts, Anakin discovers that Obi-Wan and the Duchess have a history together.', 112, 13, 1668181, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3043, 'Duchess of Mandalore', 'In war, truth is the first casualty.

On Coruscant, Duchess Satine is framed for the creation of a Mandalorian terrorist group. On the run from Republic authorities, Satine and Obi-Wan set off to discover the group''s true origins.', 112, 14, 1668191, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3044, 'Senate Murders', 'Searching for the truth is easy. Accepting the truth is hard.

When a Senator dies under suspicious circumstances, Padmé sets out to find the person responsible.', 112, 15, 1668201, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3045, 'Cat and Mouse', 'A wise leader knows when to follow.

A highly seasoned strategist stands between the Republic fleet and beleaguered Republic forces on Christophisis. Anakin finds himself in command of an advanced prototype stealth ship with orders to ferry supplies to the weary troops on the planet below. Will he obey orders, or use the stealth ship to launch a sneak attack on the Separatist blockade? ', 112, 16, 1725761, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3046, 'Bounty Hunters', 'Courage makes heroes, but trust builds friendship.

Hondo Onaka has returned! Anakin, Obi-Wan and Ahsoka must team up with bounty hunters to stop his raids against a town of innocent spice farmers.', 112, 17, 1771741, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3047, 'Zillo Beast', 'Choose what is right, not what is easy

The Republic''s newest droid-disrupting weapon awakens a monstrous, near-invincible Zillo Beast from its underground hibernation. The Jedi face a dilemma: save the beast as the last specimen of its kind, or help the Dugs kill it and secure a treaty for critical fuel supplies? ', 112, 18, 1992481, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3048, 'The Zillo Beast Strikes Back', 'The most dangerous beast is the beast within.

When the Zillo Beast is brought back to Coruscant in hopes of learning the secret of its impenetrable armor, it instead breaks loose and rampages across the city-planet. As the clones prepare to kill it with poison gas, the Jedi are again trapped in a moral conflict between the value of its life and that of the planet''s civilian populace', 112, 19, 1992491, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3049, 'Death Trap', 'Who my father was matters less than my memory of him.

A young boy wages war against the Jedi Knights who left him orphaned, bitter and alone. Along the way, he enlists the aid of some of the galaxy''s most ruthless and deadly bounty hunters.', 112, 20, 1992501, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3050, 'R2 Come Home', 'Adversity is friendship''s truest test.

Anakin Skywalker and Mace Windu are trapped in the crumbling ruins of a crashed ship while searching for survivors, and only R2-D2 can get out a message to save them... if he can elude vicious gundarks and, worse yet, a crew of determined bounty hunters led by Boba Fett and Aurra Sing. ', 112, 21, 1992511, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3051, 'Lethal Trackdown', 'Revenge is a confession of pain.

While Anakin and Mace Windu recover from their injuries, Plo Kloon and Ahsoka chase Boba Fett from the underworld of Coruscant to the planet Florrum. Boba''s revenge scheme finally leads to a climactic battle, and the life of a Republic admiral hangs in the balance.', 112, 22, 1992521, 292);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3052, 'Clone Cadets', 'Brothers in arms are brothers for life.

Five headstrong clone cadets of Domino Squad struggle to complete their training on the ocean planet of Kamino. Unable to work together as a team, they must learn to embrace their future as soldiers before they are drummed out of the academy. Their trainers, Bric, El-Les, and Jedi Master Shaak Ti control their fate.', 112, 1, 2240111, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3053, 'ARC Troopers', 'Fighting a war tests a soldier''s skills, defending his home tests a soldier''s heart.

After receiving important insider intelligence data warning of a Separatist attack on Kamino, Obi-Wan Kenobi and Anakin Skywalker arrive to save this important stronghold of the Old Republic. With a startling surprise, the ingenious General Grievous, exotic Asajj Ventress and the dreaded droid machine military attack Kamino with the goal to end Kamino''s ability to create new clone troops.', 112, 2, 2825051, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3054, 'Supply Lines', 'Where there''s a will, there''s a way.

Ryloth is under siege. Trapped on the surface, Jedi Master Di rallies the local forces with the help of Cham Syndulla. Desperate to save them, Senator Bail Organa and Representative Jar Jar Binks are dispatched to the planet of Toydaria, where they must convince the King Katuunko to send aid.', 112, 3, 2825061, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3055, 'Sphere of Influence', 'A child stolen is a hope lost.

Chairman Papanoida''s family is kidnapped and held for ransom. Ahsoka must team up with the Senator from Pantora, Riyo Chuchi, to aid the new chairman in recovering his family before the Trade Federation can unduly influence the future of his planet.', 112, 4, 2825071, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3056, 'Corruption', 'The challenge of hope is to overcome corruption.

Padmé, on a diplomatic mission to Mandalore, guarantees the pacifist planet the Republic''s full protection, but she and Duchess Satine soon find something sinister lurking beneath the planet''s serene facade.', 112, 5, 2858561, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3057, 'The Academy', 'Those who enforce the law must obey the law.

Ahsoka is assigned to teach a class at the cadet academy on Mandalore. Soon after she arrives, Duchess Satine''s zealous nephew and his classmates uncover a nefarious plot.', 112, 6, 2858571, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3080, 'Darkness on Umbara', 'The first step towards loyalty is trust.

The clones face a deadly mission to take control of the Umbaran capitol while under the temporary command of Pong Krell.', 112, 7, 4153390, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3058, 'Assassin', 'The future has many paths – choose wisely.

Tasked to protect Senator Padmé Amidala during a political mission to Alderaan, Padawan Ahsoka Tano is plagued by recurring visions of the recently-deceased bounty hunter, Aurra Sing.', 112, 7, 2858581, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3059, 'Evil Plans', 'A failure in planning is a plan for failure.

Look out Threepio! While on an important shopping trip on Coruscant, C-3PO is kidnapped by the sinister bounty hunter Cad Bane in a dastardly plot to free Ziro The Hutt. Can R2-D2 help his counterpart escape in time to warn the Jedi?', 112, 8, 3040671, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3060, 'Hunt for Ziro', 'Love comes in all shapes and sizes.

The Hutt Council is after Ziro. But the Hutts aren''t the only ones! Will they catch up with the treacherous Hutt, or can Obi-Wan Kenobi and Jedi Master Quinlan Vos bring him to justice?', 112, 9, 3040681, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3061, 'Heroes on Both Sides', 'Fear is a great motivator.

Padme Amidala and Ahsoka Tano travel to Raxus in an attempt to forge a peace agreement with Separatists. As Padme enlists the help of a former mentor, Mina Bonteri, Ahsoka learns some valuable lessons about the realities of war.', 112, 10, 3040691, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3062, 'Pursuit of Peace', 'Truth can strike down the spectre of fear.

Senators Padme Amidala, Bail Organa, and Onacanda Farr come under fire for opposing a bill that would appropriate funds for millions of new clone troopers, but cripple the Republic.', 112, 11, 3040701, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3063, 'Nightsisters', 'The swiftest path to destruction is through vengeance.

Darth Sidious orders Count Dooku to eliminate his apprentice, Asajj Ventress. Ventress survives Dooku''s assassination attempt, and flees to the planet of Dathomir to enlist her kinswomen - the mystical Nightsisters - to assist her in a campaign of vengeance against her former master.', 112, 12, 3436841, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3064, 'Monster', 'Evil is not born, it is taught.

When Count Dooku calls upon the Nightsisters seeking a replacement for Ventress, she and her kin seize the opportunity to exact revenge. Ventress visits the far side of Dathomir and the males of the planet seeking the most brutal and powerful warrior among them. Through their witchcraft, the Nightsisters transform Savage Opress into a monstrous killer designed to turn on his new master.', 112, 13, 3472601, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3065, 'Witches of the Mist', 'The path to evil may bring great power, but not loyalty.

Anakin and Obi-Wan, sent to track down the mysterious figure behind the deaths of several Jedi, soon find themselves on the trail of the monstrous apprentice that Ventress has created: Savage Opress. However, Dooku and Ventress also discover that this new apprentice has a will of his own...', 112, 14, 3472721, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3066, 'Overlords', 'Balance is found in the one who faces his guilt.

A mysterious force draws Anakin, Obi-Wan and Ahsoka to a distant planet, and its inhabitants -- a family of exceptionally powerful Force-wielders -- in an attempt to determine whether Anakin is truly the Chosen One.', 112, 15, 3472731, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3067, 'Altar of Mortis', 'He who surrenders hope, surrenders life.

Before the Jedi can leave Mortis, the Son takes Ahsoka captive in an attempt to entice Anakin into joining him to use their combined strength to overpower his Father and Sister. To this end, the Son casts Ahsoka under the spell of the dark side.', 112, 16, 3472751, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3068, 'Ghosts of Mortis', 'He who seeks to control fate shall never find peace.

The Jedi remain stranded on Mortis, and the Son aligned with the dark side of the Force renews his efforts to convert Anakin as the Jedi prepare for a decisive confrontation.', 112, 17, 3674851, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3069, 'The Citadel', 'Adaptation is the key to survival.

Obi-Wan Kenobi and Anakin lead a rescue team deep into a heavily guarded Separatist prison in an effort to rescue a captive Jedi, but they get trapped by droids and are introduced to the ruthless warden dedicated to preventing anyone''s escape.', 112, 18, 3674861, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3070, 'Counterattack', 'Anything that can go wrong will.

With freed prisoners in their possession and the brutal warden attempting desperately to thwart them, Obi-Wan and Anakin search for a way out of the Citadel and back to Coruscant. The prison, however, has more traps, perils and pitfalls in store for them than they had imagined and they must work past their differences if they are to escape. Their bid to board their shuttle fails when heavy weapons fire destroys the escape craft. Trooper Echo dies in the blast. The escapees then flee to the caves and call for rescue from the Jedi Temple on Coruscant.', 112, 19, 3674871, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3071, 'Citadel Rescue', 'Without honour, victory is hollow.

After their ship and only way off the planet is destroyed, Anakin and Obi-Wan must lead the escaped prisoners across Lola Sayu''s perilous landscape as Plo Koon commands a task force of four cruisers and their fighters through the Separatist defenses in a daring rescue. Even Piell is ravaged by anooba tracking beasts, but before he dies, he passes on his Nexus Routes coordinates to Ahsoka. When the survivors return to Coruscant, Ahsoka knows half the intel, and refuses to disclose it to anyone but the Jedi Council, while Tarkin refuses to hand over his half to anyone other than the Chancellor.', 112, 20, 3674881, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3072, 'Padawan Lost', 'Without humility, courage is a dangerous game.

Ahsoka finds herself trapped on a Trandoshan moon, prey in an elaborate and cruel hunt.', 112, 21, 3674891, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3073, 'Wookiee Hunt', 'A great student is what the teacher hopes to be.

As Ashoka and her allies struggle to evade the Trandoshan hunters, their efforts receive an unexpected boost when a new captive, Chewbacca the Wookiee, arrives.', 112, 22, 3674901, 293);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3074, 'Water War', 'When destiny calls, the chosen have no choice.

When the king of Mon Cala is assassinated, talks break down between the Mon Calamari people and the Quarren, co-inhabitants of the aquatic world. To stop a civil war, the Republic sends Padmé Amidala and Anakin Skywalker, but unbeknownst to them, the Quarren are already being backed by the Separatists. Now the Jedi must protect Mon Cala''s new leader, the young Prince Lee-Char, from the attack.', 112, 1, 4153384, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3075, 'Gungan Attack', 'Only through fire is a strong sword forged.

Anakin Skywalker and the rest of his Jedi team have been overrun by the Separatist surprise attacks led by Riff Tamson while Prince Lee-Char and Ahsoka must evade capture on their own. Unable to summon more Republic aid, Yoda calls upon the help of the powerful and amphibious Gungan Grand Army, but whether they will be enough to stop the Separatist siege is uncertain. An incensed Tamson doubles his efforts in tracking down Prince Lee-Char, unleashing the reinforcements given to him by Count Dooku in an assault that churns the oceans.', 112, 2, 4153385, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3076, 'Prisoners', 'Crowns are inherited, kingdoms are earned.

The Republic and Gungan forces have been captured by Riff Tamson and his Karkarodon enforcers. Now, it is up to Ahsoka and the young Prince Lee-Char to unite the fractured people of Mon Cala and drive out the Separatist invaders.', 112, 3, 4153386, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3077, 'Shadow Warrior', 'Who a person truly is cannot be seen with the eye.

Jar Jar must fill in for Boss Lyonie and sway his people from rising against the Naboo.', 112, 4, 4153387, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3078, 'Mercy Mission', 'Understanding is honoring the truth beneath the surface.

A mission to save the planet Aleen and its people is launched by the droids.', 112, 5, 4153388, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3175, 'Episode 2', null, 116, 2, 393356, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3081, 'The General', 'The path of ignorance is guided by fear.

General Krell orders Captain Rex and the clone troopers of the 501st legion to conquer a heavily fortified Umbaran airbase, and will not accept anything less than victory.', 112, 8, 4153391, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3082, 'Plan of Dissent', 'The wise man leads, the strong man follows.

After the Republic conquers an Umbaran airbase, General Krell orders Rex and his men on towards the heavily fortified capital. Realizing there''s a better plan, several clone troopers disobey orders to carry out a rogue, covert operation. ', 112, 9, 4153392, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3083, 'Carnage of Krell', 'Our actions define our legacy.

With two of his men facing execution for disobeying orders, Captain Rex is forced to confront his overly aggressive commander, General Krell, in the conclusion to the action-packed battle for Umbara. Risking charges of mutiny, Rex must make a dark choice as the true face of the enemy emerges.', 112, 10, 4153393, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3084, 'Kidnapped', 'Where we are going always reflects where we came from.

Zygerrian slavers are behind the sudden disappearance of an entire colony of people on the planet Kiros. As Anakin and Ahsoka rush to defuse a series of bombs planted by the slavers, Obi-Wan must fight with their imposing leader.', 112, 11, 4153394, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3085, 'Slaves of the Republic', 'Those who enslave others, inevitably become slaves themselves.

To locate the missing colonists, Anakin, Obi-Wan and Ahsoka go undercover to infiltrate the slavers on Zygerria. Anakin struggles with his emotions as a wily Zygerrian queen forces him to take questionable actions in order to carry out his mission.', 112, 12, 4153395, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3086, 'Escape from Kadavo', 'Great hope can come from small sacrifices.

Anakin tries to convince the Zygerrian Queen that she too is a slave and pawn in an evil Separatist plot. Meanwhile, Obi-Wan toils in the slave camps of Kadavo, a grim situation that grows increasingly bleak.', 112, 13, 4153396, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3087, 'A Friend in Need', 'Friendship shows us who we really are.

Peace talks between the Republic and the Separatists are interrupted by Lux Bonteri, who accuses Count Dooku of murdering his mother. Rescued by Ahsoka from Separatist custody, Bonteri involves her in his risky plan to avenge his mother''s death - by revealing Dooku''s location to the Mandalorian splinter group Death Watch.', 112, 14, 4153397, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3088, 'Deception', 'All warfare is based on deception.

Obi-Wan fakes his own death and goes undercover in a Republic prison, in order to gather information on a plot to kidnap Chancellor Palpatine from a convict named Moralo Eval. While there, he learns that another prisoner, notorious bounty hunter Cad Bane, is also involved. Anakin seeks vengance over the death of his former master.', 112, 15, 4153398, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3089, 'Friends and Enemies', 'Keep your friends close, but keep your enemies closer.

Having escaped from prison, Obi-Wan, Cad Bane, and Moralo Eval flee across the galaxy, pursued by Anakin and Ahsoka. Obi-Wan must devise a way to get the information about the kidnapping plot to his fellow Jedi without blowing his cover.', 112, 16, 4153399, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3090, 'The Box', 'The strong survive, the noble overcome.

Moralo Eval brings Cad Bane and Obi-Wan Kenobi (disguised as Rako Hardeen) to Count Dooku''s palace on Serenno. Along with ten other bounty hunters, Kenobi and Bane are placed in The Box, a massive cube filled with deadly challenges, designed by Eval himself to whittle down the galaxy''s twelve greatest bounty hunters to an elite team of five to carry out the plan to kidnap Palpatine.', 112, 17, 4153400, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3091, 'Crisis on Naboo', 'Trust is the greatest of gifts, but it must be earned.

Supreme Chancellor Palpatine goes to Naboo guarded by Jedi knights, meanwhile Cad Bane, a disguised Obi-Wan and a pack of bounty hunters put their plan into action.', 112, 18, 4153401, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3092, 'Massacre', 'One must let go of the past to hold on to the future.

Count Dooku is determined to have revenge against the Nightsisters of Dathomir after their betrayal with Savage Opress. General Grievous launches an all-out droid attack against the magic-wielding witches, and Mother Talzin trys to convince Asajj Ventress to rejoin the Nightsisters after she left years ago. Ventress and Mother Talzin lead the defense with all the dark powers at their command.', 112, 19, 4153402, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3093, 'Bounty', 'Who we are never changes, who we think we are does.

An aimless Asajj Ventress joins a team of bounty hunters under the leadership of young Boba Fett. On an alien world, they undertake a dangerous but profitable mission that tests the limits of their skills, and the strength of Asajj’s character.', 112, 20, 4153403, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3094, 'Brothers', 'A fallen enemy may rise again, but the reconciled one is truly vanquished.

Savage Opress finally finds his long lost brother, and it turns out to be the resurrected Darth Maul, who''s living in a state of madness on an Outer Rim planet.', 112, 21, 4153404, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3095, 'Revenge', 'The enemy of my enemy is my friend.

Fueled by pure hatred, Darth Maul and his brother Savage Opress set out to take revenge on the Jedi who killed him: Obi-Wan Kenobi. Kenobi receives the aid of an unlikely ally - Asajj Ventress.', 112, 22, 4153405, 294);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3096, 'Part 1', 'Before Excalibur, before the Knights of the Round Table, before Arthur, Guinevere, Lancelot and Galahad, there was a Sorcerer Shrouded in the mists of Avalon...and this is his Tale.', 113, 1, 393237, 295);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3097, 'Part 2', 'In the Dark Ages, Merlin the magician finds himself in opposition to Queen Mab and her cohorts', 113, 2, 393238, 295);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3098, 'Merlin - The Return', null, 113, 1, 427213, 296);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3099, 'Merlins Apprentice', null, 113, 2, 427214, 296);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3100, 'Making of Merlin', null, 113, 3, 6036865, 296);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3101, 'Great big Britain', 'Jamie''s back with a new bee in his bonnet. After campaigning for better school meals for the nation''s children, he''s set to tackle what we''re eating at home. And it''s not pretty.
"I''ve been to Soweto and seen kids in AIDS orphanages eat better than this," says a shocked and saddened Jamie. 

He''s starting his campaign in Rotherham, a city of fast food junkies and set to become the fattest region in Britain. His mission, to teach mums the basics for healthy home cooking, get them to teach their friends and get the menfolk cooking too. 

Will Jamie''s catering crusade take off or are his dreams just pie in the sky?', 114, 1, 393290, 297);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3102, 'Come on you Cookers', 'It''s episode 2 in Jamie''s quest to get the people of Rotherham cooking. To speed up the project, Jamie heads to Rotherham United football club in search of hungry men. It''s the last match of the season, a sunny bank holiday and there are 5000 vocal locals here to cheer on their team. Jamie''s hoping this will be the perfect place to find some new recruits but as he heads out to address the braying crowds his confidence begins to fail. 

"You fat bastard, you fat bastard," chants the crowd - proving not everyone''s familiar with the phrase involving a pot, a kettle and a few choice words. Oh well Jamie, when all else fails, give ''em free grub. 

But an hour and 180 steak sarnies later only 98 men have signed up. "Unless it involves a chip pan he''s no chance," is one man''s thoughtful prediction. "We like us chips in Rotherham."', 114, 2, 393291, 297);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3176, 'Episode 3', null, 116, 3, 393357, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3177, 'Episode 4', null, 116, 4, 393358, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3178, 'Episode 5', null, 116, 5, 393359, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3179, 'Episode 6', null, 116, 6, 393360, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3180, 'Episode 7', null, 116, 7, 393361, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3103, 'Jamie does a Cheggars', 'It''s episode 3 in Jamie''s quest to get Rotherham cooking but after weeks of campaigning the recipe crusader is still not sure if the public are getting the message. He needs to know if his recipes are being passed on. Time to do a Cheggers and knock on some doors. 

"It''ll probably freak the hell out of people," he admits as he saunters up his first garden path. Probably best not to try and flog them a cookbook. 

The good news is everyone''s pleased to see him. The bad news is nobody''s heard of his Ministry of Food. Jamie was hoping that by this stage 10 per cent of the city would have heard about the campaign. So far this morning he hasn''t found anyone.', 114, 3, 398020, 297);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3104, 'Pass it on....Please!', 'Jamie is five months into his experiment to get Rotherham cooking and by now tens of thousands of cooks should have passed on his simple recipes to family and friends. But they haven''t. 

If Jamie''s going to convince councils across the country to fork out for their own Ministry of Food, he''s got a lot of work to do.

"Pass it on has worked, to a degree, well. But I don''t think we''ve achieved enough in Rotherham to go to other places and say look," he muses. 

Jamie needs to drum up interest and fast. It''s time to pound the streets. Again.', 114, 4, 400426, 297);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3105, 'Banana Tarte Tatin', 'This is such a great recipe. The thing I love most about it is how simple it is. 
All you need to do is buy some ready-made puff pastry, split a few bananas in half and get something magical happening in the oven! 

You just have to be extremely careful when you flip it out on to a board as hot caramel can burn quite badly. 
It''s best to cover your hand with a tea towel and make sure you concentrate on what you''re doing. 
And if you don''t like bananas, try using apples or pears.', 114, 1, 4145597, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3106, 'Chicken Chow Mein', 'This dish makes use of a tender, juicy Asian cabbage called bok choi, which is simple to cook and really tasty. You should be able to find bok choi (also known as pak choi, Chinese white cabbage or hakusai) in your supermarket but if not, then a nice little gem lettuce or a handful or two of baby spinach would work well instead
', 114, 2, 4145598, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3107, 'Fish Pie', 'This is a fantastically simple fish pie which doesn’t involve poaching the fish or making a tedious white sauce. Loads of good, fragrant veg are added quickly by grating them in. You can use whatever fish you like, making this as luxurious as you want it to be. If you like your fish pie to be creamy, feel free to add a few tablespoons of crème fraîche to the fish.
PS Some of the supermarkets now offer lovely packs of different fish and shellfish for using in fish pies. Keep a look-out, and if you buy one you want it to be about 700–750g in weight for this recipe.', 114, 3, 4145599, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3108, 'Everyday Green Chopped Salad', null, 114, 4, 4145600, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3109, 'Meatballs and Pasta', 'Meatballs are fantastic! They’re perfect like this, with a one-minute homemade tomato sauce and spaghetti, but you could also try polenta or simple chunks of fresh crust bread. I like to make meatballs with a mixture of beef and pork, as I think it gives a really wonderful flavour and texture.', 114, 5, 4145601, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3110, 'Mini Shell Pasta With A Creamy Smoked Bacon And Pea Sauce', 'This is one of the dishes I cook for my kids, but to be honest, it’s so good that me and Jools always eat it too! Mini pasta shells are actually meant to be added to soups, but they’re quick and easy to cook, which makes them a good thing to serve with pasta sauces. All in all this should take you no more than five and a half minutes to cook. However, if you decide to go for a bigger type of pasta, remember that it will need more time to cook than these mini shells. ', 114, 6, 4145602, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3111, 'Omelettes', 'Make the perfect omlette in just minutes!
', 114, 7, 4145603, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3112, 'Parmesan Chicken Breasts With Crispy Posh Ham', 'This recipe takes literally minutes to put together. However, in return, what happens in the pan from just a couple of ingredients is an absolute joy and never fails, so it’s a good one to serve if you have guests.', 114, 8, 4145604, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3113, 'Sizzling Beef With Spring Onions And Black Bean Sauce', 'Quick stir fry with beef.', 114, 9, 4145605, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3114, 'Quick Salmon Tikka With Cucumber Yoghurt', null, 114, 10, 4481707, 298);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3115, null, null, 115, 1, 393307, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3116, null, null, 115, 2, 393308, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3117, null, null, 115, 3, 393309, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3118, null, null, 115, 4, 393310, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3119, null, null, 115, 5, 393311, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3120, null, null, 115, 6, 393312, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3121, null, null, 115, 7, 393313, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3122, null, null, 115, 8, 393314, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3123, null, null, 115, 9, 393315, 299);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3124, null, null, 115, 1, 393316, 300);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3125, null, null, 115, 3, 394204, 300);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3126, null, null, 115, 2, 6024687, 300);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3127, null, null, 115, 1, 394195, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3128, null, null, 115, 2, 394196, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3129, null, null, 115, 3, 394197, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3130, null, null, 115, 4, 394198, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3131, null, null, 115, 5, 394199, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3132, null, null, 115, 6, 394200, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3133, null, null, 115, 7, 394201, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3134, null, null, 115, 8, 394202, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3135, null, null, 115, 9, 394203, 301);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3136, 'Part 1', null, 116, 1, 393317, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3137, 'Part 2', null, 116, 2, 393318, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3138, 'Part 3', null, 116, 3, 393319, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3139, 'Part 4', null, 116, 4, 393320, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3140, 'Part 5', null, 116, 5, 393321, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3141, 'Part 6', null, 116, 6, 393322, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3142, 'Part 7', null, 116, 7, 393323, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3143, 'Part 8', null, 116, 8, 393324, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3144, 'Part 9', null, 116, 9, 393325, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3145, 'Part 10', null, 116, 10, 393326, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3146, 'Part 11', null, 116, 11, 393327, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3147, 'Part 12', null, 116, 12, 393328, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3148, 'Part 13', null, 116, 13, 393329, 302);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3149, 'Episode 1', null, 116, 1, 393330, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3150, 'Episode 2', null, 116, 2, 393331, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3151, 'Episode 3', null, 116, 3, 393332, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3152, 'Episode 4', null, 116, 4, 393333, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3153, 'Episode 5', null, 116, 5, 393334, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3154, 'Episode 6', null, 116, 6, 393335, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3155, 'Episode 7', null, 116, 7, 393336, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3156, 'Episode 8', null, 116, 8, 393337, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3157, 'Episode 9', null, 116, 9, 393338, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3158, 'Episode 10', null, 116, 10, 393339, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3159, 'Episode 11', null, 116, 11, 393340, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3160, 'Episode 12', null, 116, 12, 393341, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3161, 'Episode 13', null, 116, 13, 393342, 303);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3162, 'Episode 1', null, 116, 1, 393343, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3163, 'Episode 2', null, 116, 2, 393344, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3164, 'Episode 3', null, 116, 3, 393345, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3165, 'Episode 4', null, 116, 4, 393346, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3166, 'Episode 5', null, 116, 5, 393347, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3167, 'Episode 6', null, 116, 6, 393348, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3168, 'Episode 7', null, 116, 7, 393349, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3169, 'Episode 8', null, 116, 8, 393350, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3170, 'Episode 9', null, 116, 9, 393351, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3171, 'Episode 10', null, 116, 10, 393352, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3172, 'Episode 11', null, 116, 11, 393353, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3173, 'Episode 12', null, 116, 12, 393354, 304);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3174, 'Episode 1', null, 116, 1, 393355, 305);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3191, 'The Long-Awaited Lincoln Memorial Girl''s School', null, 117, 3, 393368, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3192, 'A Hurly-Burly Opening Ceremony', null, 117, 4, 393369, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3193, 'How to Decorate a Room Beautifully', null, 117, 5, 393370, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3194, 'Do You Hate Liars?', null, 117, 6, 393371, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3195, 'A Good Way To Use Gold Coins', null, 117, 7, 393372, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3196, 'A Letter Thrown Away Into The Rubbish Bin', null, 117, 8, 393373, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3197, 'Julia''s Uncle is an Eccentric Person?', null, 117, 9, 393374, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3198, 'I''m Sorry I Betrayed You', null, 117, 10, 393375, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3199, 'I Can''t Believe His Name Was There', null, 117, 11, 393376, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3200, 'A Strange Coincidence', null, 117, 12, 393377, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3201, 'Sallie''s Courageous Challenge!', null, 117, 13, 393378, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3202, 'Was The First Short Story Plagiarized?', null, 117, 14, 393379, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3203, 'A Hot Dog And A Wallflower', null, 117, 15, 393380, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3204, 'A Present From A Quarterback', null, 117, 16, 393381, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3205, 'Unconfessable Heart', null, 117, 17, 393382, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3206, 'A Thanksgiving Dinner Invitation', null, 117, 18, 393383, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3207, 'My Friends, Let''s Sing Together', null, 117, 19, 393384, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3208, 'An Older Classmate', null, 117, 20, 393385, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3209, 'Beauty and Sadness', null, 117, 21, 393386, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3210, 'Snow falling on the Window', null, 117, 22, 393387, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3211, 'Our Different Christmases', null, 117, 23, 393388, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3212, 'As You Like It', null, 117, 24, 393389, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3213, 'New York, My Birthplace', null, 117, 25, 393390, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3214, 'A Bridge to Tomorrow', null, 117, 26, 393391, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3215, 'Being a Tutor is no Easy Task', null, 117, 27, 393392, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3216, 'A Ruthless Order', null, 117, 28, 393393, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3217, 'Full of Memories', null, 117, 29, 393394, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3218, 'Love on a Summer Day', null, 117, 30, 393395, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3219, 'Girls in Full Bloom', null, 117, 31, 393396, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3220, 'A Twilight Meeting at the Station', null, 117, 32, 393397, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3221, 'Feelings That Just Miss Each Other', null, 117, 33, 393398, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3222, 'The Throbbing of My Heart', null, 117, 34, 393399, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3223, 'Loneliness in Youth', null, 117, 35, 393400, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3224, 'In Order to Seize the Day', null, 117, 36, 393401, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3225, 'A Farewell on Christmas Eve', null, 117, 37, 393402, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3226, 'A Sad Proposal', null, 117, 38, 393403, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3227, 'Graduating from the Past', null, 117, 39, 393404, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3228, 'Nice to Meet You, Daddy!', null, 117, 40, 393405, 307);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3229, 'Opening', null, 117, 1, 5642202, 308);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3230, null, null, 117, 2, 5911641, 308);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3231, 'Tiger and Dragon', 'The dragon and tiger have a shocking encounter!', 118, 1, 393406, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3232, 'Taiga and Ryuji', 'What will Taiga and Ryuji decide?', 118, 2, 395522, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3233, 'Your Song', 'Full throttle at both school and work!', 118, 3, 395523, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3234, 'The Look You Had', 'Love began with rejection!', 118, 4, 400786, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3235, 'Kawashima Ami', 'Angel of Demon? Ami Kawashima appears!', 118, 5, 403681, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3236, 'True Self', 'The true self is neither angel nor demon.', 118, 6, 403682, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3237, 'Pool''s Open', 'Pool! Swimsuit! Summer is coming!', 118, 7, 403683, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3238, 'Who Is This For?', 'Taiga''s true feelings finally take form?', 118, 8, 403684, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3239, 'When You Go to the Sea', 'A horror surprise scheme!', 118, 9, 410578, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3240, 'Fireworks', 'A summer to be remembered.

', 118, 10, 412417, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3241, 'Ohashi High School Culture Festival 1', 'Being with family is the best?', 118, 11, 414717, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3242, 'Ohashi High School Culture Festival 2', 'The Ohashi High School Culture Festival Finally Begins!', 118, 12, 417478, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3243, 'Ohashi High School Culture Festival 3', 'To Taiga, before everyone else!', 118, 13, 418828, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3244, 'Palm-top Tiger of Happiness', 'Where is Taiga''s happiness?', 118, 14, 422013, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3245, 'Distant Star', 'Student Council Vice President goes insane.', 118, 15, 424920, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3246, 'One Step Forward', 'Emotions run high and clash!', 118, 16, 424937, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3247, 'Mercury is Retrograde at Christmas', 'Angel Taiga appears at Christmas!?', 118, 17, 424938, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3248, 'Underneath the Fir Tree', 'Will important things fix themselves?', 118, 18, 424939, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3249, 'Christmas Eve Party', 'His thoughts and emotions failed to reach', 118, 19, 435432, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3250, 'Stay Like This Forever', 'They both must like each other.', 118, 20, 435506, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3251, 'Can''t Help Myself', 'Can''t help these feelings!', 118, 21, 435507, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3252, 'When You''re Around', 'What path will Ryuji take!?', 118, 22, 440749, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3253, 'Path to Take', 'Judgment Day is coming!', 118, 23, 440750, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3254, 'Confession', 'Will their getaway succeed!?', 118, 24, 440751, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3255, 'Toradora!', 'Two finally become one.', 118, 25, 440752, 309);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3256, 'Toradora SOS! 1', 'Taiga-tan DVD shorts from the Toradora DVDs.', 118, 1, 441319, 310);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3257, 'Toradora SOS! 2', 'Short Toradora DVD clips featuring the Toradora cast eating and discussing various food.', 118, 2, 2686621, 310);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3258, 'Toradora SOS! 3', 'Short Toradora DVD clips featuring the Toradora cast eating and discussing various food.', 118, 3, 2686631, 310);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3259, 'Toradora SOS! 4', 'Short Toradora DVD clips featuring the Toradora cast eating and discussing various food.', 118, 4, 2686641, 310);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3260, 'The True Meaning of Bentou', 'An unaired episode included in the Blu-ray box set.

Kitamura brings a gigantic bentou to school: His parents are on a business trip, so his grandma is taking care of him for the time being. While everyone else is happy to be allowed to eat from this bentou, Takasu considers it a challenge to his own housewife skills; during the following days he tries to make creative special bentous in order to "beat" his mysterious opponent... before he learns what making bentou is ultimately about.', 118, 5, 4225416, 310);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3261, 'El profesor Fontán', 'Franco conoce a Lorenzo. Al principio se niega a colaborar en la custodia del menor, pero la adopción no es optativa, sino obligatoria. Un profesor de literatura (personificado por Luis Machin) asesina a su alumno para robar una novela que él considera "de un verdadero autor, no de un alumno de literatura". Montero se dispone a descubrir el asesinato, y en busca de pruebas descubre una verdad terrible, el profesor Fontan era el asesino a quien habia confiado por unos instantes el cuidado de su hermano Lorenzo. Montero corre una carrera contra el tiempo para salvar a su hermano y atrapar al asesino.', 119, 1, 393407, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3285, 'Ποιος Είναι Αυτός; Μέρος 1ο', null, 120, 15, 475691, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3286, 'Ποιός Είναι Αυτός; Μέρος 2ο', null, 120, 16, 475701, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3287, 'Δεν πας για ψάρεμα;', null, 120, 17, 475711, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3288, 'Με όποια δασκάλα καθίσεις', null, 120, 18, 475721, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3289, 'Το βλέμμα της τίγρης', null, 120, 19, 475731, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3290, 'Θα Ρωτήσω κάποιον που ξέρει', null, 120, 20, 475741, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3262, 'El secreto de Roque Peralta', 'A Franco le dan el puesto de jefe de brigada, por resolver el caso mencionado. Esto complica las cosas, ya que Franco no es una persona muy inteligente y mucho menos capacitada para dirigir. Lorenzo y Mansilla serán de gran ayuda para el desprotegido policía. Una joyería se incendia misteriosamente. El único muerto es el guardia de seguridad del edificio. Pero no todo es lo que parece: Este "guardia de seguridad" resulta ser una persona en mal estado psíquico, a quién dan de alta en el manicomio para involucrar en el crimen. El verdadero crimen lo cometen una responsable del manicomio y un cómplice. Quieren robar una joya.', 119, 2, 393408, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3263, 'El caso del asesino gordo', 'Franco enseña a Lorenzo la explotación que sufren ciertos chicos sobre algunas personas que pretenden de ellos el éxito fácil y lucrar económicamente. Franco lo prepara para la derrota diciendo que este concurso estaba arreglado. Cuando finalizaba el programa Lorenzo descubre algo que es proyectado en sombras y empieza la escena policial, cierran el canal para que nadie entre ni salga. El dueño de un reconocido canal de televisión es asesinado en su departamento. Las únicas características que da el testigo son: "un hombre gordo que rengueaba". Ese "hombre gordo" resultan ser dos hermanos acróbatas rusos que increíblemente unieron sus cuerpos para dar con las características.', 119, 3, 393409, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3264, 'El extranjero solitario', 'Hay un campamento para los hijos de los policías, al que Lorenzo acude, en Los Pinos. Un extranjero es misteriosamente asesinado en el pueblo de Los Pinos. Años después, tras la intriga que recibió Lorenzo al escuchar el relato, el misterio fue descubierto. El extranjero era judío, espía enviado a la argentina para descubrir a los nazis refugiados, uno de estos es el asesino. Al final, Lorenzo y Franco se hacen un poco más amigos.', 119, 4, 393410, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3265, 'La única heredera', 'Un anciano millonario muerto en su propia casa. Habría sufrido una muerte natural, pero la policía investigaría. En medio, ella, la única heredera, una hermosa mujer (Nancy Duplaa) involucrada en una sospecha de asesinato. La mujer resulto no ser la esposa del anciano, sino una cómplice del crimen (heredar el dinero de este). La verdadera mujer había sido asesinada meses antes por el cómplice masculino.', 119, 5, 393411, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3266, 'El loco de la azotea', 'Un francotirador asesina tres víctimas en diferentes lugares. En verdad solo iba por una presa, la segunda. Las otras dos las asesinó para esconder su crimen. Cuando se encontraban en plena investigación aparece una supuesta inspectora que debía pasar algunos días con ellos para evaluar como vivía Lorenzo. Mansilla "contrata" a Marcelita para hacerse pasar por novia de Franco, cubriendo así la presencia materna en el hogar.', 119, 6, 393412, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3267, 'Muerte en escena', 'Los hermanos Montero (Franco y Lorenzo) fueron a ver una obra de teatro. Mansilla había convencido a Franco que invitara a Marcela a salir,pero ella no aceptó debido a que estaba saliendo con el subcomisario Serrano. Terminaron saliendo Franco, Lorenzo, Mansilla y Kamiho. Durante la obra, el protagonista es asesinado por uno de sus compañeros. La bala había sido cambiada por otro de los actores, al que desplazaron del papel principal para poner a la víctima.', 119, 7, 393413, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3268, 'Tiempos difíciles', 'Lorenzo sufre la discriminación y el rechazo por parte de los demás chicos del barrio. Se enamora de una de ellos, llamada Valentina (Laura Anders) y lo invitan a la fiesta de cumpleaños de Valentina. Los chicos lo engañan diciéndole que era una fiesta de disfraces. Es el único que va ridículamente disfrazado (para los demás chicos), de Topo Gigio, convirtiéndose en la burla de todos. Un empresario aparece muerto en una pila de arena en medio de una obra en construcción, con una bala en la espalda. En verdad, al vecino de enfrente se le había disparado un arma, que culminó con la vida del empresario. Cayó desde su departamento, en un camión de volquetes que llevaba arena a dicha obra.', 119, 8, 393414, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3269, 'El grupo de los cuatro', 'El subcomisario Serrano está involucrado en una "mafia" de comisarios. Franco presencia un asalto a dicho subcomisario que termina con un balazo que dejará a el policía como principal sospechoso. Franco y Marcela empiezan a salir juntos, él no se anima a tomar la iniciativa, palabras de Mansilla lo ayudan a enfrentar su miedo al rechazo.', 119, 9, 393415, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3270, 'Capítulo final', 'El capítulo final se televisó por Telefe el jueves 16 de noviembre de 2006 en un horario especial. Se le ofrece a Franco Montero el puesto de subcomisario, que él acepta, y no queda conforme con su primer día de trabajo debido a la cantidad de casos que debía resolver. Entre Mansilla y Lorenzo intentan animarlo para continuar, ayudándolo a organizar a su equipo de detectives y convenciéndolo de que entre todos es posible terminar con la corrupción. Se le ofrece a Lorenzo una beca en un programa para mentes brillantes que se desarrolla en Francia, situación que produce "celos" en Franco e interés por parte de Lorenzo, para hacer este viaje. Lorenzo parte a París y Franco continua como subcomisario.', 119, 10, 393416, 311);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3271, 'Ανήμερα του γάμου', 'Ο Διονύσης είναι ένας χήρος ταβερνιάρης με τρεις γιους και ζει στην Αθήνα. Η  Ελένη είναι μια ζωντοχήρα δασκάλα με δύο κόρες και ζει στη Θεσσαλονίκη. Οι δυο τους αγαπιόντουσαν όταν ήταν νέοι. Μετά τη λήξη των γάμων τους, το παλιό τους αίσθημα αναζωπυρώνεται και αποφασίζουν να παντρευτούν. Η Ελένη μετακομίζει από τη Θεσσαλονίκη στο  σπίτι του Διονύση και  μένουν όλοι μαζί, με τα πέντε παιδιά τους. Από τη συγκατοίκηση  δημιουργούνται πολλά ευτράπελα και ανεξέλεγκτες καταστάσεις. Η Ελένη πιάνει δουλειά στο δημοτικό  της γειτονιάς και έχει μαθητές της τη μικρή της κόρη, Φίφη, και τον μεσαίο γιο του άντρα της, Θανάση, που είναι το μεγαλύτερο πειραχτήρι του σχολείου. Ο διευθυντής του σχολείου, παλιό της φλερτ, δεν μπορεί να χωνέψει ότι την έχασε και πάλι. Ο Σπύρος, ο αδελφός του Διονύση νιώθει κι αυτός αμήχανα μ'' αυτό το γάμο, γιατί η καινούρια κατάσταση επηρεάζει και την ταβέρνα. Μέσα σ'' όλα αυτά, η Ιφιγένεια, μητέρα της Ελένης και γιαγιά των κοριτσιών, που μένει στο διπλανό σπίτι, φροντίζει να κάνει αισθητή την παρουσία της με όλους τους τρόπους. Μετά από μια επεισοδιακή πρώτη νύχτα γάμου, όπου τίποτα δεν πάει όπως το έχει σχεδιάσει ο Διονύσης, η ζωή τους δείχνει ότι πάει να βρει τον κανονικό της ρυθμό. ''Ολα ανατρέπονται, όμως, όταν η μεγάλη κόρη της Ελένης, Εύα, αποφασίζει να επιστρέψει στη Θεσσαλονίκη διότι δεν μπορεί να ζει μακριά από τον φίλο της...', 120, 1, 475551, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3272, 'Ριφιφί στο μπάνιο', null, 120, 2, 475561, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3273, 'Θα έχουμε πάντα το Παρίσι', null, 120, 3, 475571, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3274, 'Ομάδα Ομαδάρα', null, 120, 4, 475581, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3275, 'Αγαπημένο Μου Ημερολόγιο', null, 120, 5, 475591, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3276, 'Να''ταν η ζήλια ψώρα', null, 120, 6, 475601, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3277, 'Η Καλύτερή μου Φίλη', null, 120, 7, 475611, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3278, 'Ψύλλοι στ'' αφτιά μου μπήκανε', null, 120, 8, 475621, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3279, 'Ο Προικισμένος Γιος', null, 120, 9, 475631, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3280, 'Οι Αντίζηλοι', null, 120, 10, 475641, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3281, 'Νίτσα - Ελενίτσα Ελενάκι μου', null, 120, 11, 475651, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3282, 'Απόψε Διασκεδάζουμε', null, 120, 12, 475661, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3283, 'Πλάκα Μου Κάνεις;', null, 120, 13, 475671, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3284, 'Έχουμε Πόλεμο', null, 120, 14, 475681, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4111, null, null, 145, 6, 394556, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3291, 'Είμαι πατέρας ή δεν είμαι;', null, 120, 21, 475751, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3292, 'Άντεξε!', null, 120, 22, 475761, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3293, 'Δεν Είναι Αυτό Που Νομίζεις', null, 120, 23, 475771, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3294, 'Αγόρια...Άσπρο Πάτο', null, 120, 24, 475781, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3295, 'Ξεβρακωθείτε Άφοβα', null, 120, 25, 475791, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3296, '50 Καράτια', null, 120, 26, 475801, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3297, 'Υγεία Να Υπάρχει και όλα τ''άλλα βρίσκονται', null, 120, 27, 475811, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3298, 'Η Θηλυκοποίηση του Πλανήτη', null, 120, 28, 475821, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3299, 'Το Σύνδρομο της άδειας φωλιάς', null, 120, 29, 475831, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3300, 'Ουάου!!!', null, 120, 30, 475841, 312);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3301, 'Αν δεν πάει ο Φώτης στην Μύκονο, ποιος θα πάει;', null, 120, 1, 475891, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3302, 'Γαύροι, Ρουφιάνοι, Κοτόπουλα με Κράνη', null, 120, 2, 475901, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3303, 'Άντρες Είμαστε, θέλουμε να Μαρσάρουμε', null, 120, 3, 475911, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3304, 'Ποιος ήταν ο Μοντγκόμερυ...', null, 120, 4, 475931, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3305, 'Ναι, Πατέρα Ναι!', null, 120, 5, 475941, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3306, 'Φράγματα στη θάλασσα δεν μπορείς να βάλεις', null, 120, 6, 475951, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3307, 'Είναι λεπτή η θέση μου!', null, 120, 7, 475961, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3308, 'Ο X, η Ψ και ο Ζ', null, 120, 8, 475971, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3309, 'Ο Γατόπαρδος κάνει παιχνίδι (έλα στα μπαλάκια!)', null, 120, 9, 475981, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3310, 'Eυλόγησον', null, 120, 10, 475991, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3311, 'Harry Christmas', null, 120, 11, 476001, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3312, 'Σφουγγάρισμα, σφουγγάρισμα, σφουγγάρισμα!', null, 120, 12, 476011, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3313, 'Του βουνού και του λόγγου', null, 120, 13, 476021, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3314, 'Το τέλος του κόσμου', null, 120, 14, 476031, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3315, 'Μαγουλάδες', null, 120, 15, 476051, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3316, 'Υπάρχει σχέδιο', null, 120, 16, 476061, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3317, 'Κο... κο...κο... γκολ', null, 120, 17, 476071, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3318, 'Πόσο κρατάει μια πιπιλιά', null, 120, 18, 476091, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3319, 'Ναι, ναι, αυτό το πράγμα', null, 120, 19, 476141, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3320, 'Γειά χαραντάν και τα κουκιά μπαγλάν', null, 120, 20, 582181, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3321, 'Θα φάει η μύγα σίδερο και το κουνούπι ατσάλι ', null, 120, 21, 582191, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3322, 'Τις μπουγάτσες από πού τις παίρνεις;', null, 120, 22, 582201, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3323, 'Όλα στο κόκκινο', null, 120, 23, 666211, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3324, 'Δεν είναι όλες οι ώρες ίδιες', null, 120, 24, 666221, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3325, 'Είναι υπέροχα! Είναι τρέλα!', null, 120, 25, 666231, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3326, 'Test drive', null, 120, 26, 724141, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3327, 'Πενήντα-πενήντα', null, 120, 27, 724151, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3328, 'Μους καραβίδας με σως κανέλας', null, 120, 28, 754651, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3329, 'Τι κάνεις εσύ εδώ;', null, 120, 29, 816801, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3330, 'Θέλεις;', null, 120, 30, 816891, 313);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3331, 'Τηλεταινία', null, 120, 1, 4567035, 314);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3332, 'El Origen De Roswell', null, 121, 1, 393563, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3333, 'Tortugas En La Barriga', null, 121, 2, 393564, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3334, 'Un Asunto Embarazoso', null, 121, 3, 395542, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3335, 'La Cabina', null, 121, 4, 399294, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3336, 'Mis Memorias', null, 121, 5, 401196, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3337, 'El fin del universo, Dios y la nada', null, 121, 6, 403289, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3338, 'La amenaza de Drungon (1ª parte)', null, 121, 7, 414718, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3339, 'La amenaza de Drungon (parte 2)', null, 121, 8, 414719, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3340, 'La teniente Onil ', null, 121, 9, 414720, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3341, 'Empatía', null, 121, 10, 414721, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3342, 'Misión en la inopia', null, 121, 11, 414722, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3343, '¡Que viene Merche!', null, 121, 12, 414723, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3344, 'El juicio', null, 121, 13, 416674, 315);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3345, 'Tiempos revueltos', null, 121, 1, 1111231, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3346, 'Muñecos diabólicos', null, 121, 2, 1138771, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3347, 'Pasajero del tiempo', null, 121, 3, 1312331, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3348, 'Mi tío', null, 121, 4, 1312341, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3349, 'Viaje al fondo de la mente', null, 121, 5, 1312351, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3350, 'La última frontera', null, 121, 6, 1312361, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3351, 'Lotería solar', null, 121, 7, 1312371, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3352, 'Al rescate', null, 121, 8, 1312381, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3353, 'Cena con los sibaritas', null, 121, 9, 1312391, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3354, 'Caídos y cruzados', null, 121, 10, 1391011, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3355, 'El bucle infernal', null, 121, 11, 1414941, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3356, 'Bajo el éxtasis del placer', null, 121, 12, 1450281, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3357, 'La guerra de los clones', null, 121, 13, 1485191, 316);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3358, 'Samuel L. Jackson & Bill Russell', 'Bill Russell is visited at his Seattle home by actor Samuel L. Jackson, where the two proceed to play golf. Samuel L. Jackson is also given a tour of the home while interviewing the NBA legend.

', 122, 1, 393565, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3359, 'Tom Ford & Jeff Koons', 'Artist Jeff Koons is interviewed by fashion designer Tom Ford, and then takes him on a tour of his studio.', 122, 2, 393566, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3360, 'Brian Grazer & Sumner Redstone', 'Brian Grazer interviews Viacom CEO Sumner Redstone. The two discuss about the evolving media, then Brian Grazer gets taken to a local fish store by Sumner Redstone.

', 122, 3, 393567, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3361, 'Renee Zellweger & Christiane Amanpour', null, 122, 4, 393568, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3362, 'Mario Batali & Michael Stipe', 'Michael Stipe is interviewed by Mario Batali to find out why he, and his songs, are politically motivated.

', 122, 5, 393569, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3363, 'Robert Redford & Paul Newman', 'Paul Newman is interviewed by his The Sting co-star Robert Redford. The two discuss Paul Newman''s acting career, and his love for motor sports.', 122, 6, 393570, 317);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3364, 'Eddie Vedder & Laird Hamilton', 'Eddie Vedder interviews Laird Hamilton. The two talk about their lives, nature and art, as the interview ends backstage at a Pearl Jam concert.

', 122, 1, 393572, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3365, ' Mikhail Baryshnikov & Alice Waters', 'Alice Waters shares her knowledge of food with Mikhail Baryshnikov, as they both talk about art and teaching the community', 122, 2, 393573, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3366, ' Quentin Tarantino & Fiona Apple', 'Quentin Tarantino and Fiona Apple talk about movies and music in Austin, Texas. Quentin takes Fiona on a tour of the set of Death Proof.

', 122, 3, 393574, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3367, 'Isabella Rossellini & Dean Kamen', 'Dean Kamen and Isabella Rossellini discuss the way they help other people, as they try out Kamen''s inventions. Later they take a tour of New York City with the guide dogs Isabella is training.

', 122, 4, 393575, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3561, 'Buster & Morgan', 'Two dogs affect their owners'' love lives. Can Victoria restore marital bliss or will the dogs tear them apart?', 127, 5, 404551, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3368, ' Paul Simon & Lorne Michaels', 'Paul Simon and Lorne Michaels talk about the beginning days of Saturday Night Live, music, and comedy in the show business.

', 122, 5, 393576, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3369, 'Dave Chappelle & Maya Angelou', 'Maya Angelou welcomes Dave Chappelle into her home for the day, and the two talk about comedy and poetry.

', 122, 6, 393577, 318);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3370, 'Sean Penn & Jon Krakauer', 'Actor Sean Penn and best-selling author Jon Krakauer. ', 122, 1, 393578, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3371, 'Alicia Keys & Ruby Dee', 'Alicia Keys and Ruby Dee walk through Harlem. ', 122, 2, 393579, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3372, 'Mike Myers & Deepak Chopra', 'Comedian Mike Myers meets with author Deepak Chopra in New York to consider the importance of humor in one''s individual quest for peace and happiness. ', 122, 3, 393580, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3373, 'Howard Schultz & Norman Lear', 'Producer Norman Lear and Starbucks Chairman Howard Schultz discuss creative entrepreneurship. ', 122, 4, 393581, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3374, 'Wynton Marsalis & John Besh', 'Musician Wynton Marsalis and Chef John Besh on the importance of New Orleans in their life and work, and the city''s enduring cultural influence.', 122, 5, 393582, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3375, ' Madeleine Albright & Ashley Judd', 'Madeleine Albright and Ashley Judd discuss their recent work with organizations promoting democracy and health in developing countries.', 122, 6, 393583, 319);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3376, 'Desmond Tutu & Sir Richard Branson', null, 122, 1, 1618121, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3377, 'Stella McCartney & Edward Ruscha', null, 122, 2, 1618131, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3378, 'Tony Hawk & Jon Favreau', null, 122, 3, 1618141, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3379, 'Bill Maher & Clive Davis', null, 122, 4, 1618151, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3380, 'Venus Williams & Wyclef Jean', null, 122, 5, 1618161, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3381, 'Cameron Diaz & Cameron Sinclair', null, 122, 6, 1618171, 320);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3382, 'Oscar Special', null, 122, 1, 4423766, 321);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3383, 'Charlize Theron + Jane Goodall ', 'Dr. Jane Goodall welcomes Charlize Theron to the Tchimpounga chimpanzee sanctuary. Theron works with young people of South Africa on AIDS prevention.', 122, 1, 4423767, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3384, 'Lenny Kravitz + Lee Daniels ', 'Lenny Kravitz and Producer/Director Lee Daniels discuss their collaborations on the Oscar-winning film PRECIOUS and the Civil Rights drama SELMA.', 122, 2, 4423768, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3385, 'Hugh Jackman + Jean-Georges Vongerichten ', 'Actor Hugh Jackman and world renowned chef Jean-Georges Vongerichten discuss their creative processes, the importance of family and taking risks.', 122, 3, 4423769, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3386, 'Cate Blanchett + Tim Flannery ', 'Cate Blanchett shows eco-scientist Tim Flannery the Sydney Theatre Company, then they visit the nearly extinct Komodo dragon at the Sydney Zoo.', 122, 4, 4423770, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3387, 'Ron Howard + Steve Nash ', 'Director Ron Howard and the Phoenix Suns'' Steve Nash share a mutual love of filmmaking and sports, watch film dailies and play a game of one-on-one.', 122, 5, 4423771, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3388, 'David Blaine + Chuck Close ', 'Artist Chuck Close and legendary illusionist David Blaine show how they manipulate reality and ignore accepted limits to create awe-inspiring work.', 122, 6, 4423772, 322);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3389, 'James Franco & Marina Abramovic', null, 122, 1, 4423773, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3390, 'Judd Apatow & Lena Dunham', null, 122, 2, 4423774, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3391, 'Seth McFarlane & Norah Jones', null, 122, 3, 4423775, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3392, 'Christy Turlington Burns & Tory Burch', null, 122, 4, 4423776, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3393, 'Jamie Oliver & Paul Smith', null, 122, 5, 4423777, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3394, 'Kareem Abdul-Jabbar & Chuck D', null, 122, 6, 4423778, 323);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3395, 'Soldier Stories', 'Young men shipped off to war would never return. Forensic experts work to tell their stories. ', 123, 1, 393584, 324);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3396, 'Dead Men Do Talk', 'It does not matter if it is minutes or years after the crime. These experts work to tell the stories of the victims.', 123, 2, 393585, 324);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3397, 'Deadly Chemistry', 'Poison is the killers choice. These experts work to solves the cases of the present and the past. ', 123, 3, 393586, 324);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3398, 'Mind Hunters', 'Psychological Profiling: Take a trip into the minds of the worst society has to offer. Every detail tells FBI Profiler Robert Ressler what he needs to know . . . to catch the killer.', 123, 1, 393587, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3399, 'Camera Clues', 'Forensic Photography: The unforgiving eye of the camera is there at the scene to catch the clues when a crime first happens. Who takes what the camera has to say and turns it into useable information?', 123, 2, 393588, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3400, 'Double Helix', 'DNA Analysis: Your DNA can either convict you or set you free. These experts use anything from blood to chewing gum to find the answers they need.', 123, 3, 393589, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3401, 'Web of Clues', 'Forensic Entomology: Bug have been around for millions of years. Their habits surrounding death can tell these experts when the victim died.', 123, 4, 393590, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3402, 'Faces of Tragedy', 'Forensic Sculpting: These experts can take nothing more than their knowledge, clay, and a skull and bring the victim to life. Once nameless victims can now have a name.', 123, 5, 393591, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3403, 'Without A Trace', 'Missing Person: In America nearly 1.8 million people are reported missing each year, factor in the world and that number triples. Using computer databases and other means victims are found, laid to rest…or never seen again.', 123, 6, 393592, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3404, 'Burning Evidence', 'Identifying Burned Remains: Murder is hard to prove with no body, when the victim has been burned it is even more difficult. Fire does more than destroy evidence . . . it can keep the secrets you don’t want anyone to know.', 123, 7, 393593, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3405, 'Short Fuse', 'Explosives Investigations: A woman opens a box which explodes killing her. Soon to follow are five other bombs just as deadly as the first. This soon turns into a massive investigation leaving the experts to sift though the evidence.', 123, 8, 393594, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3406, 'Signed In Blood', 'Handwriting Analysis: Every pass of the pencil leaves a little of ourselves behind. Taking the time to evaluate documents can tell the difference between suicide and murder.', 123, 10, 393595, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3407, 'Witness To Terror', 'Black Boxes: A plane plunges toward the ground and upon impact little remains. The only possible survivor is the flight data recorder. This little black box could hold the answers to the last terrifying minutes.', 123, 11, 393596, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3408, 'Trial of the Century', 'Forensics in the O.J. Simpson Murder Trial: The verdict is in Not Guilty of murder. O.J. Simpson emerges a free man. What was the evidence and could it be trusted? These experts break down the evidence could and could not tell us.', 123, 12, 393597, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3409, 'Deadly Target', 'Ballistics: A body with a gunshot wound to the head, the gun is next to the body. Was it suicide or murder? Every part of the gun can be analyzed for the correct answer. ', 123, 13, 393598, 325);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3410, 'Fatal Compulsion', 'Forensic psychologists delve into the minds of serial killers, explaining why, most often, they can be a friendly neighbor or a tenacious co-worker – the ones who hide their darkness better than anyone else. ', 123, 1, 393599, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3562, 'Jimi & Duke update', 'Were Jimi and Duke finally brought to heel? Watch what happens when Victoria returns to them six months later.', 127, 6, 404555, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3411, 'Bodies of Evidence', 'It is difficult to convict a murderer if the body can’t be found, but forensic science is finding ways to do it. A speck of blood, a piece of a fingernail or a strand of hair may now be enough evidence to prove a murder and capture a killer.', 123, 2, 393600, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3412, 'Shreds of Evidence', 'The tiniest filament can become a mark of distinction in the most singular and intimate of ways. Investigators have come to rely on forensic evidence as fine as a carpet fiber or as innocent as an eyelash to crack difficult cases.', 123, 3, 393601, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3413, 'Seeds of Destruction', 'Plants help provide oxygen and nutrients for existence. In criminal investigations, a simple seedpod can provide the missing link by placing a suspect at a crime scene. Dirt left on shoes, tires or clothes can pinpoint a crime scene.', 123, 4, 393602, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3414, 'Lethal Dosage', 'While drugs can cure disease and ease pain, they can also be agents of murder. Toxicologists can examine blood and tissue to uncover cases where death is not as natural as it may seem – from slow arsenic poisoning to quick cocaine overdoses.', 123, 5, 393603, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3415, 'Tools of Death', 'A tool used to commit a crime can often be the same tool used to solve it. The pattern a machine leaves on an item, the unusual way a tool crimps a wire and even something as innocuous as the shape of a wood chip can lead to a killer.', 123, 6, 393604, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3416, 'Out of the Grave', 'Advancement in science and technology are encouraging people to revisit the past in hopes of answering questions that have remained unanswered. Techniques from the 20th century are applied to cases dating back as far as ancient times.', 123, 7, 393605, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3417, 'Infallible Witness', 'Investigators are always on the cutting edge of new forensic techniques that can help them solve cases more accurately. Advanced techniques allow crime solving to take on a new dimension, providing safer and more efficient ways to capture criminals.', 123, 8, 393606, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3418, 'Living In Terror', 'Because of new technologies, terrorism is a growing international threat. With the expertise of bomb squads, chemists and tool mark experts, bombs are deactivated and criminals are caught.', 123, 10, 393608, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3419, 'From the Ashes', 'Insurance torchings, mob burnouts and arson murders: these crimes are designed to take all clues with them. But a case can be built from ashes. Arson investigators do everything from gathering physical evidence to mounting undercover operations.', 123, 9, 393610, 326);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3420, 'Lethal Obsessions', 'In the mind of an obsessive killer, raw desire replaces all reason and murder becomes an opportune means to an end. While forensic investigators follow the physical evidence, psychologists study the jumbled inner-workings of the criminal mind.', 123, 1, 393613, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3421, 'Traces of Guilt', 'The smallest of clues can solve even the biggest cases. Often the scales of justice are balanced by just a few milligrams of evidence – a couple of fibers, a smudge of blood or a strand of hair. Never underestimate the weight of these tiny clues. ', 123, 2, 393614, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3422, 'Electronic Witness', 'As technology becomes a bigger part of our lives, it’s becoming difficult to do anything without leaving behind an electronic trace. Cell phones and ATMs track our every move. When it comes to solving murders, this isn’t necessarily such a bad thing.', 123, 3, 393615, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3423, 'Dead Wrong', 'Often, murderers will change or stage a crime scene, turning murder into suicide, pinning blame, or hiding the body completely. However, forensic investigators can detect masterful disguises and the truth can be found from clues at the scene. ', 123, 4, 393616, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3424, 'Lasting Impressions', 'No crime scene is absent of clues. No matter how chaotic or how clean it may appear to be, the culprit is bound to leave something telling behind. Sometimes it’s nothing more than a fingerprint or shoe tread. Sometimes that’s all that’s needed.', 123, 5, 393617, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3425, 'Women Who Kill', 'Men aren’t the only ones who kill. Though female killers usually choose less violent methods than their male counterparts, they’re equally as deadly and often more calculating. But thanks to forensics, they’re no more likely to get away with it.  ', 123, 6, 393618, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3426, 'Deadly Dealings', 'Contract killings allow someone to establish the perfect alibi. By hiring someone else to do his or her dirty work, a person can deflect guilt or twist the truth. Forensics is changing that, leading investigators to the employers of killers. ', 123, 7, 393619, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3427, 'Body Count', 'Some people do get away with murder, at least for a while. Flush with their success, they murder again and again. But with each kill, they get sloppier, leaving investigators more and more clues, which eventually lead to their undoing.  ', 123, 8, 393620, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3428, 'A Taste of Poison', 'Poisoners are the most dangerous culprits in the crime world: smart assassins. They rely on their devious stealth and must put their victims at ease to earn their trust. And, usually, they don’t stop at just one victim. ', 123, 9, 393621, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3429, 'Grave Discoveries', 'Some cases can’t be solved immediately. The passage of time can convince people to talk and new technologies can discover overlooked clues. Forensic scientists often reevaluate unsolved crimes and apply new means to solve them.', 123, 10, 393622, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3430, 'Texas Rangers', 'The Texas Rangers were established in the 1800s to protect settlers from Native Americans. That role has evolved greatly over time to keep up with a changing society. Today, their job includes solving murders with advanced forensics labs. ', 123, 11, 393623, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3431, 'Bad Medicine', 'Forensics is not only used to solve murders. Drug trafficking has created a deadly criminal underworld and many forensic investigators are devoted to cracking these violent drug rings. ', 123, 12, 393624, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3432, 'Unlikely Sources', 'Some of the best clues come from the least likely places. Seemingly meaningless objects – beer bottles, insects, doormats – have been used by forensics scientists to solve the most baffling of crimes. The murders of Virginia Russell, Hye-Yon Smith and Janet Overton are evidence of this. ', 123, 13, 393625, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3433, 'True Crime', 'Some crime writers know just as much about crime as a police officer, investigator or any criminal. Using combined perspectives from law enforcement, journalism and criminal psychology, writers provide new and exciting first-hand accounts of murder. ', 123, 14, 393626, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3434, 'Coroner’s Casebook', 'A good coroner can deliver what is necessary to solve a crime, while a bad one can destroy an otherwise solid case. Two of the country’s most respected coroners provide an inside look into their jobs, sharing their insights into crime solving. ', 123, 15, 393627, 327);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3435, 'Remnant of Blame', 'Solutions to atrocious crimes can hinge on the smallest of clues. Even with advanced technology, vision remains an important tool. Forensic investigators must train their eyes to find the full story of a murder written in a single scrap of evidence. ', 123, 1, 393628, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3436, 'Partners in Crime', 'There’s an old saying that a burden shared is a burden halved. But when people team up to commit murder, the weight of their guilt remains just as heavy. Investigators must rely on forensic science to capture partners in crime.', 123, 2, 393629, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3437, 'Scattered Clues', 'There’s never a good reason for murder but some killers are especially cruel – choosing their victims at random or with no apparent motive and then expertly covering their tracks. These crimes may seem unsolvable, but telling clues remain.', 123, 3, 393630, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3438, 'Natural Witness', 'The great outdoors may offer clues to solving heinous crimes. Seed germination and the presence of certain insects provide vital information about murders. It takes the skilled eyes of a forensic entomologist and botanist to decipher nature’s clues. ', 123, 4, 393631, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3439, 'Tainted Trust', 'Poison is the subtlest murder weapon and poisoners are sometimes the most brutal killers, harming their victims over time to disguise the murder. Investigators must see through the unusual circumstances to bring these murders to light. ', 123, 5, 393632, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3440, 'Presumed Dead', 'What does it take to prove murder if the victim cannot be found? Forensic investigators must go to great lengths to catch the killer when the victim is only presumed dead. ', 123, 6, 393633, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3441, 'Broken Vows', 'When lovers turn on each other or marriages fail, some coldblooded spouses find a gruesome way to gain an uncontested divorce: murder. Forensic scientists must piece together the mystery of love gone awry to catch these killers. ', 123, 7, 393634, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3442, 'Cold Cases', 'There’s no statute of limitations on murder, so as a case turns cold and clues become scarce, investigators must rely on modern forensic technology to solve the crimes and catch the killers. ', 123, 8, 393635, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3443, 'Family Plots', 'Every family has its secrets and sometimes blood relations lead to bloodshed. When murder becomes a family affair, investigators must turn to science to uncover family plots.', 123, 9, 393636, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3444, 'Blood Money', 'Some people murder for love, others murder out of hatred. But sometimes people kill for the money. When greed is the motive, investigators must make every clue pay off in these murder-for-profit cases. ', 123, 10, 393637, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3445, 'Murder By Numbers', 'For some killers, once is never enough. Often, cold and calculated serial killings are more difficult to solve than violent crimes of passion. For investigators, the challenge is steep when the killers murder by numbers. ', 123, 11, 393638, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3446, 'A Federal Offense', 'When there’s a difficult case to crack, agents of the Bureau of Alcohol, Tobacco and Firearms can be called in to help. These investigators have the means to tackle crimes involving drugs, arson and weaponry.', 123, 12, 393639, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3447, 'Flames of Justice', 'Sometimes arson fires are set to cover a different, more heinous crime – such as murder. But killers are wrong to think that fire destroys all vital clues. Arson investigators can pull evidence from scorched rubble to ignite the flames of justice.  ', 123, 13, 393640, 328);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3448, 'False Witness', 'Often, the witnesses of a crime are also the main suspects. They’re able to manipulate the truth to throw off the authorities. When a murder is committed and deceit clouds the evidence, investigators turn to forensics to uncover the truth.  ', 123, 1, 393641, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3449, 'Trails of Evidence', 'A simple clue can provide the missing link by placing a suspect at the scene of the crime. Dirt left on shoes, tires or clothes can pinpoint where the crime occurred. It takes the skilled eye of a forensic investigator to follow the trail. ', 123, 2, 393642, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3450, 'Missing', 'Approximately 1.8 million Americans are reported missing each year. Some are runaways who eventually find their way home but others simply disappear without a trace. When foul play is suspected, investigators turn to forensics to find the missing. ', 123, 3, 393643, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3451, 'In the Line of Fire', 'Some people don’t care who they kill; they just want to hurt innocents. Bombers, snipers and spree killers: these murderers are the hardest to catch because they have no connection to their victims, people in the wrong place at the wrong time. ', 123, 4, 393644, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3452, 'For Love or Money', 'Sometimes blood relations lead to bloodshed. When money is the motive, murder can rip at the very foundation of family and marriage. When homicide becomes a family affair, investigators must turn to forensics to shed light on these crimes. ', 123, 5, 393645, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3453, 'Left at the Scene', 'Even the most puzzling cases can be solved with the tiniest of residue left behind at the crime scene. Trace evidence and paint analysis can be used to track down a serial killer or dog hair can be used to link separate murders to a single suspect. ', 123, 6, 393646, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3454, 'Invisible Death', 'Poison is an almost invisible form of death and is often interpreted as a heart attack or underlying health issue. But when foul play is suspected, toxicologists must look for hidden clues in blood and tissue to bring these murders to light. ', 123, 7, 393647, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3455, 'To Kill Again', 'Some people do get away with murder, at least for a while. Thrilled by their success, they tend to kill again and again. But with each crime they leave behind more clues for investigators. In this episode, two serial killers are profiled. ', 123, 8, 393648, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3456, 'Written in Bone', 'At the scene of a murder, sometimes the only clues to the killer come from the victim. Forensic anthropologists use skeletal remains to decipher the clues written in the bones to bring the murderers to justice. ', 123, 9, 393649, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3457, 'Cold Blooded', 'Time of death is an important consideration in an investigation but when a killer destroys the body, even the best medical examiner would be at a loss about how to calculate death''s time frame. Forensics has its own techniques for solving these crimes.', 123, 10, 393650, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3458, 'Fatal Error', 'Accidental deaths, suicides, disappearances and fires: they’re an everyday part of an insurance investigator’s job.  But these cases shouldn’t be taken at face value. Forensics has become a vital tool in exposing insurance fraud. ', 123, 11, 393651, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3459, 'Dead in the Water', 'Drowning deaths often look like accidents and over time water can destroy the few clues the killer may have left behind. Investigators must turn to forensic science to solve homicides in which the victims were found in bodies of water. ', 123, 12, 393652, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3460, 'Scent of the Kill', 'A dog can be a dead man’s best friend. Some dogs have been trained by law enforcement to sniff out corpses, drugs, explosives and missing persons. Even with advances in science, a dog’s nose is often first to find fundamental clues. ', 123, 13, 393653, 329);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3461, 'Bloodlust', 'For homicide investigators, it’s a race against time when they track their deadliest foe: a serial killer who murders to feel alive. ', 123, 1, 393654, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3462, 'Deadly Aim', 'When a killer turns a gun on a victim, ballistic analysis is key to cracking the case.  Each shot fired leaves behind its own clues, allowing scientists to target murderers with deadly aim.', 123, 2, 393655, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3463, 'Stolen Identity', 'When theft is committed, something valuable is stolen. But when a criminal needs a new identity, theft becomes lethal.', 123, 3, 393656, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3464, 'Silent Witness', 'Sometimes, seemingly small and insignificant clues – three hairs, microscopic fibers, a paint chip – become a victim’s silent witness and help solve even the most baffling of cases. ', 123, 4, 393657, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3465, 'Deadly Intentions', 'When abduction turns to murder, forensic science is a vital key to finding justice for the victims of a kidnapper’s deadly intentions. ', 123, 5, 393658, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3466, 'Patterns of Guilt', 'The tread of a tire, a single shoe print or even the shape of a bruise can help investigators track down murderers.', 123, 6, 393659, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3467, 'A Deadly Smile', 'Investigators rely on forensic odontology – the examination of dental evidence – to identify a body from a single tooth and to catch two ruthless killers from their bite marks. ', 123, 7, 393660, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3468, 'Military Justice', 'The law enforcement agency of the United States Navy and Marine Corps uses forensic science to solve perplexing murders and fulfill their motto: “To the living we owe respect; to the dead, we owe the truth.”', 123, 8, 393661, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3469, 'The Unforgotten', 'Years after a murder has been committed, investigators use modern technology and advanced DNA analysis to shed new light on crimes that have gone unpunished for far too long. ', 123, 9, 393662, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3470, 'Tainted Blood', 'Forensic scientists find clues written in blood as they investigate the murders of three women who were killed by men who once loved them. ', 123, 10, 393663, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3471, 'Buried Secrets', 'The elements of nature can reduce a body to bones in a matter of weeks. Combining art and science, forensic anthropologists can give victims a face long after they’ve been forgotten. ', 123, 11, 393664, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3472, 'Proof Of Innocence', 'Sometimes, the wrong people are punished for crimes they did not commit. Forensic scientists use DNA analysis to overturn convictions of these innocent men and women who have spent years behind bars.', 123, 12, 393665, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3473, 'Drawing Conclusions', 'A teenager is abducted on a shopping trip. Two hikers go missing on the Appalachian Trail. A grandmother never returns home from work. Forensic artists turn witness statements into pictures to recreate the face of their killers. ', 123, 13, 393666, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3474, 'Stranger Than Fiction', 'A millionaire is murdered for a stash of buried treasure. A young woman dates violent men, only to be killed by her best friend. When real crimes are stranger than fiction, forensic science can sort fact from fantasy. ', 123, 14, 393667, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3475, 'Predators and Parasites', 'For the forensic entomologist, insects that nest in corpses are like witnesses to the crime. By studying their behavior, scientists learn everything -- from when a murder was committed to what sort of weapon was used. ', 123, 15, 393668, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3476, 'In the Camera’s Eye', 'Photography has long been a fundamental tool in homicide investigations. A single image can hold enough information to identify a suspect and preserve vital clues long after a witness’s memory fades. ', 123, 16, 393669, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3477, 'Wasted Youth', 'When teenagers are driven to kill, their victims are not the only ones to suffer from their violent crime. In three such cases, the families of the killers and their communities become victims of these young criminals.', 123, 17, 393670, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3478, 'Collective Justice', 'Philadelphia’s Vidocq Society, named after an 18th century French detective, is one of the world’s most unusual crime-solving organizations – a members-only club made up of forensic professionals. Witness these sleuths solve impossible cases. ', 123, 18, 393671, 330);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3479, ' Murder for Hire', 'For some killers, murder can be a lucrative business. When a victim has been targeted for death, investigators must dig deep and go beyond the obvious to uncover a murder for hire.', 123, 1, 393672, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3480, 'Toxic Death', 'Sometimes the cause of death does coincide with the scene of the crime. When an untraceable poison is used as a murder weapon, investigators rely on forensic toxicologists to follow a killer’s tracks and expose a toxic death. ', 123, 2, 393673, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3481, 'Elements of Murder', 'A murdered woman is found stuffed in the boot of her car, and a routine investigation reveals a wife may not have abandoned her family on purpose. When everyday substances reveal hidden clues that break a homicide case, those substances become the elements of murder.', 123, 5, 393674, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3482, 'Grave Secrets', 'Killers often will try to cover up their crime by hiding the remains of their victims. Sometimes bodies may lay hidden for years before they are discovered. That’s when forensic scientists are called upon to reveal buried clues. ', 123, 7, 393675, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3483, 'At Close Range', 'When a victim is killed at point-blank range, police often suspect that a friend or acquaintance is to blame, because for a stranger it would otherwise prove too difficult. Investigators must use the clues to track down the most unlikely killers. ', 123, 8, 393676, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3484, 'Lethal Encounter', 'In most murder cases, police rely on motive to pursue a killer. But when the murderer is a stranger, the crime may go unsolved for years.  Investigators must employ an arsenal of forensic techniques to trace these seemingly random lethal encounters. ', 123, 9, 393677, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3485, 'Crimes of Passion', 'When killers are driven by jealousy, rage and desire, their desperation is evident in both the crime and their efforts to cover their tracks. But forensic science can reveal even the smallest mistake to solve these crimes of passion.', 123, 10, 393678, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3486, 'Marked for Death', 'Often killers are careful to not leave any fingerprints behind. But the methods of the murder itself can leave a lasting impression on authorities, especially when the tools of a killer’s trade leave a victim marked for death.', 123, 12, 393679, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3487, 'Forsaken Trust', 'When victims of murder knew their killers, they can be caught off guard. The killers rely on their intimate knowledge to pull off the perfect crime. But even the best-laid plans leave traces of the forsaken trust.', 123, 17, 393680, 331);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3488, 'Hidden Obsessions', 'Sometimes those closest to a victim can be the most dangerous. Beneath a layer of trust can lurk a deadly obsession. In these cases, authorities employ an arsenal of forensic techniques to uncover the twisted path of lies that leads to murder. ', 123, 1, 393681, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3489, 'Blind Trust', 'Often, a killer will build the victim’s trust before he or she attacks. In this episode, New Mexico police search for a missing teenager who disappeared from a local skating rink. Authorities suspect the two friends she was last seen with. ', 123, 2, 393682, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3490, 'Fatal Impressions', 'Sometimes the faintest fingerprint or tire track is all investigators need to solve even the most brutal of crimes. When a woman’s body is discovered in a field, detectives employ a rarely used technique to bring her killer to justice.  ', 123, 4, 393683, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3491, 'Misplaced Loyalty', 'A house fire in California turns into a murder investigation when authorities discover that the victim’s best friend and personal manager had recently cleaned out her bank account. ', 123, 5, 393684, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3492, 'Silent Killers', 'When money is the motive, there is no limit to what a killer will do to get away with their fortune. When officers find the dismembered remains of a young man, they also discover his girlfriend recently took out an insurance policy on the deceased. ', 123, 7, 393685, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3792, 'Top Dog', 'The four remaining cast mates must bond with creatures of fur and feather.', 133, 24, 5361433, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3493, 'Killing Time', 'A killer will often try to disguise the victim’s body in an attempt to the hide the actual cause of death; however, forensics cannot be fooled. In this episode, authorities use reverse DNA testing to identify remains and solve an old crime. ', 123, 6, 393686, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3494, 'Out To Kill', 'Sometimes, cooperation from people who are not associated with a crime in any way is the only link between a criminal and the clues left behind for forensic experts. This episode examines cases in which good Samaritans help solve puzzling crimes. ', 123, 8, 393687, 332);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3495, 'B...low Job', 'DK fancies Sky, but will his unusual seduction techniques - a mix of chocolate, rap and breakdancing - succeed? Meanwhile, it''s essay time, and Matt steals Chloe''s essay to make sure he gets a good grade.', 124, 1, 393607, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3496, 'Dick And Fanny', 'Matt and Chloe are in the school play together and have to kiss. Chloe is excited, but Matt''s nerves get the better of him.', 124, 2, 393609, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3497, 'I Suck Coppers', 'Driving home from an impromtu party in Chloe''s bedroom, DK gets pulled over by a policeman. He tries to avoid being done for drink-driving by swallowing a load of copper coins. When bits of his body start going green, DK is delighted - at last he''s got something truly special to show the girls. Chloe agrees to go out with Matt, but only if he starts eating a healthy diet.', 124, 3, 393611, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3498, 'We Have Been Naughty, Haven''t We?', 'Jas dumps Ollie after a blazing row and then seizes the opportunity to get back at him by offering his best friend, Matt, what he desperately wants - pity sex.', 124, 4, 393612, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3499, 'Up the Botty', 'Jas is desperate to experiment sexually in Ollie''s mother''s bed while she is out at work.', 124, 5, 400088, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3500, 'Pussy Boy', 'Chloe decides she is ready to have sex with Matt, just as long as her parents approve. ', 124, 6, 401611, 333);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3501, 'Pilot', null, 124, 1, 397834, 334);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3502, null, null, 124, 3, 1858101, 334);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3503, 'Behind the Scenes', 'Behind the scenes interviews.', 124, 2, 1858111, 334);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3504, 'Rudies', 'Ollie refuses to get a tetanus jab after falling on a nail. DK causes havoc with a ventriloquist''s doll and Chloe demands Matt makes amends for blabbing about their sex life. ', 124, 1, 1540511, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3505, 'Who Killed Alec the Dwarf?', 'The gang decide to perform a radio play for their general studies course, written and directed by Ollie. However, the power goes to his head and he ends up sacking them hours before it''s about to go on air. Can Matt save the day? ', 124, 2, 1588661, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3506, 'French Rs', 'DK gets a job as a nude life model. Chloe and Matt decide to spice up their sex life. Ollie falls in love with the new French teacher, driving Jas mad with envy and into the arms of another man. The music played by the principal is "Congratulations" by Cliff Richard. ', 124, 3, 1588671, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3507, 'Black Eye', 'In a series of flashbacks, DK explains to the principal how he got his black eye. In the meantime, the friends pull together to stop Ollie discovering Jas''s slip up with Horace. ', 124, 4, 1588681, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3508, 'Lederhosen Hero', 'Chloe is enraged after she and Matt are turned away from the cinema when they attempt to see Sex Fart 3. Ollie and Jas decide to find a new common interest that doesn''t involve sex, and DK is suffering from dreams about the Principal.', 124, 5, 1711111, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3509, 'Doreen', 'DK makes friends with Doreen, a delinquent pensioner with a penchant for kissing strangers and blowing up ducks. Chloe handcuffs a warring Ollie and Jas and refuses to set them free until they make friends. Matt tries to learn all he can about Chloe in 24 hours.', 124, 6, 1711131, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3510, 'Monster', 'Ollie has chest pains which he thinks are the result of his split with Jas. The principal is replaced by the monstrous Captain Gannet. Chloe and DK hatch a plan to restore order to Wooton College.', 124, 7, 1749041, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3511, 'Live Or Die', 'Ollie visits purgatory, where an angel disguised as DK offers him the chance to live, die or simply cease to exist at all. The rest of the gang huddle round his hospital bed waiting to see if he''ll awake from his coma.', 124, 8, 1749051, 335);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3512, 'Kissy Woo!', 'We''re back at Wooten College and things are right where we left off. DK is still doing everything in his power to aggravate Mr De Wilde and Ollie and Jas are still separated, though not for long if Ollie has anything to do with it.

Matt has made a new friend, Robyn Crisp, who he spends all his time with. However, Chloe is in for a shock when she finally meets them. How will she and the rest of the gang take to a new addition to their friendship group?
', 124, 1, 3112641, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3513, 'Badvert', 'Enrolment at Wooten College is at an all-time low, so the principal decides to hold a competition for all the students to enter. They must all make an advert for the college, with a first place prize of 500 pounds.
Ollie and Matt team up against Chloe and Jas, though their adverts reveal that they are not as different as they may think. DK and Robyn team up, forging a bond between the two of them. But the good times are about to be disrupted by a face from DK''s past. ', 124, 2, 3547281, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3514, 'My Idiot BF', 'Ollie believes he may be the next big thing in the art world as he bares his bottom art to the world, with the support of his muse, Jas. DK can''t believe his luck with his dad Jim back in his life and things really starting to look up.
Jim is a professional poker player and it looks like he may soon make enough to support DK and his mum. However, trouble may be afoot when he asks his trusting son for a favour. ', 124, 3, 3547291, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3515, 'Robbery', 'Having lost his mum''s engagement ring, DK is distraught and tells the principal about everything that has happened. However, the gang are on hand to help DK get the ring back. Realising they could never raise the cash needed to buy it back, they plan to rob the local pawn shop, but they are going to need some unusual disguises. Jaz and Oille end up in Jail, Matt and DK go into hiding and Robin and Chloe go on the run. ', 124, 4, 3675371, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3516, 'Dib Dib Dib', 'After much reluctance the principal finally agrees to let Mr Palmer sign DK up to his scouting group for boys. Jas is excited as she launches her modelling career and Ollie is terrified he will lose her as she jets off around the world on glamorous assignments. However, his fears are put to rest when he spots her modelling in the local shopping centre. Tensions between Matt and Chloe come to the fore as the two have to seriously consider their future together.', 124, 5, 3675381, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3517, 'Penguin', 'Following Matt and Chloe''s break-up, Chloe is at a loss while Matt finds himself caught up in a gang who love nothing more than gentle humour. Ollie''s foul-mouthed Aunty Olwen has come to stay with him, much to Jas''s concern. And DK finds a gun.', 124, 6, 3675391, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3518, 'Lesbian Jumper', 'Love is in the air as Matt develops quite a penchant for older women. Can a romance with Vera, a 70-year-old cleaner, really last? DK and Robyn are off to a lesbian bar in an attempt to get Robyn into the gay dating scene, thought it seems DK is more popular with the ladies than he thought.', 124, 7, 3675401, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3559, 'Pixie & Tyson', 'Doggy demons threaten to deafen the family''s new baby and a husband has not slept in the marital bed for over a year because of the dogs.', 127, 3, 404549, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4112, null, null, 145, 7, 394557, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4113, null, null, 145, 8, 394558, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3519, 'Fear Itself', 'Ollie has finally committed to giving up alcohol, much to the amazement and delight of the rest of the gang. Inspired by his brave move to conquer his fear, the gang decide that they will all support him by overcoming one of their own fears. Jas will learn to be a proper actor, Matt will learn new words, Chloe will face her fear of ghosts, Robyn takes the first steps to facing her fear of dying a virgin and DK must befriend his old enemy Mr De Wilde.', 124, 8, 3675411, 336);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3520, 'The Bluff is Called', 'Blitzkrieg
World War Two is declared and Hitler''s Luftwaffe employs revolutionary new aircraft and tactics in the Blitzkreig attacks on Poland and Scandinavia that precede the German invasions.
Aircraft Featured: JU87B, Hurricane, Spitfire, BF109, BF110, HE111, JU53 and DO17. ', 125, 1, 393688, 337);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3521, 'The Plunge Into Reality ', 'The Battles of France and Britain
New fighting techniques using newly developed aircraft were unleashed over Britain and France by both the Allies and the Axis and would provide a glimpse at the speed and efficiency of what was to come throughout the rest of WWII.
Aircraft Featured: Hurricane, Spitfire, BF109, BF110, JU88, HE111, DO17 & 217, JU87, Bristol Blenheim, Fairy Battle and JU52. ', 125, 2, 393694, 337);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3522, 'Hitler''s Biggest Gamble', 'The Russian Front
Operation Barbarossa and Germany''s failure to bring a quick resolution to that particular campaign was arguably the turning point of the war in Europe.
Aircraft Featured: Polikarpov I-153, Tupolev SB-2, IL-2, PE2, BF109 F & G Models, JU88, JU87, JU52, Sturmovik 1A-5, Yak 9, PO 2 and P39 Aircobra', 125, 3, 393698, 337);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3523, 'Wings of the Rising Sun ', 'The Pacific War
The air war in the Pacific is launched commencing with a surprise attack on Pearl Harbour. This campaign saw the evolvement of carrier based aerial warfare with great battles raging between the aircraft carriers of Japan and the United States.
Aircraft Featured: Mitsubishi Zero, Betty and Type 96 Bomber, Aichi D3A Val, Douglas SBD Dauntless, B25 Mitchell, P40, Wildcat, Hellcat, Corsair and PBY Catalina. ', 125, 4, 393700, 337);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3524, 'The African Tutorial ', 'The Mediterranean Theatre
Britain faced Germany and its Italian allies in the battle for supremacy over the Mediterranean and Northern Africa. American airmen later joined the British in their struggle for Europe.
Aircraft Featured: P40E, CR42 Falco, G50 Frecchia, Fiat G55, Folgore, Hurricane, Wellington, Swordfish, JU87 Stuka, BF109, P38 Lightning, P39 and B25. ', 125, 1, 393702, 338);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3525, 'Germany''s Third and Last Chance ', 'Battle of the Atlantic
The Battle of the Atlantic very nearly brought Britain to her knees and proved to be one of the most crucial campaigns of the war. Deadly weapons including H2S maritime search radar were developed to combat the German U Boat menace.
Aircraft Featured: Fairy Swordfish, FW Condor, Short Sunderland, Lockheed Hudson, PBY Catalina, Liberator, HE111 and Dornier 217. ', 125, 2, 393703, 338);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3526, 'The Biggest Battleground ', 'The War in the Pacific Islands
The Pacific War with Japan reached a crucial turning point with the Battles of Guadalcanal and New Guinea. Japanese expansion in the Pacific region was halted for the first time and the tide slowly began to turn.
Aircraft Featured: Hellcat, Wildcat, Corsair, Zero, G4M Betty, Val, P40, Dauntless, Avenger, P38, B17 and C47 Dakota. ', 125, 3, 393704, 338);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3527, 'The Cost of Incompetence', 'The Allied Dominance in the Pacific
America and the Allied forces set their sites on the home islands of Japan and in doing so liberated much of the Japanese held Pacific. Japan, however struck back with a terrifying new weapon - the Kamikaze attack.
Aircraft Featured: Hellcat, B17, B24, B25, P38, P47, C47, F4, P39, P40, Corsair, Helldiver, Zero, Avenger and B29. ', 125, 4, 393705, 338);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3528, 'Round the Clock Bombing ', 'The Allied Bombing Campaign of Germany
After Britain''s somewhat faltered start to the bombing campaign of Germany in 1940 and the entry of the United States into the war the allies quickly developed precision area bombing into a highly effective assault with incredibly devastating results.
Aircraft Featured: B17, Wellington, Hampden, Whitley, Stirling, Halifax, Lancaster, BF109, FW190 and BF110. ', 125, 1, 393706, 339);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3529, 'Air Superiority Lost and Won ', 'Allied Might versus German Technology
The combined day and night bombing of German cities was chiefly responsible for turning the tide of the air war against Germany. Germany''s response was a case of too little too late with the development of a highly sophisticated night fighter force and the introduction of Jet and Rocket powered fighters.
Aircraft Featured: P38 Lightning, Mosquito, HE219 Owl, Lancaster, P51 Mustang, BF110, Typhoon, ME262, Arado 234 and ME163. ', 125, 2, 393707, 339);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3530, 'True Airpower ', 'Firebombing of Japan and the Atomic Bomb
In 1994, the major cities of Japan were targeted in a firebombing campaign that would climax with the dropping of the Atomic Bomb and days later, the surrender of the Japanese.
Aircraft Featured: B29 Superfortress, B26, F13 and P51 Mustang Featuring rarely seen aerial combat footage of all the major combat aircraft types from the World War II period. ', 125, 3, 393708, 339);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3531, 'The Fighters ', 'The Evolution of the Fighter in World War II
The World War Two period saw the development of the fighter aircraft from the biplane through to the introduction of the first jet fighter aircraft.
Aircraft featured in this volume include the Mustang, Spitfire, Hurricane, BF109, BF110, P40, P38 and Zero. ', 125, 1, 393709, 340);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3532, 'The Bombers ', 'The Evolution of the Bomber in World War II
Never before had the bomber been needed and used so effectively than in World War Two. It''s necessity brought forward it''s evolution from simple twin engined medium bombers through to the four engined radar equipped super bombers like the B29 Superfortress and Lancaster.
Aircraft featured in this volume include the Lancaster, Mosquito, Wellington, B17, B24, B25, B26, HEIII, DO17, JU88, Val, Kate and Betty. ', 125, 2, 393710, 340);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3533, 'Return to the Pacific', 'Focuses on the role of air support in the allied roll back and advances against the multiple layered Japanese defenses in the Pacific Oceans. Surveys the Pacific War in the Central and Southwest Pacific Ocean theaters, with brief mentions of land combat and major focus on air contributions to reducing Imperial Japanese control of land and sea.', 125, 3, 4680051, 340);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3534, 'Battle Over the Sea', 'Surveys air power as it impacted the desperate Battle of the Atlantic (1939–1945) against the WW-II U-Boat threat and the War in the Pacific Theatres. Land based bombers include Lancaster and B-24 long range bomber patrols, development and deployment of airborne radar systems and Radio Direction Finding electronic warfare developments, and the advent of the Escort Carrier.', 125, 4, 5305137, 340);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3535, 'Is Torture A Good Idea?', 'Clive Stafford Smith is a British lawyer who has represented American prisoners on Death Row and, more recently, detainees in Guantanamo Bay.
In this programme, he reveals the abuses suffered by Guantanamo detainees and talks to experts in the field of torture, including CIA and US Army veterans. The programme examines cases of false confessions extracted under torture, suggesting that torture is useless as well as being repugnant and illegal.
', 126, 1, 393767, 341);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3560, 'Bumble & Dougal', 'A mother and daughter are trapped in their home by two out of control Old English Sheepdogs. Unable to leave them, both women yearn to change their own lonely lives.', 127, 4, 404550, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3536, 'The Guantanamo Guidebook', 'According to George Bush, ''torture is never acceptable''. The interrogation techniques used in Guantanamo Bay have been calibrated to fall short of a legal definition of ''torture''. However, legal experts say they do still constitute torture. The Guantanamo Guidebook reconstructs the regime at the US''s Cuban base. For 48 hours, seven volunteers are subjected to interrogation techniques known to be used in the camp, ranging from harassment and abuse to sensory deprivation - with shocking results.', 126, 2, 393768, 341);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3537, 'The Dirty Business', 'Torture is a multinational industry - but its headquarters is in the USA. In this programme Andrew Gilligan examines the CIA''s practice of abducting terrorist suspects and transferring them to states such as Egypt and Syria, where torture is routine. The programme also exposes the British government''s refusal to condemn the use of torture by the government of Uzbekistan, for the sake of the ''evidence'' it produces: ''selling our souls for dross'', in the words of the former British ambassador', 126, 3, 393769, 341);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3538, 'America''s Brutal Prisons', 'This programme shows that abuses like those documented in Abu Ghraib are commonplace in the USA''s overcrowded and understaffed prisons. Prisoners are shackled and hooded ''for their own protection''; pepper spray is used as an alternative to physical force, but in sufficient quantities to cause second-degree burns; beatings are frequent and sometimes fatal. The programme suggests that the cause is not a few ''bad apples'', but a pervasive culture of dehumanisation and brutality.', 126, 4, 393770, 341);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3539, 'Jimi & Duke', 'Victoria helps a family of desperate pet owners get their misbehaving dogs Jimi and Duke under control.  She meets a couple whose house has been taken over by their two lusty Labradors’  humping, chewing, pulling, fighting, food stealing and running away, and decides the best course of action is a trip to the vet’s for castration.', 127, 1, 404528, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3540, 'Menagerie', 'Victoria comes to the rescue of Karen Holder’s family and friends, who have taken second place to her six manic dogs who are being fed ice cream and cookies.  The animals’ incessant barking and bad behaviour have caused the household’s visitors dwindle over the years and now the family is under the trheat of eviction.  Meanwhile, Karen’s son Shaun is becoming the butt of his school friends’ jokes because of the pet hairs covering his clothes.', 127, 2, 404529, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3541, 'Teddy Pom-Pom', 'Pomeranian Teddy and Pekingese Prince Louis are a vicious biting duo that defend their home and the marital bed, biting anyone who dares to cross their path.  Victoria tries to discipline two tiny canines who attack anyone who comes near them, with the man of the house getting bitten every night as he attempts to get into bed.  Terrible behaviour has left the owners fearing their pets may be in line for a visit from the local dog warden with an order for their destruction.', 127, 3, 404530, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3542, 'Pongo', 'Victoria Stillwell brings her expertise to bear on Pongo, a Dalmatian who thinks he owns the house and has numerous behavioural problems, least of which is his penchant for stealing everything in sight – including the family’s beer.  The pooch has claimed the sofa as his own, guards his space furiously and bites anyone who dares challenge him.', 127, 4, 404531, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3543, 'Lilly', 'Lily the barking Bichon has a big attitude and a fierce hatred of the mailman.  Victoria comes to the aid of a couple who are on the verge of breaking up because of their attention-seeking bichon frise, which uses the whole house as a toilet and gives its owners endless sleepless nights.  She realises the problem stems from the husband and wife’s different attitudes toward the pesky pooch.', 127, 5, 404532, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3544, 'Diesel', 'Victoria tries to tame the wild ways of Siberian husky that is tearing his owners’ relationship apart.  Nine-month old Diesel’s initial playfulness has turned into dangerous aggression, biting and mauling.  Victoria is forced into drastic action in a bid to prevent the wolf-like canine from being turned out of the house', 127, 6, 404533, 342);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3545, 'Pugsley', 'Pugsley, a spoiled, frightened Bulldog terrorizes a young family by biting, humping and pooping on their beds.  Victoria comes in to help the three-year old pedigree bulldog, whose disobedience and overactive sex drive create endless headaches for his owners.', 127, 1, 404534, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3546, 'Toadie & Smartie', 'Victoria tries to discipline two misbehaving Great Dane mixes, weighing in at over 110 pounds each.  Having already cost their owners $52,000 over the past six years, the two dogs are treated to gourmet meals every night while the rest of the family make do with frozen dinners.  Meanwhile, exercise is a nightmare for their doting owners as their toleration for other dogs is non-existent.  Can the family continue living with these canine monsters?', 127, 2, 404535, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3547, 'Rufus', 'Victoria attempts to curb the aggressive behaviour of a miniature dachshund. A barking baby-substitute, Rufus has a particular hatred for small children and goes wild at the sight of a stroller.  Its owner’s cat is also on the receiving end, but Victoria is determined to bring the disruptive pet to heel before he divides the family further and pits brother against sister.', 127, 3, 404536, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3548, 'Bailey', 'Bailey an aggressive Yorkshire Terrier causes havoc to a couple’s love life and bullies the governor of a high security prison with a green wellington boot!', 127, 4, 404537, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3549, 'Max', 'Max an ex-military dog suffers with obsessive compulsive disorder. Can Victoria curb his obsession with chasing reflections and shadows?', 127, 5, 404538, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3550, 'Rex', 'A terrier aggressively protects his young owner from her mother – can Victoria change Rex’s potentially dangerous behavior and mend the bond between mother and daughter?', 127, 6, 404539, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3551, 'Talullah', 'A Paris Hilton wannabe buys a viscous accessory that is intent on causing destruction to all visitors. With a long bite history Tallulah the Chinese Crested is living on borrowed time.', 127, 7, 404540, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3552, 'Ben', 'A German shepherd holds an entire family to ransom chasing kids around the house and defending his male owner from all visitors.', 127, 8, 404541, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3553, 'Red & Jasper', 'Two Labradors threaten a new baby with their pushy behavior driving their owner to tears. With no daily exercise the labs are intent on escaping the house – Victoria gives the lazy owners a taste of their own medicine.', 127, 9, 404542, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3554, 'Jilly Johnson', 'Three spoilt and unsocialized Great Danes who have taken over the neighborhood are banned from the nearby village. Can Victoria restore order and tame these large powerful dogs?', 127, 10, 404543, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3555, 'Bailey and Crufts', 'Bailey an out-of-control Shnauzer is trying to win at Crufts – the biggest dog show in the world. Can he beat 22,000 other hopefuls and get ‘Best in Show,’ or will he be disqualified for humping the judge?', 127, 11, 404544, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3556, 'Teddy Pompom update', 'Did Teddy Pom Pom change from demon biter to little Angel? Watch what happens when Victoria revisits the family six months later.', 127, 12, 404545, 343);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3557, 'Jodie Marsh', 'Four peeing, fighting Chihuahuas bully a Bulldog and cause a split between daughter and parents.', 127, 1, 404546, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3558, 'Lucy', 'Separation anxiety and aggression affects a young couple''s plans to move house.', 127, 2, 404548, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3563, 'Bumble & Dougal update', 'Were the Old English sheepdogs tamed at last? Watch how training these dogs led to a proposal of marriage.', 127, 7, 7231977, 344);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3564, 'Widget & Gizmo', 'Two kidnapped Yorkshire terriers are returned to their owners. Can Victoria rehabilitate them and their owners and help them function again after this traumatic experience?
', 127, 1, 404556, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3565, 'Chaos', 'A humping English Bull terrier brings chaos to the household, bullying children and humping anyone in his path. Chaos is the aptly named English bull terrier whose anarchic behaviour and boundless energy are affecting everyone in the house.', 127, 2, 404557, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3566, 'Harvey', 'Two owners struggle with an out-of-control Doberman – but is it Harvey''s fault or is it the owners that need the training?
', 127, 5, 404558, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3567, 'Jed', 'A dangerously aggressive American bulldog''s future hangs in the balance. While the husband is away with the Navy Jed jealously guards his female owner from visitors.
', 127, 6, 404559, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3568, 'Roxy & Rio', 'Fighting, urinating Greyhound sisters wreck household havoc causing arguments and threats of separation between their owners.', 127, 3, 404560, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3569, 'Niles', 'What do you get when a cat lover buys her first dog, a Chihuahua, only because it is the same size as a cat - disaster and an armful of scars!', 127, 4, 404561, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3570, 'Zulu', 'A crazy, jumping, obsessive licking Boxer threatens to tear a couple apart.', 127, 8, 404562, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3571, 'Lottie', 'A hound Houdini intent on running away is living on borrowed time. Rescued from a backyard breeder Lottie compulsively chases her own tail and digs up the back yard.', 127, 9, 404563, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3572, 'Peanut', 'Peanut the pint sized pup has a hatred of the mailman and a penchant for stealing underwear. Bought as a companion for her owner, Peanut is now preventing her from having a love life.', 127, 10, 404564, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3573, 'Toby', 'With five children and six dogs, a couple struggle to control their man hating and biting terrier.', 127, 11, 404565, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3574, 'Molly & Alfie', 'One lazy owner, two terrorizing dogs and a family intervention. Cesar spoils the dogs while his family suffer the consequences of their bad behavior.', 127, 12, 404566, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3575, 'Teo', 'A poop eating, food-stealing Labrador spreads e-coli around the home.', 127, 7, 7232032, 345);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3576, 'It''s Me or the Fat Dog', 'Three families have obese dogs that are at risk of disease or death because of their weight problems. Can Victoria change these owners'' ways and save the dogs from an untimely death?', 127, 3, 7231992, 346);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3577, 'Crufts Special', 'Three dogs compete to qualify for the most famous dog show in the world, Crufts. Will one of them become Best in Show?', 127, 1, 7231997, 346);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3578, 'The Event', 'Walking with Wolves, Woof Fest and a food-obsessed Dalmatian. Victoria comes face to face with a wolf, attempts a world record and helps a family train their food-thief Dally the Dalmatian.', 127, 2, 7232001, 346);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3579, 'Fat Dogs update', 'Did the dogs complete their weight loss plan or did their owners fail them?', 127, 4, 7232006, 346);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3580, null, null, 128, 1, 419730, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3581, null, null, 128, 2, 419731, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3582, null, null, 128, 3, 419732, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3583, null, null, 128, 4, 419733, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3584, null, null, 128, 5, 419734, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3585, null, null, 128, 6, 419735, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3586, null, null, 128, 7, 419736, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3587, null, null, 128, 8, 419737, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3588, null, null, 128, 9, 419738, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3589, null, null, 128, 10, 419739, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3590, null, null, 128, 11, 419740, 347);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3591, 'Avsnitt 1', null, 128, 1, 1169571, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3592, 'Avsnitt 2', null, 128, 2, 1169581, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3593, null, null, 128, 3, 1219641, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3594, null, null, 128, 4, 1243791, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3595, null, null, 128, 5, 1269731, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3596, null, null, 128, 6, 1296921, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3597, null, null, 128, 7, 1296931, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3598, null, null, 128, 8, 1313911, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3599, 'Avsnitt 9', 'Brandmännen håller som bäst på att öva bilbrandsläckning när de får larm om en bil som har fattat eld. Sjuksköterskan Aino bakar kaka ihop med brandmännen och vi får se återblickar på de starkaste ambulans- och polislarmen under sommaren.', 128, 9, 1366761, 348);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3600, 'The Kur Stone Part 1', 'V.V. Argost, host of the popular TV show, Weird World, is after the legendary Kur Stone, which is capable of unleashing the powerful ancient Sumerian cryptid, Kur. With it, V.V. Argost plans to rule the world, so it''s up Doc, Drew and Zak Saturday to stop him.', 129, 1, 393856, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3601, 'The Kur Stone Part 2', 'With two of three Kur Stone pieces now in V.V. Argost''s possession, the Saturday family races to the location of the final stone piece, Manaus, Brazil before Argost can get to it.', 129, 2, 393858, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3602, 'The Vengeance of Hibagon', 'The Saturdays discover a "Bigfoot" like creature in Japan who wants revenge on his creator.', 129, 3, 396382, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3603, 'The Ice Caverns of Ellef Ringnes', 'After disturbing an Inuit chamber, the Secret Scientists accidentally create a giant snowstorm. Along with this snowstorm comes a creature known as an Amarok.', 129, 4, 400965, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3604, 'The King of Kumari Kandam', 'V.V. Argost becomes the new king of an ancient, sunken city that has been resurfaced.', 129, 6, 400966, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3605, 'Guess Who''s Going to Be Dinner?', 'When Zak finds out that a cryptid hunter plans on attacking their headquarters, he comes up with a plan to save the day without ruining Doc and Drew''s anniversary.', 129, 5, 400967, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3606, 'Van Rook''s Apprentice', 'When Drew spots Van Rook''s new apprentice Doyle without his mask on, she wonders if he is really her long-lost brother.', 129, 7, 408946, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3607, 'Twelve Hundred Degrees Fahrenheit', 'When a volcano erupts, a lizard-man known as the Cherufe is released.', 129, 8, 408947, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3608, 'The Owlman Feeds at Midnight', 'When the Saturdays travel to Southern England for information on the Kur Stone, they end up getting involved with a string of disappearances caused by the Owlman.', 129, 9, 417385, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3609, 'The Swarm at the Edge of Space', 'After the Saturdays rescue Agents Epsilon and Francis, space jellyfish attack.', 129, 10, 417386, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3610, 'Eterno', 'When water supplies in the Middle East are inexplicably turning into salt, the Secret Scientists send Drew and Zak to investigate.', 129, 11, 591541, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3611, 'Black Monday', 'When Zak touches the mystic Smoke Mirror of Tezcatlipoca, it unleashes the Monday family, evil doppelgangers of his family with their own unique powers', 129, 12, 591551, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3612, 'Cryptid vs. Cryptid', 'The Saturdays discover the existence of underground cryptid fights run by Leonidas Van Rook. They soon discover that Van Rook isn''t in on this on his own.', 129, 13, 591561, 349);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3613, 'The Underworld Bride', 'The Saturday family and King Ulraj travel to New Guinea to investigate the Dua''a, a prehistoric flying cryptid.', 129, 1, 638401, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3614, 'Ghost in the Machine', 'When Doc is visited by the ghost of his old mentor, Dr. Lancaster, the family travels to Honey Island Swamp to complete some unfinished business.', 129, 2, 682731, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4114, null, null, 145, 9, 394559, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3615, 'Something in the Water', 'The Saturdays discover a hidden city on an African lake.  When the family tries to help the residents of Sanctuary II deal with a cryptid problem, they make a surprising discovery.', 129, 3, 682741, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3616, 'Target: Fiskerton', 'Argost recruits Piecemeal and Van Rook to carry out a special plan.  The Saturdays think that Zak is in danger due to his special cryptid powers, but Argost has designs on Fiskerton instead.', 129, 4, 697321, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3617, 'Once More the Nightmare Factory', 'When the Saturdays invade Weirdworld to rescue Fiskerton, Doyle shows up to lend a hand.  Argost reveals Fiskerton''s Lemurian heritage to Fisk and Doyle, but the family doesn''t yet know.', 129, 5, 728551, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3618, 'Curse of the Stolen Tiger', 'When a sacred blue tiger cryptid is stolen from a remote mountain village, the Saturdays and Wadi must retrieve it in order to restore the villagers'' good luck.', 129, 6, 784311, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3619, 'The Kur Guardian', 'Doyle and Zak help Fiskerton come to terms with his Lemurian heritage.', 129, 7, 784321, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3620, 'Food of the Giants', 'The Saturdays and Abbey go to the Allegheny Mountains to help with a problem caused by the cryptid Allegewi, but Van Rook''s new apprentice shows up to cause trouble for the family.', 129, 8, 830501, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3621, 'The Atlas Pin', 'When Argost steals an ancient relic from Naga, the whole world is threatened.', 129, 9, 830511, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3622, 'Paris is Melting', 'A series of attacks on the Secret Scientists prompt Zak and the family must go on a quest to clear Fiskerton''s name.', 129, 10, 863721, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3623, 'Where Lies the Engulfer', 'When Zak and Doyle go on a training mission in an abandoned town, they make a surprising discovery.', 129, 11, 883281, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3624, 'Shadows of Lemuria', 'The Saturday family call on the para-neurologist Dr. David Bara to find the motivation behind Fiskerton''s strange instinctual behavior, while V.V. Argost sends a Neural Parasite to the Saturdays'' home to extract Kur''s location from the creature''s brain by force.', 129, 12, 916831, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3625, 'Kur Rising', 'Upon arriving in Antarctica, V.V. Argost releases Kur from beneath the ice. The Saturdays battle against Kur, giving Argost the opportunity to sneak inside its body and control it from within. Zak follows Argost inside, pitting his powers against Kur''s might. After a long struggle, Zak manages to overcome Kur, knocking it unconscious. The cryptids formerly under Argost''s control turn on him, forcing Munya to carry him out to safety. Outside of Kur, Doyle uses the Kur-sensing relic to solidify the point that they are near Kur. However, once Zak is expelled from Kur''s body,the glow began to fade. Doyle approaches Zak, and the artifact glows strongly once more—showing that the Antarctic Cryptid wasn''t Kur, but that Zak is actually Kur. ', 129, 13, 1300751, 350);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3626, 'Kur (Part 1)', 'Six months after the Kur crisis, the other Secret Scientists have discovered that Zak is Kur, and are tracking him to take him into custody, forcing the Saturdays into a life as fugitives. To make matters worse, the Nagas are also after Zak, in hopes of making him their new leader. Meanwhile, Doyle and Zon go to England and have a run-in with Leonidas Van Rook (who had just had his buisness overtaken by Abbey) when looking for V.V. Argost, who has mysteriously disappeared. ', 129, 1, 1300721, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3627, 'Kur (Part 2)', 'The Saturdays fight to keep the Nagas and the other cryptids from invading the world. Meanwhile, Doyle, Zon and Leonidas Van Rook are still looking for V.V. Argost. Doyle and Van Rook seem to find evidence that Argost is dead. The Saturdays go to Hong Kong expecting the Nagi invasion to start there but turn out to be wrong. The Nagas are invading New York. After some encouragement, Zak stops the invasion and is saved by a mysterious black shadow. It turns out to be V.V. Argost who offers to (cryptically) teach Zak to better control his powers through Argost''s show, Weird World. Zak accepts the deal, despite knowing that Argost is trying to somehow trick him. Zak also asked Doyle to find out as much about Argost''s past as he can. ', 129, 2, 1300731, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3628, 'The Thousand Eyes of Ahuizotl', 'Upon learning that a cryptid has awakened after centuries of hibernating in the jungle, the Saturdays head to Mexico.', 129, 3, 1327341, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3629, 'Into The Mouth of Darkness', 'The Saturdays set a course for Greenland so they can search for an ancient Sumerian tablet, but the family is forced to take a detour to Australia when the airship gets infested by Bunyips by V.V. Argost.', 129, 4, 1441351, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3630, 'The Legion of Garuda', 'he Saturdays learn about a sect of Indian sorcerers who were able to drive out the spirit of Kur in the past, and they attempt to find them, in hope that group can do it again.  They learned that in order to drive out the spirit of Kur a ritual, using an artifact known as the "Flute of Gilgamesh", must be performed', 129, 5, 1441361, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3631, 'The Return of Tsul ''Kalu', 'The Saturdays return to their headquarters to retrieve tomes from Drew''s library and are ambushed by Tsul ''Kalu, a cryptid whose hand now resides at the end of Zak''s Claw.', 129, 6, 1441371, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3632, 'The Unblinking Eye', 'The Saturdays go to Istanbul to extract the Lake Van Monster. But the operation hits a snag when Epsilon and Francis show up with a proposition for Zak.', 129, 7, 1456411, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3633, 'Life in the Underground', 'Wadi and Ulraj arrive to surprise Zak for his birthday, but the festivities are interrupted by a massive cryptid attack.  The Saturdays make a surprising discovery of their own when Zak learns about the cryptids'' motivations.', 129, 8, 1624461, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3634, 'And Your Enemies Closer', 'Drew reunites with Doyle, Zon, and Van Rook in the Himalayas, where they hope to learn about the orange cryptid that was stolen by Argost.  Meanwhile, Doc, Zak, and Fiskterton attempt to make a deal with the rest of the Secret Scientists.', 129, 9, 1624471, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3635, 'War of the Cryptids', 'Argost launches an attack on Washington, D.C. using an army of Cryptids. Zak must bring together his own Cryptid forces to save Earth.', 129, 10, 1685371, 351);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3636, 'The Beiderbecke Tapes', 'Trevor & Jill meet John the barman who gives them a jazz tape without any jazz on it. At a meeting with Dave the wimp they find out about The Popular Liberation Front of West Yorkshire. John the barman has died but is feeling much better now. The man with no name called Mr. Peterson came to see them. He was followed by the six men in grey suits. Jill goes to see The Oldest Suffragette In Town. Trevor and Jill go on a trip to Amsterdam with their class from "San Quentin High" but miss the boat.', 130, 1, 393869, 352);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3637, 'The Beiderbecke Tapes', 'Trevor and Jill go on a trip to Amsterdam with their class from "San Quentin High" - but the class has decamped. Trevor and Jill meet "The Honourable Order of Elks" who are "looking for a bit of action". Jill & Trevor find their action in Edinburgh. The grey men get attacked by a bagpipe band but Jill & Trevor have to go home where they find that the jazz tape with no jazz wasn''t all it seemed.', 130, 2, 393870, 352);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3638, 'The Adventure Begins', 'Lief begins his journey with Barda to collect the seven gems of Deltora and save the land from the evil clutches of the Shadow Lord.', 131, 1, 393919, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3639, 'Jasmine, Girl of the Forest', 'Lief and Barda are captured by the Wenn, but eventually saved by a girl named Jasmine. The three head to the center of the forest, where they meet Gorl.', 131, 2, 393920, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3640, 'The Golden Knight', 'Lief and Barda attempt to fight Gorl, but fail, with Barda being injured. Again, they are saved by Jasmine who succeeds in killing Gorl. They take the topaz and the elixer.', 131, 3, 393921, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3641, 'The Enigmatic Giant', 'Lief, Barda, and Jasmine much each solve a difficult riddle in order to safely cross a bridge.', 131, 4, 393922, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3642, 'Nij and Doj''s Trap', 'Lief, Barda, and Jasmine stumble upon what appears to be a kind old couple, living in a house in the middle of a swamp. As they walk to the house, they fall in quicksand. The old couple saves them, and takes them into their home. However, they turn out to be Jin and Jod, two of the witch Tegan''s monster children.', 131, 5, 393923, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3643, 'The Monster in the Lake of Tears', 'Lief, Barda, and Jasmine accompany Marasu, a boy of the Rara Tribe to the city of Raradin. They then go to fight the monster of the lake, Sorudein.', 131, 6, 393924, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3644, 'Sorceress Thaegan', 'The fight with Sorudein continues resulting in the red ruby being claimed. The witch Thaegan appears and interrupts the brief moment of hope.', 131, 7, 393925, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3645, 'Tom''s Curious Shop', 'Lief, Barda, and Jasmine continue their journey now with the Topaz and the Ruby. They are chased by some strange wolves and eventually come to Tom''s strange shop.', 131, 8, 393926, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3646, 'Noradz the Clean', 'Lief, Barda and Jasmine awaken in a mysterious city of Nezunuku. The inhabitants are meticulously clean. Filli frightens the people of Nezunuku and Lief and his friends are captured and must play a game of luck to determine if they live or die.', 131, 9, 393927, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3647, 'Escape', 'Lief, Barda and Jasmine manage to escape with the help of a friend and make a shocking discovery about the supposedly imperfect food.', 131, 10, 393928, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3648, 'Cross the River!', 'Lief, Barda and Jasmine discover the location that the mysterious food is being transported too and come into contact with a strange acquaintance. They are provided with several gifts before trying to find passage over a broad river.', 131, 11, 393929, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3649, 'The King of the Rats', 'Now being across the broad river Jasmine decides to leave the group. Lief and Barda continue onto the city of rats only to be confronted by the keeper of the Opal.', 131, 12, 393930, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3650, 'Endon and Jarred', 'Now having left the city of the rats with the opal Lief, Barda and Jasmine are forced to hide from a worth adversary. During this time Lief tells the story of Endon and Jarrad.', 131, 13, 393994, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3651, 'The Stolen Gems', 'Lief continues the story of Endon and Jarrad. He delves into how the belt of Deltora was broken and the gems scattered around the land. We also learn the identity of the spy in the castle doing the shadow lords bidding.', 131, 14, 393995, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3652, 'Good Luck! Bad Luck!', 'The troupe find themselves in the company of a rather interesting old lady once across the Broad River. Once they are on their way they encounter a travelling hustler and decide to enter the Rithermere games.', 131, 15, 870401, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3653, 'The Rithmere Games', 'The Rithermere games begins! Lief, Barda and Jasmine pool their respective fighting styles to try and get past the preliminary round of the tournament.', 131, 16, 870411, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3654, 'Test of Endurance', null, 131, 17, 870421, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3655, 'Jasmine vs Doom', null, 131, 18, 3068411, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3656, 'The Boy from the Resistance', null, 131, 19, 3068421, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3657, 'The Shifting Sands', null, 131, 20, 3068431, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3658, 'The Heavenly Stone', null, 131, 21, 3068441, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3659, 'Thaegan''s Return', null, 131, 22, 3068451, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3660, 'Thaegan''s Trap', null, 131, 23, 3068471, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3661, 'Meeting Prin', null, 131, 24, 3068501, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3662, 'Kin to the Air', null, 131, 25, 3068511, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3663, 'Vraal Attack', null, 131, 26, 3068521, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3664, 'Trapped Under Dread Mountain', null, 131, 27, 3068531, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3665, 'The Great Gellick', null, 131, 28, 3068541, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3666, 'The End of the Carn Squad?', null, 131, 29, 3068551, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3667, 'The Mysterious Ols', null, 131, 30, 3068561, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3668, 'Goodbye, Jasmine', null, 131, 31, 3068571, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3669, 'The River Queen', null, 131, 32, 3068581, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3670, 'Pirate Attack', null, 131, 33, 3068591, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3671, 'The Pirates'' Feast', null, 131, 34, 3068601, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3672, 'Maze of the Beast', null, 131, 35, 3068611, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3673, 'Sorceress Thaegan is Back!', null, 131, 36, 3068621, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3674, 'Mirror of Fear', null, 131, 37, 3068631, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3675, 'Sorceror Oacus', null, 131, 38, 3068641, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3676, 'The Vow of the Torans', null, 131, 39, 3068651, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3677, 'The Valley of the Lost', null, 131, 40, 3068661, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3678, 'The Last Gem', null, 131, 41, 3068671, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3679, 'The Seven Gems United', null, 131, 42, 3068681, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3680, 'Nevets Goes Wild', null, 131, 43, 3068691, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3681, 'Battle at Withick Mire', null, 131, 44, 3068701, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3682, 'The Oath', null, 131, 45, 3068711, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3683, 'The Last Battle of Fire', null, 131, 46, 3068721, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3684, 'The Seven Tribes', null, 131, 47, 3068731, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3685, 'Who is Dain?', null, 131, 48, 3068741, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3686, 'A Desperate Rescue', null, 131, 49, 3068751, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3687, 'Who''s the Next King?', null, 131, 50, 3068761, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3688, 'Battle of the Ak-Babas', null, 131, 51, 3068771, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3689, 'When the Seven Gems Shine', null, 131, 52, 3068781, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3690, 'Leaving on a new adventure', null, 131, 53, 3068791, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3691, 'Jasmine returns to forest', null, 131, 54, 3068801, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3692, 'A trap labyrinth underground', null, 131, 55, 3068811, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3693, 'Filli In Big Trouble', null, 131, 56, 3068821, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3694, 'The Solitary Guard', null, 131, 57, 3068831, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3695, 'Taking account of Tom''s shop', null, 131, 58, 3068841, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3696, 'The First Love Prin', null, 131, 59, 3068851, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3697, 'Pirates of the River Tor', null, 131, 60, 3068861, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3698, 'Belt Stolen', null, 131, 61, 3068871, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3699, 'A Promise Kept for Lief', null, 131, 62, 3068881, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3700, 'Neridah and Jasmine', null, 131, 63, 3068891, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3701, 'The Identity of the Ol Disguised', null, 131, 64, 3068901, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3702, 'Deltora Forever', null, 131, 65, 3068911, 353);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3703, 'Preview 1', null, 131, 1, 870391, 354);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3704, 'Episode 1', null, 132, 1, 393938, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3705, 'Episode 2', null, 132, 2, 393939, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3706, 'Episode 3', null, 132, 3, 393940, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3707, 'Episode 4', null, 132, 4, 406099, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3708, 'Episode 5', null, 132, 5, 406100, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3709, 'Episode 6', null, 132, 6, 406101, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3710, 'Episode 7', null, 132, 7, 406102, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3711, 'Episode 8', null, 132, 8, 406103, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3712, 'Episode 9', null, 132, 9, 410507, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3713, 'Episode 10', null, 132, 10, 410508, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3714, 'Episode 11', null, 132, 11, 415282, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3715, 'Episode 12', null, 132, 12, 415283, 355);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3744, 'Hide And Be Sneaky', 'The campers play an extreme game of Hide and Seek with Chef Hatchet who hunts them down with a huge water gun. Another person is voted off.', 133, 17, 394012, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3716, 'Run for Your Life', 'A woman is assaulted and raped and 17-year-old Alex is sentenced, denying all charges, for the attack. The woman, who remained in a coma since the attack, miraculously awakes and Fia models an idea of how they''ll try to get the woman to remember the event.', 132, 1, 1521531, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3717, 'Alba Femina', 'A woman is found murdered and the murder appears to have great similarities to a murder that occurred a year earlier. The father of the first victim, contacts the OD-group because he does not believe that the man who pleaded guilty is the real offender. But if the man is innocent, how does he know so much about how the murder was carried out?', 132, 2, 1521541, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3718, 'The Threat', 'A woman appeals to Markus and his team that they will review her boyfriend''s case. The boyfriend was convicted of murder a few years earlier in a case which Markus'' ex-wife, Ulrika, was prosecuting. The OD-group reluctantly takes on the case and Markus begins to suspect that is Ulrika hiding something.', 132, 3, 1521551, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3719, 'Nowak & Nowak', 'The OD-group is approached by a man who is suspected of robbing a jewelry store. He wants the group to prove his innocence. The question is whether he really is innocent when the evidence, motives and witnesses indicate that he is guilty.', 132, 4, 1521561, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3720, 'Close Neighbors', 'Amanda''s life completely changed the morning when she fell asleep while driving and as a consequence a woman and her daughter was killed. Amanda was convicted and is serving a prison sentence. The OD-group decides to review the case. For Roger, it turns out to be a complex matter because his past relationship with Amanda.', 132, 5, 1521571, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3721, 'The Stalker', 'The OD-group tackles a murder case in which animal rights activist Håkan Roos is suspected of having murdered Miriam Merkel, the writer and wife of a politician. Håkan maintains his plead of innocence despite the circumstantial evidence indicating that he is the culprit.', 132, 6, 1521581, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3722, 'Education for Life', 'A headmaster at a boarding school takes the law into his own hands which upsets Mark. When a student from school, who Markus helped in the past, is accused of committing rape Markus decides to find out the truth of the allegations.', 132, 7, 1521591, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3723, 'Episode 8', 'A convicted murderer runs away during a leave of absence and when he does not get a hold of Markus, he takes Roger, Fia and Belal as hostage. The man claims to be innocent of murder and want Markus to help him prove it. But no one knows where Markus is located so Anna is left upon her own devices to try and save her friends.', 132, 8, 1521601, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3724, 'Night Terror', 'Fia is in hospital after the hostage crisis and the very first night she experiences an unpleasant incident when her roommate cardiac arrests and dies. The autopsy shows that the woman received an overdose of morphine and a nurse is suspended. Fia is convinced that the nurse is innocent and commits herself to investigating the case.', 132, 9, 1521611, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3725, 'The Money Trap', 'Markus receives a visit by Annika Hallgren from the Katrineholm police who suspects that a mechanic convicted of murdering an elderly man is innocent. The same day the murder occurred the victim''s son appears in the city but has since then disappeared without a trace. The question is where the son is and if he had motive to murder his father?', 132, 10, 1521621, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3726, 'Kidnapped', 'The OD-group gets a kidnapping case on their table where the victim died before police could intervene. The kidnapped woman''s boyfriend was sentenced for the deed. When the group begins to delve into the couple''s old acquaintance, they discover a world of drugs, betrayal and a woman''s cry for help.', 132, 11, 1521631, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3727, 'Unknown Witness', 'A former colleague of Roger, Johan, is arrested for the murder of a taxi driver. Johan claims he is innocent but refuses to tell what he was doing the evening of the murder. The question is what it is that is so important that it is worth going to jail for. Who or what is Johan trying to protect?', 132, 12, 1521641, 356);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3728, 'Not So Happy Campers (1)', 'The twenty two contestants arrive at the island, are divided into teams and learn the rules of the competition they will be taking part in.', 133, 1, 393996, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3729, 'Not So Happy Campers (2)', 'The two teams face their first competition: jumping off a thousand foot cliff into shark infested waters and building a hot tub out of materials they find in crates at the base of the cliff. The first camper is voted off the island.', 133, 2, 393997, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3730, 'The Big Sleep', 'The two teams set out on a twenty mile race that they think is the contest on this occasion. However, the real winning team is the one who has the individual that goes to sleep last afterwards. Another camper is voted off the island.', 133, 3, 393998, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3731, 'Dodge Brawl', 'The two teams participate in a grueling five round game of dodgeball with an unlikely hero determining the outcome. Another contestant leaves the island on the Boat of Losers.', 133, 4, 393999, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3732, 'Not Quite Famous', 'The two teams participate in a talent competition and the rivalry between Gwen and Heather intensifies.', 133, 5, 394000, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3733, 'The Sucky Outdoors', 'The two teams must spend a night alone in the woods in the contest for this episode. Another contestant is voted off the island.', 133, 6, 394001, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3734, 'Phobia Factor', 'In this episode, each of the contestants face their worse fears. Another person is voted off the island.', 133, 7, 394002, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3735, 'Up the Creek', 'The two teams take canoes to a nearby island and build rescue fires on it in this week''s contest. Another contestant is voted off the island.', 133, 8, 394003, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3736, 'Paintball Deer Hunter', 'The two teams compete in a paint ball contest with the teams divided into "hunters" and "deer". Another person is voted off at the campfire ceremony.', 133, 9, 394004, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3737, 'If You Can''t Take the Heat', 'The teams compete in a cooking challenge but one person''s attitude towards hygiene threatens to doom his team''s chances and Heather and LeShawna''s conflict reaches a boiling point. Another person is voted off the island.', 133, 10, 394005, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3738, 'Who Can You Trust?', 'The teams take part in a three part competition where trust in team mates could mean the difference between victory and defeat. Another contestant is voted off the island.', 133, 11, 394006, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3739, 'Basic Straining', 'Chef Hatchet makes the teams go through several difficult obstacles designed to make people quit. Another camper is voted off the island.', 133, 12, 394007, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3740, 'X-Treme Torture', 'Chris has the contestants pair off in the next immunity contest. Another person is voted off the island.', 133, 13, 394008, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3741, 'Brunch of Disgustingness', 'The two teams are divided up with the guys on one team and the girls on the other. A surprise awaits the two teams for the next challenge.', 133, 14, 394009, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3742, 'No Pain, No Game', 'Two campers from the past return to the game as the two teams are dissolved and the campers face an excruciating challenge with individual immunity at stake.', 133, 15, 394010, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3743, 'Search and Do Not Destroy', 'The campers are off on a scavenger hunt and Heather does something so horrible that it makes even Gwen cry. Another person is voted off.', 133, 16, 394011, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4115, null, null, 145, 10, 394560, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3745, 'That''s Off The Chain!', 'The campers are challenged to build their own bikes using supplies from the Arts and Crafts lodge and race them in a dangerous motor cross challenge with invincibility at stake.', 133, 18, 394013, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3746, 'Hook, Line And Screamer', 'The campers go through a challenge where they are stalked by a psycho killer and see who can last the longest. ', 133, 19, 394014, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3747, 'Wawanakwa Gone Wild!', 'The campers square off in a challenge where they must trap a certain animal and one person gets a delicious meal as a reward. Another person is voted off the island.', 133, 20, 394015, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3748, 'Trial by Tri-Armed Triathalon', 'The six remaining campers are split into three teams of two and must compete in various challenges based on teamwork. Another camper is voted off the island.', 133, 21, 394016, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3749, 'Haut Camp-ture', 'In this episode, we are shown what happened to the campers who have been voted off so far and hear their thoughts of the final five. They also decide who gets to be voted off.', 133, 22, 394017, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3750, 'Camp Castaways', 'After a huge flood, the campers float away on a deserted island and try to fend for themseleves while dealing with the dangers on the island.', 133, 23, 394018, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3751, 'Are We There, Yeti?', 'The campers are stuck in the middle of the woods where they have to race back to the camp to win. Another camper is voted off the island.', 133, 24, 394019, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3752, 'I Triple Dog Dare You', 'The remaining three campers participate in a series of dares that were made up by the ones that have been voted off so far. Another camper leaves the island.', 133, 25, 394020, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3753, 'Season Recap', 'The show''s contestants are shown in their audition tapes and highlights from the episode are featured.', 133, 26, 394021, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3754, 'The Very Last Episode, Really!', 'The final two contestants participate in one last challenge for the grand prize.', 133, 27, 394022, 357);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3755, 'Total Drama Drama Drama Drama Island', 'A new challenge is posed by Chris when the campers reunite for a chance at finding a suitcase filled with a million dollars.', 133, 6, 666671, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3756, 'Total Drama Island Auditions', null, 133, 2, 3968011, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3757, 'Total Drama Island Teaser', null, 133, 1, 3968021, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3758, 'Total Drama Island Spots', null, 133, 3, 3968031, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3759, 'Season Recap (alternate)', null, 133, 4, 3968041, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3760, 'The Very Last Episode, Really! (Alternate)', null, 133, 5, 3968051, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3761, 'Celebrity Manhunt''s Total Drama Action Reunion Special', 'This two-part special introduces the next exciting series; Total Drama World Tour. Celebrity Manhunt, a celebrity gossip TV show, follows the Total Drama contestants as they arrive at television''s coveted Gemmy Awards.', 133, 7, 5361404, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3762, 'TDA Teaser', null, 133, 8, 5361405, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3763, 'TDA Alternate Reality', null, 133, 9, 5361406, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3764, 'TDA Caught on Tape', null, 133, 10, 5361407, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3765, 'The Aftermath IV: Who Wants to Pick a Millionaire (Alternate Ending)', 'Version of Episode 26 with an alternate ending.', 133, 11, 5361408, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3766, 'Total Drama World Tour Teaser', null, 133, 12, 5362992, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3767, 'Broadway Baby! (Deleted Scenes)', null, 133, 13, 5362993, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3768, 'Hawaiian Punch (Alternate)', null, 133, 14, 5362994, 358);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3769, 'Monster Cash!', 'The first installment of the Total Drama Action finds the cast members participating in a monster movie challenge. ', 133, 1, 5361409, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3770, 'Alien Resurr-eggtion', 'Chef tracks the players progress as they search for alien eggs. ', 133, 2, 5361410, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3771, 'Riot On Set', 'Teams are chosen and set to shooting some very strange dramatic scenes.', 133, 3, 5361411, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3772, 'Beach Blanket Bogus', 'The challenge will contain a beach-theme where the teams will be required to surf over a tank of sharks on a mechanical surfboard. ', 133, 4, 5361412, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3773, '3:10 to Crazytown', 'The two teams square off in several western themed challenges.', 133, 5, 5361413, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3774, 'The Aftermath I: Trent''s Descent', 'Geoff and Bridgette play hosts of an after show which dishes dirt on the cast. ', 133, 6, 5361415, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3775, 'The Chefshank Redemption', 'The remaining contestants square off in another challenge. This week''s theme centers around a prison movie.', 133, 7, 5361416, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3776, 'One Flu Over The Cuckoos', 'The contestants take part in a medically themed challenge. When a deadly virus breaks out, things go critical on set. It all leads up to someone''s "acting skills" that gets the reward.', 133, 8, 5361417, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3777, 'The Sand Witch Project', 'The castmates compete in a horror themed trilogy challenge. Someone''s conscience begins to bother them about their actions, and they end up removing themselves from the competition. ', 133, 9, 5361418, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3778, 'Masters Of Disasters', 'It''s a disastrous time for the castmates, with earthquakes, floods, and lava spills. The disasters get worse as somebody gets seriously injured and the others find themselves in deep water.', 133, 10, 5361419, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3779, 'Full Metal Drama', 'The two teams take part in a challenge inspired by war movies. Later, another contestant is voted out of the competition.', 133, 11, 5361420, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3780, 'The Aftermath II: Forgive & For-Gwen', 'Geoff and Bridgette talk about what has happened in recent episodes and interview cast mates that were recently voted out.', 133, 12, 5361421, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3781, 'Ocean''s Eight - Or Nine', 'The teams participate in a challenge inspired by bank heist films. However, for one contestant, the challenge holds an unexpected surprise.', 133, 13, 5361422, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3782, 'One Million Bucks BC', 'The two teams compete in a prehistoric themed challenge.', 133, 14, 5361423, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3783, 'Million Dollar Babies', 'In a sports themed challenge, the contestants find themselves boxing, playing badminton, wrestling in a ball pit, cheer-leading, and even playing trampoline basketball.', 133, 15, 5361424, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3784, 'Dial M For Merger', 'The teams are dissolved and the remaining cast mates participate in an individual challenge which is revolved around spy movies.', 133, 16, 5361425, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3785, 'Super Hero-Id', 'The remaining cast mates do a superhero challenge of bravery.', 133, 17, 5361426, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3786, 'The Aftermath lll: O-wen or Lose', 'Geoff and Bridgette talk with the latest cast mates to be voted out of the show.', 133, 18, 5361427, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3787, 'The Princess Pride', 'Chris appears on the set with a glass combat boot and the remaining contestants learn the next challenge will have a fairy tale theme.', 133, 19, 5361428, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3788, 'Get A Clue', 'The remaining cast members must solve a murder mystery challenge. While on a train, Chris is "murdered" and the cast must figure out who done it.', 133, 20, 5361429, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3789, 'Rock n'' Rule', 'The remaining cast mates take part in a rock themed challenge and learn that a voted off person is returning to the show.', 133, 21, 5361430, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3790, 'Crouching Courtney, Hidden Owen', 'A kung-fu challenge comes to the set as the boys versus girls.', 133, 22, 5361431, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3791, '2008: A Space Owen', 'The remaining campers participate in a space themed movie challenge.', 133, 23, 5361432, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4116, null, null, 145, 11, 394561, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4117, null, null, 145, 12, 394562, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3793, 'Mutiny on the Soundstage', 'The remaining two cast mates go up against each other in a series of challenges based on past trials with the winner getting the million dollars.', 133, 25, 5361434, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3794, 'The Aftermath lV: Who Wants to Pick a Millionaire', 'After the final challenge ends in a tie, the cast gets together for one last Aftermath. In the end, only one will emerge as the Total Drama second season champion.', 133, 26, 5361435, 359);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3795, 'Walk Like An Egyptian, Part 1', 'The 17 contestants see the plane and all of the accommodations. They then compete in a challenge where they have to navigate around a pyramid to reach the finish line. They can choose to either climb on top of the pyramid, or go under the pyramid (a majority of the cast chose the latter). Duncan quits mainly due to refusing to sing and having to listen to Gwen and Courtney argue the whole way up the pyramid. Three teams are made (names chosen by the teams themselves) according to who finished the challenge first. They are also given a reward. DJ, LeShawna, Harold, Lindsay, and Bridgette are on Team Victory and are given a stick. Owen, Alejandro, Noah, Sierra, and Tyler are on Team Chris is Really Really Really Really Hot, and are given a goat. Courtney, Heather, Izzy, Cody, and Gwen are on Team Amazon and are given a camel. Ezekiel is the last to finish the race, but is not eliminated because of Duncan quitting, so Chris places him on Team Victory.', 133, 1, 5362995, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3796, 'Walk Like An Egyptian, Part 2', 'The remaining contestants are forced to compete in a camel race to the Nile, bringing their rewards to the finish line. Chris tells them that each reward has a "special surprise" (the stick being a divining rod, the camel being a camel, and the goat being small). Izzy and Sierra switch teams because of Sierra''s interest in Cody and Izzy''s interest in Owen. Chris catches Duncan humming the song from the previous episode while lounging in the plane, but Duncan denies it. Alejandro tries to win everybody over with compliments and remarks, but Heather doesn''t buy it, though she admits he''s a good manipulator. In the second challenge, the contestants must weave a basket and row across The Nile to the finish line. Ezekiel is eliminated due to accidentally feeding the team''s reward to a crocodile. Even though he was voted off, he holds onto one of the plane''s tail wings, refusing to give up, and hinting a possible return to the game. Duncan (who had been previously promised a ride home) was instead pushed out of the plane. After the elimination, Alejandro says he plans to hide his backround, and confesses that compared to him, Heather is a saint.', 133, 2, 5362996, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3797, 'Super Crazy Happy Fun Time Japan', 'The contestants figure out they are in Japan after Chef slashes the door open and they fall in a giant bowl of rice. The first challenge was a game of giant pinball with each team having a pinball partner (Teams Victory and CRRRRH got a panda and Team Amazon had Cody and Sierra instead), Team Chris is Really Really Really Really Hot won thanks to Alejandro''s care for the panda. The second challenge was writing and producing a Japanese commercial for the brand new Total Drama Yum Yum Happy Go Time Candy Fish Tails. Team CRRRRH chose to do a Japanese monster mash style commercial, Team Victory chose to do a samurai style commercial, and Team Amazon did a commercial with the leftovers. In the end, Team Amazon won because of Chef''s love for exploding donuts. Overall, Harold quit because the samurai style was his idea. Instead of being pushed out of the plane, he "kills" himself with a toy lightsaber and falls out.', 133, 3, 5362997, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3798, 'Anything Yukon Do, I Can Do Better', 'The episode opens up with Team Amazon relaxing in the first-class area of the plane. Cody''s relaxation is interrupted when Sierra starts rubbing his foot and ends up paralyzing him. In the loser area, LeShawna is playing with the num-yos Harold gave her. Chris walks in, and the contestants begin to complain about Japan. The plane begins to land, terrifying Owen. The plane lands in Yukon. Chris explains that the contestants won''t be getting coats, causing them to huddle together for warmth. The first challenge involves team crossing the cassum by jumping from shard to shard. Once at the sleds, the first one there must climb up the mountain while carrying their team on the sled. Team Victory won the first challenge thanks to DJ mysteriously getting there. During the challenge, DJ accidentally got his eyes frozen by crying too much and ended up getting his team lost and hitting a baby seal. Alejandro continues to manipulate the contestants on Team Victory to his pleasure and their elimination, as he starts to flirt with Bridgette, causing her to get distracted. Bridgette starts to kiss Alejandro, but gets tricked and stuck to a pole. Team Chris is Really Really Really Really Hot won thanks to Owen''s weight causing a rapid speed which accelerated the sled. In the end, Bridgette got eliminated for kissing a pole and not crossing the finish line with her team. Before being eliminated, she tries to warn her teammates about Alejandro being evil, but gets pushed off the plane.', 133, 4, 5362998, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3799, 'Broadway, Baby!', 'The episode starts off with Team Chris is Really Really Really Really Hot relaxing in the winners cabin. Team Amazon''s female members (except for Sierra) complain about the loosers section. Heather tries to manipulate Sierra and Cody into obeying her, which fails to work, as they both know of Heather''s villainous personality. Alejandro continues to manipulate Team Victory by smuggling them food and trying to win them over. The contestants figure out their in New York after falling in a boat and landing on water. The first challenge involves the contestants climbing to the top of the Statue of Liberty getting the baby carriges on top of Lady Liberty''s crown, then racing down to the boats, and finally driving to Central Park. The contestants figure out the ropes are made of wool when trying to climb them. Alejandro manipulates Sierra into revealing humiliating things about Chris''s past, such as him having his own cooking show that got cancelled after one episode, making terrible movies about talking cats, and being a boyband. Eventually, Chris has enough of Sierra and tells her to zip it. Team Amazon wins the first part, later discovering the only way to go down is to slide down a fireman''s pole. During the second part, the contestants race to Central Park, New York going through a sewer and end up being chased by a giant alligator who tries to eat them. Team Victory won the second part giving them the shortest path. The second challenge involved the teams pushing their carriges along a pre-deterimied path to turtle pond and bobbing for giant apples with only their heads and loading the carriges. Afterwards, teams have to race to the heart of New York. During the challenge, one member of each team had to stay in the carrige (Cody, Lindsy, and Noah) and sing during while racing. DJ this time hurts a turtle. During the challenge, Heather switches Team CRRRH''s carriage with a real carriage. They got to the heart first but lost because of Heather. In the end Team Amazon won once again. The prizes were candy (which Cody greedily started taking), apples (which Sierra wanted to thank Chris for), and an electric meat grinder (which Heather threw out of the plane).', 133, 5, 5362999, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3808, 'Greece''s Pieces', 'The final nine go to Greece to compete in an Olympics challenge. Duncan and Gwen are nervous about their kiss last episode. Tyler reveals the secret, thanks to Alejandro, and a fight breaks out and tension between Gwen and Courtney grows. After Team Amazon wins, Chris decides not to eliminate anybody just because of the growing drama. ', 133, 14, 5363008, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3809, 'The Ex-Files', 'After breaking up with Duncan, Courtney decides to get revenge by flirting with Tyler after being encouraged by Alejandro. The two teams must search Area 51 for intact alien artifacts and bring them back to the Total Drama Jumbo Jet. During the challenge, Duncan and Gwen bump into each other and have their second kiss, thus officially starting a relationship with each other. In the end, Team Amazon wins again and Tyler is voted off due to a mistake that costs his team the challenge. ', 133, 15, 5363009, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3889, 'Dragonphobia', 'When Jane eats some berries and passes out ill, she reawakens with amnesia. Jane now knows only one thing for certain; she is terrified of Dragon.', 136, 16, 394071, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3800, 'Aftermath: Bridgette Over Troubled Water', 'The episode starts off with the hosts, Geoff and Blaineley introducing the show. They begin to talk to the contestants that could not compete in season three, only to find that they do not mind not being able to participate. Blaineley is upset, as she had hoped that they would be filled with jealousy and anger. Instead, no one seems to mind not participating in the season and are enjoying their time away from Chris and Chef. Then, Geoff and Blaineley reveal that two eliminated contestants that are missing. Duncan and Ezekiel seem to have vanished after their eliminations. The host''s tell the audience Chris is looking for Duncan, where as Ezekiel is stalking the current cast. Blaineley then goes into the other two contestants who were eliminated, and attempts to introduce Bridgette. Geoff, upset with Bridgette over her relations with Alejandro brings out Harold instead. They sing Baby, dedicated to LeShawna. Meanwhile, the girls of the peanut gallery (save Eva) and Blaineley scream over The Drama Brothers. Blaineley becomes knocked out after screaming over Justin. Geoff then signs off for commercial. Blaineley then demands that Bridgette come out. Bridgette is shown to have locked herself in the green room, only to be coazed out by Beth. Bridgette is shown to be nervous about being interviewed, especially after cheating on Geoff. Beth convinces her to come out and sing, but she only will if she can sing "her way." Geoff complies. Bridgette then sings I''m Sorry, but Geoff does not fully accept her apology. Blaineley then shows Bridgette''s "recap" which is all clips of her with Alejandro. Geoff gets frustrated even further, as Bridgette answers a viewer questions. Geoff and Bridgette start bickering,and then start fighting in a boxing ring, much to Blaineley''s pleasure.Suddenly during the fight Geoff and Bridgette start making out. Blaineley gets incredibly frustrated and quits the show,and,has tobe carried out while Beth flirts with the pole. Eva then angrily signs off the show because "they told her to."', 133, 6, 5363000, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3801, 'Slap Slap Revolution', 'The episode stars off with Teams Victory and CiRRRRH in the losers cabin, to their dismay a hole opens up and begins to suck up everything. Team Amazon (except for Cody) is relaxing in the winners cabin. Cody tries to protect himself from Sierra by hanging string with bells tied but it ends up not working. The contestants discover that they''re in the German Alps when they see them from the window and Chris begins to speak German. After falling from the plane, Chris tells them that they have to sing softly or risk a ‘song-alanche.’ Tyler causes an avalanche after being overjoyed that Lindsy finally remembers him. Also Alejandro continues his tactics by distracting and flirting with LeShawna. When they make it up the hill, their challenge awaits: grind meat into a giant sausage, and then ride the sausage down to the bottom of a deadly hill. Team Amazon yells and gets mad at Heather for tossing out their electric meat grinder reward – they could have used it here and won for sure! Team Victory makes a great big sausage, and Team Chris Is Really Really Really Really Hot is forced to make Owen their sausage after he eats all the meat, while Team Amazon is forced to turn their sausage into a snowboard after Sierra uses most of their meat to make a "meat Cody". During the first challenge''s second part ravage goats try to attack the contestants. Team Chris is Really Really Really Really Hot won. The rewards were hats(Metal, Fur, and Regular). At the bottom of the hill teams get their second challenge – a dance competition that turns violent when they start slapping each other off the platform! Each team had to have 2-3 dancers per team ( LeShawna & DJ, Sierra, Cody & Heather, Al, Owen, and Noah) The coordinator was Chef to the contestants'' dismay. The challenge begun when it became a survival of the fittest. Team Amazon won when Alejandro gave up. In the end, LeShawna was eliminated and thrown off by Alejandro.', 133, 7, 5363001, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3802, 'The Am-AH-zon Race', 'The episode begins with Team Chris Is Really Really Really Really Hot in the economy class section. Owen begins to drool in his sleep and blabber about airplanes. Alejandro commands him to stay quiet, but Owen wakes up in a frenzy and accidentally punches Alejandro in the face, giving him a swollen right eye. Alejandro then complains that Team Chris Is Really Really Really Really Hot needs to be in the first-class section after that day''s challenge. Meanwhile, Team Victory, now down to just DJ and Lindsay, is on the opposite side of the economy class section. DJ suddenly regrets voting off LeShawna, and remembers his curse. Team Amazon, in first-class for the fourth time, enjoys their relaxation. Sierra begins to "surf the Net", however, she was staring into a drawing of her and Cody on a pizza box while using a real mouse as an actual computer mouse. The three teams exit the plane as Chris welcomes them to Peru; home of the Amazon River. He explains that the challenge is to hike along an ancient Peruvian trail all the way to Machu Picchu. Chris then gives each team walkie-talkies, in case of an emergency. The hiking trip begins, and Team Victory chooses the left path. Tyler gets Team Chris Is Really Really Really Really Hot to also choose the left path in order to stay with Lindsay. Team Amazon ends up taking the right path. Team Victory reaches the zipline first, and they get the privilege of using the T-Bar. DJ ziplines down, while Lindsay rides on his shoulders. Meanwhile, Team Amazon hikes down a trail, Cody thanks Gwen for taking his epipen, but Gwen confesses that she has no idea how to use it. Cody leers at her and explains that she has to jab it into his naked butt cheek, and Gwen tosses the epipen back to him in disgust. Suddenly, Cody is grabbed by an enormous mosquito, but Sierra knocks it down with a stone. She catches him as he falls and assures him of her devotion towards his safety. Team Amazon is stopped in their tracks as they notice two Zing-Zings sitting around a fire. Meanwhile, Team Chris Is Really Really Really Really Hot still needs Tyler, Noah, and Izzy to cross the zipline. Tyler removes his pants and uses it as a makeshift T-Bar. It works for a short while, but it then catches on fire, and he falls into the water. The Zing-Zings have tied Team Amazon to a tree, and Cody suggests that the batteries in the flashlight in his back right pocket could be used inside the walkie-talkie. However, he cannot reach it. This time, DJ slaps innocent monkeys who only want their bananas back. Team Victory reaches Machu Picchu first, and Chris, once again, announces that they are maintaining the first place slot. He worries about DJ''s condition, who is bawling over having hurt his seventh animal''s. Team Amazon, still in the same place as the previous day, is wide awake except for Gwen, who is sound asleep due to Cody''s epipen. Heather is confused for a goddes. In the end, Team Amazon faces elimination until Chris then reveals that the elimination was fake and Heather wouldn''t be taking the Drop Of Shame after voting Heather off.', 133, 8, 5363002, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3803, 'Can''t Help Falling in Louvre', 'The contestants arrive in Paris, France and everything but love is in the air for these teens. As the three teams struggle to complete their challenge, Sierra is having trouble coping with Cody revealing he voted for her. DJ tries his hardest to either throw the challenge or get rid of a "curse" he believes he has, but an unexpected twist ultimately gets Lindsay eliminated instead, much to Tyler''s dismay. ', 133, 9, 5363003, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3804, 'Newf Kids On The Rock', 'The host''s hometown in Newfoundland is visited as the eleven teens compete in their next challenge. With Team Victory down to its last member (DJ), who desperately wants to be eliminated, Heather and Alejandro try to align him on their side as an ally by all means possible. In the end, Team Victory and Team Chris share the reward and no one is sent home due to Chris''s good mood. ', 133, 10, 5363004, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3805, 'Jamaica Me Sweat', 'After the plane runs out of gas, the final eleven are stranded in Jamaica. Owen is starting to have second thoughts about his romantic relationship with Izzy and tries to break up with her. As a result, both end up severely injured, with Izzy removed from the competition due to the severity of her injury, but not before she officially breaks up with him. Meanwhile, Alejandro''s actions from the previous episode are intentionally revealed and because of this, DJ is finally eliminated, ending Team Victory. ', 133, 11, 5363005, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3806, 'Aftermath: Revenge Of The Telethon', 'The second installment of the aftermath includes a fund-raiser in order to pay for the plane''s fuel. The four eliminated contestants are interviewed, while trying to convince the viewers to donate five hundred thousand dollars. After a rampage thanks to Blaineley, the goal is increased to one million dollars. Will they reach the enormous goal in a mere thirty minutes or will Total Drama be gone for good? ', 133, 12, 5363006, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3807, 'I See London...', 'With only two teams remaining, the host takes the remaining contestants to London, England, where their goal is to capture "Jack the Ripper" (who is really Ezekiel in a costume) before he catches them. In the end, Duncan is caught by Courtney and Gwen with Jack being caught by Team Chris, giving Duncan a return on the latter team as a consolation for losing. Noah attempts to reveal Alejandro''s true intentions, yet he is too late and instead gets eliminated as a result. In the end, Gwen and Duncan kiss, to which Tyler walks in on. ', 133, 13, 5363007, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3810, 'Picnic at Hanging Dork', 'The remaining eight contestants travel to Australia, where tension really flares after a previous kiss. Alejandro and Duncan''s strategy to weaken Courtney proves to work well, while the other team is divided into two alliances. In the end, Team Amazon loses, and a tiebreaker occurs between Courtney and Gwen. Courtney manages to win, and Gwen is eliminated resulting in Team Amazon''s first elimination. ', 133, 16, 5363010, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3811, 'Sweden Sour', 'The two teams land in Sweden to compete in a "Viking" capture the flag game. Courtney still tries to flirt with Alejandro, while Cody misses Gwen. Owen becomes aware of Alejandro''s true nature thanks to Noah and warns Duncan, much to his surprise. Alejandro starts to reveal his true feelings for Heather. In the end, Chris reveals that there will be no elimination again, sparing Courtney, while leaving the rest of her team upset and disappointed. ', 133, 17, 5363011, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3812, 'Aftermath Aftermayhem', 'After Blaineley forces Bridgette into doing a world tour of Total Drama fan countries, Geoff becomes fed up. The three new guests join the peanut gallery, where five of them get the opportunity to re-join the competition. However, Blaineley ends up winning instead. ', 133, 18, 5363012, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3813, 'Niagara Brawls', 'The remaining seven are dumped in Niagara Falls for their next challenge, where it is revealed that Blaineley is debuting onto the show and that the teams have merged. The challenges have a wedding theme, leading to added tension for three particular couples. Alejandro tries his hardest to convince Duncan, Heather and Sierra to vote off Owen, ultimately causing Owen to take the Drop of Shame. ', 133, 19, 5363013, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3814, 'Chinese Fake-Out', 'The final seven go to China for a visit to the Great Wall. Tension continues between Heather, Courtney, Duncan and Alejandro and Cody plans to establish the connection between him and Sierra. Blaineley allies with Chef, but in the end, she is voted off along with Courtney due to another tie in votes and the show''s budget problems. ', 133, 20, 5363014, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3815, 'African Lying Society', 'The final five arrive in Tanzania for their next challenge; hunting down Ezekiel, now feral due to hiding out in the plane all this season. Sierra''s obsession with Cody peaks and Heather and Alejandro continue to doubt their attraction towards each other. In the end, Alejandro wins the challenge and Duncan is sent home for the second time after a close vote. ', 133, 21, 5363015, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3816, 'Rapa-Phooey!', 'The final four contestants are on their way to Easter Island to compete in a egg hunt themed challenge as Heather and Alejandro maneuver to become closer to the end through manipulating others. In the end, Heather won the challenge, but when Sierra was spared due to it being a reward, Heather gets frustrated and picks Alejandro to stay in first class with her. ', 133, 22, 5363016, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3817, 'Awww, Drumheller', 'The final four head to Alberta, Canada to participate in an archeology-themed challenge. Alejandro frames Heather to anger Sierra. However, when Heather becomes trapped, he decide to save her. Afterwards, Sierra is eliminated despite winning the challenge due to destroying the plane on accident, sparing Alejandro from elimination. ', 133, 23, 5363017, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3818, 'Hawaiian Style', 'The Total Drama Aftermath show reveals the location of the finale is Hawaii. The four most recently eliminated contestants are brought out before the peanut gallery is split into three teams and a final challenge is revealed; a representative of each team competes in a surfing competition to win the finalists a possible advantage for the finale. Geoff regains Bridgette, but with Blaineley joining as well. ', 133, 24, 5363018, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3819, 'Planes, Trains and Hot Air Mobiles', 'With the Total Drama Jumbo Jet destroyed, the three remaining contestants (plus a tag-along Sierra) must engage in a full-out, no-rules race to Hawaii. Alejandro confronts Heather about attempting to vote him off earlier, enlisting the help of a stowaway in defeating her. Meanwhile, Cody works with Sierra to reach the finish line and in the process, develops a strong bond with her. In the end, Heather guarantees herself a spot in the final two, while Cody and Alejandro tie for second place.', 133, 25, 5363019, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3820, 'Hawaiian Punch', 'Total Drama World Tour has reached its final episode, where one of the final three will win a million dollars. Alejandro and Cody engage in a tie-breaker to determine a spot in the final two, and with one last manipulation from Alejandro, Cody gets eliminated. Chris then announces the final challenge with Heather against Alejandro which involves climbing Hawaii''s active volcano with a wooden dummy of your opponent. During the challenge, Cody and Harold volunteer to help Heather, while Lindsay and Courtney choose to help Alejandro. In the end, Heather manages to trick Alejandro (by saying that she loves him), which distracts Alejandro, giving Heather the opportunity to bring Alejandro to his ultimate downfall in the game. However, after a misunderstanding, Alejandro still gets the win, after Heather throws Alejandro''s dummy into the volcano. Later on, Ezekiel reemerges and steals the million dollar case from Chris, but then falls into the volcano (similar to the death of Gollum from The Lord of the Rings), and nobody gets the million dollars. The volcano then erupts, potentially harming everyone present, and Alejandro is the only one who suffers major injuries caused by the volcano''s lava. Alejandro is then put inside a robot by Chef and Chris due to his extensive injuries, an obvious parody of the creation of Darth Vader from Star Wars: Revenge of the Sith.', 133, 26, 5363020, 360);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3821, 'Bigger! Badder! Brutal-er!', 'The fourth season finally begins, introducing a whole new cast, set at Camp Wawanakwa, which has turned into a bio-hazardous waste dump. The thirteen contestants are divided into two teams, the Toxic Rats and the Mutant Maggots. Two contestants build a close bond, and one contestant manages to annoy her entire team into eliminating her that night.', 133, 1, 5363022, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3822, 'Truth Or Lazer Shark', 'As the competition narrows down to twelve, the campers must compete in the first part of their challenge; a tell-all trivia game which ends up embarrassing several contestants. Due to the problems in round one, the host makes the second round miserable for both teams. Ironically, a nonathletic camper ends up winning the physical-oriented challenge for his team, sending the other team to the elimination ceremony. In the end, someone becomes too focused on her image and is quickly voted off.', 133, 2, 5363023, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3823, 'Ice Ice Baby', 'The remaining contestants take part in a frigid challenge including climbing a mountain and a snowy capture the flag game. One of the Maggots asserts themselves further as team leader as a Rat continues to ruin their team''s chances regardless of other''s abilities. Someone gets fearful of their secret being discovered, but it comes through with another victory for their team. Ultimately, through a cruel trick, a camper is thrown off the island while someone else returns in a fame-desperate move.', 133, 3, 5363024, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3847, 'Impatient Optimism', 'It’s festival time at Futaba’s elementary school! The members of the Festival Club have been invited to participate and that means a fun change of pace for the weary middle school students.', 134, 20, 394042, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3848, 'Helpers Meet', 'The sports clubs have finally cornered Muryou! Will he finally agree to help them in their upcoming judo match against Misumaru’s school rival, Miyanomori? One match couldn’t really hurt, right?', 134, 21, 394043, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3824, 'Finders Creepers', 'The two teams are sent into the the woods on a scavenger hunt, where one camper''s alternate personality hooks up with someone else, despite their true self being in love with a different camper. Meanwhile, someone continues to sabotage their team''s chances, but fails in the end due to someone else persisting towards a victory. The losing team attends their first elimination ceremony, where someone volunteers for elimination, but ends up on the winner team, while an intern is eliminated again.', 133, 4, 5363025, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3825, 'Backstabbers Ahoy!', 'As one team deals with their newest member, the other is severely divided by one contestant, who shares feelings for two girls at once. When the contestants'' most prized possessions start vanishing, one player initially accuses their teammate, but then places the blame on someone else. Although they figure out the true scheme, it is not enough to prevent elimination.', 133, 5, 5363026, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3826, 'Runaway Model', 'As one team suffers dysfunction after a particular gamer feels as if they are lacking in the macho department, the other team shows problems with the over-macho nature of another and a persistent conflict of two others. In the end, a contestant suffering from withdrawal loses the game, but wins the heart of the girl of his dreams. Later, in a shocking surprise twist, the host forces two contestants to switch teams.', 133, 6, 5363027, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3827, 'A Mine is a Terrible Thing to Waste', 'The two teams are sent into an abandoned mine, where one teammate takes charge of their team, and someone''s disorder gets more out of hand. Someone throws the challenge to save his old team, leading to his elimination. Meanwhile, an old contestant falls in love with a new contestant and gives her a special reward, which leads to her quitting the competition and a former intern returning to their former team in their place as a contestant.', 133, 7, 5363028, 361);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3828, 'The War Record Begins', 'Aliens in the Tokyo Bay District? A new transfer student who acts suspiciously? Hajime Murata is in store for a lot more than he can handle.', 134, 1, 394023, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3829, 'Muryou''s Power', 'Hajime witnesses an argument gone battle that involves more than just fists between Muryou and Kyoichi. Bewildered by this show of psychic powers, Hajime questions Muryou. What will he tell Hajime?', 134, 2, 394024, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3830, 'The Name is Shingu', 'The talk around Misumaru Middle School is that someone stole a pair of girls clothing from the school. Who is this thief and what connections does he have with the strange events witnessed by Hajime?', 134, 3, 394025, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3831, 'The Time to Move', 'Hajime attempts to uncover the secrets of Tenmo town while those behind the strange events watch him.', 134, 4, 394026, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3832, 'Gazing Eyes', 'Hajime has learned the origin of Shingu and everything that has gone on in Tenmo, yet life still continues to remain normal for him. Elsewhere, Jiltosh attempts to tutor an alien spy, but with terrible results. ', 134, 5, 394027, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3833, 'A Peaceful Battle', 'It''s the arrival of the Athletic Festival and both teams, the Red team and the White team, are both eager to win. On the Red team we''ve got Kyoich who wants to blaze a path to victory, while on the White team we''ve got Nayuta who''s equally revved up. Will Muryou and Hajime be able to help her do just that? At the same time, someone has snuck onto school grounds.', 134, 6, 394028, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3834, 'Your Smile', 'While the Athletic Festival may be over, people are still wondering who the victor of the final event was. At the same time, everyone has a chance to watch the Cheer team skits, much to the shock of Nayuta and Kyoichi who both participated.', 134, 7, 394029, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3835, 'A Humble Feast', 'Hachiyou comes up with an idea for the pending Cultural Festival, but it would seem that Nayuta won''t here of it. Even with the support of Hajime and Muryou, Nayuta still refuses to allow it.

After a fire destroys Jiltosh''s house, he and Weinul, the Zaiglian who had previously requested asylum on Earth, move into the Sanemori manor. A run in with Hajime''s mother while grocery shopping causes Hajime''s family to have dinner with them.', 134, 8, 394030, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3836, 'After the Rain', 'Before, the Zaiglians were always content to lurk around in shadows… but no longer. Jiltosh and the others now find themselves face-to-face with the largest squadron of Zaiglian soldiers ever to set foot in Tenmo.', 134, 9, 394031, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3837, 'For Tomorrow', 'Something big is coming. School has been cancelled, and the Student Government has been called into a secret meeting with the Sanemori Clan. Most of the students happily head home, oblivious to the danger; but Hajime is about to be witness to one of the Shingu’s most powerful secrets…', 134, 10, 394032, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3838, 'Thank You, Courage', 'The battle with the “Sanadon” is at hand! Using the dangerous technique of Astral Deviation, Nayuta’s spirit is sent into space along with the Shingu to fight. But with an invasion force closing in on the Chosen’s location on the ground, it’s up to Harumi to protect everyone.', 134, 11, 394033, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3839, 'Despite Friendship', 'Nayuta’s been acting a little strange lately. Normally very confrontational, she seems to be backing off… what could be bothering her so much that her personality has changed 180 degrees?', 134, 12, 394034, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3840, 'Secret Village Hometown', 'Exams are over and the summer is finally here. That means it’s time for a little summer trip! Setsuna invites Hajime, Shun, and Nayuta to visit the mysterious Village of Falling Stars… but this little vacation isn’t going to be all fun and games…', 134, 13, 394035, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3841, 'Our Summer', 'The evidence from the battle with Sanadon leads to some troubling discoveries for the Sanemori Clan. Of course, laid-back Jiltosh would rather everyone focus on a more important matter… the Zaiglians are finally returning home and that means a going-away party is in order!', 134, 14, 394036, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3842, 'Father''s Return', 'Hajime’s father, Kazuo Murata, is finally getting a vacation to see his family! What is it, exactly, that he does again? But his appearance at home is overshadowed by a startling announcement on the early morning news…', 134, 15, 394037, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3843, 'Calmly, But Suddenly', 'Alien forces are on the move and, aside from keeping Setsuna up all night, they seem to have a darker purpose. With a new impending invasion, could it be time to ask for the Galactic Federation’s support?', 134, 16, 394038, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3844, 'Chaotic Apology', 'Everyone is shocked to discover that Hajime’s father is involved with the space diplomacy talks - even Hajime! But right now Hajime is more focused on the Festival Club. Nayuta seems to be taking a special interest in the club and she decides to hold a meeting regarding their plans for the Cultural Festival, but the meeting is cut short when yet another alien battleship appears!', 134, 17, 394039, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3845, 'Inherited Sorrows', 'The students stumble upon an old video containing a short film from 100 years ago! Who could that be playing the lead? Is it… a young Lady Momoe? While the Festival Club draws in the curious viewers, a troubled Harumi must face Kyoichi and tell him the truth… the truth about what really happened 11 years ago.', 134, 18, 394040, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3846, 'Virtuous Fist', 'Aliens have appeared in Kyushu and they’re making short work of the Protectors! Will Harumi be strong enough to protect the Chosen by herself? And why isn’t Muryou around when he’s needed the most?', 134, 19, 394041, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3849, 'Please Look Up the Sky', 'There’s a mysterious new student wandering around in Tenmo. All that’s known about this pale-skinned, green-eyed newcomer is his name: Kanata. But while Momoe and the others try to dig up information on him, he’s busy tracking down Muryou! Is he a friend or a foe?', 134, 22, 394044, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3850, 'Federation and League', 'It’s a day like any other in Tenmo… except that a gigantic spaceship is now hovering low in the skies over the town. While most people are in a frenzied panic, the natives of Tenmo are strangely calm - until a second spaceship closes in and the two ships face-off!', 134, 23, 394045, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3851, 'The Ones Which Are Here', 'With the looming alien threat, school has been cancelled… but that hasn’t stopped the students of Misumaru Middle School from making their own plans for the day! Danger surrounds them, but it will be a day of revelation both for the people of Tenmo, and the world.', 134, 24, 394046, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3852, 'An Empty Soul Awakens', 'Nayuta is forced to take drastic action. As she pushes the power of the Shingu farther than ever before, the Shingu’s darkest secret will finally be revealed.', 134, 25, 394047, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3853, 'The War Record Continues', '…you didn’t really think we’d tell you how it ends, did you?', 134, 26, 394048, 362);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3854, null, null, 135, 6, 394057, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3855, null, null, 135, 1, 394072, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3856, null, null, 135, 2, 394077, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3857, null, null, 135, 3, 394080, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3858, null, null, 135, 4, 394081, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3859, null, null, 135, 5, 394083, 363);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3860, null, null, 135, 1, 738521, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3861, null, null, 135, 2, 738531, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3862, null, null, 135, 3, 738541, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3863, null, null, 135, 4, 738551, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3864, null, null, 135, 5, 795381, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3865, null, null, 135, 6, 865681, 364);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3866, null, null, 135, 1, 4112465, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3867, null, null, 135, 2, 4112466, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3868, null, null, 135, 3, 4112468, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3869, null, null, 135, 4, 4112469, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3870, null, null, 135, 5, 4112470, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3871, null, null, 135, 6, 4112471, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3872, null, null, 135, 7, 4112472, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3873, null, null, 135, 8, 4112473, 365);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3874, 'Tests and Jests', 'Jane has her knight in training ''rescue the damsel'' test. It is a difficult challenge that she must meet in order to carry on her apprenticeship as a knight. But the challenge becomes more complicated when Jane makes a pact with the King to protect her friend, Pepper. If Jane fails, she sacrifices her bid to become a knight and faces a future in…the kitchens!', 136, 1, 394055, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3875, 'Tooth Fairy Tale', 'Dragon has a toothache and decides to have the tooth pulled only after hearing Jane’s tooth fairy story. When Gunther steals the Dragon tooth, Dragon discovers there is no tooth fairy. Jane sets out to rebuild Dragon’s wounded pride and their unique friendship. ', 136, 2, 394056, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3876, 'Jester Justice', 'Jester’s hysterical impression of Sir Ivon leads to a face-saving duel between the two foes. Jane is mortified, Jester is terrified and Jane''s efforts to save her friend from public doom seem, well, doomed! Luckily, Jester discovers that he can choose the weapon… ', 136, 3, 394058, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3877, 'A Dragon''s Tail', 'Dragon is feeling sick, very sick, with…a pig disease--curly tail. It is curable, but the antidote is a difficult quest away. Jane volunteers to go for the sake of her dear friend, and Sir Theodore sends Gunther with her to build their skills as knights. Meanwhile, Dragon is proving to be a very difficult patient.', 136, 4, 394059, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3878, 'Shall We Dance', 'Gunther insists that Jane isn’t good enough to become a real knight and Jane is determined to prove him wrong. Jane is so determined that she misses the annual Ball and sets about trying to capture a flower thief. ', 136, 5, 394060, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3879, 'The Offer', 'Jane rushes to defend her friend Dragon, whose clumsiness is causing many problems around the castle. Jane concocts a story and lets her friends know that she and Dragon have received an offer to move to a castle where they love dragons.', 136, 6, 394061, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3880, 'Dragon Rules', 'On their day off, Jane and her friends have the chance to play bandyball. Dragon joins in the game but is a disaster. Jane manages to get the others to involve Dragon as referee but playing a physical and noisy game like bandyball without disturbing the dozing King is extremely tricky.', 136, 7, 394062, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3881, 'All Fool''s Day', 'Jester''s favorite day of the year - All Fools Day - is here but Dragon threatens to ruin the fun with his terribly unfunny pranks. Jane is determined to pull a prank on Dragon but he proves to be a very difficult target.', 136, 8, 394063, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3882, 'Dragon Diva', 'Jester is the King’s best hope for winning the inter-kingdom competition of song. However, Jane’s overenthusiastic coaching results in Jester losing his voice. Hope is rekindled when Jane overhears a talented voice but unfortunately she cannot find the singer. Eventually, it turns out that Dragon is the silver throated singer but the problem is that singing is simply not acceptable dragon behavior. ', 136, 9, 394064, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3883, 'Adventures in Royal Babysitting', 'When the King and Queen are gone for the day on royal business, Jane is entrusted with “protecting the royal heirs”. Unfortunately, babysitting the bratty Prince and playful Princess wreaks havoc on Jane’s plan to study for one of Sir Theodore’s knighthood tests. Jane asks Dragon to keep an eye on the two children but he manages to misplace the Princess in a game of hide n’ seek.', 136, 10, 394065, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3884, 'Three''s a Crowd', 'When Gunther pulls a practical joke on Jane, Dragon discovers he and Gunther share a similar sense of humor: lowbrow. Jane begins to feel left out, so she enlists Jester to give her a crash course on crass humor. Will Dragon see that The Merchant is using this new relationship for his own gain?', 136, 11, 394066, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3885, 'A Pig of a Problem', 'When Smithy''s pig bites the Prince, the King decides that Pig must be tethered. Smithy is devastated - Pig is his pet and friend. When the King sells Pig to the merchant, Smithy''s problems multiply', 136, 12, 394067, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3886, 'A Thing of Beauty', 'The King commissions a beautiful portrait of the Queen and Jane is entrusted to guard it before the grand unveiling gala. When Jane leaves her post to check in on Dragon, the Queen''s portrait is left unattended.', 136, 13, 394068, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3887, 'Rune', 'With the three-hundredth anniversary of the castle approaching, Jane and Gunther are given an important chore to prepare for the Royal Jubilee. Whichever squire polishes more of the castle''s myriad of shields will win the honor of carrying the banner in the Jubilee Parade. At the same time, Dragon wants Jane to come to his cave to help him decipher the carvings on his wall.', 136, 14, 394069, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3888, 'Foul Weather Friends', 'While out on patrol, Dragon''s spontaneous loop de loop causes Jane to slip off and free-fall through the air. Dragon manages to save her in the nick of time but is shaken by the experience. He vows that no harm will come to her and becomes something of an overprotective parent. Jane rebels against his suffocating affection and unlocks one of the secrets of her runic sword.', 136, 15, 394070, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3890, 'Pride and Pollen', 'The scheming Merchant concocts a plan to get rid of Dragon once and for all. ', 136, 17, 394073, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3891, 'Knight Light', 'When Jane finds herself trapped in the privy at night, with no candle and a squeaky bat, she develops a sudden fear of the dark. To make matters worse, Sir Ivon and Sir Theodore have built a hedge maze outside the castle which Jane and Gunther must negotiate at night.', 136, 18, 394074, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3892, 'Fathers', 'An adventure in a newly discovered underground chamber allows Jane and Dragon to learn a little more about each of their fathers.', 136, 19, 394075, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3893, 'Strawberry Fool', 'When the Princess comes down with a cold, the King puts Jane in charge of cheering her up. Unfortunately, one by one, Jane''s elaborate plans go awry.', 136, 20, 394076, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3894, 'Go West Young Gardener', 'When Jane finds out that the King is bored with Pepper''s cooking and that Rake has never travelled far beyond the castle, she figures that she can solve two problems with one Dragon flight.', 136, 21, 394078, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3895, 'Mismatched', 'When Jane and Gunther get out of hand, Sir Theodore decides to settle their differences in the sparring arena. But when Pepper mistakes the two competitors tussling for hugging, she inadvertently starts a rumour that Jane and Gunther are sweethearts.', 136, 22, 394079, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3896, 'Dragon''s Egg', 'The Merchant''s new consignment of supplies contains an incredible object - a dragon''s egg. But is it really a Dragon''s egg?', 136, 23, 394082, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3897, 'King''s Knight', 'It is a proud day for Jane. The squires and knights must make their annual pledge of allegiance to the King. The day gets more exciting when Jane and Jester find a map of the catacombs and set off on a mission to find what they hope is treasure. Instead they stumble upon a terrible secret. Can Jane swear allegiance to the King if she have doubts about the current King''s legitimacy?', 136, 24, 394084, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3898, 'The Last of the Dragon Slayers', 'When Sir Theodore assigns Jane the menial task of cleaning his sword, Gunther gloats over getting the easier task of Sentry duty. Dragon accuses Theodore of playing favorites, but Jane defends her mentor... until she discovers a broken sword in Sir Theodore''s quarters with mysterious runes on its hilt.', 136, 25, 394085, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3899, 'For Crying Out Loud', 'Jane tries to master her battle cry - to call out above the din of battle. Meanwhile, the Royal boar hunt is on and the squires are invited to join. Dragon cannot believe Jane will not stand up for the defenceless boar.', 136, 26, 394086, 366);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3900, 'Episode 1', 'Professor George Huntley prepares for his wife Phoebe''s possible move to work in Paris during the week. While he is more than happy that their seven year old son Jamie continues to be educated at the local state primary school, Phoebe is not and is bending every rule she can in a desperate attempt to secure him a place at a top Catholic private school. This includes pretending to be Catholic by attending mass every Sunday. Meanwhile, George volunteers to take charge of his son''s class after the teacher is taken ill and finds it is a hotbed of racism and bigotry. When he loses his temper with the worst pupil, mayhem results.', 137, 1, 394096, 367);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3901, 'Episode 2', null, 137, 2, 394097, 367);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3902, 'Episode 3', null, 137, 3, 394098, 367);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3903, 'Episode 4', null, 137, 4, 394099, 367);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3904, 'Episode 5', null, 137, 5, 394100, 367);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3905, 'Episode 1', 'The exposure of David Copperfield''s "Walking Through The Great Wall." 
Includes:
   1. Death Saw
   2. De Kolta Chair
   3. Turning a Bentley into a Lamborghini
   4. Making a String Quartet Disappear
   5. Passing Through a Steel Wall', 138, 1, 394101, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3906, 'Episode 2', '1. Making a Girl Vanish from a Table
2. Levitating a Girl on a Floating Table
3. Dismemberment
4. Making a Girl Appear from a Set of Clothing
5. Making an Elephant Appear in an Empty Parking Lot
', 138, 2, 402351, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3907, 'Episode 3', '1. Head Being Cut off by a Guillotine
2. Making a Girl Disappear from a Cabinet
3. Houdini Milk Can Escape
4. Making Dancers Disappear from a Stage
5. Chain Through Neck
6. Levitating from Building to Building
', 138, 3, 402352, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3908, 'Episode 4', '1. Making a Bomb Squad Car Disappear
2. Assistant''s Revenge
3. Sawing a Girl in Half in a Torture Device
4. Sticking a Rose Through a Girl
5. Passing Through a Turbofan
', 138, 4, 402353, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3909, 'Episode 5', '1. Making a Woman Disappear From a Cabinet and Reappear Somewhere Else
2. Passing Through a Steel Plate
3. The Twister
4. Impaling a Woman With a Sword
5. Surviving Being Cut Up in a Wood Chipper
', 138, 5, 430795, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3910, 'Episode 6', '1. Teleporting From One Oil Drum to Another
2. Topsy-Turvy (Flipping a Box But Not the Girl Inside It)
3. Magically Writing On a Slate Board
4. Cutting a Girl In Three
5. Teleportation
', 138, 6, 430796, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3911, 'Episode 7', '1. Levitating a Girl on a Table
2. Making Girls Appear in a Crystal Cylinder
3. "Twilight Zone" Door
4. Disembodied Princess (Removing the Magician''s Torso)
5. Impaling a Girl on a Spike
', 138, 7, 430797, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3912, 'Episode 8', '1. Houdini''s Magic Trunk
2. Making a Girl''s Middle Disappear
3. Evil Spirit Pyramid - Conjuring Spirits
4. Catching a Selected Card in the Air with a Sword
5. Escaping the Blades of Death
', 138, 8, 430798, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3913, 'Episode 9', '   1. Magic Barrel (Through the Eye of a Needle)
   2. Houdini''s Fish Bowl
   3. Playing Card Through Street Window
   4. Asrah levitation
   5. Making Girls Appear In Mid Air
   6. Holding Breath Under Water For 18 Minutes
', 138, 9, 437134, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3914, 'Epsiode 10', 'includes
   1. Making a 1200cc Motorbike Disappear in Mid Air
   2. Spinning a Girl Upside Down
   3. Spirit Room with Disappearing Medium
   4. Levitating a Foot off the Floor
   5. Lighting a Bulb Without Power
   6. Making a 5 Ton Military Vehicle Appear From Nowhere (In an Empty Parking Lot)
', 138, 10, 437135, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3915, 'Epsiode 11', 'includes
   1. Woman Vanishes From Steel Plate In Mid Air
   2. Crushing A Woman With A Steel Plunger
   3. Transformation Of Skeleton To Dummy To Woman
   4. Floating Through A Solid Steel Frame (No Wires)
   5. Penetrating A Plate Glass Window
', 138, 11, 437136, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3916, 'Episode 12', '1. Producing Girls From Within 3 Sided Screen
2. Making Live Birds Appear And Vanish From Boxes
3. Crushing A Woman And Putting Tube Through Her Body
4. 16 Ton Trolley Car Levitates And Disappears
', 138, 12, 441480, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3917, 'Episode 13', '1. Making A Girl Vanish In A Giant Game Of Three Card Monte
2. Creating A Woman From A Cloud Of Smoke
3. Hand Being Cut Off In Guillotine
4. Dividing A Woman In Three And Head Over Heels
5. Walking On Water (Surrounded By Spectators)', 138, 13, 441481, 368);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3918, 'Breaking the Magician''s Code 1', '   1. Lady to Tiger,
   2. Levitation,
   3. Chinese Lantern,
   4. Zig Zag Girl,
   5. Exploding Packing Crate,
   6. Sawing a Woman in Half (Selbit''s Sawing),
   7. Sword Basket,
   8. Metamorphosis,
   9. Vanishing Elephant', 138, 1, 430799, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3919, 'Breaking the Magician''s Code 2', '   1. Crusher,
   2. Teleportation,
   3. Lady of Steel,
   4. Suit of Armor,
   5. Shooting an Arrow Through a Woman,
   6. Switching Places,
   7. Box of Pain,
   8. Water Torture Escape
', 138, 2, 430800, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3920, 'Breaking the Magician''s Code 3', '   1. Table of Death,
   2. Stretcher,
   3. Knife Throwing,
   4. Haunted House,
   5. Bullet Catch,
   6. Mismade Girl,
   7. Vanishing Tank
', 138, 3, 430801, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3921, 'Breaking the Magician''s Code 4', '   1. Car Crusher Escape,
   2. Cremation,
   3. Spike Torture,
   4. Guillotine,
   5. Buried Alive,
   6. Death Trap
', 138, 4, 430802, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3922, 'Breaking the Magician''s Code 5', '   1. Sawing Through a Woman with a Buzz Saw,
   2. Making an Assistant Disappear,
   3. Broom Suspension,
   4. Going Through the Portal,
   5. Disappearing Dumptruck,
   6. Frozen Alive
', 138, 5, 430803, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3923, 'Secrets of Street Magicians Finally Revealed', 'A street magician, while hiding his identity, breaks the magician''s code and reveals how several magic tricks are performed. The tricks that he reveals is: Levitation, card Magic, mentalism, levitate a small object, raven vanish, pulling the head of bird, card prediction, Shinko''s arm twist, math magic, David Blaine''s fly resurrection, two card monte, sharpie mentalism gimmick, the time machine, cigarette through coin, and more.', 138, 6, 4303805, 369);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3924, 'DNA', 'Morgan Buffkin teams up with Julia Miller to investigate the secrets of his past. Corrupt Detective Yapp is close on his tail as Morgan tries to find clues to help him uncover a secret that will lead him to a better life. ', 139, 1, 394107, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3925, 'Sub-Prime', 'Morgan and Julia''s research leads Morgan to believe that he may not be related to any of his siblings, thus implying that he may possibly not be a Buffkin. Meanwhile, Brandy and Mike find themselves arguing over Mike''s money problems, and Morgan is forced to confront loan business rival Manny Mamayo when Mamayo''s shady methods are brought to light.', 139, 2, 394109, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3926, 'Collateral Damage', 'While Julia is busy wondering what the reason behind her lab partner''s strange behavior may be, Morgan confronts Bobbette about the flaws in her stories about his childhood. Meanwhile, Mike has an inconvenient encounter with Prestige''s new rivals when they come to collect.', 139, 3, 394110, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3927, 'Chock Full O'' Nuts', 'Morgan, knowing now that he is adopted, sets out on a search for the true details about his past. Bobette gives him a small detail about his adoption, but still keeps him close since she needs his help in the family business. ', 139, 4, 397398, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3928, 'Extra Mayo', null, 139, 5, 917071, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3929, 'Bassmaster', null, 139, 6, 917081, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3930, 'Bella Roma', null, 139, 7, 917091, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3931, 'Bags, Bangles & Booty', 'Marijuana growers Dan and Melody McBride are unable to pay back their loan from Prestige because they are being blackmailed by Det. Yapp, so Bobette asks Morgan to help them out. But Yapp himself is in a  financial bind between his wife and his girlfriend Tiffany. Meanwhile, Morgan tries to repair his relationship with Julia, who can’t easily excuse Morgan’s work for Prestige. Bobette joins Brandy at Madison’s bridal  shower, where she can’t resist going to great lengths to discredit one of her debtors in front of the other guests. Cooper gets away from his marital troubles by spending a leisurely day with Roy.

', 139, 8, 917101, 370);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3932, 'Hus att hyra', 'Familjen Olsson bestämmer sig för att hyra ett hus på landet över julen, när de istället hittar "Greveholms slott" samtidigt som ett par tjuvar bryter sig in i samma slott.', 140, 1, 394205, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3933, 'Ett märkligt slott', null, 140, 2, 394206, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3934, 'Spökchock', null, 140, 3, 394207, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3935, 'Att tämja ett spöke', null, 140, 4, 394208, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3936, 'En konstig familj', null, 140, 5, 394209, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3937, 'Fällan', null, 140, 6, 394210, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3938, 'Drängen och betjänten', null, 140, 7, 394211, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3939, 'Ögonmått och synvinkel', null, 140, 8, 394212, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3940, 'Oväntat besök', null, 140, 9, 394213, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3941, 'Greve von Dy:s menuett', null, 140, 10, 394214, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3942, 'Skattjakten', null, 140, 11, 394215, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3943, 'Spöktimmen', null, 140, 12, 394216, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3944, 'Lucia', null, 140, 13, 394217, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3945, 'Skatten', null, 140, 14, 394218, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3946, 'Lekande lätt', null, 140, 15, 394219, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3947, 'Melittas nya vänner', null, 140, 16, 394220, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3948, 'Det var en gång...', null, 140, 17, 394221, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3949, 'Spejaren', null, 140, 18, 394222, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3950, 'En riktig hjälte', null, 140, 19, 394223, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3951, 'Lillan får en idé', null, 140, 20, 394224, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3952, 'Den sista striden', null, 140, 21, 394225, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3953, 'Dioda', null, 140, 22, 394226, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3954, 'Dan före dan', null, 140, 23, 394227, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3955, 'Jul på Greveholm', null, 140, 24, 394228, 371);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3956, null, null, 140, 1, 4363410, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3957, null, null, 140, 2, 4363411, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3958, null, null, 140, 3, 4363412, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3959, null, null, 140, 4, 4363413, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3960, null, null, 140, 5, 4363414, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3961, null, null, 140, 6, 4363415, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3962, null, null, 140, 7, 4363416, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3963, null, null, 140, 8, 4363417, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3964, null, null, 140, 9, 4363418, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3965, null, null, 140, 10, 4363419, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3966, null, null, 140, 11, 4363420, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3967, null, null, 140, 12, 4363421, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3968, null, null, 140, 13, 4363422, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3969, null, null, 140, 14, 4363423, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3970, null, null, 140, 15, 4363424, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3971, null, null, 140, 16, 4363425, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3972, null, null, 140, 17, 4363426, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3973, null, null, 140, 18, 4363427, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3974, null, null, 140, 19, 4363428, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3975, null, null, 140, 20, 4363429, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3976, null, null, 140, 21, 4363430, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3977, null, null, 140, 22, 4363431, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3978, null, null, 140, 23, 4363432, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3979, null, null, 140, 24, 4363433, 372);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3980, null, null, 140, 1, 4465302, 373);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3981, 'The Gift', 'William Jones meets the maid Emma at his old governess'', Kelly Stownar''s house. William falls in love with Emma and looks for opportunities to meet her again, wanting to give her a present. ', 141, 1, 394275, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3982, 'Two Worlds', 'William meets Eleanor as she debuts in society at a ball he is forced to attend by his father. When he buys a parasol for Emma later on when together with Eleanor, Grace, Vivi and Eleanor misunderstand, thinking the parasol is for Eleanor. ', 141, 2, 394276, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3983, 'Confession', 'Prince Hakim comes to visit William in London. On an elephant ride through town, William becomes motion sick and ends up recuperating at Kelly Stownar''s house. Hakim also falls in love with Emma, and confesses to her.', 141, 3, 394278, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3984, 'Mudie''s', 'Hakim and William meet Emma while browsing the erotic literature section at Mudie''s. William coaches Eleanor in tennis. ', 141, 4, 394279, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3985, 'Dinner Party', 'Kelly is fixing up her apartment in preparation for visitors, but ends up having dinner with Emma and Al as the Knoxes had to cancel their appointment. ', 141, 5, 394280, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3986, 'The Visit', 'As William continues to court Emma, his father decided to pay Mrs. Stownar an appreciation visit together with William. ', 141, 6, 394281, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3987, 'Crystal Palace', 'Emma takes time off from work and goes to visit the Crystal Palace together with William. They end up missing the closing time and have to stay at the pavilion overnight. ', 141, 7, 394282, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4118, null, null, 145, 13, 394563, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4119, null, null, 145, 14, 394564, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3988, 'Pocketwatch', 'Emma takes Kelly''s pocket watch for repair. However, when she returns, Kelly has already passed away. William tells his father about Emma and meets with strong opposition. ', 141, 8, 394283, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3989, 'Alone', 'Kelly Stownar''s funeral is being held, and Emma reminiscences about their life together while cleaning up the apartment. Meanwhile, William attends a dinner party with Eleanor.', 141, 9, 394284, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3990, 'Missing One Another', 'Emma comes to visit William at his estate, but he is out searching for her. Just as she is about to leave, William returns, and the situation turns into a scandal with his father. ', 141, 10, 394285, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3991, 'Past', 'William''s father is scheming with Mrs. Campbell to set up William and Eleanor. Meanwhile, William goes to look for Emma and ends up hearing her childhood story from Al. ', 141, 11, 394286, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3992, 'Lily of the Valley', 'William leaves a surprised Eleanor behind to go to the train station and stop Emma from leaving. However, he arrives too late. ', 141, 12, 394287, 374);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3993, 'A New House', 'Eleanor, still in love with William, runs into him at an outdoor party. Meanwhile Emma, who has taken up work at a large countryside estate belonging to the Mölders family, immigrants from Germany, is being falsely accused of theft.', 141, 1, 514871, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3994, 'Moonlight', 'William visits the Crystal Palace with Eleanor and his siblings, but memories from his last visit together with Emma prevent him from concentrating on Eleanor. Meanwhile, the Mölders celebrate Ilse''s birthday. That evening, the servants of the estate have a private feast. ', 141, 2, 514881, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3995, 'Cool Rain', 'Dorothea Mölders visits her friend Mrs. Trollope together with Emma. William, scolded by his father for neglecting his duties, attends a charity performance of Romeo and Juliet in Grace''s stead, not knowing that Eleanor will be there too. Eleanor chases after William. ', 141, 3, 514891, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3996, 'Courtship', 'The Molders plan on visiting London and intend on taking Emma. Emma tries to get out of it. William begins to court Eleanor. Eleanor''s fiery, older sister, Monica, comes to London for vacation. ', 141, 4, 514901, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3997, 'Embrace', 'Mrs. Molders and Emma are out shopping when they come across Mrs. Trollope. Mrs. Molders insists on Emma attending Mrs. Trollope to an engagement party for her eldest son. Meanwhile, William and Eleanor plan their engagement party. ', 141, 5, 514911, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3998, 'Success and Loss', 'Emma and Mrs. Trollope attend the engagement party for her son, who turns out to be William, Mrs. Trollope''s real name being Mrs. Jones. When Emma, not wearing her glasses, finds out whats going on, she faints in front of William. ', 141, 6, 514921, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (3999, 'Evening Waves', 'After spending the night with William, Emma flees to Mrs. Jones first thing in the morning and tells her the whole story. William chases after her but arrives just too late. He decides to cancel the engagement with Eleanor. Emma, full of regrets, runs off from the Mölders household after overhearing the other maids gossiping about the cancelled engagement and Hans is sent to bring her back. ', 141, 7, 514931, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4000, 'Whereabouts', 'Emma runs away from Hans. Hans follows Emma to the place she has born.They spend the night together. Eleanor goes to Williams'' house with Prince Hakim. Eleanor cries and runs away after talking to William. After returning home, Emma and Hans are called. Hans covered up Emma. ', 141, 8, 514941, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4001, 'Resolution', 'Mrs. Trollope visits Mrs.Molders and asks about Emma. Eleanor tries to forget about William. Viscount Campbell formally annul the engagement between William and Eleanor. William visits her mother, Mrs. Trollope,asking where Emma is. William finds Emma and ask her to marry him. ', 141, 9, 514951, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4002, 'By the Window', 'William tries hard to save his father''s company. William visits Emma and sends her letters. Emma does not meet and open his letters. Hans brings Emma to town on her day off. Hans ask Emma to marry him. William visits Emma again. He talks to Emma through the windows of her neighbour. He wants Emma to meet him in Crystal Palace in one weeks time to give him answer. ', 141, 10, 514961, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4003, 'Time', 'Viscount Campbell push on to the investors, making Jones Company facing hardship. However, William tries to finds more investors for the sake of his family. After visiting her former employer,Kelly Stowner''s house, she finds that Molders house is on fire. She runs back to the house. ', 141, 11, 514971, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4004, 'Flower', 'Emma tries to save the handkerchief which William gives to her but is stopped by Hans. William continues to find more investors. Finally, he collect enough money for his company. He rushes to the Crystal Palace. Emma runs to the Crystal Palace after knowing her true desire. Again, William asks Emma to marry him. Emma agrees and is later blessed with 4 children. ', 141, 12, 514981, 375);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4005, 'Intermission', 'Recap episode of season one.', 141, 1, 514991, 376);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4006, 'Bunny Love', 'The Warden plans to dress the prisoners in bunny suits. However, the Twins interfere with the purchase order, causing half of the order to be for wolf suits. When dressed in these suits, the prisoners take on the characteristics of their respective animals, causing a bloodbath.', 142, 1, 394375, 377);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4007, 'Comin'' Home Music Video', null, 142, 2, 4244686, 377);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4008, 'Winner Music Video', null, 142, 3, 6259906, 377);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4009, 'Superbar', 'The Warden opens a bar in Superjail, the Superbar, in an attempt to get a date with Alice. Things take a turn for the worse when Jared falls off the wagon and becomes drunk.', 142, 1, 394376, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4010, 'Combaticus', 'The Warden and his staff unearth an ancient fighting arena. It is reactivated in an effort to decrease the high inmate depression level and becomes a Thunderdome-like chance for the inmates to fight to the death for freedom. The Twins attempt to sabotage the arena with Combaticus, a fighter created from their DNA.', 142, 2, 394457, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4011, 'Ladies Night', 'A carrier ship for the female prison "Ultraprison" crash-lands in Superjail. Ultraprison''s "Mistress" and the Warden arrange a ball for their inmates as part of a bet to see which set of convicts can act more refined. The Warden gets to keep the female prisoners if he wins the bet; if the Mistress wins, she gets Superjail.', 142, 3, 399737, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4012, 'Cold-Blooded', 'An Ed Gein-like serial killer is mistakenly captured by Jailbot instead of Jacknife, putting Superjail on edge. To investigate his grip on the inmates, the Warden sends Jared undercover as a inmate. When the new arrival accidentally kills himself, Jared takes the credit and becomes admired by inmates as Superjail''s most violent resident. Meanwhile, the Twins hack into Jailbot and control him like a video game.', 142, 4, 399819, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4013, 'Don''t Be a Negaton', 'The Warden invites his favorite motivational speaker, D.L. Diamond, to Superjail.', 142, 5, 399820, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4014, 'Terrorarium', 'The Warden holds a science fair and declares himself the winner for inventing the Terrorarium, a snowglobe containing miniature jungle filled with dangerous, carnivorous insects.', 142, 6, 399821, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4120, null, null, 145, 15, 394565, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4121, null, null, 145, 1, 394566, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4122, null, null, 145, 2, 394567, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4123, null, null, 145, 3, 394568, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4124, null, null, 145, 4, 394569, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4015, 'Mr. Grumpy-Pants', 'Jacknife''s latest crime results in him accidentally kidnapping a little girl with cancer as Jailbot drags him back to Superjail. A disfigured inmate, discovering it is the girl''s birthday, decides to throw her a party. Meanwhile, the Warden conjures his gremlin-like inner child, which tries to kill the girl, as she makes him feel old. ', 142, 7, 399822, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4016, 'Dream Machine', 'The Warden tries to stop a riot by monitoring the inmates'' dreams.', 142, 8, 399823, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4017, 'Time-Police (1)', 'Faced with overcrowding in his prison, the Warden decides to make Superjail into a franchise, but is arrested by the Time Police to stand trial for devastation this decision causes. ', 142, 9, 399824, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4018, 'Time-Police (2)', 'With the Warden missing, the Superjail staff tries to make it in the real world. Meanwhile, the inmates of Superjail adopt a peaceful, pastoral lifestyle as they await the Warden''s return.', 142, 10, 399825, 378);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4019, 'Best Friends Forever', 'Jailbot, while carrying Jacknife, is shot down in hostile territory. Jared and Alice end up running a gambling ring with the inmates over who will kill the other/survive longer. Meanwhile with the Warden, he tries to live without Jailbot, and do Jailbot''s duties around the jail. In the end he goes crazy, and convinces himself he is Jailbot. This episode is the third in which Jacknife in not imprisoned in Superjail. ', 142, 1, 3977251, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4020, 'Mayhem Donor', 'An Accident in the Jail causes Jared to mutate. Meanwhile, the Warden''s plans to sell organs on the black market backfires when the stored organs fuse into a monster that goes on a rampage through the jail.', 142, 2, 4076439, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4021, 'Lord Stingray Crash Party', 'A surprise castaway seems like the perfect friend for The Warden, but this new visitor may just have ulterior motives underneath his warm exterior. ', 142, 3, 4076453, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4022, 'Hotchick', 'The Warden appoints a new security guard to the jail. The Twins are incredibly anxious about the new guard, as they seem to have past relations with her.', 142, 4, 4076454, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4023, 'Gay Wedding', 'Two inmates, Jean and Paul, decide to take their relationship to the next level and get married in the romantic halls of Superjail! When the Warden learns of the plans, he and Alice intervene, taking over the finer details of the wedding with excitement and fervor.', 142, 5, 4086869, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4024, 'Ghosts', 'Things have been getting freaky in Superjail! Blood is dripping down the walls, random objects are floating, skulls and spirits are showing up in pictures. It seems Superjail! is haunted! It''s up to the Warden to get to the bottom of this and get rid of these ghosts once and for all. ', 142, 6, 4091108, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4025, 'Jailbot 2.0', 'Jailbot is starting to show his age. And when Jared buys a sleek new replacement online, it might be time to put the Warden''s beloved old companion down-into storage.', 142, 7, 4091109, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4026, 'The Budding of the Wurbuxx', 'The Warden suspects the inmates are on drugs after his movie night flops; Alice helps the Twins with a sensitive issue.', 142, 8, 4091110, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4027, 'Superjail Grand Prix', 'The annual Superjail Grand Prix is held, with the winner being offered their freedom from the prison. However, the Warden competes with the help of a kidnapped ringer. The Warden''s team gets into a clash with Lord Stingray right at the race''s end, and as the Warden and Stingray fell out of the cars, Jacknife—who was in the Warden''s trunk—wins and is released. ', 142, 9, 4098616, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4028, 'Vacation', 'The Warden takes the inmates and staff on a pleasure cruise aboard his ship.', 142, 10, 4098617, 379);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4029, 'Stingstress', 'Superjail is taken over and becomes co-ed. The Warden has to rise back to power with a little help. ', 142, 1, 4407615, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4030, 'Superfail', 'Jared fails miserably as the temporary Warden of Superjail. ', 142, 2, 4407616, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4031, 'Uh-Oh, It''s Magic', 'The Warden runs a magic show until he has problems when his ventriloquist dummy becomes the star of their show. ', 142, 3, 4418404, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4032, 'Sticky Discharge', 'Superjail finally must deal with their first parolee. ', 142, 4, 4423140, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4033, 'Special Needs', 'The Warden completes construction on making Superjail handicap accessible. ', 142, 5, 4423678, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4034, 'Troubles with Triples', 'The Warden''s new plans for Superjail are interrupted by visitors for the Twins. ', 142, 6, 4423679, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4035, 'Nightshift', 'An inmate''s final meal causes Alice to rethink her career. ', 142, 7, 4423680, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4036, 'Oedipus Mess', 'A cloning experiment in Superjail causes a mass riot. ', 142, 8, 4436207, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4037, 'Planet Radio', 'When a pirate radio station hits Superjail, the Warden fights back with some programming of his own.', 142, 9, 4436208, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4038, 'Burn Stoolie Burn', 'The Warden learns a little about friendship and a lot about fire from an inmate. ', 142, 10, 4452283, 380);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4039, 'Superhell!', 'The Warden, with the help of a disfigured inmate named Ash, continue their arson spree across Superjail. Meanwhile, Alice and Stingray get lost on a planet full of vicious monsters.', 142, 1, 4890004, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4040, 'Last Pack', 'After Warden comes to his senses and puts out the fires across Superjail, he begins blaming the whole thing on cigarettes. This prompts him to ban the use of tobacco products throughout the entirety of Superjail, which leads to some inmates to go to drastic measures in order to obtain their "buzz".', 142, 2, 4915687, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4041, 'Jean, Paul, Beefy and Alice', 'After spotting two Peacocks together during mating season while hunting Jacknife through Africa, Jailbot becomes obsessed with finding love. The Twins capitalize on this and hand Jailbot a strange alien fungus with humanoid features which he promptly falls in love with. The fungus begins giving off mold spores infecting everyone in Superjail turning them into horrendous mutated monsters with a similar appearance as to itself.', 142, 3, 4915992, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4042, 'The Superjail Inquisitor', 'While the Warden is building a new dam in Superjail several inmates start to run a tabloid newspaper called the Superjail Inquisitor. The Warden is astonished by one of the fake articles and believes that his favorite childhood monster, "Manglefang" may be lurking in Superjail. This prompts the Warden to suspend construction and go on a massive hunt for Manglefang and torturing anyone who refuses to believe in it. The Twins then discover an article made by Ash about aliens, so they modify the image in the newspaper and then send it to the Triplets in space. The Triplets arrive on Earth in response, and in a fit of rage they make every fake article ever written in the tabloid (including Manglefang, to Warden''s delight) manifest in reality resulting in chaos and the arrival of the Four Horsemen of the Apocalypse to Superjail.', 142, 4, 4920370, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4060, 'Box', 'A department store executive disappears after being falsely accused. Unfortunately, he isn''t the only one who disappears. Jun is called in to handle this situation in an all too public department store building, all just in time for Christmas. Jun discovers his box as well as her own…', 144, 11, 394492, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4125, null, null, 145, 5, 394570, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4126, null, null, 145, 6, 394571, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4127, null, null, 145, 7, 394572, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4128, null, null, 145, 8, 394573, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4129, null, null, 145, 9, 394574, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4130, null, null, 145, 10, 394575, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4043, 'Superstorm!', 'It''s Superjail''s annual Field Day, and Warden is dead-set on winning the Three-Legged Race this year. As such, he builds himself the perfect partner: A walking weather machine named "Sunshine". Using Sunshine to create weather anomalies that distracts the competitors, Warden cheats his way to victory. However in his gloating Warden breaks his remote controller for Sunshine causing it to develop its own will and abandon Warden. Sunshine promptly creates dangerous weather anomalies all over Superjail, destroying the Candyland section in the process which enrages Warden (as it''s his favorite place in the prison). Meanwhile, Jared is crying over losing Sharice to The Doctor who makes multiple attempts to take his new relationship with her to third base. His plans backfire when Sharice blindly ignores his advances, leading The Doctor to create a Frankenstein-style clone of her with slutty tendencies. Which Jared finds first. In the end, Sharice and Jared reconcile while The Doctor decides to stick to using the Sharice clone he made for his libdo.', 142, 5, 4925257, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4044, 'The Superjail Six', 'During a routine sewer cleaning in Superjail, Stingray discovers a long forgotten secret that Alice and Jared had kept from the Warden. Apparently there were six dangerous inmates (known as the Superjail Six) during Superjail''s early years that managed to escape from prison and make it into the badlands around the jail. After Warden learned of this he shut himself in his office for days due to depression which led to Alice and Jared forcing him to forget the incident. When Stingray learns of this story from one of the older inmates, he sets out with Prison Peedee''s help to drive Warden back into his depression. The plan backfires, however, and Warden falls through the sewer pipes with Stingray and Peedee in tow. While Peedee and Stingray are chained together lost in the bayou the Warden comes across some mutated hillbilly/alligators. After partying with them he angers the entire group by destroying their sacred tree. This leads to a full invasion of Superjail by the Alligator Hillbillies. After Ash ends the invasion with a massive explosion, the last member of the Superjail Six returns to the Jail. Warden promptly kills him.', 142, 6, 4925258, 381);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4045, 'Pro Bull Riders', 'Host Hunter Ellis goes inside the lives of those who live eight seconds at a time -- professional bull riders. ', 143, 1, 394436, 382);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4046, 'Coast Guard Swimmers', 'When accidents occur in the ocean along the unforgiving Alaskan coastline, it''s the U.S. Coast Guard that gets the call for help. Host Hunter Ellis follows the lives of these elite few as they risk their lives to save another. ', 143, 2, 394437, 382);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4047, 'War Photographer', 'This episode takes a look at the lives of Zoriah and Alissa as they document the Israeli Palestinian conflict in Gaza, The West Bank and Israel. Take a fascinating look behind the scenes of war photography and find out the motivations behind this dangerous profession.', 143, 4, 420482, 382);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4048, 'Mine Sweepers', null, 143, 5, 2243801, 382);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4049, 'Live Animal Rescue', null, 143, 3, 2243811, 382);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4050, 'Beast', 'Jun just seems to be going through the motions in her photo shoot, although the photographer seems to think she is doing wonderfully. Jun seems to be having a problem with mirrors and reflections today, even when they are behind curtains. Jun meets Lan Asuka, a mysterious woman, who introduces Jun to the supernatural in an overwhelming way. Kazumi is Jun''s tie to normalcy. Will Jun be able to hang on after being introduced to the beast?', 144, 1, 394482, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4051, 'Blood', 'The battle continues. Jun is called upon to handle more than she ever imagined. She exhibits abilities that were unimagined by the Human Alliance (HA), to meet an unexpected challenge. Jun still can''t believe what is happening and wonders if it was all a nightmare.', 144, 2, 394483, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4052, 'Wings', 'Jun begins to make enemies. Those that would destroy humankind make it clear that Jun and her loved ones are fair game in the war. They cannot understand why she holds onto her inferior human side. Catastrophe strikes someone close to Jun. Jun continues to find new abilities to the surprise of her enemies and the HA.', 144, 3, 394484, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4053, 'Seed', 'Jun is still reeling from previous incidents, and reflects on how she was different from others. She falls into self-pity, as she is seemingly being held captive by the H A, the very organization that utilizes her to destroy other beasts. Jun is leery of people in shadows, thanks to her last encounter.
A new beast with an unusual characteristic is discovered. This new characteristic doesn''t make it any less dangerous. Asuka discovers a new power of Jun''s.', 144, 4, 394485, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4054, 'Shark', 'Thanks to Asuka, Jun has an unplanned reunion with an old friend from high school where they didn''t part in a friendly manner. Jun and her ex-classmate had a difference of opinion on what the relationship should be. It seems that all anger has dissipated, but has it?
Meanwhile Kazumi feels a little left out. But there is no need to worry. Jun''s encounter strengthens the bond to Kazumi.', 144, 5, 394486, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4055, 'Cat', 'Jun experiences a love / hate relationship first-hand, when she meets someone who idolizes her and loves cats. What do you do when you are so talented that you inspire love and hate? You face it head on! Is Jun up to the task?', 144, 6, 394487, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4056, 'Fog', 'With each transformation, the risk increases that Jun will lose her human side. Is it possible that the childhood story of the Grim Reaper will be Jun''s undoing? Recent events take Jun''s thoughts back to the story her grandfather told her hoping she would go to bed. Of course Jun''s curiosity was only increased. Is her next foe The Grim Reaper?', 144, 7, 394488, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4057, 'Enemy', 'The HA continues their attempt to keep the general population from discovering the devil beast phenomenon. A broadcaster attempts to release the news of the devil beasts. Jun is introduced to Dr Jason Bates, an American from the Samuelson Lab. Jason has come to observe the giga effect, which transforms the devil beasts into giants. He doesn''t believe that beasts are inherently evil and that devil beasts can hold on to their human soul. Jun''s confrontation with the broadcaster doesn''t go as planned causing Dr Bates to doubt Jun''s strength. Asuka feels humiliated and berates Jun.', 144, 8, 394489, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4058, 'Eyes', 'Jun dwells upon her previous failure and the disappointments of Asuka and Jason. While looking into a store window, Jun feels someone watching her. Jun finds herself in the park in a photo shoot.
Kazumi is interviewed and photographed. She also meets someone who has an interest in what happened to her family.
Those around Jun begin to question her sanity when she seems to continually feel watched. Is she being watched, or is it just her imagination?', 144, 9, 394490, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4059, 'Flames', 'A large fire at the Sakura Housing Complex looks suspicious. Firemen are surprised to find a a survivor in the rubble. Asuka and Jun disagree on how the small survivor should be treated. Asuka believes the survivor to be a devil beast, since survival would have been impossible otherwise. The fact of the HA having no experience with a devil beast being a child doesn''t temper Asuka''s belief. The Biochemical Investigations Team decides to study the child.
Kazumi reviews a videotape that was sent by Sakazawa. Remembering his earlier comment she wonders about Jun. Jun''s frequent and sudden departures don''t help Kazumi''s confidence in their relationship.', 144, 10, 394491, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4110, null, null, 145, 5, 394555, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4061, 'Faces', 'Jun has visions of a devil beast world. Does her demonic side want such a world? Yuasa offers to lighten Jun''s workload. When Jun runs into Jason in the street, they go to a cavern bar.
Jason accuses Jun of enjoying the kill, and yet calls her weak mentally and physically. Maeda tells Jun that she will need to accompany him as soon as she gets home. The authorities are finding victims with their face missing. Meanwhile, Jason still obsesses over Jun''s and some of the other beasts'' ability to manifest the giga effect. Asuka''s orders reflect her belief that beasts in the giga effect are no longer in control, endangering Jun''s life.', 144, 12, 394493, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4062, 'Rope', 'A man is restrained in a remote residence. A woman entices him.
Jun has a photo shoot with inexperienced model Takai, a high school student that is more intimate than usual. Jun shows interest in a phone call that Yuasa receives during the photo shoot. After the photo shoot Jun acts inappropriately with Takai and shows regret.
Jun sees Sakazawa speaking to Kazumi and Yuasa in separate incidences. She concludes the man is a nuisance.
Asuka picks up Jun and tells her they are going for a ride in the country. She tells Jun they have found a victim with one-third of the blood drained from the body. Will Jun fall into the trap found by this young victim?', 144, 13, 394494, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4063, 'Home', 'Sakazawa remembers his life before the beast obsession. All devil beasts are alike aren''t they? Will Sakazawa always believe this? Kazumi is missing and Jun will do what it takes to find her. Meanwhile, Kazumi realizes she has been used, but isn''t quite sure for what. The HA has their hands full with another beast, and receives unexpected help. The battle between the beast factions now begins to accelerate.', 144, 14, 394495, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4064, 'Crows', 'Kazumi''s conversation after a photo shoot, plants the seeds of remembrance regarding her parents death. Bodies begin to show up on top of lamp posts, utility poles and other odd places. Shiro Kazawa''s warnings replay through Kazumi''s mind. Crows show up in the oddest places. The HA thinks Jun needs a chauffeur. Kazumi once again becomes noticed by the beasts. Jun continues to amaze those who witness her power, but will it be enough to save Kazumi?', 144, 15, 394496, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4065, 'Voice', 'The dead bodies on top of traffic posts continue. The HA begins to have trouble keeping the secret of the devil beasts. Maeda gets directly involved in the fight against devil beasts. Kazumi''s voice is a God-send to Jun.', 144, 16, 394497, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4066, 'Hunger', 'Saturo continues to recruit beasts to his cause. His statement that Jun is hated by the humans seems to be manifesting itself. Jun appears to be losing control of her beast side. Where is Asuka?', 144, 17, 394498, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4067, 'Body', 'The battle between humans and devil beasts is worsening. Jun is surprised by Asuka and Jason. Can Jason keep his human side if he gets his wish? Asuka''s behavior is drawing the attention of the HA.', 144, 18, 394499, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4068, 'Fetters', 'Kazumi is still getting used to the idea of the beasts in the open. Can she learn to trust any devil beast other than Jun? Yuasa is surprised to see Maeda after their last conversation. Maeda becomes more suspicious of Asuka. Jun continues to be a fugitive. The battle with the beast is no longer a secret. Yuasa and Jun temporarily relive a normal work day. Yuasa''s family has a stressful day, while he lives in a fanciful moment.', 144, 19, 394500, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4069, 'Corpses', 'This episode goes to America. This episode Lan gets a new private secretary, Captain Izume Kogure. Maeda gets some American help. Jun meets some old acquaintances that she''s not particularly wanting to see. Jun meets a new more powerful associate of Satoro''s. Maeda discovers Lan''s secret past. Jun and Satoro have a battle of the wills.', 144, 20, 394501, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4070, 'Signs', 'What is this RNA Transmutation Innoculation? Maeda discovers the truth and informs Jun. Kazumi becomes closer to her new friends, but still wants to be with Jun. Will they be reunited? Will Jun be able to overcome the organized beasts?', 144, 21, 394502, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4071, 'Wish', 'Jun receives help from an unexpected source, when defeat is imminent. Will it be enough? Kazumi remembers her first meeting with Jun. Hostility increases between humans and the devil beasts. Devil beasts are rounded up as Satoro gathers his army. Izumi is concerned about Lan Asuka. Jun inspires a fond childhood memory in Kazumi. Kazumi wants to help Jun in a new way. Will she get her wish? ', 144, 22, 394503, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4072, 'Life', 'Jun is legendary among the gentler beasts as the champion of their kind. Kazumi''s influence inspires hope in her recently found friends. They expect Jun to rescue them. Lan''s plan becomes more apparent. Jun faces a beast with unexpected strength. Lan is still involved with the US, but why? What is her relationship to Jun?', 144, 23, 394504, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4073, 'Heart', 'Home is where the heart is. Jun befriends a new young companion who understands Jun''s past too well. Unfortunately Chiyoko doesn''t understand why Jun had to do all that she did. She doesn''t understand the fine line that Jun mustn''t cross.', 144, 24, 394505, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4074, 'God', 'Beasts are kept like prisoners. Asuka can''t wait for Jun''s return. Kiyoko, Misaki, Takae and Takeshi try to avoid extermination in the beast prison. Asuka sends a not so friendly welcoming party when Jun returns to Tokyo. What is the relationship between Jun and Asuka?', 144, 25, 394506, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4075, 'Man', 'Asuka has appeared all over the world and is forcing the world to accept her as the new child of God. Jun awakes in a place like hell and sees all of the demons trapped in a tower forged of demon bodies. Jun decides to forge her soul with the force from the Demons leaving the hell like place to face off with Asuka. A battle of Heaven and Hell begins, but who will be victorious?', 144, 26, 394507, 383);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4076, 'Michka', null, 145, 1, 394515, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4077, null, null, 145, 2, 394516, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4078, null, null, 145, 3, 394517, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4079, null, null, 145, 4, 394518, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4080, null, null, 145, 5, 394519, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4081, null, null, 145, 6, 394520, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4082, null, null, 145, 7, 394521, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4083, null, null, 145, 8, 394522, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4084, null, null, 145, 9, 394523, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4085, null, null, 145, 10, 394524, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4086, null, null, 145, 11, 394525, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4087, null, null, 145, 12, 394526, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4088, null, null, 145, 13, 394527, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4089, null, null, 145, 14, 394528, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4090, null, null, 145, 15, 394529, 384);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4091, null, null, 145, 1, 394536, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4092, null, null, 145, 2, 394537, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4093, null, null, 145, 3, 394538, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4094, null, null, 145, 4, 394539, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4095, 'la plume du caneton', null, 145, 5, 394540, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4096, 'noix de coco cherche un ami', null, 145, 6, 394541, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4097, null, null, 145, 7, 394542, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4098, null, null, 145, 8, 394543, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4099, null, null, 145, 9, 394544, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4100, null, null, 145, 10, 394545, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4101, null, null, 145, 11, 394546, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4102, null, null, 145, 12, 394547, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4103, null, null, 145, 13, 394548, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4104, null, null, 145, 14, 394549, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4105, null, null, 145, 15, 394550, 385);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4106, null, null, 145, 1, 394551, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4107, null, null, 145, 2, 394552, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4108, null, null, 145, 3, 394553, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4109, null, null, 145, 4, 394554, 386);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4131, null, null, 145, 11, 394576, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4132, null, null, 145, 12, 394577, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4133, null, null, 145, 13, 394578, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4134, null, null, 145, 14, 394579, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4135, null, null, 145, 15, 394580, 387);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4136, null, null, 145, 1, 394584, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4137, null, null, 145, 2, 394585, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4138, null, null, 145, 3, 394586, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4139, null, null, 145, 4, 394587, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4140, null, null, 145, 5, 394588, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4141, null, null, 145, 6, 394589, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4142, null, null, 145, 7, 394590, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4143, null, null, 145, 8, 394591, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4144, null, null, 145, 9, 394592, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4145, null, null, 145, 10, 394593, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4146, null, null, 145, 11, 394594, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4147, null, null, 145, 12, 394595, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4148, null, null, 145, 13, 394596, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4149, null, null, 145, 14, 394597, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4150, null, null, 145, 15, 394598, 388);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4151, null, null, 145, 1, 394599, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4152, null, null, 145, 2, 394600, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4153, null, null, 145, 3, 394601, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4154, null, null, 145, 4, 394602, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4155, null, null, 145, 5, 394603, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4156, null, null, 145, 6, 394604, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4157, null, null, 145, 7, 394605, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4158, null, null, 145, 8, 394606, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4159, 'Le tigre en bois', null, 145, 9, 394607, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4160, null, null, 145, 10, 394616, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4161, null, null, 145, 11, 394617, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4162, null, null, 145, 12, 394618, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4163, null, null, 145, 13, 394619, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4164, null, null, 145, 14, 394620, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4165, null, null, 145, 15, 394621, 389);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4166, null, null, 145, 1, 394622, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4167, null, null, 145, 2, 394623, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4168, null, null, 145, 3, 394624, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4169, null, null, 145, 4, 394625, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4170, null, null, 145, 5, 394626, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4171, null, null, 145, 6, 394627, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4172, null, null, 145, 7, 394628, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4173, null, null, 145, 8, 394629, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4174, null, null, 145, 9, 394630, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4175, null, null, 145, 10, 394631, 390);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4176, 'The Ghosts of Chuuk Lagoon', 'The epic journey starts with a week of test dives in Chuuk Lagoon, the site of one of the most dramatic raids of World War II, before heading out to the remote Pacific islands. As their ship, the Big Blue Explorer, hits open ocean, the 2,000-mile journey of discovery is truly underway. ', 146, 1, 394581, 391);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4177, 'In Search of Giants', 'The second programme in the series sees the team of explorers travelling through some of the most remote islands of Micronesia.

Kate Humble''s scuba team encounter spectacular underwater wildlife while the extreme deep divers and scientists dive as deep as humans can without a submersible and continue to find fish that have never been seen before.

In this environment, even the most experienced member of the deep team is not immune to unexpected equipment failure.', 146, 2, 394582, 391);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4178, 'Into the Abyss', 'As the expedition team near the end of their journey across Micronesia, it''s a race against time for the extreme deep divers as they continue their search for new species.

As Kate Humble explores the Rock Islands of Palau, Mike DeGruy embarks on a unique training programme. The Newtsuit is an incredible feat of submarine engineering - a bright yellow one-man submersible that Mike has to master before he can venture even deeper into the Pacific abyss.', 146, 3, 394583, 391);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4179, 'Het Huiselijk Geluk Compleet', 'Bij de zussen Pfaff lijkt het huiselijk geluk compleet. Met elk twee opgroeiende kinderen hangt er voorlopig geen gezinsuitbreiding in de lucht. 

Alhoewel De familie Gooris verwelkomt enkele nieuwe bewoners, en dat is voor Sam en Dobberman Angie nog een beetje wennen. Maar ook Carmen krijgt gezelschap tijdens haar - schaarse momenten van rust in de ouderlijke villa. 

Alhoewel het niet echt heeft gezomerd profiteren de Pfaffs wel met volle teugen van elke zonnige dag. Niet alleen Carmen, maar ook Sam lijkt zich te amuseren met zijn groene vingers. In de nieuwe serre kweekt Carmen enkele bijzonder geslaagde groentes die zich uitstekend lenen voor haar zomerse familiebarbecues. 

Ook de kleinkinderen leven zich naar hartelust uit op het domein van de ouderlijke villa. Liam lijkt de streken van zijn grote broer Keano naadloos te kopiëren. Bruce is dan weer niet op zijn mondje gevallen en is niet vies van een beetje tegenspraak. Fay is meer van het rustige type en ontpopt zich - tot grote vreugde van Lyndsey - tot een waardig prinsesje. 

Ook Shania en Kenji worden groot. Shania is haar prinsessenkleedje ontgroeid en lijkt meer en meer over een eigen willetje te beschikken. Zo moeder, zo dochter dus. Kenji is dan weer ontegensprekelijk de zoon van zijn vader. Wanneer hij samen met Sam op het podium staat is het niet Sam, maar Kenji die de show steelt. 

Maar er moet ook gewerkt worden. Debby en Kelly hebben het druk met de zaak, en ook Lyndsey werkt nog steeds parttime. De mannen proberen hun steentje bij te dragen in het huishouden, waarbij de één daar al beter in slaagt dan de ander. 

Jean-Marie haast zich nog altijd van de ene afspraak naar de andere. Zijn agenda is rijkelijk gevuld met engagementen voor het goede doel, en af en toe waagt el simpatico zich aan een nieuwe uitdaging. Zo moet hij zich tijdens het dubben van een tekenfilm proberen in te leven in de rol van aap. 

Bovenal blijven de gezellige familiemomenten centraal staan in het hectische leven van de Pfaffs. Als een trouwe hond waakt Carmen over haar kroost en zorgt ze ervoor dat de familiebanden regelmatig worden aangehaald. 

Maar tijdens een kampeertripje naar de Ardennen wordt het gezinsgeluk onverwachts overschaduwd. Carmen komt lelijk ten val en moet in allerijl onder het mes. Het verdict is hard. Carmen is voor enkele weken buiten strijd. Gelukkig kunnen de Pfaffs terugvallen op een hechte familieband en slaat iedereen de handen in elkaar om het grote huishouden draaiende te houden.', 147, 1, 394757, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4180, 'De Laatste Zonnige Dagen', 'In de ouderlijke villa genieten de Pfaffs met volle teugen van de laatste zonnige dagen. Carmen heeft een familiebarbecue georganiseerd en wil Sam en Nicolas aan het werk zetten in de tuin. In de ouderlijke villa genieten de Pfaffs met volle teugen van de laatste zonnige dagen. De verbazing is groot wanneer Sam over getrainde groene vingers blijkt te beschikken. En dat heeft zo zijn redenen Lyndsey is thuisgebleven. In het grootste geheim bereidt ze een fotoshoot voor met Fay in de hoofdrol. Lyndsey''s jongste viert binnenkort namelijk haar eerste verjaardag en daarom wil Lyndsey een groots prinsessenfeest organiseren. In een mum van tijd is Fay omgetoverd tot een roze prinses met professionele attributen en feestelijke make-up. Helemaal klaar dus voor de fotoshoot. Ook het domein de ouderlijke villa ondergaat plots heuse metamorfose wanneer een onschuldig waterspelletje uitmondt in een gigantisch watergevecht. De volgende dag ligt Kelly met keelpijn in bed. Debby en haar kroost komen haar even gezelschap houden en hebben Carmens chihuahua mee. Die moet vandaag samen met Kelly''s chihuahua naar de dierenarts. Sam offert zich op als chauffeur en komt bij de dierendokter oog in oog te staan met zijn naamgenoot. Lyndsey en Dave hebben een belangrijke missie. Ze willen een nieuw speeltuig kopen voor in de tuin. Maar de twijfel slaat een beetje toe wanneer het luchtkasteel een beetje groter lijkt uit te vallen dan verwacht.', 147, 2, 394761, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4225, 'Opening Sun Set Boulevard', 'Debby en Nicolas willen er over 2 dagen hun zonnebankcentrum openen en er is nog heel wat werk aan de winkel.In Beveren wordt er koortsachtig tegen de klok gewerkt.Twee dagen later is het zover.Het zonnebankcentrum Sun Set Boulevard opent officieel zijn deuren.Honderden genodigden maken hun opwachting om Debby en Nicolas te feliciteren.', 147, 13, 1427451, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4226, 'Zusjesfotoshoot', 'De zusjes moeten vandaag naar Brussel voor een foto-shoot voor P-Magazine.Na het ontbijt vertrekken de zusjes naar de foto-shoot, maar Debby ziet dit niet zitten.Ze heeft last van stress.Wie geen last van stress heeft, is Kelly.Als ervaren model neemt ze gewillig alle poses aan.', 147, 14, 1427461, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4181, 'Enkele Bijzondere Ontdekkingen', 'Lyndsey wipt naar dagelijkse gewoonte even binnen en doet enkele bijzondere ontdekkingen bij Jean-Marie: hij heeft zijn borst geëpileerd. In de ouderlijke villa begint de ochtend rustig en relaxed. Carmen en Kenji inspecteren de groenten in de serre en Jean-Marie gaat de muzikale toer op met zijn laatste nieuwe aanwinst: een i-pod. Ook Lyndsey wipt naar dagelijkse gewoonte even binnen en doet enkele bijzondere ontdekkingen bij Jean-Marie: hij heeft zijn borst geëpileerd. Bij een gladgeschoren bast hoort natuurlijk een afgetraind lichaam. En daar heeft Jean-Marie zo zijn trucjes voor. Tijdens één van zijn demonstraties geeft Jean-Marie nóg een schoonheidsgeheimpje prijs. .. Sam en zijn zoon Kenji hebben de niet onbelangrijke missie om een geschikt verjaardagscadeau voor Kelly te kopen. In de winkel botsen ze al meteen op één van hun favoriete meubelen: een ligzetel. Maar Kenji is het niet helemaal eens met de prijs De volgende dag verzamelen de Pfaffs in de ouderlijke villa om hun kampeertrip naar de Ardennen voor te bereiden. Maar het weer aldaar belooft weinig goeds. Terwijl Nicolas zich over de voedselpakketten ontfermt, gaan Lyndsey en Carmen dan maar op zoek naar een plan B.', 147, 3, 394765, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4182, 'Een Gezellige Drukte', 'In de ouderlijke villa heerst er al van ''s ochtends een gezellige drukte. Carmen heeft haar troepen verzameld, want de hele familie vertrekt per mobilhome naar de Ardennen. Behalve Jean-Marie, hij zal het parcours met de fiets afleggen in het gezelschap van zijn trouwe wielervrienden. Terwijl Carmen en Nicolas een laatste check-up doen van de voedselpakketten, proberen Lyndsey en Debby hun enthousiaste kroost in bedwang te houden. En dan kunnen ze eindelijk vertrekken. Hoewel. De karavaan is amper van de oprit gereden als Carmen bedenkt dat ze nog wat groentjes uit de serre wil meenemen. Nicolas besluit op zijn beurt de verse muntplant in zijn geheel te verkassen om verse mojito''s te maken op hun eindbestemming. Na een tussenstop bij Sam en Kelly worden ook de Goorissen ingeladen en kunnen ze eindelijk koers zetten richting La Roche. Sam moet passen voor de uittocht. Hij heeft verschillende optredens en hij heeft aan Kelly beloofd om voor de huisdieren te zorgen. Een paar uur laten maken de Pfaffs hun blijde intrede in de Ardennen. Maar Jean-Marie is minder enthousiast. Enkele van zijn wielermakkers zijn onderweg ten val gekomen en Jean-Marie kan het incident niet uit zijn hoofd zetten. Ondertussen slaat de rest van de familie haar tenten op. Lyndsey heeft een vernuftig systeem op de kop getikt om de kinderen binnen de veilige virtuele grenzen van hun territorium te houden. Maar het systeem is ingewikkelder dan het lijkt Bij Sam zit de sfeer er goed in. Hij wordt in Turnhout ontvangen door een horde verliefde fans én hij mag een loge delen met Nicole en Hugo.', 147, 4, 394766, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4183, 'In La Roche', 'In La Roche genieten de Pfaffs van een gezellig samenzijn. De pret kan niet op, tot Carmen achter een van de jonge chihuahua''s aanloopt en daarbij zeer pijnlijk ten val komt. Na een nachtelijk onweer begint de ochtend in La Roche voorlopig droog. Carmen en Fay zijn het eerst uit de veren en maken zich op voor een stevige ochtendwandeling langs de Ourthe. Maar dat plan valt al snel letterlijk en figuurlijk in het water. Sam heeft weinig last van het slechte weer. Hij is in Brasschaat gebleven. Sam heeft namelijk enkele optredens én hij wil goede punten scoren bij Kelly. De ramen van het tuinhuis moeten nog afgewerkt worden en dat is een kolfje naar de hand van klusser Sam. Vol goede voornemens begint hij aan zijn offensief. In La Roche is de zon komen piepen. De kampeerders profiteren dan ook optimaal van het goede weer en maken zich op voor een actieve namiddag in de bosrijke omgeving van de camping. Alleen Carmen blijft achter met de twee chihuahua''s en een slaperige Fay. Ondertussen in Brasschaat slaat de ergernis langzaam maar zeker toe bij klusser Sam. Hij zit verwikkeld in een gevecht met plastieken raampjes, een vijs en een slijpschijf. Zo vliegt de tijd voorbij, ook in La Roche, waar de Pfaffs hun tentenkampen afbreken om de heenreis aan te vatten. Maar net als ze willen vertrekken, zet één van de chihuahua''s het op een lopen. Carmen zet meteen de achtervolging in, maar komt daarbij lelijk ten val.', 147, 5, 394767, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4184, 'Onder Narcose', 'Het moment van de waarheid is aangebroken: voor de eerste keer in haar leven moet Carmen onder het mes.In de 7de aflevering van “de Pfaffs” ligt Carmen nog altijd in het ziekenhuis met een gecompliceerde schouderbreuk. En het moment van de waarheid is aangebroken: voor de eerste keer in haar leven moet Carmen onder het mes. In de ouderlijke villa hebben Jean-Marie en Nicolas de huishoudelijke taken onder hun tweetjes verdeeld. Samen met Liam en Keano ontdekt Jean-Marie de veelzijdigheid van een elektrische tandenborstel. Kelly vangt de rest van de kleinkinderen op. Shania, Bruce en Kenji laten zich van hun meest creatieve kant zien en fabriceren enkele zelfgemaakte cadeautjes voor hun bobonneke.', 147, 6, 399588, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4185, 'Een Spannend Moment', 'Het moment van de waarheid is aangebroken: voor de eerste keer in haar leven moet Carmen onder het mes.In de 7de aflevering van “de Pfaffs” ligt Carmen nog altijd in het ziekenhuis met een gecompliceerde schouderbreuk. En het moment van de waarheid is aangebroken: voor de eerste keer in haar leven moet Carmen onder het mes. In de ouderlijke villa hebben Jean-Marie en Nicolas de huishoudelijke taken onder hun tweetjes verdeeld. Samen met Liam en Keano ontdekt Jean-Marie de veelzijdigheid van een elektrische tandenborstel. Kelly vangt de rest van de kleinkinderen op. Shania, Bruce en Kenji laten zich van hun meest creatieve kant zien en fabriceren enkele zelfgemaakte cadeautjes voor hun bobonneke.', 147, 7, 400083, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4186, 'Intensieve Verzorging', 'Carmen mag weer naar huis, maar voelt constante pijn door de constructie van metalen pinnen die haar schouder op haar plaats houden. In deze 8ste aflevering is te zien dat Carmen na twee dagen ziekenhuis terug thuis is. Een constructie van metalen pinnen in haar bovenarm zorgt er voor dat ze niet alleen constant pijn voelt, ze kan haar arm ook nauwelijks bewegen. Carmen heeft dan ook dagelijks intensieve verzorging nodig. Gelukkig kan ze daarvoor rekenen op verpleger Maarten, die destijds ook bompa heeft verzorgd. En er is natuurlijk ook Jean-Marie die haar zoveel mogelijk in de watten probeert te leggen. Maar voor Jean-Marie is het toch nog een beetje zoeken naar een evenwicht in dit omgedraaid rollenpatroon. 
', 147, 8, 401624, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4187, 'De Benefietfietstocht', 'Jean-Marie en zijn wielervrienden maken zich op voor hun belangrijkste evenement van het jaar: de tour München-Brasschaat. De opbrengst van die benefietstocht gaat naar het goede doel. Carmen neemt normaal gezien plaats in de volgwagen, maar aangezien haar schouder intensieve verzorging nodig heeft zal ze er dit jaar niet bij zijn. In tegenstelling tot Nicolas, hij zal Jean-Marie vergezellen tijdens de laatste rit. Sam en Kelly maken er een lui dagje van en genieten van de laatste zonnestralen. Bij Lyndsey en Dave is de sfeer allesbehalve relaxed. Dochtertje Fay is opgenomen in het ziekenhuis met een longontsteking. ', 147, 9, 403700, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4227, 'Vakantie in Valencia', 'Jean-Marie en Carmen vertrekken voor een vakantie.Hun nederlandse vriend Willem heeft hen uitgenodigd om enkele dagen in zijn “optrekje” in Valencia door te brengen.De ontvangst overtreft alle verwachtingen.Willem woont in een grootse villa met alles erop en eraan; zwembad, sauna, fittness..', 147, 15, 1427471, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4511, 'Episode 2', 'Officers in Calais search lorries for illegal immigrants, while at Heathrow Terminal 3, a student is prevented from entering the UK after a trip home to his native India.', 158, 2, 394881, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4188, 'Een Feestje', 'Jean-Marie maakt immers zijn blijde intrede in Brasschaat, eindbestemming van zijn benefietstocht. De supporters en sympathisanten zijn talrijk aanwezig en hebben postgevat langs het parcours. Ook Carmen, Kelly en Debby maken zich klaar om naar de festiviteiten te vertrekken. Lyndsey en Dave hebben weinig zin in feesten. Hun dochtertje Fay ligt nog steeds in het ziekenhuis met een longontsteking. Gelukkig mag ze vandaag wel naar huis, want morgen viert ze haar eerste verjaardag. Op het slotfeest van de benefietstocht wordt Carmen overmand door emoties. Het is immers de eerste keer dat ze terug in het openbaar verschijnt na haar schouderbreuk. Bovendien heeft ze Jean-Marie een week moeten missen. Als hij dan ook nog eens uitpakt met een gevoelige speech is het hek helemaal van de dam. Maar ook Kelly en Debby houden het niet droog wanneer Jacky Lafon een muzikale ode brengt aan de Pfaffs. Goed en wel bekomen van de emoties maakt Carmen zich de volgende dag klaar om naar het ziekenhuis te vertrekken. Ze wordt namelijk verlost van de inwendige ijzeren constructie die haar gebroken schouder al die tijd heeft ondersteund. Jean-Marie is de chauffeur van dienst maar of dat ook betekent dat hij een gentleman is, is nog maar de vraag. Lyndsey is volop bezig met de voorbereiding van de Fay’s verjaardagsfeestje. Voor Dave begint de dag allesbehalve relaxed. Hij heeft een stijve nek en kan nauwelijks bewegen. Wanneer de eerste gasten ook nog eens te vroeg op het feestje arriveren slaat de stress toe bij Lyndsey.', 147, 10, 406115, 392);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4189, 'Een nieuw speelkamaraadje', 'Brasschaat – In de ouderlijke villa heeft Carmens chihuahua Diva er een nieuw speelkameraadje bij. 

Jean-Marie wil zijn steentje bijdragen, maar twee eigenwijze hondjes uitlaten is gemakkelijker gezegd dan gedaan. Hij gaat dan ook met plezier in op de uitnodiging van Nicolas om in het bos te gaan cyclocrossen. Die trip loopt echter niet van een leien dakje. 

Lyndsey en Dave genieten met volle teugen van het gezinsleven. Vol overgave wijden ze zich aan de opvoeding van Bruce en Fay. Hoewel deugniet Bruce geen kans onbenut laat om het geduld van zijn ouders uit te testen. 

Ook de Goorissen hebben hun handen meer dan vol. Kelly ontfermt zich over haar hondje Juicy. Kenji en Shania nemen de zorg van de cavia’s op zich. Sam is uitgenodigd door de meisjes van K3 in hun show De Wereld van K3. De kinderen mogen ook mee, maar dan moet Kenji zich wel naar behoren gedragen. 

Debby en Nicolas zoeken de buitenlucht op en trekken met hun kroost naar de manege. Terwijl Keano en Liam het beste van zichzelf geven, zet Nicolas voorzichtig zijn eerste stappen in de paardrijkunst. 

Na een drukke dag wil Jean-Marie nog even uitrusten in zijn hoogtechnologische massagezetel. Maar hoe krijg je zo’n ding aan de praat?', 147, 1, 438588, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4190, 'Plopperdeplop', 'Lyndsey heeft afscheid moeten nemen van haar trouwe viervoeter Casper. Samen met Bruce en Dave overloopt ze de mooiste momenten van haar dierbare vriend. Jean-Marie zijn dag staat helemaal in het teken van kabouters. Hij is gevraagd om een personage te spelen in de nieuwste Plopfilm. Ook Liam mag zich helemaal uitleven. Samen met Debby en Nicolas gaat hij peuterturnen. Als een echte acrobaat stort hij zich op de toestellen. De volgende ochtend is Carmen voor dag en dauw wakker. Ze speelt namelijk een mysterieuze gaste in een quiz van Q-music. Verder staat heel de dag in teken van Kenji zijn verjaardag.', 147, 2, 438589, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4191, 'Jean-Marie is jarig', 'Jean-Marie is jarig en Carmen plant met de hulp van Nicolas een gezellig familiediner. Terwijl Kelly op zoek gaat naar een cadeautje voor haar vader, maakt ze van de gelegenheid gebruik om een mooi geschenk voor Sam uit te kiezen. Lyndsey heeft haar handen meer dan vol met Bruce. Om hem van zijn geliefde snoepkast en chips weg te halen, beraamt de jonge mama een ingenieus plan. In de ouderlijke villa heeft Carmen een karweitje voor Jean-Marie. Ook Kelly zet haar man aan het werk: het caviahok opruimen. Wat een eenvoudige opdracht lijkt, wordt al vlug een persoonlijke strijd. ', 147, 3, 438590, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4192, 'Een scheerbeurt', 'Bij de familie Gooris is Sams haar toe aan een scheerbeurt. De kinderen willen zich uitleven op papa Sam zijn haardos, maar Sam vertrouwt enkel Kelly met een tondeuse. Als Kelly aan de onderneming begint, gebeurt echter het onvermijdelijke. Ten huize Volders steekt Dave Lyndsey graag een handje toe bij het avondritueel van de kinderen. Maar Bruce slapensklaar maken, is gemakkelijker gezegd dan gedaan. In de ouderlijke villa heeft Carmen nog altijd last van haar schouder. Jean-Marie laat Carmen oefeningen doen in het zwembad, maar de pijn wordt al vlug ondraaglijk voor Carmen. Dave en Lyndsey gaan vandaag een uniformpje passen met Bruce want het is binnenkort zijn eerste schooldag. ', 147, 4, 438591, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4193, 'Lyndsey leest voor', 'Lyndsey is eregaste in een Nederlands kinderdagverblijf. Ze leest verhaaltjes voor aan de kleine luisteraars, maar het is Bruce die de show steelt. Ten huize Liébart gaat Liam vandaag voor het eerst naar school. Maar als het aan Liam zelf ligt, blijft hij soezen in zijn warme bedje. Bij de Goorissen is Sam al vroeg uit bed. Angie heeft haar poot bezeerd en Sam gaat voor een check up naar de dierenarts. Het heeft flink gesneeuwd in Brasschaat en daar profiteren de Pfaffs van. Lyndsey neemt haar kinderen mee om de eendjes te voeren en de Liébarts nemen de kinderen na school mee voor een fikse winterwandeling. Jean-Marie wil zijn wagenpark herschikken en moet daarvoor dus wagens verplaatsen. ', 147, 5, 439925, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4194, 'De gouden schoen', 'In de ouderlijke villa maakt Jean-Marie zich klaar voor het Gala van de Gouden Schoen. Als ex-winnaar is hij niet verlegen om de aanwezige sporters van nuttige tips te voorzien. Ook Kelly en Sam zijn van de partij. Sam voorziet de aanwezigen dan weer van een sterk staaltje danskunst. De volgende dag is Lyndsey al vroeg wakker want het is Bruce zijn eerste schooldag. Nadat ze hem heeft afgezet aan school, gaat ze langs bij Kelly. Ze heeft immers het leuke idee om met de drie zussen een citytrip te maken. Maar dan moeten de zussen wel eerst overeenkomen waar de trip naartoe gaat. In Beveren heeft Debby vandaag een fotoshoot en interview voor een lifestylemagazine. ', 147, 6, 441484, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4195, null, null, 147, 7, 485541, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4196, 'Op rustvakantie', 'Door het vele huishoudelijk werk in de ouderlijke villa is Carmen toe aan een echte rustvakantie. Ze gaat naar het reisbureau om informatie te vragen en brochures op te pikken. Voor de dochters van Carmen worden de vakantiekriebels nu al ingelost. Debby, Kelly en Lyndsey vertrekken immers voor een weekendje naar Parijs. Terwijl de dames de lichtstad onveilig maken, moeten de papa’s voor de kroost zorgen. Debby heeft alvast enkele instructies voor Nicolas achtergelaten. Ten huize Volders profiteert kleine Bruce van de afwezigheid van mama. Maar die vrijheid gaat niet zonder gevolgen gepaard. In Parijs klinken de zussen op een geslaagde start van hun weekendje. Ondertussen in Brasschaat nemen Sam en Nicolas hun schoonvader mee voor een partijtje zaalvoetbal. De volgende dag vervult Jean-Marie vol ernst zijn grootvaderlijke taak als oppas voor kleine Liam. Maar Jean-Marie neemt het niet zo nauw met de opvoedingsregels. In Parijs willen de zussen de charme van de stad ontdekken, maar daar steekt het slechte weer een stokje voor. Als de dames terug in België zijn, helpt Lyndsey haar mama alvast met de voorbereiding van de verhuis, namelijk dozen inpakken. En dit blijkt een klus die niet op één, twee, drie geklaard zal worden.', 147, 8, 485551, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4299, 'Shin Koihime Musou Live Revolution', 'A spin-off project from the original series that Kan''u, Chouhi, Ryuubi and other characters sing the theme songs from Koihime Musou and Shin Koihime Musou on the stage. ', 149, 3, 1966471, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4197, 'Iets in petto...', 'In de ouderlijke villa is het eindelijk zover. Carmen en Jean-Marie vertrekken naar Kaap Verdië voor een echte rustvakantie. Omdat de vlucht erg vroeg in de ochtend is, logeert het echtpaar in het nabijgelegen luchthavenhotel. Ten huize Volders is het badtijd. Terwijl Bruce en Fay zich voorbeeldig gedragen, zijn Lyndsey en Dave in een ondeugende bui. Na een lange vliegreis arriveren Jean-Marie en Carmen in het exotische Kaap Verdië. De grandeur van het hotelcomplex slaan Jean-Marie en Carmen met verstomming. Nicolas en Debby zijn ingeschakeld om op de ouderlijke villa te passen. Ook de familie Volders heeft een oppastaak gekregen. Zij zijn verantwoordelijk voor Carmens chihuahua’s Diva en Nathan. Fay is alvast in de wolken met haar nieuwe speelkameraadjes. Kelly zakt af naar Debby en haar schoonbroer om te gaan sporten. Maar er lijkt iets mis te zijn met Nicolas’ gezondheid. In Kaap Verdië zijn Carmen en Jean-Marie wel in topvorm. Ze genieten van een weldadige sauna, exploreren de plaatselijke fauna en flora, gaan op boottocht en Carmen bereidt zich zelfs voor op een nieuwe hobby. In België neemt Debby de rol van haar vader over en steunt het goede doel. Ten voordele van Kom op tegen Kanker zal Debby deelnemen aan een evacuatieoefening van de brandweer. Maar Debby heeft ook nog iets extra in petto…', 147, 9, 485561, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4198, 'Een nieuwe look', 'In Kaap Verdië loopt de rustvakantie van Carmen en Jean-Marie ten einde. In gedachten is Carmen al terug in de ouderlijke villa. Nu zij en Jean-Marie besloten hebben kleiner te gaan wonen, vraagt ze zich namelijk af wat ze met de talloze voetbalsouvenirs moet aanvangen. Bij de familie Volders heeft Dave zijn handen meer dan vol aan de ondeugende Fay en Bruce. Omdat de kinderen boordevol energie zitten, nemen Dave en Lyndsey hen mee naar Plopsa Indoor in Hasselt. Bij de Goorissen nadert de communie van Kenji met rasse schreden. Om helemaal voorbereid te zijn, test Kenji alvast een nieuwe look uit bij de kapper. En terwijl het jongetje braaf in de kappersstoel zit, krijgt Kelly een lumineus idee dat Sam de stuipen op het lijf jaagt. Om hun terugkeer naar België te vieren, heeft Debby haar ouders uitgenodigd voor een gezellig familiediner in Beveren. En als Lyndsey tenslotte met Dave probeert te praten over haar nieuwe job bij haar vader, steekt kleine Bruce daar een stokje voor...', 147, 10, 485571, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4199, null, null, 147, 11, 610771, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4200, null, null, 147, 12, 610781, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4201, null, null, 147, 13, 610791, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4202, null, null, 147, 14, 610801, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4203, null, null, 147, 15, 610811, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4204, null, null, 147, 16, 610821, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4205, null, null, 147, 17, 1214051, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4206, null, null, 147, 18, 1214061, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4207, null, null, 147, 19, 1214071, 393);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4208, null, null, 147, 1, 1214081, 394);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4209, null, null, 147, 2, 1214151, 394);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4210, null, null, 147, 3, 1214171, 394);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4211, null, null, 147, 4, 1269411, 394);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4212, null, null, 147, 5, 1269421, 394);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4213, 'Kelly´s Tropical party', 'Vandaag is het feest bij de Pfaffs. Kelly, de tweede dochter van Jean-Marie en Carmen wordt 25 jaar. En dat kan niet onopgemerkt voorbij gaan.Er is een grootse openlucht caribbean party gepland, en speciaal voor de gelegenheid bouwt de hele familie een feesttent.', 147, 1, 1427331, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4214, 'Sams hond en Jean-Maries dieet', 'Carmen vindt dat Jean-Marie de laatste tijd te dik is geworden.Ze zet hem onder druk en verplicht hem te diëten.Nicolas, het vriendje van Debby, moet enkele dagen naar Marakesj.Hij is ingehuurd voor een fotoreportage.Het afscheid valt hen beiden zwaar.Kelly heeft haar vriend Tish op bezoek.Tish treedt vanavond op als drag-queen.', 147, 2, 1427341, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4215, 'Liefde en Voetbal', 'Er gaat geen dag voorbij of Sam wordt verrast door zijn trouwe viervoeter Angie.Kelly is druk in de weer met het huishouden.Bompa gaat ondertussen een pintje drinken in zijn stamkroeg.Hij lust ze wel en wordt ’s nachts thuisgebracht door een vriend.Jean-Marie is uitgenodigd op een wedstrijd van Anderlecht.Met zijn dochter Lyndsey geniet hij van de aandacht van de supporters.', 147, 3, 1427351, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4216, 'Mannen en Motto''s', 'Jean-Marie krijgt een zware motor krijgt om op reis te vertrekken.Hij amuseert zich kostelijk maar Carmen maakt zich zorgen.Jean-Marie heeft geen ervaring met zo’n krachtige Harley en moet nog veel oefenen.Lyndsey is op vrijersvoeten.Ze is aangesteld als verzorgster op een motocross.', 147, 4, 1427361, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4217, 'Op Snoepreis', 'Jean-Marie zit stiekem aan het eten.Het dieet dat Carmen hem oplegt begint zwaar te wegen en daarom kan hij het niet laten te snoepen.Carmen verheugt zich op enkele vrije dagen.Jean-Marie vertrekt met vrienden op motortrip naar Italië zodat ze wat tijd heeft voor zichzelf.', 147, 5, 1427371, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4218, 'Een verontrustend telefoontje', 'Plots komt er een telefoontje uit Italië.Jean-Marie is gevallen met zijn motor en het blijkt vrij ernstig te zijn.Hij moet plastische chirurgie ondergaan en moet enkele weken het ziekenhuis in.De dokters verbieden hem naar België terug te komen, hij moet in Italië worden verzorgd.', 147, 6, 1427381, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4219, 'Jean-Marie wordt gerepatrieerd', 'Jean-Marie heeft veel pijn.Debby heeft niet veel vertrouwen in de Italiaanse dokters en daarom werpt ze zich meteen op als de persoonlijke verpleegster van haar papa.Met Carmen neemt ze het heft in handen en regelt ze de terugtocht.Zo goed en zo kwaad als kan rijden Carmen en Debby Jean-Marie naar huis.Bij tijd en wijlen houden ze even halt om hem op te lappen.', 147, 7, 1427391, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4220, 'Aan het ziekbed', 'Na zijn val in Italië, is Jean-Marie veilig teruggebracht naar Brasschaat.Jean-Marie kan moeilijk eten, kan niet bewegen en moet dus door de hele familie worden verzorgd.De telefoon staat ondertussen niet stil.Iedereen is bezorgd om Jean-Marie en wil hem moed inspreken.', 147, 8, 1427401, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4221, 'Op Betty''s trouwfeest', 'Voor Carmen is Jean-Marie er bijna bovenop.Zijn eetlust neemt toe en dat is het voor haar het bewijs dat hij weer de oude is.De dochters zijn uitgenodigd voor het huwelijksfeest van Betty.Daar hoort de gepaste kledij bij, maar als Debby en Kelly hetzelfde willen aandoen, is het hek van de dam.', 147, 9, 1427411, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4222, 'Sam''s nieuwe CD', 'Voor Kelly en Sam is het een belangrijke dag.Kelly waagt haar kansen op een auditie voor de volgende musical van Studio 100 en Sam neemt een nieuwe single op.Lyndsey bezoekt haar nicht Cindy, die tevens haar schoonheidsspecialiste is.Lyndsey en Cindy zijn de beste vriendinnen.Ze vertellen elkaar al hun hartsgeheimen, tot in de sappigste details.', 147, 10, 1427421, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4223, 'Erelid van de snorrenclub', 'Debby en Nicolas hebben na het harde werken nog eens de tijd om te ontspannen.Ze gaan hun goede vriend Christoff aanmoedigen voor zijn eerste optreden in Nederland.Debby en Nicolas genieten volop van de avond en voor het eerst sinds lang groeit er nog eens iets mooi tussen hen.Bompa wordt vandaag erelid van de Antwerpse Snorrenclub.Hij voelt zich al snel thuis bij zijn nieuwe vrienden, vooral dan bij hun echtgenotes.', 147, 11, 1427431, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4224, 'Een safarifeest voor Lyndsey', 'Lyndsey is jarig.De jongste dochter van Jean-Marie en Carmen wordt 24 jaar.Weer een goede reden voor een feest ten huize Pfaff.Aangezien Lyndsey op werelddierendag jarig is wil ze een feest met als thema safari.De hele familie zal zich in een safari kostuum steken en Carmen heeft een speciaal kostuum voor Jean-Marie.Hij zal de show stelen in een pak dat hem op het lijf geschreven is.', 147, 12, 1427441, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4584, 'Horror', null, 162, 1, 2230371, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4228, 'Een groots verjaardagsfeest', 'Er zijn 280 mensen voor het verjaardagsfeest van JM uitgenodigd en er is een enorme feesttent in de tuin rechtgezet.Op het feest zelf krijgt JM de ene verrassing na de andere.Hij is ontroerd en tijdens de openingsdans ontstaat er iets mooi tussen hem en Carmen.Nadien zorgt Sam voor de muziek.Niet als zanger, wel als DJ.', 147, 16, 1427481, 395);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4229, 'De VTM-Cruise', 'Iedereen is in volle voorbereiding voor de VTM-cruise.Het is jaren geleden dat de familie Pfaff nog eens samen op reis is geweest, de sphttp://www.thetvdb.com/?tab=episode&seriesid=83312&seasonid=158831&id=1427501&lid=13anning is dan ook om te snijden.Carmen, Lyndsey en Kelly moeten nog uitgebreid gaan shoppen.Intussen blijkt Sam ziek in bed te liggen en lijkt zijn cruise in het water te zullen vallen.', 147, 1, 1427491, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4230, 'Een reddingsoefening', 'De Pfaffs zijn op de cruise aangekomen en daar moet natuurlijk op getoast worden.Al lijkt het schip voor Sam en Nicolas meer op een ziekenboeg.Bompa heeft er ook al niet veel zin meer in, tot hij de pintjes en de vrouwen ontdekt.Een reddingsoefening is iets makkelijks, maar niet als je de familie Pfaff aan boord hebt.', 147, 2, 1427501, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4231, 'Sambuca en Erotiek', 'De Middelandse Zee wordt nog steeds onveilig gemaakt door de Pfaffs.Debby en Nicolas vinden eindelijk wat tijd voor zich alleen.Er hangt erotiek in de lucht.De vraag is alleen of dat zal blijven duren nu Nicolas de alcoholhoudende drank Sambuca heeft ontdekt.Lyndsey heeft op het dek een man gevonden, die haar massages wel appreciëert.', 147, 3, 1427511, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4232, 'Alcohol- en Cadeautjesjacht', 'Sam viert zijn dertigste verjaardag.Gewapend met een boodschappenlijst trekt Lyndsey de stad in om veel cadeautjes en natuurlijk liters alcohol voor het feest in te slaan.Jean-Marie laat zich van zijn sportiefste kant zien.Samen met een aantal andere oude gloriën trekt hij nog eens z´n voetbalschoenen aan.', 147, 4, 1427521, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4233, 'Het bakkersfeest', 'Jean Marie heeft vandaag alle bakkers die zijn Pfaff brood maken, uitgenodigd voor een spetterend feest in zijn tuin.Nicolas neemt Debby mee op een verwenweekend aan zee.Kelly is met Sam op zoek naar een huis en heeft geluk.Ze vinden een prachtig exemplaar en gaan meteen kijken.', 147, 5, 1427531, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4234, 'Wijnproeffestijn', 'De Pfaffs zijn uitgenodigd op een wijnproefavond en voor alle veiligheid beslissen ze de camper mee te nemen.Dat is geen slecht idee, want als Bompa wordt losgelaten in een wijnkelder zijn de gevolgen niet meer te overzien.De beste vriend van Sam is jarig en dat moet natuurlijk flink gevierd worden.', 147, 6, 1427541, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4235, 'Het rijexamen', 'Een tijdschrift heeft een wedstrijd uitgeschreven om een date te winnen met Lyndsey en vanavond moet ze uit de vele reacties vijf geschikte kandidaten kiezen.Debby en Nicolas hebben allebei een motor gekocht en vandaag is het zover: het rijexamen.', 147, 7, 1427551, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4236, 'Bompa op de kermis', 'Waar champagne is, daar zijn Jean Marie en Carmen.En waar vloeit er meer champage dan op Waregem Koerse? Bompa van zijn kant houdt het een stuk eenvoudiger.Hij keert terug naar zijn vroegere leven: de kermis.Carmen heeft voor Jean-Marie nog een daad van barmhartigheid in petto.El Sympatico moet voor de grote verrassing zorgen op het huwelijksfeest van een fan.', 147, 8, 1427561, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4237, 'De gewaagde fotoshoot', 'Jean-Marie stort zich nog eens in het voetbal.Hij heeft een Ghanese jongen over de vloer die een club zoekt.Sam heeft alweer een drukke avond voor de boeg.Hij moet van optreden naar optreden en zijn populariteit kent geen grenzen.Kelly gaat aan de slag op een gewaagde fotoshoot voor het mannenblad Maxim.', 147, 9, 1427571, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4238, 'Casper op komst', 'Jean-Marie en Carmen komen thuis met de kleinkinderen.Ze zijn naar Zwitserland geweest.Lyndsey heeft intussen een niet alledaagse gast in huis genomen.Angie is blij met haar nieuwe maatje.Kelly is begonnen met de repetities van de musical ´Zo mooi, zo blond´.', 147, 10, 1427581, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4239, 'De date', 'Lyndsey mag uit eten met haar vijf gegadigden van Dag Allemaal.In het restaurant wachten vijf zenuwachtige jongens Lyndsey op en al gauw wordt duidelijk dat ze een favoriet heeft, ook al lijkt die wel wat bedenkingen te hebben bij zijn date.Sam en Kelly hebben een minder dagje; ze zijn met verkeerde been uit bed gestapt.', 147, 11, 1427591, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4240, 'Lyndsey is verliefd', 'Sam is voor één keer vroeg uit de veren.De El Sympatico van het Vlaamse lied heeft een nieuwe singel die moet worden opgenomen.Ondanks het vroege uur heeft Sam er zin in.Lyndsey vertelt Carmen met blinkende oogjes over een jongen.Ze is verliefd..', 147, 12, 1427601, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4241, 'Vissen met Sam', 'Sam heeft een gezinsuitstapje georganiseerd.Hij neemt de Pfaffs mee op een weekendje om de gezinsbanden aan te halen maar vooral om zijn oude passie te beoefenen: Vissen.Jean-Marie heeft nog een gaatje gevonden in z´n agenda voor zijn eerste golfles, een sport die perfect past bij zijn standing.', 147, 13, 1427611, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4242, 'Feestje in Zaventem', 'Jean Marie wordt vijftig en is dertig jaar getrouwd met Carmen.De imposante Fly Hall op de luchthaven van Zaventem wordt het decor van een groots eerbetoon.Het voltallige gezin is al een poosje in de ban van de voorbereidingen.Sam en kelly zijn verantwoordelijk voor de videoboodschappen die tijdens de avond in de zaal geprojecteerd zullen worden.Tijdens de avond zal het videoboodschappen regenen, ook al moet hij daarvoor de paus uit bed en The King uit zijn graf halen.', 147, 14, 1427621, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4243, 'Een emotionele avond', 'De avond voor het grote feest vieren de Pfaffs de verjaardag in alle intimiteit.Lyndsey heeft nog een hoop werk voor de boeg.Jean-Marie en Carmen beleven een aangrijpende, emotionele avond.Het feest duurt tot in de vroege uurtjes.Een belangrijke episode eindigt in het luxueuze decor van een hotel op de luchthaven.', 147, 15, 1427631, 396);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4244, null, null, 147, 1, 1427811, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4245, null, null, 147, 2, 1427821, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4246, null, null, 147, 3, 1427831, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4247, null, null, 147, 4, 1427841, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4248, null, null, 147, 5, 1427851, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4249, null, null, 147, 6, 1427861, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4250, null, null, 147, 7, 1427871, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4251, null, null, 147, 8, 1427881, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4252, null, null, 147, 9, 1427891, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4253, null, null, 147, 10, 1427901, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4254, null, null, 147, 11, 1427911, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4255, null, null, 147, 12, 1427921, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4256, null, null, 147, 13, 1427931, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4257, null, null, 147, 14, 1427941, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4258, null, null, 147, 15, 1427951, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4259, null, null, 147, 16, 1427961, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4260, null, null, 147, 17, 1427971, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4261, null, null, 147, 18, 1427981, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4262, null, null, 147, 19, 1427991, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4263, null, null, 147, 20, 1428001, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4264, null, null, 147, 21, 1428011, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4265, null, null, 147, 22, 1428021, 397);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4266, null, null, 147, 1, 1432341, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4267, null, null, 147, 2, 1432351, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4268, null, null, 147, 3, 1432361, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4269, null, null, 147, 4, 1432371, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4270, null, null, 147, 5, 1432381, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4271, null, null, 147, 6, 1432391, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4272, null, null, 147, 7, 1432401, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4273, null, null, 147, 8, 1432411, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4274, null, null, 147, 9, 1432421, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4275, null, null, 147, 10, 1432431, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4276, null, null, 147, 11, 1432441, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4277, null, null, 147, 12, 1432451, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4278, null, null, 147, 13, 1432461, 398);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4279, 'Faking It', 'There''s no such thing as bad publicity, and Brilliance decides Trexx and Flip need some: for Flipside, a fake date with a teen soap star, and for the pacifist Trexx, a feud with Gangsta-Rapper, B-ICE. Faking it never did anyone any harm now did it, boys?

Except B-ICE does not know the meaning of the words "fake feud" and, even after accepting a written apology, decides enough is enough - nobody calls his mum names in a newspaper! The fake feud is now a very real one.

Meanwhile, Flipside''s fake-date, Amber, is not too impressed. She agreed on the publicity stunt only to find there''s a terrier called Flipside in Yorkshire more famous than "rap''s latest happeningest guy." What''s worse, her hyper-fit boyfriend decides Flip needs a lesson in not trespassing. B-ICE and his Posse turn up to mash Trexx and none of the press turn up for the fake date. Looks like another fine mess Brilliance has gotten them into...', 148, 1, 394758, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4280, 'Little Orphan Alesha', 'Trexx and Flipside have the talent to get to the hip-hop top - but are chaos on a stick - and their manager, Mr. Brilliance of Wu-Hah Management, is no better.

His PA Ollie is the brains and the beauty, but even she can''t manage such no-hopers easily. She sets up a break-through appearance for T and F on Big-Up TV, only to find she has to baby-sit her little sister. Trexx and Flip are roped in to handle l''il Alesha and are warned not to feed her anything with ''E'' number in it.

Meanwhile, B-ICE and his Posse get wind of the TV gig. Rap-Gangsta ''moll'' Chinaza sends her two best-pal Hotties round, armed with a dangerously additive-unfriendly bag of sweets, to divert the boys'' attention. It doesn''t take much usually and it takes no time at all on this occasion. So who will step into the TV breach when the guys look like not showing up? Meet the boys'' best friend, the ABBA-loving Clinton...', 148, 2, 394759, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4281, 'Dead Cool', 'It''s time Trexx and Flipside showed some respect to B-ICE, his girl Chinaza and ''muscle'', Tiny. So, when they don''t move from the seat that B-ICE was maybe thinking about sitting in at Dr Chicken, Tiny is told to send them a message... and a little later, Trexx and Flip''s car blows up.

Ollie is devastated and so calls the RAC and before racing back to tell Brilliance. When she arrives, she discovers her number one clients alive, if somewhat charred. Brilliance announces one of his brilliant ideas: the boys are told to stay ''dead'' whilst he organises a tribute gig to get a posthumous record deal with infamous Producer, Biggie Spect. Even B-ICE is invited.

In fact, B-ICE has even penned a special Rap for the occasion. Trexx and Flip just can''t resist the temptation to attend the event and go dressed in drag and a sailor''s uniform. Who could know Tiny likes big girls? And how could anyone predict Biggie Spect has a fetish for dead guys?', 148, 3, 394760, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4282, 'B-ICES''s New Clothes', 'It is BRAS time - the British Rap Awards - and Trexx and Flipside are going to be there. In row ''Z'', with the price of the tickets taken from their next (indeed, first) pay cheque.

Ollie and Brilliance have it all planned. The boys can get ''papped'' by popping up behind the real rap stars as they arrive. B-ICE decides wearing ''street'' isn''t cool enough for this year''s event so, despite Chinaza''s advice to the contrary, he decides to go ''gutter''. Those clothes he swapped with a street-brother down on his luck have the sweet smell of success - well, they have something that doesn''t smell right.

Trexx and Flip set off in a Limo - a shared one. They couldn''t afford the real thing themselves and the Hen party that is sharing with them won''t be too wild will it? Are you kidding? Two cool black guys and a hen party-in-need spells nothing but monster-trouble for the boys. Stripped and abandoned on the streets, they soon figure out what they need. A passing tramp wearing cool clothes and two tickets to the BRAS. Hey presto, how did that happen? Will it all finally go right...? Doubtful, but you never know.', 148, 4, 394762, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4283, 'Resplendant', 'DJ Resplendent produced the seminalest piece of rap final in the history of music, and if Brilliance does not get him to agree to produce the boys next track, he''s history.

Trexx and Flipside have had enough. No gigs, no record deal, no sign of their trip to the very top taking off. If Respledent is who they boys want, that''s who Brilliance will get... even if Resplendent has become a recluse. Resplendent famously went mad and ate all of the copies of his last record before becoming convinced he was Mick Hucknall.

Ollie is sent packing around the world to find him, finally discovering him on a roundabout outside Leicester. What the boys need is to impress him and what Ollie needs is to make the mighty DJ Resplendent sane again - even if it does mean free-falling from an aeroplane.

Trexx and Flip rehearse their best-shot to impress him. They have the last copy of his last record and know nothing of his madness-inducing history with the track. Whilst Ollie is sent to make the tea - this here is men''s business - Trexx and Flip offer up their version of his last ever song. Cue more insanity from DJ Resplendent - or is that Mich Hucknall holding back the tears?', 148, 5, 394763, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4284, 'Kings Of Da Hood', 'The boys are headed for divorce. Brilliance and Ollie have set them up with a gig at the notorious Saints Alive High school where one of the teachers - baby-obsessed Miss Olsen - falls for Trexx and one of the pupils thinks Flipside could be the father-figure he craves since his own dad left home.

Whilst Trexx misses rehearsal time in favour of the passions of Miss Olsen, Flip ends up finishing the homework of Tiger Tee - the coolest 11-year-old rhyme-dropper on the streets. And he also steers him away from stealing hub-caps for Clinton''s new business ''Under-the-Rims''. But with so much extra-curricular activity, Trexx and Flip''s work-rate has dwindled, with each blaming the other.

B-ICE''s surprise birthday party is in the offing - and a new set of hub caps will be perfect. Time to call Clinton. Brilliance''s latest craze sees him listening to the advice of Guru Desmond, so he misses the disaster-in-the-making. Best friend Clinton and Ollie finally get the boys to see sense - but how do they get rid of the new loves in their lives? Perhaps Guru Desmond can offer the advice every father-figure and every rapper with a bunny-boiler teacher in tow needs? Or perhaps Guru Desmond is not what he seems.

And how can Clinton keep B-ICE from mashing him now that his supply of wheel hubs has dried up?', 148, 6, 394764, 399);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4285, 'Guan yu, Zhang Fei - A Sisterly Pact is Made', 'Kan''u, a traveling warrior who fights bandits, visit a town where she encounters RinRin and her troublemaker friends. While most of the town find their antics funny, the Mayor isn''t when he decides to send his soldiers to catch her until Kan''u volunteers to do it herself. After meeting and fighting her that ended in Rinrin''s defeat, Kan''u realize that her antics are just her way of getting attention after being lonely after her grandfather died. After making a vow of sisterhood with Chōhi (RinRin other name), Rinrin apologizes to the mayor and leaves her hometown with Kan''u but not before saying goodbye to her friends. ', 149, 1, 394778, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4300, 'It`s a School Festival! Everyone Assemble!', 'Everyone is preparing major productions for the school festival, from magic acts to maid cafés to big musical numbers.', 149, 4, 4161412, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4301, 'Koihime†Musou OVA Omake', null, 149, 5, 4794743, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4302, 'Shin Koihime†Musou OVA Omake', null, 149, 6, 4794744, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4303, 'Shin Koihime†Musou: Otome Tairan OVA Omake', null, 149, 7, 4794745, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4585, 'Tribunal', null, 162, 2, 2230381, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4586, 'Liebe', null, 162, 3, 2230391, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4286, 'Guan Yu, Zhao Yun Head to Their Deaths', 'Kōsonsan, a local feudal lord and Chōun (also known as Sei), another warrior has ask Aisha (Kan''u real name) help to find a hidden base belonging to Bandits so they can be eliminated. Aisha agrees where she & Sei hides in a merchants crate so the bandits will steal it to their base. After finding their base, Chōun and Aisha fight off some of the bandits & rescue the prisoners held by them before finding themselves in a dead-end. However, Rinrin arrives & helps the prisoners escape & defeat the rest of the bandits. Kōsonsan is not happy hearing this since she wanted to showoff her White horse in battle. Chōun decide to join Aisha & Rinrin in their travels since Kōsonsan, while a noble person, isn''t strong enough to unite the country and its rival factions. ', 149, 2, 394779, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4287, 'Zhang Fei, Ma Chao Striking Each Other', 'Enshou, the arrogant noble of Shao meets Sōsō, the young queen of Wei, who has ask permission to have her troops enter Enshou''s land to destroy an army of bandits there on behalf of the Imperial capital. Sōsō leaves but not before humiliating & insulting Enshou & her assistants, Bun Shou & Ganryou, for their idiocy & not dealing with the bandits in Shao. She later meets Aisha who she has taken an interest. Meanwhile, Aisha & her friends are working at a Maid Restaurant in order to earn money but Chōhi decide earn money another way where she meets Bachō, where both of them decide to enter a fighting tournament hosted by Enshou. Both of them made it into finals in a "draw", which impress Enshou, who decides to ask them to join her group. Bun Shou & Ganryou, aren''t please since both of them fear they will get fired so Enshou decide to hold a 3 round contest between the two groups. Both groups each wins a round (Chōhi and Bachō in Beauty & Bun Shou & Ganryou in Intelligence) before the third round begins where they are ask to fight in a Sumo match while wearing a humiliating Sumo attire. In the end, Bun Shou & Ganryou wins the contest by default when Chōhi and Bachō decided to forfeit & not embarrass themselves, while Chōhi decides to introduced Aisha & Sei to Bachō. ', 149, 3, 394780, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4288, 'Ma Chao Attacks Cao Cao', 'Sōsō and her troops return to Shao after defeating the army of bandits. While there, she meets Rinrin when she is suddenly attack by Bachō who claim Sōsō killed her father, Batō before being subdued by Rinrin & Sōsō guards. Aisha, after hearing the news, meets Sōsō & ask her to spare & release Bachō. She agrees, on the condition that Aisha sleeps with her tonight. However, their night together is interrupted when an Assassin tries to kill Sōsō but Aisha manages to save Sōsō. Thankful, Sōsō frees Bachō for Aisha. Kakou Ton, Sōsō''s commander, while escorting Aisha, reveals the truth of what happen to Bachō father. On the night he died, Batō was ordered to have a match with Sōsō, but she refuse since he was too drunk to fight. Embarrass, he left the palace where he unfortunately fell off his horse seriously injured. Ton & her men were there with him & she promise to keep his secret on how he died. However somebody did see them and mistakenly believed that Sōsō sent her troops to kill Batō. Sōsō decided not to do anything about the rumor, since she wanted to protect Batō honor to make it seem like he died a warrior''s death (A warrior who died drunk falling from his horse is considered an embarrassment.). Bachō refuse to believe it and accuses Ton as a liar, who is insulted and challenges Bachō to defend her honor. Before they began their match, Bachō realize that Ton was telling truth when she notice her fighting stance & remembering her father''s words that "A noble warrior with no secrets or regrets, will show it in their fighting stance". Realizing her mistake, she breaks down and cries. In the end, Bachō decides to return to her home to tell her people the truth, while Rinrin is confident they will meet again. ', 149, 4, 394781, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4289, 'Guan Yu Exterminates A Monster', 'The group saves a timid, young lady from bandits who unknown to them is, Toutaku, the Governess of Zhao. She tells the group she came to investigate a rumor that a monster has been threatening a village to bring food at a temple every week. After Toutaku & the village leader pleads with them, they agree to go the temple to stop the monster. Aisha & Rinrin are too scared to face the monster after hearing a ghost story from Sei & faint when they finally meet it. Sei realizes that the ''monster'' is actually a woman & tries to fight her only to be knock out swiftly by her opponent''s powerful punch. They regroup along with Toutaku accompanying them to finally meet the ''monster'' herself, whose name is Ryofu. After a fierce fighting between the four, they all stop when Toutaku tries to save a puppy from a falling tree where Aisha and Rinrin are force to stop the tree. Ryofu, later reveals that she was only threatening the village for food since it was for her many pets dogs. At this time, Toutaku strategist, Ka Ku finally finds Toutaku, revealing her secret. At her palace, Toutaku forgives Ryofu, in exchange that she will remove the giant rock she used at the village she threaten. Ryofu''s dogs also will be living in the palace where they will be trained to become guard dogs to help defend the kingdom against thieves after Toutaku pleads with Ka Ku, who reluctantly agrees. ', 149, 5, 394782, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4290, 'Zhang Fei Competes With Kongming', 'Sei is angry at Aisha & Rinrin after they ate her food at a restaurant. While traveling through a foggy mountain, they lose track of Sei & Aisha sprain her leg after falling into a ditch. After coming to mansion, they are helped by Shibaki and her student Kōmei. Rinrin is jealous of Kōmei since Aisha praises her for her kindness, intellect and her many skills. Later Shibaki tells Kōmei to find a herb in the mountains which can heal Aisha sprain leg, which Rinrin decides to secretly follow, hoping to get it before her. During the journey, Kōmei is reveal to be afraid of heights but she still continues which confuses Rinrin. When she finally finds the herb at the side of a cliff, she tries to get it but falls where she is saved by Rinrin. Rinrin, out of pride, decides to help Kōmei get the herb & accompany her home which Kōmei is thankful. After being healed, Aisha thanks Shibaki & asked if there is anything she could do for her. Shibaki replies that she brings Kōmei in their journeys to be her guardians so she will learn to become a great scholar. Aisha agrees and Kōmei says goodbye to her teacher. ', 149, 6, 394783, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4291, 'Zhang Fei Has a Fight With Guan Yu', 'Rinrin has a fight with Aisha about Kōmei and leaves the group. While in town, she is reunited with her friend Bachō where both of them enter an eating contest. Unfortunately, they lose to a young girl name Kyocho who later introduces herself. The three later saves a young boy from a group of cheating loan-sharks who threatened to take his older sister. The trio decide to protect he and his sister at their house, while there with the siblings, Rinrin is reminded of her relationship between her & Aisha. The next day, the loan-sharks return and a brought a warrior named Chouryou to fight the trio. Chouryou enjoys the fight but it is short lived when the loan-sharks have taken the siblings hostages. Then, a masked woman saves the siblings who calls herself Butterfly Mask (Who is really Sei but Rinrin doesn''t realize its her except Bachō.). In revenge of their cowardly act, Chouryou destroys the siblings loan agreement and scares the loan-sharks to never return. In the end, Rinrin is reunited with Aisha where they both reconcile. ', 149, 7, 394784, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4587, 'Körperkult', null, 162, 4, 2230401, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4588, 'Verwandlung', null, 162, 5, 2230411, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4589, 'Tag der offenen Tür', null, 162, 6, 2230421, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4292, 'Guan Yu Obstructs Huang Zhong''s Plot', 'Aisha, Rinrin and Kōmei rescue a girl from a shopkeeper only to realize the girl swindle him. The girl, Shōren, who is a member of the royal family of the Kingdom of Wu, decides to join Aisha''s group. Later her jewellery is stolen by a crow which is stunned by an arrow from an archer from above an inn which impress the girls. At a restaurant, the group learns a neighboring feudal lord''s son will be marrying the local lord''s daughter despite opposition from the some of the lord''s family. Aisha suddenly realize that the archer''s window is facing the path where the groom will be paraded. The archer, Kōchū reveals to the group that she being forced to assassinate the groom for her daughter''s life, Riri who has been kidnapped. When Kōmei recognize a drawing from Riri as the shopkeeper they meet before, she along with Aisha, Rinrin and Shao mount a rescue to save her while Kōchū stays back to keep her minder distracted. Using Shōren and the shopkeeper as a distraction, Aisha & Rinrin defeat the kidnapper''s at their hideout and rescue Riri. Thanks to a horse provided by Sei (in her Butterfly Mask alter ego), Aisha manages to bring Riri to her mother''s attention which stops her attempt and punches her minder. Kōchū thanks Aisha who mistakenly thinks Aisha & Rinrin are mother & daughter, only to make matters worse when Ririn misinterpret their relationship, which Kōchū now thinks are lovers. ', 149, 8, 394785, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4293, 'Yuan Shao Digs Up a Treasure', 'Reiha''s group finds a treasure map & decides to find the treasure. Aisha''s group & Karin''s group (excluding Shuuran) are also going to the same place, with both of them going the Hot Springs for relaxation there. When Aisha''s & Sōsō''s group find the Springs has dried up, they both decide to find another buried hot springs somewhere around the area. While Aisha group was trying find the springs, they encounter a large bear, who Rinrin thinks it her pet bear only to realize it isn''t, runs away from it. Reiha''s group learns about the other two and thinks their both after the treasure and decides to secretly follow them with disastrous results. The place Keifa choose (and left before digging it) is fill with creepy insects when Enshō''s group they remove its stone cover. When Reiha thinks Shuri maps has the complete location of the treasure (when in fact it is a map where the springs might be located) she take Shōren hostage in exchange for the map. But Rinrin has no interest rescuing Shōren (where everyone disproves of her behavior) which ends when the same bear chases after Reiha''s group until they fall off a cliff. After recovering from her fall, Reiha realize the treasure isn''t worth it since she has two important treasures with her, Iishe and Toshi. She then accidentally moves a giant rock which reveals the hidden springs. In the end, all three groups decides to relax at the hot springs but not before Reiha''s group and Karin''s group insults each other until Butterfly Mask arrives to stop their bickering and the location the treasure is reveal to be located in the Bear''s lair. ', 149, 9, 394786, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4294, 'Zhuge Liang''s Life is Threatened', 'The kingdom of Wu under Queen Sonsaku has been rapidly expanding it territory''s. While their wars has made them famous abroad, at home it has cause concern to Princess Sonken and some nobles who fear these wars may destroy the kingdom. At a banquet, Sonsaku secretly reveals to her strategist & lover Shuyu, that her actions were the last wishes of her late mother Sonken. She wishes to unite the country and later abdicate the throne in favor of her sister Sonken who she knows will heal the damage her wars has cause to the nation. At the same time, a group of nobles led by Choushou, launches a plan to end Sonsaku reign. Meanwhile, Aisha group has arrive at Wu where Shōren is scolded by her aunt Sonsei for running away. Sonsaku thanks them for taking care of her sister by having them stay overnight. The next day, Aisha, Rinrin, Shōren goes on a hunting trip accompany by Kannei. While alone, Aisha notices Sonsaku on her balcony from a top of a hill. When they return, Aisha is arrested by Sonken orders. When they were away, Sonsaku was shot by a poison arrow and is now in a coma. According to the witnesses, the arrow came from the same hill Aisha was at and they believe she was the culprit since she was there and there wasn''t anyone who was with her to prove she wasn''t the one who did it. Kōmei counter the claim and believes Kannei is a suspect since she too was alone during that time and she could have a motive since a vassal is more likely to kill her master rather than a stranger. Before the insulted Kannei can harm Kōmei, Shuyu manages to stop her and tells Sonken to let Aisha go since there is no proof she done it and Sonken is acting base on her feeling. Later that night, an assassin tries to kill the unconscious Sonsaku who suddenly tells the assassin to stop who is reveal to be Sonsei. Her attempt on her life at balcony was actually an act to catch the dissenting nobles with Aisha unfortunately being at the wrong place at the wrong time. Choushou, the leader of the dissenter is reveal to be working with Shuyu and Sonsaku and was secretly getting the names and proof of the collaborators. Sonsei reveals that she and the dissenters felt the blood shed from her wars has cause so much damage that it will come back to haunt the family which Sonsaku responds she knows since her acts are for the betterment of the kingdom and has her aunt arrested. Kōmei, Aisha and Rinrin leaves on a ship on the Yangtze River before Shōren, Rikuson and Sonken who came to apologize to Aisha sees them off. Before everything ends, Kōmei points that all that incident seemed to be planned by somebody else. Shuryu then reveals herself to Rikuson as the author of that whole scenario, and ask her about her thoughts about Koumei. Rikuson thinks that Koumei will be quite a great strategist someday, and she looks forward to see her in the future, while Shuryu says that someday maybe she''ll stands in their way. ', 149, 10, 394787, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4295, 'Guan Yu Meets Liu Bei', 'Aisha walks out of the cave that she Rinrin and Shuri slept where she finds herself in battle between Bandits and Militias. Immediately both she and Rinrin fight the off the bandits which forces the bandits to retreat. After the battle, the commander of the Militia''s introduced himself as Ryūbi (Real name Gentoku) and thanks the girls for their help. He realize that Aisha is the Black hair Beauty bandit Fighter which at first she thinks he will question her beauty and is surprised and embarrassed when he says the stories of her beauty are true. At the village of Touka, the feudal lord explain how Ryūbi who claims to be a descendant of Liu Sheng, with his followers came to his village to help them fight against the bandits which he agree by helping him form an army. Unfortunately Ryūbi''s army was defeated 7 times which at one point the lord was thinking of kicking him out the village should he lose again.
With Aisha and Rinrin fighting skills and Shuri''s strategies, Ryūbi army are defeating the bandit armies. Aisha is enamored with Ryūbi ambitions to save people from misery and his resemblance to her late brother. While the girls were searching for medical herbs, Shuri finds a special plant and plucks it and is scared to find underneath the plant, an almost dead Bachō. While recovering, Bachō explain that she accidentally ate a poisonous mushroom which sent on her on hallucinatory trip until she fell on the spot the girls found her and would have died if she wasn''t found. Following Shuri''s advice, the lords mansion is fortified with watchtowers and a ditch surrounding it. Rinrin makes friends with the village children and learns from them the village name comes from the peach blossom trees growing here. At the same time, Sei, Kōchū and Riri travels to Touka after hearing about their friends exploits there. ', 149, 11, 394788, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4296, 'Guan Yu Accomplishes Her Ambition', 'Ryūbi and his army attend an imperial war meeting between other loyalist army commanders hosted by the Commander-in-Chief of Imperial forces, General Kashin to discuss the recent uprisings the empire is facing. Rinrin stays back after getting a fever with Shuri staying to take care of her. During the meeting, General Kashin ask on how to defeat an army of rebels who have fortify a mountain. Sōsō suggests a Siege strategy where they will cut off the rebels supply routes to deprived them of supplies which will starve them and affect their morale and an offer of clemency to those who surrender. But Kashin is not interested of showing mercy to the rebels and wants them to be eliminated quickly as a lesson to others. Ryūbi takes the offer to fight them head-on with the promise of bringing the leaders head. Kashin, impress of his willingness, agrees to give him the mission and reward him as her aide in the government if he succeeds. Meanwhile, the bandits that Ryūbi''s army defeated have united and launched a surprise attacked on Touka to get their revenge.

When news of the attack reaches Ryūbi, Aisha suggest to immediately go back and save the village. But Ryūbi decides to abandon Touka and focus on the fighting the rebels and seducing Aisha to join him. Realizing that Ryūbi never care about the people and was more interested in power, she slaps him and goes to Touka to save her friends with Bachō following her. Bachō asks Sōsō for help but she refuse citing Aisha foolishness to follow Ryūbi but when Bachō begs on her knees, she tells Shunran to lead the Black Riders cavalry unit on "reconnaissance" at Touka. At Touka, the defenders and villagers are forced to fall back into the lord''s mansion. When the bandits finally breach the mansion gates, they are stop by a sick but angry Rinrin who declares that no one shall pass through. Just as Rinrin reaches her limit, Aisha finally arrives and helps Rinrin defend the gate. Together with the help of Kōchū and Sei, the arrival of Bachō, Shunra and the Black Riders, the bandits are quickly defeated.

After the battle, Aisha ask Shunra if she can thank Sōsō herself but Shunra tells her not to as she might end up in Sōsō bed again. While asking where Sei have been all this time, she replies that she died and was revived by a mysterious being only to tell everyone it was a lie. Ryūbi''s army without the help of Aisha and Bachō, could not breach into the rebels mountain fortress and had to give up and return to Touka after three days which Sōsō army took over and succeeded using her siege strategy. Ryūbi was strongly reprimanded by Kashin for his failure and embarrassing the imperial court. He tries to save face by returning to Touka only to unexpectedly meet Kōchū and Riri who recognized him as the man who kidnap her and made Kōchū do the assassination, he quickly runaways. Kōchū concludes that he was a criminal and impostor, who got tired of doing dull crimes and decides to gain riches and fame by claiming to be a descendant of Liu Sheng.
The series ends with an epilogue detailing what everyone was doing now; Aisha and the group along with the villagers celebrate under the peach blossom trees while Rinrin playing with Riri and the village children, Shunra doing official work while Sōsō is relaxing with Keifa and Shūran in bed under the peach blossom trees, Sonken and Kannei inspecting the Wu Navy at the Yangtze River while her sister Shōren gets chase by the Qiaos Sisters, Sonsaku, Shuyu and Rikuson viewing the moon from a balcony, Enshō, Bunshū and Ganryō finding the Hot Springs treasure again with the help of the bear that chase them before, Ryofu sparing with Kayū while Tōtaku and Kaku watch them along with Ryofu''s dogs, Kyocho winning another eating contest, Chōryō working at a maid restaurant, Kōsonsan dreaming leading with her white horse and Shibaki receiving a letter from Shuri. The last scene ends with Aisha and Rinrin reaffirming their sisterhood vows with the narrator telling how the 6 heroines and their new adventures will be told some other time, some other place. ', 149, 12, 394789, 400);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4297, 'Rival Warlords Battle for the Position of Student Body President: There Will Also Be Flying Tops!', 'Bring all characters to modern time. Where they became a students of St.Francesca Academy. They set group and and competing with each other. Who win will take the student council president place.  Koumei, a new transfer student to St. Francesca Academy, is asked by Kan''u to join her team to help her win the contest that will decide the new president of the student council.', 149, 1, 504331, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4298, 'Rival Warlords Vacation on a Tropical Island: There Will Also Be Tentacles!', 'The story takes place at St. Francesca Academy. After the battle between the students ended, they all go to a southern island.', 149, 2, 1966461, 401);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4590, 'Der Vogel', null, 162, 7, 2230431, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4591, 'Freud', null, 162, 8, 2230441, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4304, 'Bachou''s Anguish', 'With Koumei''s strategism and the five strong warriors Kan''u, Chouhi, Chouun, Bachou and Kouchuu''s power, Touka Village army grows more and more. Bachou, hearing Riri, Koumei and Kan''u calling Chouhi her given name Rinrin, wants to call her that, too. Though she is embarrassing to call her so, she finally does that. In the end, the friendship of five warriors with Koumei and Riri gets stronger and Kan''u plans to do another journey. Next episode introduces a girl with pink hair asks for the way to Touka village. ', 149, 1, 1190511, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4305, 'Ryuubi Visits Touka Village', 'Koumei went out to buy some porn books with Kan-u''s group waiting in the restaurant, hearing things about Kousonsan, swords, and the Chou sisters idols. A girl with pink hair is cornered by the trio bandits, with perverse thought about her. Kan-u''s group come in time and with one swing, Kan-u sends the trio away (to the sky). The girl introduces herself as Ryuubi Gentoku, that surprises Kan-u and her friends. Ryuubi finds that there''s an impostor claiming Ryuubi before, and she''s aware of the man. Koumei tells the party about Kousonsan''s sword and asks Ryuubi come to find about it. Ryuubi leaves the day after only to get herself attacked again, and once again, Kan-u''s party saves her (then with Chouun as Kochou Kamen). Later, Ryuubi and Kan-u''s party (except Bachou and Kouchuu with Riri) leaves Touka for Kousonsan''s place. ', 149, 2, 1190521, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4306, 'Kousonsan Fights Enshou', 'Ryuubi and her party come Kousonsan''s city. Kousonsan welcomes them and is surprised that Ryuubi comes with them. She tells them that the sword isn''t here now. Because Enshou''s lending food for her city, Kousonsan must give it to her as a proof that she will repay Enshou. The party goes to Enshou''s place. They''re involved to Enshou''s stupid games as usual. Koumei loses 0-100 to Ganryou in Question Game (about Enshou''s secrets). Ganryou loses Ryuubi 11-13 to Eel Catching (by breasts) Game. And the games later with Bunshuu and Chouhi in Arm Wrestling, Ganryou in Tongue Twister, Bunshuu and Kan-u in Imitations, Ryuubi in "What''s in the box?", Bunshuu and Chouun in Staring Contest, Ganryou and Chouhi in Bean Carrying, Clam-matching, Cosplaying and the games come to a tie 150-150. The last match, Kousonsan and Enshou in Sumo Wrestling of Ladies wearing a swan loincloth (though Kousonsan wears her white-horse loincloth), ends with Kousonsan''s win (her power goes up while she remembers how unnoticeable she was). Though, Ryuubi can''t get her sword back because Enshou just lended it to her cousin Enjutsu before (through Choukun''s saying that is a pun of The Emperor''s New Clothes). Kousonsan doesn''t have to pay for the food Enshou lended her city and Ryuubi''s party leaves for Enjutsu''s city. ', 149, 3, 1190531, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4307, 'The Three Chou Sisters Acquire the ''Crucial Keys to the Way of Peace''', 'The Chou sisters try to get their money by performing magic and music, though it''s hard to deal. A man claiming himself Ukitsu gets them a little dream and gives them the Taihei Youjutsu (Crucial Keys to the Way of Peace) book full with magic references. Chouhou uses the magic to create three magic crystals (somehow it resembles a microphone) and the three sisters plan to put their first magnificent performance using this, and they get successfully. Their successes come one by one, and they have been famous more and more ever.

In the way to Enjutsu''s city, Ryuubi is caught off by a poster of the Chou sisters, she suggests the party to take a look at them. The party goes to see a performance of the sisters, and stops a small fight in the performance. The sisters start to think about the way to get rid of the annoying matters that may cause problems to them someday.
Ryuubi''s party leaves to continue the journey. ', 149, 4, 1190541, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4308, 'Kakuka and Teiiku Come Into Sousou''s Service', 'In the journey, Chouhi''s stomach hurts. Ryuubi''s party comes to a man''s resting place for Chouhi to rest. The man claims himself as a doctor and he saves Chouhi from her stomachache. The man introduces himself as Kada of "The Way of Fire Grains" (五斗米道, Gotomedou). He tells the pary about the Taihei Youjutsu using people''s hatred of oppression instead of its caster''s magical energy. Though it was originally created for good reasons (using energy to help people), the book gained its own will and created more hatred for its power. Kada suspects Sousou has it and goes with the party to reaches her place. They find a spectacles woman fallen with a pool of blood around her, only to find out that''s only nosebleed through her friend. They introduce themselves as Kakuka and Teiiku, on the way to come into Sousou''s service. Kan-u accepts to introduce them to Sousou.
In Sousou''s city, Kada goes straight to Sousou''s palace and Ryuubi''s party with Kakuka, Teiiku go for a meal. Knowing Taihei Youjutsu''s truth, Sousou agrees to Kada and stops her search for it. Kada asks her for reason to search it, she tells him about it and eventually, his way to treat her problem makes her mad and kicks him out of her palace. Then, Kan-u asks her for audience and she makes her and Kakuka, Teiiku to her bath. An assassin appears, Kakuka and Kan-u help Sousou to capture her. Finally, Sousou accepts Teiiku as her strategist, Kakuka as her bodyguard (because of her nosebleed "talent"). ', 149, 5, 1190551, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4309, 'Ten''i is Tested by Sousou', 'Kan-u returns to the inn that her party stays in and tells them about Kakuka''s and Teiiku''s employment. Kan-u is worried about Kada''s safety after he angers Sousou (he merely manages to escape Kakouton).

In the Chou sisters'' performance, they have got another quarrel, this time Chouhou manages to use magic to calm down the audience. This magic effects to all people that are enchanted to the sisters.

Ryuubi''s party enjoy their meal at a restaurant with common yet specially delicious dishes and the chef, introducing herself Ten-i, offers them to taste her chicken manjūs. That evening, Kakouen invites Ryuubi''s party to Sousou''s gourmet.

The day of the gourmet, Ryuubi''s party and Sousou''s subordinates are waiting for her cooking. Juniku is filled with her head about Sousou as usual. The guests eat Sousou''s delicious cooking and enjoy it very much (except Chouhi because she can''t full her stomach with it). Chouhi compliments about how good Ten-i''s food is and Sousou orders Kakouton to bring her there. Ten-i cooks manjūs with combination of three dishes Ryuubi''s party ate in her restaurants twice. Sousou admits her defeat, because she thinks she has not fulfilled her role as the hostess there for not thinking about Kan-u''s preference. Ryuubi offers Sousou had tried her best for Kan-u''s glory, and it''s unnecessary to decide who wins and who loses in cooking. Sousou smiles and accepts that. An ox prepared for cooking escapes and attacks Ten-i, only to find out her massive power to throw it far away. Ten-i is suggested to join Sousou''s bodyguards and she says she will decide it later.
The Chou sisters get tons of jūmankin manjūs caused of Chouhou''s mistake, only to find out how incredible the power Taihei Youjutsu is. ', 149, 6, 1190561, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4334, 'Steel-Coloured Festival', 'It''s the school Cultural Festival and Yuuhi, Karen, Fuyuhiko and Tsukasa (along with the rest of their classmates) are doing a Yakisoba  café. However, they face tough competition from the Yakisoba stand put up by Minato and the tennis club. Meanwhile Jun''ichi is kidnapped by Mitsuki, Nagomi and Mr. Sugishita for secret training regarding a dangerous mission. Back at the Yakisoba café the girls end up wearing their school swimsuits to attract business and end up triumphing over the tennis club''s Yakisoba stand. At the end of the festival everyone is called out to the school track field to witness Jun''ichi''s epic battle in his "Big Genokiller" against a robotic octopus. ', 150, 7, 409089, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4310, 'Chinkyuu is Taken in by Ryofu', 'Enjutsu is singing at her palace. After singing, she is indecisive about the food and drink she would have, only to make Choukun lectures her.
Ryuubi''s party arrives Enjutsu''s city and takes a look at a gift shop. Chouhi wants a little toy dog charm, and a girl shows up saying she sees it first. They quarrel, Chouhi wins and the girl yells at her, running away the shop. Going out from the shop, they meet Ryofu. She talks to Kan-u, Chouhi and Chouun, and the girl earlier suddenly does Chouhi a "knee drop". Ryuubi''s party talk to Ryofu and the girl, whom Ryofu calls Chinkyuu, and know about a married arrangement about Chouchou (Chinkyuu''s dog). But Ryofu''s party is giving up due to Enjutsu''s poor managing the city. Ryuubi''s party learns about Chinkyuu''s hard past, and how she meets Ryofu and how she makes Chinkyuu''s life better. Chouhi also learns that the little toy dog Ryofu hangs in the head of her "Houtenkakugeki" (her weapon) has lost, and the one she has bought from the shop resembling it (so Chinkyuu really wants it), then she gives it to Chinkyuu. ', 149, 7, 1190571, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4311, 'Enjutsu Orders a Monster''s Extermination', 'Enjutsu declines to return the sword to Ryuubi. Ryuubi begs that she will do anything just to get it back, and Choukun suggests Enjutsu to exterminate the monster in her territory. Ryuubi''s party go to the shrine that there is a rumor about the monster to exterminate it, but Kan-u and Chouhi faint for the first time. Koumei describes the monster to Enjutsu, which freaks her out, and she suggests Enjutsu to give Ryuubi''s sword back, beside they will give her "the mystery mug" (just an ordinary mug Koumei buys from the gift shop) in exchange for the sword. Koumei tells the party about the plan, and they come to defeat "the monster", again. That time, they caught the children who make the monster, and find out they are orphans gathered there for many reasons. Koumei tells them she has a plan to protect the shrine. She tells Enjutsu about the sword turning to dust while fighting the monster, and suggests her to build an orphanage or else the monster will come back. Ryuubi''s party pretend to be ghosts to scare the wits out of Enjutsu but somehow she is freaked out by some "true" ghost (she seems to be the boy''s deceased mother Ryuubi gives flowers to). So, Enjutsu does what Koumei says. ', 149, 8, 1190581, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4312, 'Gakushin, Riten, and Ukin, Protect a Village', 'Ryuubi is really happy about giving her sword back. In the way to return Touka, the party stops to rest in a village. They''re mistaken to bandits, then their leaders Riten and Ukin attack them. Shortly after that, the mistake is clear and their other leader, Gakushin, brings a formal excusement to them. They find out Gakushin''s group plans to join Sousou''s army due to her good impression, but the bandits around there attack them many times and they don''t have plans to defeat all the bandits, though. Ryuubi''s party decide to help them. Koumei plans to use the Ryuujin-ko (the near lake) to help defeat the bandits (a flood attack using the rain, the bridge, the lake and the riverbed). They build a floodgate due to Riten''s construction talent.
Following the tactic, a small group attacks the bandits'' camp to lure out them. When they arrive the riverbed, Riten will follow Koumei and Ryuubi''s signal to open the floodgate to use the water attack. But the large rock falls and halts the water. Ryuubi uses her sword to a lightning rod and the lightning breaks the large rock. Finally, the flood attack is successful. Ryuubi asks Kan-u to be her younger sister, but Chouhi says she only accepts Ryuubi as her older sister, and the bond is built. ', 149, 9, 1190591, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4313, 'Koumei Wishes for a Sister', 'The Chou sisters continue to use Taihei Youjutsu to gain what goods they want with Ukitsu secretly watches over them.

Ryuubi breeds Kan-u food, that makes her embarressing, and Chouhi gets jealous because Kan-u doesn''t do that to her. Seeing that makes Koumei remembers about the past, about her elder and younger sisters. The party pasts by Koumei''s home city and Chouun gets lost again. Arriving Suikyou''s house, a girl with witch outfit opens the gate and runs to the home because they wield weapons. Suikyou introduces the timid girl, Houtou, to the party. Ryuubi says Koumei and Suikyou make a good family that makes Houtou a bit jealous. Suikyou arranges the bedrooms for the party, but Houtou doesn''t want to take the same room with Koumei. The day after, Houtou wants Suikyou to go picking up herbs as she has promised but she can''t go, and Koumei suggests she will go in Suikyou''s place. Houtou silently goes with her, but she doesn''t seem a bit interest. She gets angry at Koumei and runs away, telling her she doesn''t want them to be friends. Houtou falls into a hole in the old bridge, merely catches the bridge''s rope. Koumei, despite her scare, manages to go to Houtou''s place and helps her up. Their relationship gets better and Houtou says goodbye to Koumei with promise she will visit her someday.
The Chou sisters'' performance is thwarted by government''s soldiers. Chouhou gets angry and commands her audience to get the soldiers. ', 149, 10, 1190601, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4314, 'Bachou Tries to Hold it in', 'The Chou sisters'' inn gets destroyed due to the attack of Chouhou''s audience. The audience does too much and that makes the Chou sisters fugitives. They decide to get more and more supporters so the army can''t touch them anymore.

Bachou''s cousin, Batai arrives to Touka village and plays a trick on Bachou. Bachou gets angry and wants her to go back to Sairyou, but Kouchuu calms her down and she forgives Batai. They have strict exercises in the morning. Batai gets exhausted many times but Bachou doesn''t have her stop. Batai makes a bet with Bachou that she can''t help wetting herself and makes her drink a lot of water and hold it until the dinner. Bachou uses many methods to hold it in, and she ends up with releasing "it" in the river. Ryuubi''s party comes back, and the fishes Kouchuu uses for dinner is from "that" river.
After the dinner, Koumei holds a meeting about Sousou inviting them to join her army to wipe out the Yellow Turbans led by the Chou sisters. Later, Kan-u, Ryuubi, Chouhi and Koumei depart for battles, leaving Touka village to Kouchuu, Bachou and Batai. In the main camp, Sousou and Kan-u talk about the flag of Ryuubi''s army. They meet Enjutsu and Choukun again. Sousou gets troubled because the number of Yellow Turban''s army gets bigger and bigger, and Ten-i reports to her that Kada wants to meet her again. ', 149, 11, 1190611, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4333, 'Golden Yellow Montagne', 'Karen invites Jun''ichi and his school friends (including their teacher) up to a mountain hotel resort to make up for the events of the cruise ship party. While there everyone continues to hang around and tease Jun''ichi who is not impressed by their company. Karen takes this to mean that Jun''ichi is not satisfied with the luxuries of the hotel and so she takes the group on a long hike up to the Ayanokouji family''s secret hot spring. There they learn that the secret hot spring is a co-ed bath, which causes some problems since the there are guys and girls. This is shortly interrupted by the sounds of a beast, and Minato takes off to find out the source of the noise. Jun''ichi, worried for his sister, follows soon afterwards with the rest of the group in tow, only to find Minato bathing in the hot spring with a bear and cub. The bear and cub leave and the group go in for a dip, boys on one side, girls on the other, and Jun''ichi tries to deal with his urge not to peek on the girls. Jun''ichi ultimately gives in, but finds that the girls have already left to interrogate Yuuhi about her relationship with Jun''ichi. ', 150, 6, 403678, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4592, 'Kebab', null, 162, 9, 2230451, 431);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4593, 'Außendienst', null, 162, 1, 2230461, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4315, 'The Generals Attempt to Suppress the Yellow Turban Rebellion', 'Kada guests the Yellow Turban Rebellion is caused by the Taihei Youjutsu. Juniku suggests an all-out battle against them but Ryuubi doesn''t agree with that. Kada tells his ideas. They agree with him to use another songs of another singers to affect the Yellow Turbans'' hearts, make them leave the rebels. And they use Enjutsu and Choukun''s talent in music, and Teiiku suggests adding Kakuka. When Kada returns, he gets three magic crystals from Gotobedou''s head with limited magic. They execute the plan.

Ryuubi, Kan-u and Chouhi, Gakushin, Riten and Ukin, with Kada and the three singers Enjutsu, Choukun and Kakuka drive a big car to the rebels'' tents. The song contest goes on. The magic of Kada runs out and the rebels follow Chouhou''s order to get them. Ryuubi and Kan-u, Chouhi start singing with the help of three singers Enjutsu, Choukun and Kakuka, and the rest. Then, sings from the hearts win sings from the magic. The Chou sisters realize that their dreams from childhood weren''t like that, and they disband the Yellow Turbans. Even before the present Kada seals Taihei Youjutsu, Ukitsu appears, takes it and disappears.
In the meeting to decide the Chou sisters'' and Yellow Turbans'' punishment, Ryuubi supports to get their punishment as light as possible, so as Riten. Kakuka suggests for all them join Sousou''s army. Koumei, Teiiku, Gakushin''s group support her and Sousou decides to do as Kakuka suggests. ', 149, 12, 1190621, 402);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4316, 'Ryuubi, Going on a Journey Once Again', null, 149, 1, 1792111, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4317, 'Houtou Hides Something', null, 149, 2, 1792121, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4318, 'Ryomou Tries Academics', null, 149, 3, 1792131, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4319, 'Gien, Falls in Love at First Sight', null, 149, 4, 1792141, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4320, 'Sonshoukou Attempts to Fulfill Her Duty', null, 149, 5, 1792151, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4321, 'Gien''s Life is in Danger', null, 149, 6, 1792161, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4322, 'Kougai Makes a Plan to Deceive Her Allies', null, 149, 7, 1792171, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4323, 'Moukaku Is Captured And Released Many Times', null, 149, 8, 1792181, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4324, 'Gunyuu Attempts to Defeat Toutaku', null, 149, 9, 1792191, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4325, 'Shuutai Sneaks Into the Palace', null, 149, 10, 1792201, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4326, 'Chouryou Faces Off With Kan''u', null, 149, 11, 1792211, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4327, 'The Allied Forces Strike at Ukitsu', null, 149, 12, 1792221, 403);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4328, 'The Scarlet First Kiss', 'Whilst walking in the evening, Yuuhi is saved from two guys trying to pick her up by Jun''ichi, going away only knowing him as "the Geno Killer". The next day at school, when Yuuhi transfers into Jun''ichi''s class, both are surprised to see each other again so soon. During a discussion with Ayanokouji, she asks Jun''ichi out, shocking the class. It then turns out only to be for a cup of tea, which is how she wanted to express her gratitiude. She learns that he was a former delinquent. The following day, Yuuhi is pressed for details with regards to her first encounter with Jun''ichi, and in his confusion on clarifying matters for the class, Jun''ichi kisses her, only to get beaten up for taking her first kiss. That evening, Yuuhi turns up at the Nagase residence, stating that she is moving in as Junichi''s fiancee, much to his and Minato''s surprise. ', 150, 1, 394790, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4329, 'The Scarlet Approach', 'A scene from Yuuhi''s past provides some background on the arranged marriage between Jun''ichi and Yuuhi and to her moving in with him. Yuuhi and Jun''ichi have trouble adjusting to living together, and Yuuhi spends her first night sleeping on the couch. The next day afer school Yuuhi goes grocery shopping with Minato for dinner. Yuuhi is amazed by the supermarket and by Minato''s shopping savviness. That evening after supper the Nagase residence loses power and Yuuhi trips in the dark and falls on Jun''ichi leading to another very awkward situation. Minato resets the breakers and power is restored, but Yuuhi blames Jun''ichi and puts him into a headlock, which leads to another awkward situation. Yuuhi ends up sleeping in Minato''s room and the two girls are able to talk and become better friends. ', 150, 2, 394791, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4330, 'Bizarre Colored Scream', 'Jun''ichi''s teacher Seijirou Sugishita goes missing in an abandoned portion of the school. The student council president Mitsuki Siina enlists Jun''ichi and his friends to search for him in the abandoned school building. While searching Jun''ichi and Yuuhi fall down a trap door into a pit. The two are forced to work together to try and get out, but are unable to escape. In the same pit Mr. Sugishita wakes up from under a blanket and the trio are found shortly afterward by Minato. ', 150, 3, 399317, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4331, 'Mad Party of Indigo Blue', 'Karen Ayanokouji, Jun''ichi''s classmate, invites him and his class to her casual "home" party. He is at first not interested, but is dragged along by Minato who also receives an invitation. When they arrive Jun''ichi, Yuuhi, and company find that the party is actually a formal event on a huge cruise ship. Seeing how underdressed everyone is Karen loans them some formal wear, and Minato makes quite the impression on Jun''ichi when he sees her with her revealing dress. This causes Jun''ichi to have awkward feelings about his sister and asks her to cover up. Later, on their way back from the ladies room, the girls discover the kitchen is seriously behind schedule as most of the cooks are seasick. This prompts Minato and the girls to swing into action to save the party. The girls finish the feast and Minato puts on a show slicing up a tuna. Karen, feeling upstaged by the tuna show, puts on her own performance fighting against a giant octopus. This sends a scared Yuuhi running out onto the deck where she trips and activates the fireworks, which ricochet throughout the ship causing a fire in the party hall. Everyone escapes safely except for Minato and Yuuhi, and so Jun''ichi goes into the fire to save them. ', 150, 4, 401016, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4332, 'The Scarlet First Date', 'Jun''ichi asks Minato to see a monster movie with him, which causes Yuuhi to become angry that Jun''ichi never thought to include her. Just before the trio are about to leave, Minato fakes a phone call and makes up a lie about a previous commitment she forgot about and cannot cancel, forcing Jun''ichi and Yuuhi to go on a date. While the two are out Minato decides to go shopping. After the movie, Yuuhi accidentally walks into a man, spilling her food onto him. Jun''ichi quickly comes to Yuuhi''s rescue again and saves her from the man and his friend. Jun''ichi and Yuuhi continue with their date, but are caught by Mitsuki in the park, and are forced to make a quick exit to avoid Mitsuki''s questioning. On their way home, Yuuhi''s hat is blown onto a rock by the side of the river. Jun''ichi goes to retrieve her hat but accidentally falls in, sending Yuuhi into a panic. Yuuhi rushes them home in a cab and frantically searches the house for medicine and blankets. Minato comes home soon afterwards and cures Jun''ichi with some instant ramen. The next day, everyone at school is talking about Jun''ichi and Yuuhi''s date thanks to Mitsuki and Nagomi (who was also at the movie). ', 150, 5, 401017, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4399, 'Voyage to The Planets and Beyond - Part 1', 'Join an international team of astronauts for a fictitious journey to the outer reaches of the solar system. Comprised of five astronauts from the world''s leading, space-faring nations, the crew embarks on a six-year journey to Mercury, Venus, Mars, Saturn, Jupiter, Pluto and the deadliest body in the solar system: the Sun. Using modern-day science, the crew demonstrates just how such a voyage might be possible and how future astronauts might survive the rigors of long-range spaceflight.

', 155, 1, 394811, 412);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4594, 'Hollywood', null, 162, 2, 2230471, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4335, 'Dusk Colored Desire', 'Tsukasa conducts the school''s sports meet since Mitsuki is sick. After school Tsukasa shows Jun''ichi and Yuuhi an embarrassing picture of the two from the cultural festival she intends to enter in a contest for best media, which eventually leads Jun''ichi to bring up embarrassing things from Tsukasa''s past to put an end to her teasing. This causes Tsukasa to recall her childhood dream to become a voice actress. The next day the students are given a career investigation assignment and Tsukasa sets out fulfill her dream by applying and preparing for an audition. Unfortunately on the day of the audition Tsukasa becomes very nervous and she loses her voice during the audition. Later however, after a talk with Jun''ichi, Tsukasa decides to renew her ambition to become a voice actress. ', 150, 8, 409090, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4336, 'Rose Madder Colored Birthday', 'Tsukasa''s photo of Jun''ichi and Yuuhi from the Cultural Festival comes in first place as Best Amitié. Minato convinces Yuuhi to help with Jun''ich''s surprise birthday party by getting Jun''ichi''s present, but Yuuhi has a difficult time choosing a gift. She ends up sneaking into Jun''ichi''s room for some clues on what to get him and discovers Jun''ichi''s stash of dirty magazines. While looking through the magazines Yuuhi is caught by Minato and confesses her difficulty trying to find Jun''ichi''s gift. Minato offers to let Yuuhi bake the cake instead as her present to Jun''ichi. The next day at his party Jun''ichi receives many strange birthday gifts from friends and family. Afterwards Jun''ichi finds the cake Yuuhi baked and everyone tries a piece. The cake did not turn out very well, but Jun''ichi tells Yuuhi that it is delicious because she baked it for him. Minato begins to feel jealous. ', 150, 9, 411161, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4337, 'Rose Madder Colored Confusion', 'Yuuhi is beginning to understand her feelings for Jun''ichi. As a result she fakes being sick and Jun''ichi stays home from school to care for her. Yuuhi demands a redo first kiss and the two finally confess their true feelings. At school the girls encourage Yuuhi to take initiative to move her and Jun''ichi''s relationship to the next level, and Karen announces her intentions towards Jun''ichi. The next day Fuyuhiko confronts Jun''ichi about his feelings for his sister and advises Jun''ichi to make a decision. At Nagomi''s suggestion Yuuhi comes to Jun''ichi''s bedroom in middle of the night dressed as a maid and despite some awkwardness the two are able to become closer. The next evening Yuuhi leaves to report back to her family leaving Jun''ichi and Minato alone. Minato uses this chance to express her feelings for her brother and Jun''ichi is still unsure how he feels for his sister. ', 150, 10, 413327, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4338, 'Rose Madder Colored Puzzlement', 'Yuuhi meets with her father and rejects her engagement to Jun''ichi, saying she''d rather decide for herself without external pressures. Upon her return Yuuhi senses some weirdness she can''t place in the Nagase home, but neither Minato nor Jun''ichi are willing to admit anything. This causes a rift between Yuuhi and Jun''ichi, which everyone at school notices. When confronted about the apparent rift between the two Yuuhi lies to cover up the true nature of the situation. After school Jun''ichi is whisked away to meet his parents, who have suddenly returned to the country, leaving Yuuhi and Minato alone at home for the evening. After dinner Yuuhi reveals to Minato her intention to leave the Nagase house, the nullified engagement and her hurt at being lied to. Minato finally admits her love for Jun''ichi and her heartache regarding the situation and Yuuhi hugs her. ', 150, 11, 417029, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4339, 'Rose Madder Dyed Hill', 'After Jun''ichi came back home after meeting his parents, Yuuhi was so angry over Jun''ichi lying to her that she decided to break up with him and leave the house that night. The next day, Minato left the house as well in order for Jun''ichi to make a decision between her and Yuuhi. When Jun''ichi got back home from school, he started thinking about the moment Minato came back from training and decided to take care of him a few years ago. Mr. Sugishita suddenly appeared to tell Jun''ichi to become a man and be true to himself, after taking him to the beach. Meanwhile, Yuuhi decided to stay at Karen''s place and Minato stayed with Nagomi. When Jun''ichi got back to the house, he felt lonely and thought about his past and the girl he loves most, by the help of an imaginary Geno-killer, his past self before Minato arrived. With the help of his past self he finally became one with his alter-ego, and Jun''ichi confessed his love to Minato. ', 150, 12, 417030, 404);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4340, 'OVA, Big Brother!!', 'With the summer crisp smell in the air, Jun''ichi and the group head to one of Ayanaounji''s Families privately owned islands. To have a so called "Student Vacation" But, the school president has a plan to make this vacation as perverted as possible. Though a much concieted effort, she exclaims to have received sun skin lotion from a sponsor company of hers. In a scene it shows on the lotion containers. "Warning, May cause extreme daringness" "Ingredients, etc, etc, etc" in other words, a love potion. With this the girls each on their own torment Jun''ichi throughout the day and have a perverted but entertaining time. Thus Nagomi comes in with her alienated antics and saves the day by knocking everyone out with her chopoooo''s. The following morning everyone thinks it was just a dream. Thus ending their perverted vacation, as well as the series. ', 150, 1, 833771, 405);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4341, 'At the End of the World', 'In the near future, an amnesiac Casshern fights anti-human robots on a desolate Earth. Most of the humans were killed in an apocalyptic war when he was serving under the direction of Braiking Boss after he assassinated a girl named Luna. During his quest to find out who he is, Casshern befriends a human girl named Ringo. However, Ringo finds herself to be scared of Casshern after he kills a robot who was trying to attack her. Not long after, he faces against an anti-Casshern mercenary named Lyuze. ', 151, 1, 394792, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4342, 'A World Replete with Death Throes', 'Casshern meets up with a robotic couple and their dog named Friender. He finds out that they reside with a total of 10 robots, seeking to live in peace until they die. The robots turn on Casshern, and attempt to eat him to survive, being tempted by his completely un-decomposed body. Casshern is forced to defend himself, nearly killing them all. ', 151, 2, 394793, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4343, 'To the Ends of Agony', 'After leaving the town of robots, Casshern meets the first human being of his travels, a man called Akos. He is invited by Akos to travel along with him. Later, Casshern re-encounters Friender, who wants revenge on him for killing his owners.', 151, 3, 396747, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4344, 'The Angel of Ruin', 'Casshern meets Sophita, a female robot who enjoys fighting and killing her own kind. She is dubbed "Angel of Ruin" by the robots who heard of her and feared by them. Sophita wants to fight Casshern, but the latter refuses. She tells him that fighting is her way of living, albeit in a twisted way. Unable to instigate him to fight, she leaves. A group of robots who heard of Casshern''s reappearance ambushes Sophita to draw Casshern''s attention. True enough, Casshern appears to rescue her, taking a blow from the robot leader. However, the robot leader does not want to kill Casshern any longer, now that he wants to live out his life without shortening it. In the aftermath, Sophita forces Casshern to fight her. Casshern then allows Sophita to run him through with his sword, making her realize she genuinely cares about him and finally stops fighting him. She leaves, telling Casshern that they will eventually meet again. ', 151, 4, 396748, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4595, 'Gemüse im Netz', null, 162, 3, 2230481, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4345, 'The Man Who Killed the Sun Named Moon', 'Lyuze appears before Casshern again, who proceeds to condemn him with Luna''s death. Luna was dubbed the "Source of Life" for this world. Long ago in the past, Lyuze''s sister Liza was tasked to protect Luna, but was slaughtered along with Luna by Casshern. Before dying, Liza tells her sister about Casshern and makes her promise to take revenge on him. Lyuze attacks Casshern, but his flesh is able to regenerate, thus rendering her attacks useless. Casshern almost kills Lyuze in his berserk mode, but manages to take control of himself and flees. Meanwhile, Ringo and Ohji trade usable parts to robots who are in need of them. A robot attacks and steals the parts from them. Casshern arrives to stop it, but again loses control and kills several unrelated robots. He only stops when he sees Ringo, who is still terrified of him. Before anyone can react, an unknown person appears before them. ', 151, 5, 396749, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4346, 'Reunited with Fate', 'The jet-black-suited cyborg claims that he knows everything about Casshern, and that Casshern''s built to destroy everything. He also reveals that he has the same power and strength as Casshern. A long time ago, robots desired to break away from the rule and control from human beings, and eventually one rose to become the leader of the robot empire: Braiking Boss. Currently, the robots believed that when Casshern dies, his body contains a secret that will stop the end of the world. He declares that he will be the new leader of the robots and change the world. When Casshern learns this, he is more than happy to be killed by the cyborg if it would really stop the ruin. As the cyborg rains attacks on Casshern, he eventually enters his berserk mode and fights back, regardless of his earlier intentions to die. However, the odds are turned yet again against Casshern when thee cyborg knocks him out of his berserk mode. When Casshern is finally cornered and the cyborg is about to finish him off, Lyuze appears and saves Casshern, injuring the cyborg. Another cyborg, a female, whisks the first away. Later, the black cyborg recuperates in his hideout, as the female cyborg calls him Dio. Later, Casshern recovers from his wounds while Ringo and Ohji watch over him. As they leave, Casshern asks Ohji how he became invincible. Ohji tells him that he may be cursed by Luna to be immortal, who''s an immortal herself. Casshern resolves to learn more about Luna, and thus to learn more about himself. ', 151, 6, 396750, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4347, 'The Woman of the Tall Tower', 'Casshern visits a dilapidated factory, with an incompleted high tower atop it. Far from abandoned, there are construction robots who live day-to-day activities by playing card games and work on finishing the tower''s construction. The leader, a female robot named Lizabel, explains to Casshern that she created a purpose to live for these robots by having them build a tower. Once it is completed, she plans to attach a bell to it. She believes that by ringing the bell, the people of the land can still feel that the world is beautiful and filled with hope. She leads Casshern into a trap, when she notices his perfect and unruined body. Insanity takes over her as Lizabel plans to use Casshern''s body as material for her bell. She is aghast to learn that Casshern was the one who killed Luna, and promptly releases him. She goes ahead and creates a bell out of another material and attaches it to the completed tower. But when the bell is rung, the construction robots are irritated from the sound and turn on Lizabel. Casshern saves Lizabel, and says that even though the sound of the bell sounded horrid, he was pleased by it, since it reminded him of hope. When Casshern leaves Ringo and Ohji visit the factory and talk with Lizabel who has renewed faith in life. ', 151, 7, 406608, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4348, 'A Hymn of Hope', 'Casshern escorts a robot singer named Janice, who wants to travel to a dilapidated city known as the Bazaar in order to sing to robot refugees who had been hiding there from the ruin of the outside world. Standing in their way are robots who believe that hope should die in a world full of ruin and, once they reach the Bazaar, will massacre everyone in sight. Once Casshern and Janice finally reached their destination, it is discovered that she is also at the brink of ruin, so she dedicates one final song to Casshern while he defends her and her audience from a horde of murderous robots outside. ', 151, 8, 406609, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4349, 'The Flower that Blooms in the Valley of Ruin', 'Casshern battles a horde of robots and was pushed off a cliff then fell into a hole in the ground. There, he finds a little mentally depleted robot girl who tends to his wounds and gave him flowers. It is revealed with the arrival of Ringo, Ohji and Lyuze that the place was in fact a graveyard for robots. The girl''s name was Nico and used to be the servant of Luna. Not long after, robots which survived the fall starts to attack. As Casshern and Lyuze fights them off, Nico was unfortunately killed during the raid protecting a doll made of scraps which she still perceives to be Luna. Following the last words of the robot name Bolton, Casshern and the crew now travels the land to find Luna who hopefully is still alive to undo the ruination. ', 151, 9, 406610, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4350, 'The Man Entrapped by the Past', 'Rather than focusing on Casshern, this episode follows Dio and his quest to reestablish his utopia by gathering wandering robots to form his army. During the gathering, a mysterious robot dressed heavily in tattered cloak barges in rambling about the death of Luna. It is revealed the robot’s name is Dune, a guardian assigned as Luna’s bodyguard. Leda attempts to dispose of Dune but in the end requires Dio’s help. It was in a fit of rage for being mistaken as Casshern, Dio viciously incapacitates Dune. As Dio with Leda by his side raises the spirits of the wandering robot with his speech, a broken down Dune once again wanders the lands morning the death of Luna. ', 151, 10, 406611, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4351, 'By One''s Calling', 'Friender tries to rescue Casshern from debris when they were attacked by rogue robots earlier. Failing to do so and breaking a leg in the process, Friender leaves Casshern behind and encounters a mixed group of robots and humans led by their leader, Jin, who believe that Luna is alive and look for her. One of the members, Gido, abandons his group and joins the rogue robots when he learns that Friender was a companion of the infamous Casshern. ', 151, 11, 416355, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4352, 'Turn the Time Lived to Color', 'Casshern and Friender arrive at a city that is surrounded by a lake, which is populated with robots who have already accepted death. Casshern meets a disabled robot, Margo, who considers himself as an artist and paints white colors around the city. However, the current leader of the robots is far from pleased with Margo''s optimistic behavior, and considers his presence to be corrupting to his fellow robots who have accepted ruin. ', 151, 12, 417812, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4353, 'The Past Rises Before My Eyes', 'The story starts with a group of robots who screams of Luna and that meeting her will bring salvation. Casshern, Friender and a following Lyuze walk the same path as the raving robots in search of Luna. It is then when it rained, Ringo comes in playing chasing after the three. Fearing the rain may hasten the ruination for Ringo, they searched for a shelter and dries her off. There in the shelter, a heavy coated character barges in too searching shelter. It is revealed the character is Braiking Boss, the one who ordered the assassination of Luna and that Ohji is the one who built Casshern, Dio and Reda supposedly to be the perfect beings but ended up as being just killing machines. ', 151, 13, 418620, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4596, 'Wissen ist Macht', null, 162, 4, 2230491, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4597, 'Der Neue', null, 162, 5, 2230501, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4354, 'The Truth Illuminates the Darkness', 'As Casshern takes his leave, Ringo, while crying, chases after him seeing how disturbed he is. A band of wandering robots then picks Ringo up telling her that all the robots which were going forward are going to meet Luna and that Casshern too is there to seek salvation. But upon ending up there, Dio’s army was already there butchering all of the robots who place faith in the name Luna. Ohji through life and limb charges in and saves Ringo from being killed, but still end up cornered by Dio’s army. It is here, Casshern, Friender and Lyuze finally come to the rescue. Dio makes his appearance and duel Casshern who this time has a reason to live: to protect all the weak and those ruining. While the battle ended in Dio’s army retreating, in the shadows of countless robots a female figure in the middle calls herself Luna. ', 151, 14, 422967, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4355, 'The God of Death, Dune', 'Dune, last seen after being defeated by Dio, crawls painfully across a crystallized landscape, all the while trying to remember what he was trying to grasp in the past. Casshern, Friender and Lyuze also pass through the same area, and encounters Dune, though none of them knows or remembers him. They believe he''s dying, but somehow conclude his heart will not let him die. Eventually, Lyuze recognizes Dune to be one of Luna''s bodyguards besides her sister Liza, nicknamed the Death God. Casshern and Lyuze are ambushed by attacking robots but fight them off. Dune regains his memory on how Casshern killed Luna, who knocks Lyuze aside and viciously attacks Casshern. After Casshern manages to defeat him, Dune still intends on his vengeance until Lyuze reveals that Luna is alive. Dune remembers that he wanted to grasp his loved one, Luna. Renewed with hope, Dune crawls off forward once again as Casshern and Lyuze look after his departure.', 151, 15, 427443, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4356, 'For the Strength to Believe', 'Casshern and Lyuze find huge numbers of robot remains when approaching a valley. Inside, they discover that all the robots were heading to a strange circular megalith prior to their deaths. Climbing up, they witness an amazing spectacle; a garden of flowers grow atop the megalith which are seldom seen since the ruin. They also encounter Ringo and Ohji. Meanwhile, Dio faces a problem, when his reconnaisance group to seek out Luna''s whereabouts is decimated by two mysterious robots. He organizes a group to search for the perpetrators, only to find Vulcan and Mars, who were considered Braiking Boss'' best fighters next to the cyborgs. The pair are furious with Dio''s rise in power and thus start targeting his army. Dio engages head on with Vulcan and Mars, but loses to their combined efforts. As he lays alone, injured and insulted, Braiking appears before him. ', 151, 16, 427444, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4357, 'The Glass Cradle', 'Casshern and the others meet a trio of robotic kids. Ringo makes friends with one of them, a mute robot named Holter. When the three kids go back to their home, which is the facility, they bump into Dio and Leda, where she pretends to be nice to them in order to glean information on Luna and her creator. Leda attacks the kids upon seeing the glass tanks where Luna was said to be born, Casshern fights her. Just as Leda was about to critically injure Casshern, Dio appears and reminds her that he should be the one to kill Casshern and not her.', 151, 17, 431294, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4358, 'The Time I''ve Lived and the Time I Have Left', 'Lyuze questions her original intentions for revenge against Casshern, and her current intentions for him. After going through a series of mind-bending scenarios, she realizes that she has fallen in love with Casshern. Lyuze decides that her way of continue living is to pursue the same goals as Casshern, and stick with him as long as her life lasts. ', 151, 18, 431295, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4359, 'Believe in the Flower that Lives in your Heart', 'Upon reaching Luna''s castle, Casshern and Lyuze are attacked by two robots named Castor and Helene. The encounter causes Lyuze to start fearing when she will begin to ruin (throughout the episode there are signs that it''s not too far away) and she becomes distant. While hiding in a cave, Ringo mentions a story that Ohji once told her about an immortal monster that lives in caves. Lyuze feels Ringo''s story relates to Casshern and she states that she''s jealous of his immortality.', 151, 19, 436414, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4360, 'For Whom do the Flowers Bloom?', 'Casshern, Lyuze and Ringo finally reach Luna''s castle. They meet up with Dune, who has rejoined Luna. Casshern''s group is stunned to see the large amount of robots that await Luna''s healing. Casshern finds one of the robots who is healed by Luna earlier attacked and beaten to near death by other robots. After Dune suffers severe injuries after a bandit attack, Luna refuses to heal him and lets him die. Casshern and the others are shocked and angry at Luna''s change in behaviour and her outlook in life. Elsewhere, Braiking Boss visits the graves of his dead subordinates, while Leda is informed of Luna''s whereabouts. Casshern confronts Luna, and questions whether her current role will truly bring salvation to the world. ', 151, 20, 438945, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4361, 'The Paradise of Lost Hope', 'Luna tells Casshern''s group that her blood can grant eternal life, but her outlook on death has changed negatively, completely shunning it. She wants them to stay but Casshern and the others leave. Later Casshern changes his mind and wants to bring Ringo for Luna to heal, against Lyuze''s protests. They reunite with Ohji, who tells them that Luna is not salvation; she grants death. A long time ago, humans found a way to live eternally, but Braiking Boss found it revolting and started exterminating humans, eventually giving the order to assassinate Luna. Ohji explains that the old Luna and the current Luna are different. However, upon witnessing Luna''s results, Ohji forces Ringo to see Luna, but the girl refuses. Casshern reaches Dio and Leda''s army who has come to get rid of Luna, but he allows himself to be brutally attacked by them. ', 151, 21, 441078, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4362, 'A Drop Called Eternity', 'Dio captures Casshern and brings him back to Luna''s castle. Leda wants Dio to be healed along with her by Luna, but he refuses. Leda finds Luna and orders her to heal only those that are chosen, like her. Meanwhile, Braiking Boss is followed by robots on the verge of ruin. Leda receives Luna''s healing, but it is not enough as she starts to break down again. She demands more healing from Luna, who complies. However, the increased healing she receives is much more painful than the first one. Dio takes Casshern away for him to regenerate so that he can battle him again in a fair fight. Casshern learns that Dio''s reason to live is to defeat him. After a painful regeneration, Casshern prepares for one final battle with his arch-nemesis. ', 151, 22, 441079, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4373, 'A Sympathy is not Meant for a Tiger / Suzume, It''s Time for You to Get It', 'Minato drops and loses her only coin in front of the vending machines. When She loses her hope of retrieving the coin and begins to cry, Torako and Ayumi happens to meet her. Torako buys her a can of drink, so that she would stop crying. After receiving a favor from Torako, Minato persistently tries to return the favor by constantly offering any helps, which eventually annoys her to the great extent. Torako devises various plans of keeping a reasonable distance from Minato, but all of her plans fail at the end. In the second part of the episode, Suzume walks around the school and receives foods and drinks from her friend as a goodwill. Later, Torako and Ayumi is amazed at the amount of gifts that Suzume collected around the school.', 152, 9, 418642, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4598, 'Geiselnahme', null, 162, 6, 2230511, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4599, 'Parkpickerl (1)', null, 162, 7, 2230521, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4363, 'Those Who Return', 'Braiking Boss leaves the robot graveyard and, followed by an army of robots, begin their journey. Casshern and Dio fight their best, and the former sees Dio being truly alive when he is battling him. Leda wakes up in a pile of ruined robots, having been dumped by Luna''s subordinates. She is shocked to see her body in an advanced stage of ruin and swears revenge on Luna. She encounters Ringo, but is hesitant to kill her. After Lyuze arrives for Ringo, Leda immediately retreats. The fight ends in a climax as Casshern and Dio deal each other a powerful blow. Dio seemingly declares victory on Casshern. Leda confronts Luna at her castle and is about to kill her when Luna stabs her. Casshern arrives on the scene and tells Leda that Dio wanted him to save her. Leda stumbles off to look for Dio. Casshern tells Luna that they are different to others, because as being immortal, they are not truly alive. He rejects Luna''s offer to be a king in the eternal world she resides, swearing never to take another life again, and leaves with Lyuze, Ringo and Ohji. Leda finds Dio with a missing arm, and rests peacefully at his side. Braiking Boss arrives to take up Luna''s offer to be the king in the eternal world. ', 151, 23, 445440, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4364, 'To the Wandering, Blooming Flowers', 'Lyuze, Ringo, Ohji and Casshern live peacefully 
somewhere and raise flowers. Lyuze realizes that this is 
what she always longed for. Meanwhile Luna heals some of
the arriving Robots while Breaking Boss watches 
from the sidelines. Luna is disgusted by death, and refuses
to heal those who have signs of ruin on them. 
Lyuze time has come, and she dies in Cassherns arms. Ohji also fades away and
Casshern and Ringo burry them. Casshern pays one last visit to Luna, facing off against Breaking Boss on the way. Upon reaching a terrified Luna, he tells her to continue to heal, but never again forget death and what it means. Before leaving he warns her that, should she ever forget, he would return. 
Finally Ringo, now an adult living in a field of flowers, tells that Casshern never had to return.
', 151, 24, 445897, 406);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4365, 'First Meeting with Tiger', 'While Ayumu is looking for a way to her classroom, she encounters Tatsuki on her way. Shortly after, they see Torako and Suzume leaping down from a second floor out of a window. After joining together as a group, they heads toward the classroom. About midway through the walk, they find an abandoned school building and accidentally break one of its window. A school teacher, Mr. Amagasa, discovers their act, but Torako gives him a quick punch to stun him. Although they eventually reach the classroom, it later turns out that Mr. Amagasa was their homeroom teacher. ', 152, 1, 402328, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4366, 'Nothing Ventured, Nothing Gained', 'Ayumu, Tatsuki, Torako and Suzume are looking for a school club to join. They try out several sports clubs together, but Torako ruins every attempt as she pulls various pranks on Tatsuki. ', 152, 2, 402329, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4367, 'A Tiger at the Front Gate, Another at the School Gate / Plus a Paper Tiger', 'While Torako and Suzume are having a conversation together in the morning, they encounter Nene on their way. Torako is informed by her that she was involuntarily decided to be a member of the class discipline committee. On the next day morning, she is assigned a duty of checking the student''s dress code. Later Torako and her friends discover that Nene is actually quite keen on the female students. In the second part of the episode, Torako and Suzume discovers a grotesque robot made by Chie, who is a member of the robotics club. Later, Torako and her friends are invited to the robotics club room and they learn about Chie''s dream of becoming a robotics engineer. ', 152, 3, 402330, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4368, 'The Tiger Gorges / The Tiger is a Fellow Traveler', 'Torako and her friends go to the school cafeteria together. On the way, Torako teaches Ayumu about the ''Combo Card'' which gives an extra portion of a meal. Torako pulls a prank on her by making her accidentally to order a noodle with extra large portion. Tatsuki is offended by Torako''s mischievous behavior, while Suzume''s extraordinary gluttony is revealed. In the second part of the episode, Torako and her friends are in an art class, where students learn to draw each other. Ayumu and Torako takes seductive poses on the floor, while Koma passionately snaps their photographs with her digital camera. Later, Koma sells some of her photographs to a student for profit. ', 152, 4, 402331, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4369, 'Uncanny Relationships with a Tiger', 'A new character, Yanagi, is introduced. Just like Koma, he makes profits from selling photographs of the students. When Shishimaru looks at Yanagi''s photograph of Ayumu by chance, he is instantly infatuated with the photograph. On his way, he encounters Ayumu and confesses his love to her. However, it is later revealed that Shishimaru has actually asked Ayumu to tell Torako about his love for her. In the second part of the episode, Torako and Ushio skip the class together and spends their time together in the downtown and develops a friendship with each other. ', 152, 5, 403920, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4370, 'Surrounded by Tigers', 'Torako, Suzume, and Ayumu visits Tatsuki''s home without informing her in advance. Although Tatsuki is caught off-guard and is quite surprised their visit, she gladly invites them to her home. Meanwhile, Tatsuki''s housemaid is relieved that Tatuski has made some good friends in the school as she had trouble making friends in the past. Tatsuki''s friends are invited to the dinner and they are impressed by her housemaids'' kindness. ', 152, 6, 418639, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4371, 'At Last the Fox and Tiger Meet / The Fox Provokes the Wrath of the Tiger', 'Koma and Yanagi are hiding in bushes and taking photographs of students secretly. Meanwhile, Kitsuna decides to help them out and pulls a skirt prank on Ayumi, so that Koma and Yanagi can take ''better'' photographs of her. Then the three students encounter Shishimaru, who wants to have photographs of Torako, but he thinks taking photographs without the consent of the subject is a despicable act. The three comes out of bushes and politely asks Torako for photograph. Suddenly, Torako is surprised to see Kitsune, who turns out to be her brother. In the second part of the episode, Torako complains to her friends about all the bad memories she had with her brother in the past. On the next day, Kitsune brings Shishimaru to Torako''s lunch. Kitsune decides to pull another prank on Torako by secretly putting a whole bottle of spice in Torako''s ramen, which forces Torako to switch her meal with Shishimaru, bringing unintended affect on their relationship. ', 152, 7, 418640, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4372, 'Shooting the Tiger / Sketching a Tiger but It Ends Up Looking Like a Cat', 'Inori is in distress for not being able to make friends as she has trouble speaking out loud and her face covered by a long hair freaks out other students. Torako then decides to help her out by asking her friends to renovate her face, so it can give a better impression on the other students. Meanwhile, Torako goes around the classes and changes the classmates'' and her homeroom teacher''s hairstyles as she pleases. After the make-up is done, the classmates are amazed at Inori''s new face. However, on the next day, Inori''s appearance reverts back to her ordinary form, which disappoints her friends; she later explains that she is not good enough to do the make-up every morning. ', 152, 8, 418641, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4398, 'Part 6 - The Home Stretch', 'The men who''ve made it this far persevere -but still a few are pushed past the limits of their endurance. Witness the last months, weeks, days and minutes – discover which of these courageous souls graduate and become a U.S. Navy SEAL!', 154, 6, 397313, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4600, 'Parkpickerl (2)', null, 162, 8, 2230531, 432);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4374, 'A Wing for a Tiger', 'When Tōma is passing away her time on the top of the school building, Torako approaches her and tries to have a talk. Tōma, however, rejects and makes a statement that she dislikes Torako, while Torako thinks Tōma is too boring. Later, Tōma encounters Torako''s friends in school and she decides with certainty that all of them are strange in one way or another. In another day on the top of the school building, she looks back upon the past when she met Torako in Kamizono High School as a visiting middle school student and made their friendship. In the afternoon, Torako invites Tōma for a lunch along with Ayumi, Suzume, and Tatsuki and Tōma is surprised at how easily she blended into the group. ', 152, 10, 418643, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4375, 'Escape from the Tiger''s Mouth', 'When a colleague has to rush home to care for a sick child, their home-room teacher declares a self-study hour, which moves to the gym to get an early start on the next period''s PE class. Meanwhile, Yanagi and friends kibbutz from the balcony, with Yanagi hoping to get easily-marketed photos of the girls in their gym clothes. The time in the gym turns into a deadly game of dodge-ball, with most of the class laid out by brutal throws to the face. To bring peace, Torako suggests trial by champion --- Suzume vs. the teacher. ', 152, 11, 418644, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4376, 'First with Princess, Second with Prince, and Third with Torako / A Demon''s Concern about Torako', 'All of the girls learn about Torako''s past with her two step-siblings once Torako argues with her sister out in the hallway. Torako finally gets Touma to talk to her. ', 152, 12, 418645, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4377, 'Four People Can Create a Tiger Out of Nothing', 'Set prior to the events of the series, everyone gets ready for the first day of high school. Meanwhile, Torako and Suzume decide to run away from home. ', 152, 13, 431554, 407);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4378, 'OVA', 'When Tōma''s favourite hang-out place goes bankrupt, Torako decides to take her to a nearby cake store. To Tōma''s surprise, Torako orders them every cake on the menu. ', 152, 1, 1206481, 408);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4379, 'The Shrine Girl', 'When Jin Mikuriya uses the trunk of a sacred tree to carve a statue for a school project, he accidentally summons a guardian deity named Nagi.', 153, 1, 394797, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4380, 'Gyokuon Attack!', 'When Jin gets a surprise visit from his classmate and friend Tsugumi Aoba, Nagi fabricates a story explaining her living with Jin. Later, Nagi flees the house after an argument with Jin and finds herself in danger when trying to cleanse a impurity on her own.', 153, 2, 394804, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4381, 'The School''s Goddess', 'When Nagi secretly infiltrates Jin''s school to search for an impurity, she stumbles upon a mysterious girl.', 153, 3, 394805, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4382, 'Sisters', 'Nagi is thinking of being an idol in order to gain followers since her powers are going to be reduced by the tree being cut down. Jin encounters a famous idol who turns out to be Nagi''s goddess sister.', 153, 4, 394806, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4383, 'Revelation! Love the Spirits of the Dining Table', 'Zange tries to seduce Jin and challenges Tsugumi and Nagi to a cooking contest. Meanwhile, Nagi is becoming so popular with the students at school, the teachers find out she is not actually enrolled.', 153, 5, 404995, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4384, 'Nagi''s Heart-Beating Craziness', 'When Nagi decides to get a parttime job at a maid café where Tsugumi is also working by request of a friend, she is surprised by Jin and his fellow clubmates from the art club.', 153, 6, 404996, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4385, 'Cutie Big Pinch! The Super Spicy Hitsumabushi Strikes Back', 'When Nagi shuts herself into Jin''s closet and refuses to come out, Jin calls Meguru for help.', 153, 7, 406838, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4386, 'The Hill of Straying Storm', 'During a stormy night, Daitetsu stays over at Jin''s house, where he wonders about Jin and Nagi''s feelings for each other.', 153, 8, 406842, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4387, 'Embarassing School Comedy  ', 'When rumors about the Daitetsu and Jin being a homosexual couple start to spread, Zange decides that the best solution to the problem is for Jin to officially date a girl.', 153, 9, 411559, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4388, 'Karaoke Warrior Mike Takako', 'When the Art Club, Nagi and Zange are having a karaoke party, Tsugumi, Jin, and Zange''s relationship complications quickly make the session extremely awkward.', 153, 10, 411560, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4389, 'Yet, Uncertain  ', 'Jin demands that Nagi tells him more about herself, her reasons for staying in Jin''s home and the occurrence of impurities in the village. After she refuses and runs away, Jin discusses the matter with Reiri Suzushiro.', 153, 11, 411561, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4390, 'Truly Ephemeral', 'When Jin arrives at home and he finds that Nagi is nowhere to be found, he keeps looking for her without success.', 153, 12, 418678, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4391, 'Jin, Lovestruck', 'Tsugumi persuades Jin to search for Nagi again with the help of the school''s blog.', 153, 13, 418679, 409);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4392, 'What If -Kannagi- Was Like This...', 'When Takako finds a lot of money on the street, she assembles Nagi, Zange, Tsugumi and the rest of the art club to make an independent movie with it. However, during the shooting session, the group is taken by a storm. To complicate matters, one of the movies that Akiba rented as research material is almost past devolution time.', 153, 1, 4972573, 410);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4393, 'Part 1 - Welcome to BUDS', 'Meet the 83 men of Class 234 who have been accepted into BUDS, the training program that forms the Navy SEALs, one of the most elite fighting forces in the world. Watch as they tackle Phase One, a physically grueling course designed to weed out all but the toughest and most dedicated. This is only day one of 26 weeks of unimaginable physical and emotional strain. Most will quit within the first weeks.', 154, 1, 394798, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4394, 'Part 2 - It Pays to Be a Winner', 'Phase One continues...the men are determined to survive the physically and mentally rigorous program and remain injury free. New students, injured in previous classes, are added to Class 234. With Hellweek looming, they learn basic lessons of survival, hoping to be one of the few to become a Navy SEAL. By the end of week one, half the class is gone.', 154, 2, 394799, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4395, 'Part 3 - Two Weeks and a Long Day', 'By the second week of BUDS training, many of the students have already dropped out. The remaining men still have 24 weeks of hardship. Students who are failing physically are put before the review boards where instructors will decide if they are dropped for lack of performance or rolled to the next class for medical leave. Each week they must improve, they must run faster and swim farther. Individuals do not survive, teammates do. Hellweek, the harshest part of training, is still on the horizon.', 154, 3, 394800, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4396, 'Part 4 - Hell Week', 'For 24 hours a day, six days in a row, students are put through a demanding set of obstacles designed to test their commitment to becoming SEALs. Cold, wet, hungry and sleep-deprived, the men struggle to prove their resolve as each test is followed by a more difficult one, pushing the psychological limits of even the toughest competitors. Hellweek is the ultimate eliminator – ending with only 19 contenders.', 154, 4, 397311, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4397, 'Part 5 - The Only Easy Day Was Yesterday', 'Underwater testing begins in both the ocean and pool in what may be the most difficult test of all. The men are immersed with hands and feet tied and competing at underwater swimming, overcoming their panic and fear. They undergo advanced scuba and re-breather training and the SEAL instructors weed out those who just can''t make the grade.', 154, 5, 397312, 411);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4400, 'Voyage to The Planets and Beyond - Part 2', 'Join an international team of astronauts for a fictitious journey to the outer reaches of the solar system. Comprised of five astronauts from the world''s leading, space-faring nations, the crew embarks on a six-year journey to Mercury, Venus, Mars, Saturn, Jupiter, Pluto and the deadliest body in the solar system: the Sun. Using modern-day science, the crew demonstrates just how such a voyage might be possible and how future astronauts might survive the rigors of long-range spaceflight.

', 155, 2, 398282, 412);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4401, 'Voyage to the Planets and Beyond', 'This two-part science fiction docu-drama examines the possibilities of a dangerous, manned space mission to explore the inner and outer planets of the Solar system. ', 155, 1, 4117805, 413);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4402, 'Academy City', 'Tōma Kamijō is chased by hooligans after he stops one of them from disturbing a girl. In reality he was trying save him as the girl is Level 5 Psychic Mikoto Misaka, who can control and generate electricity. After losing them, he meets Mikoto who wants a duel but he refuse citing he just a Level 0 psychic. Nevertheless, she "shoots" an electrical bolt at him but it is stop by Tōma right hand which has a power called Imagine Breaker. Angered, she attacks with a powerful lighting strike which only ends up causing a citywide blackout. The next morning, after lamenting his recent bad luck, he finds a young nun hanging outside of his veranda. After feeding her spoiled food, she introduces herself as Index, a nun from the Church of England and is being chase by magicians for she "possess" 103,000 grimoires. After both of them explain each other about their own worlds, Index doesn''t believe that Tōma''s right hand can nullify other powers while he doesn''t believe magic exist. To test their proofs, Tōma use his powers on Index''s magical garb which is unfortunately blown into pieces. After biting Tōma in revenge and fixing her garb, Index concludes that his powers are the cause of his bad luck, leaves and thanks him and he tells her to come again if she needs help. After coming back from summer classes, he meets Mikoto again who wants a rematch but when he refuse again, she stomps her foot in anger causing nearby electronics to go haywire including cleaning bots who sounds the alarm which forces both of them to quickly runaway. When he returns home, he finds Index laying on the ground bleeding and behind him a man who calls himself a magician. ', 156, 1, 394926, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4403, 'Innocentius (The Witch Hunter King)', 'The magician reveal himself as Stiyl Magnus and explain that his partner Kaori unintentionally hurt Index as her Magical garb was suppose to stop the blow and his mission to ''protect'' Index or actually the Index-Librorum-Prohibitorum, the 103,000 books implanted in her mind as she possess photographic memory. Toma, angered by Stiyl''s ill treatment of Index attacks him and he counterattack by using Fire magic but is surprised when Toma nullify s the spell. Styil then summons a fire creature named Innocentius which Toma can''t stop as the creature keeps regenerating itself from his attacks. It is only when Index other personality, John''s pen mode, reveals the creatures powers comes from Runes place around the building that Toma is able improvise and defeat Innocentius and Stiyl using the sprinklers to destroy the Runes as they were on paper and rescue Index. When he learns from Index that he can''t help heal her wounds using magic as it can only be use by normal people, Toma brings her to the only normal person he knows for help, his teacher, Komoe Tsukuyomi. ', 156, 2, 395179, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4404, 'Necessarius (The Church of Necessary Evil)', 'While Komoe helps Index in healing her wounds using magic, Toma meets Stiyl''s partner, Kaori Kanzaki and learns from her why they are hunting Index and the organization, Necessarius, The Church of Necessary Evil. ', 156, 3, 396768, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4405, 'Perfect Memory Ability', 'Touma learns the truth about Index''s perfect memorization and her loss of memories.', 156, 4, 401856, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4406, 'Limit (12 o''clock)', 'Touma tries desperately to save Index''s memories before it is too late. ', 156, 5, 402960, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4407, 'Imagine Breaker', 'Following the events of last episode and the activation of Index''s defense mechanism Touma struggles to hide his amnesia from Index.', 156, 6, 402961, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4408, 'The Science Cult (Misawa Cram School)', 'Stiyl and Touma join forces to investigate the mysterious Misawa Cram School. ', 156, 7, 402962, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4409, 'Ars Magna (Golden Transmutation)', 'Touma encounters Ars Magna the leader of Misawa Cram School and a man with his own connection to Index.', 156, 8, 411159, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4410, 'Deep Blood (Vampire Killer)', 'Touma confronts Ars Magna in a dangerous battle to rescue both Index and Deep Blood.', 156, 9, 411160, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4411, 'Mikoto Misaka (Sissy)', 'Touma spends some time with Misaka Mikoto and makes a strange discovery. ', 156, 10, 414045, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4412, 'Sisters', 'Touma goes in search of Misaka to investigate the clone experiment.', 156, 11, 414046, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4413, 'Level 6 (Absolute Ability)', 'Touma discovers the reason behind the experiment and appears to grow closer to Misaka.', 156, 12, 417811, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4414, 'Accelerator (One Way)', 'Misaka and Touma hatch a plan to defeat Accelerator and end the experiment. ', 156, 13, 418857, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4415, 'Weakest vs Strongest', 'Touma faces off against Accelerator for the sake of Misaka and her ''sisters''. ', 156, 14, 424122, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4416, 'Angel Fall', 'Touma and Index head to the beach to avoid the fallout from Touma''s fight with Accelerator. They also plan to meet Touma''s Family but when they arrive they aren''t quite what Touma was expecting.', 156, 15, 424123, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4417, 'Toya Kamijo (Father)', 'The Angel Fall spell remains in effect with only Toma, Kanzaki, Misha and Tsuchimikado relatively unaffected. However, the person responsible for casting the spell remains a mystery. Misha quickly becomes the prime suspect after a strange conversation with Toma. But when Toma follows up on his hunch he discovers that the real culprit is not Misha but his own father. As such he hurries to reach his father before Misha and the other mages can confront him.', 156, 16, 428791, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4423, 'Golem (Stone Figure)', 'Sherry Cromwell begins her assault on Academy City to start a war between Necessarius and Academy City. As a result, Tōma, Index, and Hyoka are locked in an underground shopping complex before they are evacuated with everyone else. Mikoto and Kuroko find them and Kuroko teleports Mikoto and Index, who become suspicious of the other''s relationship with Tōma, away first. When Tōma hears an explosion, he goes to confront Sherry and leaves Hyoka to wait for Kuroko to return. As he tries to fight Sherry''s golems, Hyoka arrives, but is hurt and Tōma ends up seeing a strange device in her head. When she flees, Sherry decides to pursue her while Tōma gets a call from Komoe, who explains that Hyoka''s existence likely came to being from the collective extranaeous discharge of espers in the city. Meanwhile, Hyoka manages to regenerate her face, but Sherry, who knows Hyoka isn''t human much like her golems, is about to crush Hyoka when Tōma appears and saves her. ', 156, 22, 441630, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4464, 'The Third Level', 'A threat from Acqua against Kamijo leads Itsuwa to come to Academy City as his live-in bodyguard. Index, Kamijo and Itsuwa visit a spa in the third level of the complex beneath the 22nd School District. Mikoto frets over Kamijo''s amnesia.', 156, 7, 6827264, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4601, 'Geldrausch', null, 162, 1, 2230541, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4602, 'Zeitreise', null, 162, 2, 2230551, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4418, 'The Power of God (Archangel)', 'Tōma confronts his father about casting Angel Fall but discovers him as knowing absolutely nothing about it. When Misha appears to them, Kaori reveals that Misha is an imposter taking advantage of her appearance as Sasha Kruezhev, a member of Annihilatus. Misha subsequently reveals herself to be one known as "Power of God", Archangel Gabriel, the Angel who fell as a result of Angel Fall being cast, and uses her power to complete a spell to destroy the world so that she may return to Heaven. Kaori sends Tōma and his father to destroy the ritual site while she holds off the Angel. Tsuchimikado reveals that the ritual site is actually the Kamijōs'' new residence and that Tōma''s father accidentally cast the spell from coincidentally arranging occult souvenirs around the house in a particular way. When Tsuchimikado reveals that he''s going to destroy the source of Angel Fall, Tōma tries to stop him from killing his father, but he knocks out Tōma''s father and beats up Tōma so that he is unable to move. In a sudden twist, Tsuchimikado decides to sacrifices himself to cast a spell to destroy the ritual site (despite knowing he will die using magic), which causes Misha/Gabriel to return to Heaven. When Tōma returns to the hospital again, he finds Tsuchimikado alive and well despite using magic after becoming an esper (much to his surprise), thanks to his psychic healing ability, Auto Rebirth. Tsuchimikado also reveals that he is not only a spy for Necessarius but also a freelancer for Academy City and other organizations. As an apology, he brings Tōma''s parents to visit him, but Tōma is outraged to learn that his family''s new house was completely destroyed by Tsuchimikado''s spell and then must suffer Index''s wrath for being mistreated by Tōma while she was under the spell. ', 156, 17, 432117, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4419, 'Replica (Impostor)', 'Mikoto''s trying to enjoy her last day of summer vacation, but she is being stalked by Mitsuki Unabara, the Tokiwadai Middle School principal''s grandson who''s been chasing her since last week. In an attempt to make him give up, she pretends to go on a date with Tōma. During their fake date, Tōma learns that only 10 of the Sisters remain at Academy City while the rest went overseas for treatment. Tōma converses with Unabara but is surprised to see another person who looks exactly like the latter running into a restaurant that Mikoto has entered. As the second and injured Unabara warns Mikoto about an approaching danger, the first Unabara remarks to Tōma about espers who can shift appearances, and Tōma realizes that he is conversing with an imposter when the latter tries to hit him from behind. As Tōma flees, Index reveals by phone that the imposter is using the magic of Aztec priests to disguise himself with another person''s skin and wields an obsidian spearhead as a replica of the lance of Tlahuizcalpantecuhtli. When Tōma is forced to fight him, the imposter reveals that he had been sent to become close to Tōma''s friends (such as Mikoto) to prevent the formation of the "Kamijō Faction", a group of mages and espers lead by Tōma which both the magic and science sides fear will destroy the truce between them. Since the imposter had fallen in love with Mikoto, he decided to protect her by killing Tōma, but, now defeated and severely injured, he asks Tōma to promise him to protect her since they''ll be others like him after Tōma and his friends. Unknown to both of them, Mikoto is listening nearby and is embarrassed to hear Tōma''s answer. ', 156, 18, 432118, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4420, 'Last Order (The End)', 'Since his defeat, Accelerator is no longer feared by others, though he remains powerful enough to get rid of troublemakers. During the last day of summer vacation, he is approached by a younger Misaka clone capable of showing emotions, who introduces herself as "Last Order" and begins to follow him around, much to his annoyance. Because she is hungry, Accelerator takes Last Order to a restaurant and sees Ao Amai, a former researcher for the "The Sisters" project, but does not pursue him. As Last Order eats, she converses with Accelerator on the Sisters and how she believes that Accelerator was an unwilling participant of the Level 6 Shift project. Tired of her comments, Accelerator leaves her at the restaurant to confront Yoshikawa, a researcher in charge of the Level 6 Shift project. She informs him that Last Order was not created for the Sisters project but for administrating the Misaka Network and that Ao Amai injected a virus into Last Order, which could spread to the other Misakas and cause them to go berserk and attack humans. To stop the virus, she gives Accelerator the choice of finding Ao Amai to explain how to stop the virus or returning Last Order to her incubator. Accelerator chooses the latter. ', 156, 19, 436598, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4421, 'Virus Code (Final Signal)', 'Accelerator returns to the diner only to find that Last Order has been kidnapped by Ao Amai. Accelerator manages to track down Ao Amai and knocks him out before he can escape with Last Order. However, the virus in Last Order activates earlier than expected and Yoshikawa is still en route with Last Order''s incubator. To stop the virus, Accelerator uses his powers and a clean copy of Last Order''s data to remove the virus. However, nearing the end of the process, Amai awakens and shoots Accelerator in the head; Accelerator is unable to fully stop the bullet, having chosen to finish removing the virus instead of protecting himself, and collapses afterward. Amai tries to finish him off but is shot by Yoshikawa who has arrived to put Last Order into her incubator. After discussing their roles as researchers and her dream of wanting to become a teacher, she and Amai shoot each other. When Yoshikawa awakens in the hospital, she learns from Heaven Canceller, who is none other than Tōma''s frog-faced doctor, that Accelerator saved her but suffers from brain damage from the shot he took while saving Last Order and needs rehabilitation to regain his powers. ', 156, 20, 436599, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4422, 'Counter Stop (Identity Unknown)', 'Tōma returns to school after summer break, but is followed by Index, who thinks she won''t have anything to eat for lunch while he''s away at school. When Index arrives in class, Komoe sends her away with money to ride a taxi home and then introduces Aisa as a new transfer student. Index ends up befriending Hyoka Kazakiri, another transfer student; Tōma later finds them trying to change into less conspicuous clothing and when Komoe catches Tōma skipping the opening ceremony, Hyoka mysteriously vanishes. Aisa becomes suspicious of Hyoka, who was a student at Aisa''s old school, and warns Tōma and Komoe about her. Meanwhile, Tsuchimikado meets with Aleister Crowley concerning the arrival of Necessarius mage Sherry Cromwell in Academy City and despite Tsuchimikado''s offer to take care of Sherry discreetly, Crowley wants Tōma to defeat her. Meanwhile, Kuroko finds Sherry and attacks her unsuccessfully, but is saved by Mikoto while Sherry escapes and casts a spell to send eyeballs throughout the city. ', 156, 21, 441435, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4424, 'Friends (Hyoka Kazakiri)', 'Tōma stops and successfully destroys Sherry''s golem with Imagine Breaker. When she summons another one,Tōma coordinates with the Anti-Skills to put her on the defensive. Sherry attempts a simultaneous summoning of Ellis, destroying the ground beneath her and escaping. Wondering why Sherry would turn to escape so quickly when her target, Hyōka, was right in front of her causes Tōma to realize that her true target was Index all along. Chasing after a runaway Sphinx, Index is attacked by Ellis. At first she is able to hold her own against the remote controlled Ellis by interfering with the control mechanism, when Ellis switches to automated control things turn worse. Index can only call Tōma''s name as Ellis prepares to crush her. ', 156, 23, 445701, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4425, 'Imaginary Number School District - Five-Element Agency', 'Tōma pursues Hyōka but encounters Sherry instead and is forced to fight her. He learns that Ellis was once a friend of Sherry who suffered painful consequences from an attempt by Necessarius and Academy City to reconcile magic and science; to prevent this tragedy from occurring again, Sherry intends to divide them forever through conflict. Outraged that Sherry does not believe that people who are different like Index and Hyōka could be friends, Tōma successfully defeats Sherry. However, doing so results in Golem Ellis above ground losing control, and Index is cornered until Hyōka suddenly appears and destroys the Golem each time it reforms. After Tōma arrives to deliver the finishing blow, Index and Hyōka reconcile just as Hyōka fades away to the Imaginary Number Sector. Meanwhile, Tsuchimikado confronts Aleister Crowley on why he is interested in the Imaginary Numbers Sector. As each of the characters settle back into their daily lives, Stiyl meets with the Archbishop of Necessarius, Laura Stuart, who decides that Necessarius will need Index and Tōma''s help for an upcoming problem meanwhile Kaori Kanzaki is missing in Japan after the events of the Angel Fall. ', 156, 24, 445702, 414);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4426, 'To Aru Majutsu no Index-tan', null, 156, 1, 441588, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4427, 'To Aru Majutsu no Index-tan II', null, 156, 2, 851011, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4428, 'To Aru Majutsu no Index-tan IV', null, 156, 4, 2973731, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4429, 'To Aru Majutsu no Index-tan III', null, 156, 3, 3510941, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4430, 'A Certain Magical Index Movie: The Miracle of Endymion', 'On the day Tōma Kamijō and Index see Academy City''s space elevator, Endymion in the distance, they meet a Level 0 girl with an amazing singing voice, Arisa Meigo. As the three enjoy their time together after school, magic-user Stiyl Magnus suddenly attacks them. His target: Arisa. Why would a girl from the science side be targeted by someone from the magic side, Tōma wonders. In the chaos of Stiyl''s attack, he tells Tōma, Index and Arisa that she might cause a war between the magic side and the science side.', 156, 5, 4183230, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4431, 'A Certain Magical Index Movie: The Miracle of Endymion Special', 'Bonus animation featuring Index-tan included with the BD special edition of the Toaru Majutsu no Index: Endymion no Kiseki movie.', 156, 6, 4704822, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4432, 'To Aru Majutsu no Index-tan V', null, 156, 7, 7054510, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4433, 'To Aru Majutsu no Index-tan VI', null, 156, 8, 7054512, 415);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4434, 'The Last Day (August 31)', 'Following the fake boyfriend incident with Mikoto, Tōma still hasn''t finished his summer homework and Index isn''t helping much. Whilst Tōma takes Index to a restaurant for a change of location, they are attacked by magician named Ouma Yamisaka who kidnaps Index and runs off. As Tōma tries to find her, running into Mikoto along the way, Ouma prepares a ceremony that will allow him to access the grimoires inside Index''s head in order to find a cure for a curse inflicted on a woman he has fallen in love with. As the ceremony begins, Ouma''s body and mind is put through excruciating pain trying to access the grimoires. Thanks to Index using her new cellphone, Tōma is able to find her and stop the ceremony. Tōma gets Ouma to snap out his pitiful state and offers to cure the woman''s curse using his Imagine Breaker. Meanwhile, Kanzaki is seen fighting the Knights of England. ', 156, 1, 2431051, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4435, 'The Book of Law', 'Archbishop Laura informs Stiyl that the Liber AL vel Legis has been stolen by the Amakusa Catholics and sends him to Japan along with a group of Catholic battle nuns known as the Agnese Forces, to search for the grimoire and Orsola Aquinas, the only one who can decode it who was also kidnapped by the Amakusas. In order to get Tōma''s assistance, Stiyl pretends to kidnap Index. While Tōma coincidentally runs into Orsola on the way to save Index, the Amakusas appear and abduct her via a hole in the ground. After determining that the Amakusa''s goal is to use a special teleport magic to escape with Orsola before midnight, Tōma, Index, Stiyl and the Agnese Forces set up camp at the required location, where Tōma gets into a lot of awkward situations with the group''s leader, Agnese Sanctis. Because Kaori was once an Amakusa Catholic, Stiyl knows he may have to fight her if necessary. Meanwhile, the Amakusas prepare to make their move. 
', 156, 2, 2818001, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4436, 'The Amakusa Church', 'The Agnese Forces face off against the Amakusas as a diversion while Tōma, Stiyl and Index sneak inside the amusement park. While escaping from some Amakusa warriors, Tōma manages to find Orsola and gives her a crucifix that Styil gave him earlier. The two are reunited with Stiyl and Index, who are facing against the leader of the Amakusas, Saiji Tatemiya. Working together, Tōma and Stiyl defeat Saiji and the rest of the Amakusas are captured by Agnese''s battle nuns. However, the captured Saiji reveals to Tōma and Index that the Amakusas have never stolen the Liber AL vel Legis, as the real reason the Catholic Church wanted Orsola was to kill her to prevent the secrets of the grimoire from being abused. The Amakusas only got involved as Orsola sought them for protection but ran away as she didn''t trust them. Troubled by this revelation, Tōma asks two of the Battle Nuns, Luccia and Angelene to see Orsola again but he accidentally angers Luccia who tries to kill him, Index and Saiji. However, she and Angelene are forced to retreat when Index uses spell interception on Angelene''s magic and counters Luccia''s attack. 
', 156, 3, 2818011, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4437, 'Sheol Fear (Voice of the Magicbane)', 'Stiyl explains that the Catholics won''t kill Orsola until they can prove her to be a heretic. As Saiji leaves to free his comrades, Stiyl tells Tōma and Index to go home, since they have no further stake in this matter. Tōma, however, goes by himself to where Orsola is being held and tortured by Agnese''s battle nuns, who reveal they deceived Necessarius to assist them. He is later joined by Stiyl, who reveals the crucifix Tōma gave to Orsola means she is under protection of the Church of England, followed by Index and the Amasukas. Whilst Tōma is put in charge in protecting Orsola, the others fend off the battle nuns, with Index utilizing the power "Sheol Fear", to deafen and paralyze some of the battle nuns. However, Luccia brings another force of battle nuns who willingly stab their ears to protect themselves from Sheol Fear. 
', 156, 4, 2818021, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4446, 'Croce di Pietro (Apostolic Cross)', 'As Oriana and Tōma continue to battle, Stiyl recovers and summons Innocentius to help him. Refusing to give up, Oriana uses her full powers to defeat Stiyl and all of her spells on Tōma. As he is about to lose conscious, Tōma remember his promises to his friends and recuperate himself to finally defeat Oriana. However, Lidvia contacts them and reveals that she and St. Peter''s Cross are outside the city and there''s nothing they can do to stop her from activating the spell. Luckily, the Night Parade, the festival''s fireworks event has started which blocks out the stars and prevents the cross from activating. As Tōma is checked into the hospital, he is visited by Index, Kuroko and Mikoto which the latter informs he has lost their bet. Meanwhile, Lidvia escapes by a private jet but is tracked down by Laura via Stiyl''s rune cards and has her ejected out of the plane. Despite Laura offering to save her if she surrenders, Lidvia refuses and chooses to fall to her death while protecting the cross. At the same time, Aleister decides to take action personally due to these recent events. The next morning, Aisa is visited by Index and later, to her joy, Tōma. 
', 156, 13, 2818111, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4603, 'Wahlkampf', null, 162, 3, 2230561, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4438, 'Lotus Wand', 'As Tōma, Index, Stiyl, Saiji and Orsola barricade themselves from the battle nuns, Tōma and Index come up with an idea that Orsola could help them decipher the Liber AL vel Legis in Index''s head to their advantage. When Orsola mentions her deciphering method, Index reveals her translations is a fake, revealing Orsola was never able to really decode the grimoire all along. Whilst the others fend off against the battle nuns, Tōma confronts Agnese who attacks him with her Lotus Wand. However, Tōma manages to learn its attack patterns and land a hit on Agnese. As Agnese tries to bluff that Tōma sacrificed his friends as decoys, they arrive with Innocentius, who Stiyl managed to summon thanks to the Amasukas. Her confidence broken, Agnese is knocked out by Tōma, breaking the battle nuns morale, before Tōma himself falls unconscious. Waking up in a hospital in Academy City, Tōma is greeted and taken care by Kaori, who thanks him for helping and tells him that Orsola and the Amasukas are now under the protection of the Church of England. Meanwhile, back in London, Laura reveals to Stiyl that the true reason she got involved with the Orsola incident was to get the Amakusa Catholics under her control and use them as leverage to ensure Kaori''s loyalty to Necessarius. 
', 156, 5, 2818031, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4439, 'Remnant (Wreckage)', 'Kuroko''s day of shopping with Mikoto is interrupted by reports of robbers stealing an aerospace carrycase. Kuroko subdues the thieves but is then attacked and wounded by their leader, another teleporter named Awaki Musujime. She reveals to Kuroko about Tree Diagram''s destruction and how various factions are gathering of its remnants, the contents of the carrycase being one of them. Kuroko manages to escape, but becomes concerned over what Awaki had told her, particularly concerning how Mikoto had been trying to stop them for reasons she had kept from her, (namely being that if Tree Diagram were rebuilt, the Level 6 Shift experiment would start over again). As Mikoto goes out that night to confront Awaki, Kuroko decides to follow her and overhears their conversation before Awaki escapes. As Kuroko decides to take matters into her own hands, Misaka 10032 decides to take action. 
', 156, 6, 2818041, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4440, 'Move Point (Coordinate Relocation)', 'Kuroko finds Awaki at a nearby building and uses the latter''s trauma of self-teleportion to make the first strike but during their battle, her injuries make her unable to concentrate on teleporting and she is trapped under a pile of furniture. Awaki explains to Kuroko that she and her organization, the Science Syndicate, plan to build a new Tree Diagram in order to create other species of espers. Awaki tries to persuade Kuroko to join her, believing her powers is a curse that caused her to become how she is. Kuroko rejects her offer, verbally abuses Awaki for making excuses for her own behavior, breaks loose and tries to attack Awaki, but is shot by her. After a brief traumatic loss of control over her powers, Awaki attempts to kill Kuroko by dropping the building on top of her, but she is saved by Mikoto and Tōma, who came to rescue her after he was alerted by Misaka 10032. As the Anti-Skill''s stop the Science Syndicate, Awaki tries to escape but to her horror, is confronted by Accelerator who, using the Misaka Network to utilize his powers, defeats her and destroys the Tree Diagram remnant. As everyone recovers, Mikoto gives her thanks to Kuroko. 
', 156, 7, 2818051, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4441, 'The Daihasei Festival', 'Academy City is hosting the Grand Champion Star Festival, a sports competition between the various schools of the city, during which visitors from outside the city are allowed entry. Whilst Tōma''s parents, Tōya and Shiina, as well as Misuzu, a relative of Mikoto''s, get to know each other, Tōma and Mikoto decide to make a bet in which the loser does anything the winner wants. Meanwhile, Laura contacts Aleister to inform him that magicians have infiltrated Academy City in order to make a transaction with a magical weapon called the Stab Sword, which has the power to kill a Saint. Meanwhile, Tōma has several troubles with a hungry Index and awkward situations with the class representative, Seiri Fukiyose. Later, Tōma runs into Stiyl and Tsuchimikado, who tell him about the intruding magicians and asks him not to get Index involved. Whilst getting scolded by Seiri after an awkward incident with Index and Komoe, Tōma runs into a woman named Oriana Thomson. When his Imagine Breaker reacts to her, he realizes she is one of the magicians in question and starts to follow her. 
', 156, 8, 2818061, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4442, 'Route Disturb (Pursuit Inhibited)', 'As Oriana realizes she''s being followed and runs away, Tōma, Stiyl and Tsuchimikado chase her through a bus station filled with booby traps, but she manages to escape and uses a counter magic called Short Hand to avoid being traced. Despite Tōma''s objections, Tsuchimikado and Stiyl undergo a painful magical spell in order to locate the Short Hand spell, which happens to be right in the center of a middle school ball throwing tournament. With the competitors in danger of being hurt by the spell if they touch it, Tōma and Tsuchimikado infiltrate the match as contestants in order to find it, only to find the opposing team is Mikoto''s school. Tōma tries to protect Mikoto from one of the basket poles which he believes has the Short Hand, only for Seiri to end up touching the real one and gets hit by magic and falls unconscious before Tōma destroys the spell. As Seiri is taken to the hospital, Tōma vows to make Oriana pay on what she did. 
', 156, 9, 2818071, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4443, 'Shorthand (Stenographic Sourcebook)', 'Whilst Heaven Canceler attends to Seiri, Stiyl manages to lead Tōma and Tsuchimikado to Oriana''s location. Oriana inflicts a curse on Tsuchimikado and gives Tōma trouble with her variety of spells, yet Tōma''s determination allows him to land a hit on her. Oriana escapes but leaves behind her cargo, which is later revealed to be a decoy. Laura soon learns that the Stab Sword is actually St. Peter''s Cross, which she fears the Catholic Church will use to put Academy City under their control if the trade goes through. After Tōma, Stiyl and Tsuchimikado are informed of this, Tōma has lunch with Index, his parents, Mikoto and Misuzu, and is surprise to learn Misuzu is Mikoto''s mother. 
', 156, 10, 2818081, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4444, 'Stab Sword', 'After Tōma has some women trouble with Index, Mikoto and Kuroko following lunch, Tsuchimikado manages to find Oriana''s location and instructs him and Stiyl to go there. However, whilst Tsuchikimado tries to track Oriana, she goes straight to him and attacks him. She defeats Tsuchikimado and destroys his search spell, but he manages to pull off a bluff that he has summoned reinforcements to trick her into running away before finishing him off. Meanwhile, Aisa becomes worried about Tōma, with Komoe suggesting she should invite him to a night parade at the end of the festival. However, when they bump into Oriana as she makes her escape, she sees Aisa''s magic Celtic Cross and mistakes her for a Necessarius magician, attacking her with a vicious spell which leaves her brutally wounded. As Tōma falls into despair upon witnessing her state, Komoe recalls the healing spell she performed on Index, so Stiyl stays to help her perform it whilst Tōma chases after Oriana. 
', 156, 11, 2818091, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4445, 'Belvedere (The Observatory)', 'Tōma hears more from Tsuchimikado about the Croce di Pietro, which uses a similar type of magic to what Misha used, and have Orsola look further into it. Meanwhile, Stiyl manages to successfully heal Aisa, and later, Komoe is questioned by Tōma''s parents about him. Tōma, Stiyl and Tsuchimikado head towards the meetup point of the trade, where they once again face against Oriana and find themselves at a disadvantage. 
', 156, 12, 2818101, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4447, 'City of Water', 'Despite a chain of bad luck with his female companions during the festival, Tōma gets lucky on the last day when he wins a lottery for a one week trip to Chioggia, Italy. After he and Index arrive at Chioggia, Tōma tries to find Index after she gets lost but is found by Orsola who manages to find Index. Later, Orsola explains to them that she and the Amakusas are here at Chioggia to help move and pack her belongings to London. After helping them, Tōma and Index are about to go to their hotel when two assassins try to kill Orsola but their attempts are thwarted by Tōma and Index. The other assassin escapes by summoning a Sailing ship made of Ice in the canal where Tōma and Orsola accidentally board it. As they hide from their pursuers inside the ship, both of them realize the assassins were from the Catholic church and there is a fleet of Ice ships heading towards the Adriatic Sea. When someone tries to enter the room in which they''re hiding, Tōma prepares himself and is surprised to find out it''s Agnese. 
', 156, 14, 3435991, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4448, 'Queen''s Fleet', 'Agnese explains the ship she is on is known as the Queen of the Adriatic Sea where she and her former group are being punished. She agrees to let Tōma and Orsola escape in exchange for the rescue of Luccia and Angelene, who are at risk of having their brains restructured to avoid casting a certain spell that would allow them to escape. Tōma agrees to help her rescue them, although in shaking hands, he accidentally dispels her magical clothing. As Agnese goes to the flagship to confront the squadron''s leader, Bishop Biagio Busoni, Tōma and Orsola manage to find and rescue Luccia and Angelene, who tell him that Agnese is in danger of being used for a spell that would destroy her brain. Just then, the other ships start shooting at them, causing them to fall into the sea, but they are rescued by Index and the Amakusas using an underwater boat. After learning that the spell Biagio intends to use Agnese for has the power to destroys citys and erase their culture, the Amakusas agree to help Tōma and co. rescue Agnese. They launch an attack on the fleet, where they face up against an army of nuns, but when the allied ships try to sink the ship they''re on with them, Angeline gets injured trying to keep one of the nuns being killed. 
', 156, 15, 3449691, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4449, 'Rosary of the Appointed Time', 'Lucia and the Amasukas hold off the battle nuns while Tōma, Index and Orsola continue onwards to the flagship. While Tōma distracts an army of ice golems, he soon encounters Biagio, who uses his magic enlarging crosses and gravity magic to defeat him. Meanwhile, Orsola manages to finds Agnese but is soon found by Biagio who reveals he needs Agnese so he can use the Fleet''s powers to destroy Academy City. As Biagio subdues them, Tōma arrives and knocks him down. With his plans foiled, Biagio activates the Fleet''s self destruction spell that will cause a large explosion. Tōma orders Orsola to escape with Agnese and the others while he fights Biagio one more time, finally defeating him and stopping the spell despite the flagship sinking. As Tōma wakes up in a hospital, he gets a call from Heaven Canceler who informs him that he is being flown back to Academy City and reminds him of Mikoto''s bet for him. In London, Kaori is informed of the recent events by Motoharu and greets Orsola, who has returned with Agnese. Meanwhile in the Vatican, a nun with a pierced face from God''s Right Seat forces the Pope to sign an order to investigate Tōma and eliminate him if he is seen as an enemy. ', 156, 16, 3449701, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4450, 'Penalty Game', 'Autumn arrives at Academy City and the city''s students change into their winter uniforms. Accelerator, Last Order and Kikyō move out of the hospital into Aiho''s apartment, while Misaka 10032 and three other Sisters begin rehabilitation in the city. Meanwhile as promised in their bet, Mikoto has Tōma do whatever she wants, dragging him to a mobile phone shop which is offering a Gekota phone strap for those who take out a couples plan. However, in order to qualify for the offer, they have to take a photo of themselves as a loving couple, which is ruined when a jealous Kuroko intervenes. Elsewhere, Last Order gets herself locked out of the apartment which leads to Misaka 10032 making fun of her situation. Last Order is jealous that she is the only Misaka clone which doesn''t have goggles, so Last Order steals and run off with Misaka 10032''s goggles, which she doesn''t take too kindly. ', 156, 17, 3449711, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4451, 'Serial Number (Specimen Number)', 'In London, the ladies of Necessarius try to learn to use a new washing machine. Back at Academy City, Mikoto finally claims her phone straps, while Tōma encounters Misaka 10032, who is searching for Last Order, and buys her a necklace so he can distinguish her from Mikoto. As Mikoto rejoins them, Misaka 10032 starts teasing her and clinging onto Tōma, attracting the attention of Last Order before Misaka 10032 chases after her again. Elsewhere, Hyōka appears from the Imaginary District and is apprehended by AntiSkill. Accelerator heads to the underground mall to look for Last Order and ends up encountering Index, who decides to help search for her after he treats her to a meal. Meanwhile, Last Order approaches Tōma to thank him for stopping the Level 6 Shift experiment, mentioning how she hopes to protect Accelerator. Tōma and Last Order soon part ways and join up with Index and Accelerator respectively, though Tōma and Accelerator don''t actually see each other, and start making their way home. ', 156, 18, 3449721, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4452, 'The Researcher (Amata Kihara)', 'In Russia, Sasha Kruezhev tries to learn the side effects of her body after Archangel Gabriel possessed her but is harass by her superior Vassilisa. As Accelerator walks Last Order back home, she trips and scrapes her knees so he goes to buy her some bandages. However, he is soon attacked by a group of armed soldiers called the Hound Dogs led by his old mentor, Amata Kihara. While Accelerator easily deals with his men, Amata, who had helped Accelerator learn his powers, knows all the tricks to negate his ability and brutally beats him up. When the Hound Dogs attempt to kidnap Last Order, Accelerator manages to muster up enough strength to blow her away to safety, before Index, who wanted to return a tissue package to him appears on the scene. Meanwhile, Tōma goes looking for Index after she went off but witnesses a group of Anti-Skill officers mysteriously falling unconscious before running into Last Order, who asks for his help. At the same time, a magician from God''s Right Seat named Vento of the Front has entered Academy City and contacts Aleister that she has neutralize the Anti-Skill and Judgment forces, killed three of his Board of Directors and is planning to kill him and everyone else in Academy City. Unfazed by her threats, Aleister orders Amata to deploy "FUSE=Kazakiri" and capture Last Order to eliminate Vento. ', 156, 19, 3449731, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4461, 'The Dark Side of Academy City', 'Tsuchimikado apprehends an underworld arms broker, and a search of his apartment leads to information about an assassination plot. But there is more to the scheme than it originally appears, as several other teams go into action.', 156, 4, 6827261, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4462, 'Dark Matter', 'Accelerator continues on his way to the satellite control center, but is blocked by Saraku, a MEMBER agent. The BLOCK team, with the help of 5000 hired mercenaries, attempts to break into a heavily-fortified municipal facility.', 156, 5, 6827262, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4463, 'Super-espers', 'While Hamazura is out running errands for Mugino, SCHOOL stages an attack on ITEM. When Mugino runs from Kakine, Takitsubo offers to protect Hamazura, but ends up needing his help instead. Kakine issues a challenge to Accelerator.', 156, 6, 6827263, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4453, 'Hound Dog (Hound Squad)', 'Accelerator uses Index''s presence as a distraction to force a driver to get him and Index away from the Hound Dogs. Before Amata can go after them, Vento appears and takes care of his men as he pursues after Accelerator. Meanwhile, as Tōma and Last Order search for Accelerator, they escape from the Hound Dogs chasing after her by hiding in a restaurant where everyone is also unconscious. Accelerator leaves Index in the care of Heaven Canceller, who informs him about Last Order''s situation. In an attempt to take out the Hound Dogs hunting him, he lures them into a railway factory and kills them off one by one. As Tōma and Last Order continue to hide, they are confronted by Vento, whose image has caused several people, including Aiho and Kazari, to fall unconscious. Tōma defends the unconscious patrons of the restaurant from Vento''s attacks and tells Last Order to run as Vento is after him but she soon starts coughing up blood and is forced to flee. Accelerator finally kills the last Hound Dog soldier hunting him but his actions have been witness by an Anti-Skill patrol unit, putting him as a wanted murder suspect. Meanwhile, Tsuchimikado is investigating Vento''s actions, and comes across a white spectral being. ', 156, 20, 3449741, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4454, 'Testament (Learning Device)', 'As Tsuchimikado battles against the spectral being who is working with Vento to kill the unconscious residents of Academy City, Tōma calls Accelerator from Last Order''s cellphone to update him on her status. Accelerator soon learns that Amata has managed to capture Last Order, though is keeping her alive for some reason. Aleister then uses Testament, with Last Order''s authorization, to summon an angel to appear in the city to target those who use magic. As Tōma, Mikoto and Index head towards where the angel is, Index realizes the angel is actually Hyōka. As Mikoto holds off the Hound Dogs, Index explains the nature of Vento''s Divine Punishment, which targets anyone who experiences a certain emotion towards her and how Hyōka isn''t an ordinary angel. Tōma tells her to work with Mikoto to combine their knowledge of magic and science to figure out how to help her. Meanwhile, Accelerator breaks into the Hound Dog''s headquarters and confronts Amata. As Tōma witnesses Hyōka''s controlled state and feels helpless, since using his right hand would kill her, Vento appears before him again, threatening to kill them both, so Tōma stands to defend Hyōka. ', 156, 21, 3449751, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4455, 'The Divine Retribution Spell', 'Accelerator starts to fight Amata, but the battery for his link to the Misaka Network runs out, leaving him paralyzed and defenseless. However, he begins to move again by force of will and starts to come after Amata. Meanwhile, Tōma fights against Vento, who continues to be weakened by Testament, while Hyōka makes snow appear over the city, protecting the unconscious civilians. Vento reveals her hatred towards science because both she and her little brother got into accident at a amusement park that was supposed to be the safest and the hospital only had enough blood to save her alone. Tōma argues against her reasoning for her actions and manages to punch and knock her out. Index appears in Amata''s HQ and, thanks to Mikoto''s knowledge of science, learns that Last Order is being used as a container to create the angel. She sings a song in order to sever the shackles controlling Last Order, which in turn resonates with Accelerator who awakens as a result and blasts Amata into the sky. In the end, Acqua of the Back from God''s Right Seat appears and gives Tōma Vento''s cross as her Divine Punishment has been dispelled before warning Tōma not to fight him as he is a Saint and leaves with Vento. ', 156, 22, 3449761, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4456, 'Prewar', 'Thanks to Index, Hyōka returns to normal and, despite blaming herself for the chaos she caused, Tōma ensures her she also protected the city''s populace. As Acqua retreats with Vento and the rest of her men from Academy City, Accelerator is captured by the City''s security forces. As the city recovers from Vento''s attack, Tsuchimikado and Tōma''s class have dinner at a sukiyaki restaurant where they later talk about how a war will be coming to Academy City. Meanwhile, the City''s Board of Directors punishes Accelerator for his actions by making him join a special Team called GROUP which compose of Tsuchimikado, Awaki and the mage who disguised himself as Mitsuki Unabara. After increasing the time limit of Accelerator''s powers, GROUP first mission is to neutalzie the threat pose by the Skill-Outs, gangs of Level 0s lead by Ritoku Komaba, who are taking advantage of the lack security in the city after the Anti-Skills are forced to defend the city''s outskirts to prepare themselves for more attacks by the Catholic church. As Accelerator and Awaki begin their attack at the Skill-Out''s home turf, Awaki comes across Ritoku. ', 156, 23, 3449771, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4457, 'Skill Out (Armed Gang)', 'Despite her abilities, Awaki finds herself at a disadvantage as Ritoku is using stolen military weapons including an exo-suit called ''Hard Taping'' which gives him incredible speed and strength. After defeating her, Ritoku then confronts Accelerator, using a chaff grenade to interfere with his Misaka Network link. However, Accelerator manages to use a pistol to clear the air and land a shot on him, thanks to Awaki''s assistance. After killing Ritoku, Accelerator decides to do some overtime and encounters a drunk Misuzu, who is searching for the Dangai University database center for a report. After sending her off in a taxi, where she exchanges numbers with Tōma, Accelerator is contacted by GROUP''s mysterious head, who reveals that they have hired the Skill-Outs to kill Misuzu as she is the Parent-Student representative who are attempting to take their children out of Academy City before the impending war. When they cut off his powers after he refuses to help the Skill-Outs, Accelerator decides to head to Dangai University to rescue Misuzu despite spotting Tōma, who also goes there to save Misuzu after she called him for help. Thanks to Accelerator''s unseen aid, Tōma is able to escape with Misuzu from the Skill-Outs, only to confront by one of them named Shiage Hamazura. Shiage is desperate to kill to Misuzu as the City''s higher-ups will exterminate the Skill-Outs if they fail but Tōma berates Shiage''s ideals of trampling over other lives and knocks him out. As Tōma is admitted into hospital, Mizusu admits she came to take Mikoto home, but feels safe knowing there are people like him to protect her. Accelerator later meets with the rest of GROUP who reveals the order on Misuzu''s life has been canceled and the four of them decide to work together so they may one day take on the higher-ups. As each of the characters spend the night in their own ways, Hyōka and Index visit the injured Tōma. ', 156, 24, 3449781, 416);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4458, 'Unrest', 'Following the September 30th Kazakiri incident, protests against Academy City erupt across Europe, and things are restless within the city, as well. Kamijo must stay after school as punishment after getting into a fight with his classmates.', 156, 1, 6717869, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4459, 'The Right Seat of God', 'Kamijo is separated from Tsuchimikado, but ends up finding the Amakusa Church''s Itsuwa. She informs Kamijo about the circumstances of the Papal Palace of Avignon, and its link to the turmoil being incited around the world.', 156, 2, 6827259, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4460, 'The Document of C', 'Confronted by Terra, Kamijo and Itsuwa have their hands full trying to avoid his attacks. Military forces from Academy City appear in Avignon, suppressing the demonstrators. Terra uncovers the secret Kamijo has been hiding.', 156, 3, 6827260, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4604, 'Weihnachten', null, 162, 4, 2230571, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4605, 'Kontrolle', null, 162, 5, 2230581, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4606, 'Totalschaden', null, 162, 6, 2230591, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4465, 'Saint Breakout', 'With Kamijo unconscious, Itsuwa is guilt-ridden, and receives a pep talk from Tatemiya. As Orsola researches Acqua''s past, the Amakusa Church members make their stand against Acqua, at which Itsuwa reveals their new secret weapon.', 156, 8, 6827265, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4466, 'Holy Mother Veneration', 'Kanzaki battles Acqua under Academy City, but finds herself overpowered by his might. Mikoto runs into Kamijo after he sneaks out of his hospital room. Kanzaki works with the Amakusa Church members to find a way to beat Acqua.', 156, 9, 6827266, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4467, 'Sky Bus 365', 'Itsuwa and Kanzaki both up the ante in their pursuit of Kamijo. Index and Kamijo are summoned to Britain to deal with a magic issue, but while en route, their jet falls victim to a terrorist plot that threatens the lives of everyone aboard.', 156, 10, 6827267, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4468, 'British Labyrinth', 'After being escorted to London, Kamijo and Index have an audience with the queen and three princesses to discuss the threats facing Britain. Upon dividing into separate teams, Kamijo assists with tracking down the members of New Light.', 156, 11, 6827268, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4469, 'Mercenaries', 'As the coup continues, even the sisters of the puritan church are targeted, while the queen and princesses find their lives in danger. Index analyzes the evidence of the Eurotunnel blast. Knight Leader is confronted by a former colleague. ', 156, 12, 6827269, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4470, 'Curtana Original', 'Acqua and Knight Leader continue their fateful showdown in the forest. Princess Carissa reveals a devastating new technique using Curtana Original. When Kamijo and Index''s lives are endangered, an unexpected ally comes to their rescue.', 156, 13, 6827270, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4471, 'Heroes', 'Kamijo, Kanzaki, Index, and Vilian head toward Buckingham Palace to stop Carissa. The palace is bombarded from the floating fortress Coven Compass, and others join the battle when Carissa calls in her own cruise missile strike.', 156, 14, 6932385, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4472, 'Spark Signal', 'Accelerator and the other members of GROUP are assigned to eliminate the members of Spark Signal, a terrorist group which has taken hostages. Hamazura and Kinuhata find themselves on the run when they defy the city''s higher-ups.', 156, 15, 6932386, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4473, 'The Governing Board', 'Hamazura desperately tries to rescue Takitsubo when the building she is in falls under terrorist attack. Stephanie hunts down Kinuhata to exact revenge for Sunazara. Accelerator seeks out assistance from an unlikely benefactor.', 156, 16, 6932388, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4474, 'DRAGON', 'Técpatl and Unabara square off in Shiokishi''s chambers, while Accelerator and Sugitani face each other in the hallway outside. Kinuhata discovers the true reason for the current assault against herself, Takitsubo, and Hamazura.', 156, 17, 6932389, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4475, 'The Alliance of Independent Nations', 'Tensions escalate as Russia threatens military action against Academy City, while French sorcerers storm the English Channel. Kamijo and Lessar''s search for Sasha Kruezhev leads them to the Elizalina Alliance of Independent Nations.', 156, 18, 6951734, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4476, 'Misaka Worst', 'After dealing with the sorcerers at the Russian airbase, Accelerator has a Misaka clone skydive down to confront him. Vento challenges Fiamma while Kamijo and the others watch on. Hamazura gets some disturbing news from Digurv.', 156, 19, 6951735, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4477, 'A Reason to Protect', 'Kamijo begins second-guessing himself after Fiamma''s rebuke. Hamazura fights to protect the village from privateers. The fighting between Britain and France ramps up. Accelerator lashes out at Kamijo over Last Order''s condition.
', 156, 20, 6951736, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4478, 'The Star of B''Tselem', 'Accelerator begins finding clues about the parchment he is carrying. Hamazura and Digurv find an unexpected ally in Acqua. Takitsubo receives some welcome news from Elizalina. Kamijo and Lessar attempt to infiltrate Fiamma''s base.', 156, 21, 6951737, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4479, 'Angel Power (Gabriel)', 'Kamijo runs into Sasha Kruezhev, and he continues to formulate a plan to stop Fiamma. Hamazura and Takitsubo discover an imminent threat to Digurv''s village. The archangel Gabriel rains havoc upon the Russian and Academy City forces.', 156, 22, 6951738, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4480, 'Fuse=KAZAKIRI', 'As Kamijo and Sasha look on, Hyoka rushes in to stop the archangel''s rampage. Accelerator joins the battle as well, with a newfound purpose. Acqua has his own strategy to weaken the archangel''s power, though at great cost to himself.', 156, 23, 6951739, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4481, 'List of Prohibited Books (Index)', 'Kazakiri advises Accelerator about the song Index once sang to treat Last Order. Hamazura has a surprise encounter. Lessar offers a proposition to Sasha. The long-awaited showdown between Kamijo and Fiamma takes a drastic turn.', 156, 24, 6951740, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4482, 'Wings', 'Hamazura must defend the members of ITEM against a new threat from Academy City. Accelerator acquires the final piece of the puzzle to a cure for Last Order. The showdown between Fiamma and Kamijo becomes even more intense.', 156, 25, 7077605, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4483, 'Son of God', 'An overjoyed Accelerator gains a new perspective on the world. The duel between Kamijo and Fiamma concludes, and the doomed Star of B''Tselem begins its crash landing. The ITEM members are tracked down by an old acquaintance.', 156, 26, 7077606, 417);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4484, 'The Sexual Contract', null, 157, 1, 394854, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4485, 'Game, Setup, Match', null, 157, 2, 394855, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4486, 'Flirting With Disaster', null, 157, 3, 394856, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4487, 'Celibacy', null, 157, 4, 394857, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4488, 'Domme & Dommer', null, 157, 5, 394858, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4489, 'Do Not Resuscitate', null, 157, 6, 394859, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4490, 'The More The Merrier', null, 157, 7, 394860, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4491, 'Fun For The Whole Family', null, 157, 8, 394861, 418);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4492, 'Baring It All', null, 157, 1, 394862, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4493, 'Damsel', null, 157, 2, 394863, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4494, 'The Artist And The Professor', null, 157, 3, 394864, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4495, 'The Loneliness Long Distance', null, 157, 4, 394865, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4496, 'The Thrill Of The Chase', null, 157, 5, 394866, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4497, 'Fake It Till You Make It', null, 157, 6, 394867, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4498, 'Making It Work', null, 157, 7, 394868, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4499, 'What''s The Rush?', null, 157, 8, 394869, 419);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4500, 'Man On The Ledge', null, 157, 1, 394870, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4501, 'Who''s Your Daddy?', null, 157, 2, 394871, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4502, 'Just Say Mo', null, 157, 3, 394872, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4503, 'Looking Good', null, 157, 4, 394873, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4504, 'Name Your Price', null, 157, 5, 394874, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4505, 'Pistols At Dawn', null, 157, 6, 394875, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4506, 'Virgin Terrority', null, 157, 7, 394876, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4507, 'Planned Parenthood', null, 157, 8, 394877, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4508, 'Footprints', null, 157, 9, 394878, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4509, 'Beating The Rap', null, 157, 10, 394879, 420);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4510, 'Episode 1', 'New documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal Three, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK.', 158, 1, 394880, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4607, 'Talk-Show', null, 162, 7, 2230601, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4608, 'Das Ende', null, 162, 8, 2230611, 433);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4512, 'Episode 3', 'Officers at Heathrow Terminal Three question a passenger from Johannesburg arriving in London on a tourist visa, suspecting he may actually be coming to work in the country. Entry Clearance Officer Dan Brown, on secondment to the British High Commission in Delhi, encounters a man carrying false identity documents - an arrestable offence.', 158, 3, 394882, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4513, 'Episode 4', 'Immigration officers at Heathrow''s Terminal Three investigate a Jamaican man they suspect is a drugs mule after a suspicious x-ray examination.

At a London Underground station, a suspected illegal immigrant tries to run from officers, but his escape is hindered by a member of the public.', 158, 4, 394883, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4514, 'Episode 5', 'Officers search UK-bound lorries and discover illegal immigrants during rush hour at Calais, while in the UK police target illegal workers as they raid a chicken factory.', 158, 5, 431175, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4515, 'Episode 6', 'Documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal 3, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK.', 158, 6, 431176, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4516, 'Episode 7', 'Documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal 3, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK.', 158, 7, 431177, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4517, 'Episode 8', 'The Manchester enforcement team conducts raids in Rochdale, searching for illegal workers, and a man is deported to Nigeria. Last in the series.', 158, 8, 431178, 421);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4518, 'Episode 5', 'Access is gained to an Immigration Removal Centre, where the UK Border Agency is implementing Operation Aardvark, a mass deportation on a specially chartered flight.', 158, 5, 1169721, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4519, 'Episode 7', 'Observational documentary series. Exclusive camera access inside the British High Commission in Lagos, Nigeria. The staff at a West End steakhouse are grilled.', 158, 7, 1169861, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4520, 'Episode 6', 'Observational documentary series. This episode ventures into ''The Jungle'', a piece of scrubland in Calais where asylum seekers lie in wait for trucks heading towards Britain.', 158, 6, 1170351, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4521, 'Episode 8', 'Observational documentary series. Officers stop a Nigerian with a forged passport who insists he is 15 years old. A transgendered woman suffering from terminal cancer and with just $10 to her name finds out if she qualifies to get into the country. A criminal is caught in Calais.', 158, 8, 1210451, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4522, 'Episode 1', 'Documentary going behind the scenes of the UK Border Agency as undercover officers in Lagos, Nigeria, try to stop illegal immigrants boarding flights to Britain. Cameras also follow the work of those trying to expose one of the biggest visa scams in British history and passengers are confronted as they try to smuggle goods overseas', 158, 1, 2935361, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4523, 'Episode 2', 'Documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal 3, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK', 158, 2, 2935371, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4524, 'Episode 3', 'Documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal 3, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK', 158, 3, 2935381, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4525, 'Episode 4', 'Documentary series taking viewers inside the UK Border Agency, revealing the work that takes place behind the scenes of the immigration process. Teams at Heathrow Terminal 3, Calais, Dover and across the North West and North East of England reveal the methods and technology used to allow legitimate visitors safe passage while catching those who try to gain illegal entry to the UK', 158, 4, 2935391, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4526, 'Episode 9', null, 158, 9, 2935401, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4527, 'Episode 10', null, 158, 10, 2935411, 422);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4528, 'LST 325', '“Landing Ship Tanks” weren''t deemed noble enough to have names. They were not thought of as warships even though they were the first floating metal to touch beaches in engagements from North Africa to the Philippines. The story of these ships exemplifies the collective saga of a design class that had absolutely no military precedent before the first keel was laid in June 1942.', 159, 1, 394884, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4529, 'USS Samuel B. Roberts', 'The first Samuel B. Roberts, DE-413, perished in the greatest naval battle ever fought: In October 1944, as part of minimal force protecting jeep carriers in Leyte Gulf, the vessel faced a tremendously superior Japanese fleet. Fighting to the death, the DE-413 was able to fend off much of the Japanese force before sinking to the bottom of the ocean. The name “Samuel B. Roberts” appeared two more times, including the FFG-58, launched in 1984, which participated in Desert Storm, and remains on-call today for homeland security.', 159, 2, 394885, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4530, 'USS Arizona', 'In this inside look, underwater photography beneath Pearl Harbor reveals not only the damage sustained in the Arizona''s last battle but also how much the ship has degraded over time. We now think of the Arizona only in death but in life it was one of the most innovative warships of its kind, and one of the most iconic ships in American history. The USS Arizona is a national cemetery as well as a national monument, with 900 crew members buried within the vessel.', 159, 3, 394886, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4531, 'USS Constitution', 'Also known as Old Ironsides, the USS Constitution holds steady as one of the U.S. Navy''s most impressive achievements in craftsmanship and endurance. It is one of the six original frigates authorized for construction by the Navy Act of 1794, and today still remains afloat, serving as a training facility for new Navy CPO (chief petty officers).', 159, 4, 394887, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4532, 'USS Enterprise', 'The original Enterprise, CV-6, gained immortality as “The Fighting Lady” of World War II. But despite her glorious history, she was sent to the scrap yard, only to be redeemed with the 1961 commissioning of CVN-65, the world''s first nuclear-powered carrier. Today the USS Enterprise remains on the high seas and on the front lines of America''s military engagements.', 159, 5, 394888, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4533, 'USS Hornet', 'One of the most heroic ships of World War II, CV-8 served as the flight deck for the Doolittle Tokyo raid, and its successor, the CV-12, endured 16 months of non-stop combat action, coming within 40 miles of Japan, and setting incredible wartime records. Some of those feats include: an amazing 10 pilots reaching “Ace in One Day” status; over 1,400 enemy planes destroyed; and an impressive number of Hellcat pilots who became aces.', 159, 6, 394889, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4534, 'USS New York', 'This episode reveals how the latest ship to be named “USS New York” was assembled. An “Amphibious Dock Ship,” it is one of the most technologically advanced vessels in America''s arsenal, and is reinforced with steel from the World Trade Center towers. Its predecessor, the battleship New York, born in 1911, was present during the German High Seas Fleet at Scapa Flo in 1918. Later modernized, it fought a two-ocean war in World War II.', 159, 7, 394892, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4535, 'USS Laffey', 'The USS Laffey was in reality two great vessels with the same name--the first, DD-459, fought to the death in the Naval Battle of Guadalcanal in November 1942. The second, DD-724, was at the center of World War II''s most intensely brutal kamikaze attack, where it earned the nickname “The Ship that Would Not Die.” The crew casualties, however, were high: Over 30 perished and another 70 were wounded.', 159, 8, 394895, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4536, 'USS Nautilus', 'The name "Nautilus" was passed along Navy surface ships from the War of 1812 through the Mexican War, and then eventually given to submarines beginning in World War I. During World War II, the name was given to a unique sub that was equipped with two six-inch guns designed to combat destroyers and cruisers, yet was also big enough to be assigned to deliver massive amounts of cargo to Marine raiders. From 1951 through 1979, the replacement USS Nautilus completed numerous successful voyages, including sailing under the polar icecap.', 159, 9, 394899, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4537, 'USS New Jersey', 'America''s most decorated surviving warship, the USS New Jersey has fought in more battles than any other fighting ship in US naval history. From WWII to Korea and Vietnam, Lebanon and Syria, the USS New Jersey was on the front lines, lending support in every major engagement. This episode of HERO SHIPS includes the emotionally stirring first reunion in three decades of two shipmates who served together on the USS New Jersey during Vietnam.', 159, 10, 394902, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4538, 'SS Jeremiah O''Brien', 'Not all hero ships were built for battle. The SS Jeremiah O''Brien served as a beacon of hope as one of many so-called liberty ships that kept wartime supplies flowing during the Second World War. The ship miraculously survived the D-Day invasion, and is currently harbored in San Francisco. It continues to participate in Fleet Weeks and cruises across the world.', 159, 11, 394903, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4539, 'USS Texas', 'A technical and historical thumbnail of the US Navy from 1912 through 1945, the USS Texas fought in some of the most horrendous naval battles of the 20th century, including D-Day at Normandy, Iwo Jima and Okinawa. Today it''s been renovated and set up as floating museum in LaPorte, Texas.', 159, 12, 394905, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4540, 'USS Yorktown', 'Two magnificent ships carried the same great name: the original CV-5 was a martyred hero of the Second World War''s two pivotal battles, the Coral Sea and Midway, sinking several Japanese carriers, and its successor, the CV-10, went on to avenge its destroyed namesake through the remainder of the war.', 159, 13, 394909, 423);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4541, 'Kimora Cam-Pain', 'Kimora plans an advertising campaign, discusses details of a Kimora Barbie doll and unwinds with the help of a yoga instructor. ', 160, 1, 394920, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4542, 'Vanity Flair', 'Kimora tries to get on the cover of a magazine, and selects a dress for the Vanity Fair party. ', 160, 2, 394921, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4543, 'The Devil Wears Baby Phat', 'Kimora frets over delivering an acceptance speech at an awards event and searches for a new assistant. ', 160, 3, 395029, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4544, 'Kimora Knows She Cannes', 'Kimora travels to Cannes, France, to launch a fashion collection. ', 160, 4, 395030, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4545, 'Kimora: Life In The Fab Lane Secrets', 'Kimora shares her secrets to success.', 160, 5, 395031, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4546, 'Keepin'' it Real Estate', 'Kimora has 3 days to find a fabulous new home in Los Angeles, and Mallory needs to make sure Ming and Aoki love LA. ', 160, 6, 395032, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4547, 'In Store for Fabulosity', 'Kimora plans to launch a new jewelry line, so she brings in a feng shui expert to achieve harmony in the store prior to the big kickoff. ', 160, 7, 395033, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4548, 'Kiddie Couture', 'Kimora debuts her new kids'' clothing line with a high-end fashion show. ', 160, 8, 395034, 424);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4549, 'My Super Fabulous 8th Birthday', 'Kimora balances her new responsibilities at Phat Farm with planning her daughter Ming''s 8th birthday party.', 160, 1, 394922, 425);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4550, 'Tooth or Consequences', 'It''s the week before the Baby Phat fashion show - and tensions are at an alltime high. Part 1 of 2.', 160, 2, 394923, 425);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4551, 'Ming & the Dynasty', 'Kimora tries to take on new responsibilities while preparing the party for Ming''s eighth birthday. ', 160, 1, 395035, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4552, 'On the Phatwalk Pt. 1', 'Kimora is forced to change her plans as she prepares to attend fashion week in New York City, when her daughter comes down with a tooth ache. ', 160, 2, 395036, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4553, 'On the Phatwalk Pt.2', 'Kimora finalizes her plans for fashion week in New York City. ', 160, 3, 395037, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4554, 'All Hail to the Princess', 'Kimora wants to create Russell Simmons'' birthday party, but she needs to promote her cosmetics line in Florida. ', 160, 4, 395038, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4555, 'Smells Like Fabulosity', 'Kimora wants to go green, starting with her commercial shoot for a perfume. ', 160, 5, 395039, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4556, 'Heels and Deals', 'Kimora gives an interview and shows clips from past episodes. ', 160, 6, 395040, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4557, 'A Mother''s Workout Is Never Done', 'In hopes of getting back in shape, Kimora hires herself a personal fitness trainer. ', 160, 7, 395041, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4558, 'High School Daze', 'Kimora returns back to her hometown of St. Louis, where she receives an award.', 160, 8, 395042, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4559, 'Take a Bow Wow', 'Christopher would like a new dog, while Kimora receives some fashion advice from Andre Leon Talley. ', 160, 9, 395043, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4560, 'Growing up Fabulous', 'This episode focuses on Kimora''s daughters, Ming and Aoki. ', 160, 10, 395044, 426);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4561, 'A bisserl was geht immer', null, 161, 1, 394945, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4562, 'Die italienische Angelegenheit', null, 161, 2, 394946, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4563, 'Kalt erwischt!', null, 161, 3, 394947, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4564, 'Der Friedensengel', null, 161, 4, 394948, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4565, 'Der Herr der sieben Meere', null, 161, 5, 394949, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4566, 'Mehr seelisch, verstehn''s?', null, 161, 6, 394950, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4567, 'Ein ernsthafter älterer Herr', null, 161, 7, 394951, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4568, 'Macht''s nur so weiter!', null, 161, 8, 394952, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4569, 'Wo ist das Leben noch lebenswert?', null, 161, 9, 394953, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4570, 'Abgestürzt', null, 161, 10, 394954, 427);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4571, null, null, 161, 1, 4103028, 428);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4572, 'Der Akt', null, 162, 1, 394961, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4573, 'Fasching', null, 162, 2, 394962, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4574, 'Meisterschaft', null, 162, 3, 394963, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4575, 'Lotto', null, 162, 4, 394964, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4576, 'Auto', null, 162, 5, 394965, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4577, 'Sex', null, 162, 6, 394966, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4578, 'Urlaub', null, 162, 7, 394967, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4579, 'Sucht', null, 162, 8, 394968, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4580, 'Karriere', null, 162, 9, 394969, 429);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4581, 'Die ganze Wahrheit über MA 2412', null, 162, 1, 644151, 430);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4582, 'Knackal Spezial', null, 162, 2, 644161, 430);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4583, 'MA 2412 - Die Staatsdiener', null, 162, 3, 644171, 430);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4609, 'Presentado por un viejuno', 'Testimonio de David Hasselhoff
El Rincón de Agnes: Hoggie Doggie es un perro
Retrospecter: Cacharros locos
CÑÑ: Omar Abdulá y sus pelotas
Dr. Alce: ERRE GÉ (Ramón García)
Economía Chanante: Móviles
Hever vs Clever', 163, 1, 394996, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4610, 'Presentado por David Hasselhoff', 'Testimonio de Nacho Duato
El Rincón de Agnes: Ordago a tu corazón
Retrospecter: Bombardeo de melones
CÑÑ: Asador de Josefina
Dr. Alce: Operación Triunfo
Economía Chanante: consejos para invertir
Hever vs Clever', 163, 2, 394997, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4611, 'Presentado por Nacho Duato', 'Testimonio de Mijail Gorbachov
Dr. Alce: Series Guays
El Rincón de Agnes: El amor alimenta
Retrospecter: Historia Reciente
CÑÑ: El Corral de la Pacheca
Cuentaselo a Asun: Hoy quiero confesarte algo
Sr. Pussy: No pegues a los animales
Economía Chanate: Un día en la vida de el Payaso
Hever vs Clever', 163, 3, 394998, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4612, 'Presentado por Mijail Gorbachov', 'Testimonio de Carl Lewis
Dr. Alce: Diosas de la tele
El Rincón de Agnes: ¡Cada vez más pequeño!
Retrospecter: Historia de chinos y crímenes 1ª parte
CÑÑ: Rony, el rey de la gamba
Cuentaselo a Asun: Perdonamé cuanto antes.
Economía Chanante: Consulting ting
Hever vs Clever', 163, 4, 394999, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4613, 'Presentado por Carl Lewis', 'Testimonio de Vanilla Ice
Dr. Alce: La Programación Nocturna
El Rincón de Agnes: El Hombre que meó cocacola
Cultura General
Retrospecter: Historia de chinos y crímenes 2ª parte
CÑÑ: Marlo & Marlo
Cuentaselo a Asun: ¿Qué no aguantas de tu pareja?
Economía Chanante: ¿Cómo renacer de vuestras cenizas?
Hever & Clever
', 163, 5, 395000, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4614, 'Presentado por Vanilla Ice', 'Testimonio de Antonio Gala
Dr. Alce: Talk Shows
El Rincón de Agnes: Hemingway y la granjera de avestruces
Rapero cabezón
Retrospecter: Tripis de ayer
CÑÑ: Club Marlo
Cuentaselo a Asun: Quiero dar un apunte
Economía Chanante: Ayudante
Hever vs Clever
', 163, 6, 395001, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4615, 'Presentado por Antonio Gala', 'Testimonio de Michael Jackson
Dr. Alce: Cosas del corazón
El Rincón de Agnes: Mientras tenga manos: Una vida dedicada al bricolaggge
Retrospecter: Botellón de Passport
Videojuego.
CÑÑ: Premios Big Foot de plata a la cocina creativa
Cuéntaselo a Asun: Como te envidio tunante
Sr. Pussy: Chorrica Jeans
Economía Chanante: Documento Comprometedor
Hever vs Clever
', 163, 7, 395002, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4616, 'Presentado por Michael Jackson', 'Testimonio de Margareth Thatcher
Dr. Alce: El Invitado Especial
El Rincón de Agnes: Las mujeres de mi vida.
Retrospecter: Los Hermanos Tangana.
CÑÑ: ¿Qué comen los Superheroes? (Capitán Currichi)
Cuentaselo a Asun: ¡Joder. tengo poderes!
Economía Chanante: Payaso Tontonetti (Intercambio)
Hever vs Clever
', 163, 8, 395003, 434);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4617, 'Presentado por Margaret Thatcher', 'Testimonio de Francis Ford Coppola
Dr. Alce: El Buen Cine
El Rincón de Agnes: "Un Libro" por Marlo.
Retrospecter: Intercambio de caras en Dermoestetica.
CÑÑ: Gimnasio "Buena Digestión" (Profesor Aerochamber)
Cuéntaselo a Asun: Estoy hecho un toro.
Economía Chanante: Diccionario Económico.
Hever vs Clever', 163, 1, 395241, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4618, 'Presentado por Francis Ford Coppola', 'Testimonio de Mick Jagger.
El Rincón de Agnes: "Mis pies favoritos" Agnes Chevalier.
Dr Alce: Lucha de Genios.
Viviendo con Jacko.
Retrospecter: La vida disoluta de un cabronías.
Cuéntaselo a Asun: Borja Sisante
El cine, ¡qué movida!
Hever vs Clever', 163, 2, 395246, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4619, 'Presentado por Mick Jagger', 'Testimonio de Pat Morita
Dr Alce: El mejor robot
E.T. en Albacete
Retrospecter: Inmobiliaria Central
El Sindrome de China
Super Ñoño: Robo en el Pryca
Cuentaselo a Asun: ¿Existe el amor eterno?
Super Ñoño: Fontanero en Peligro
Economia Chanante: Salvemos al Rey
Hever vs Clever', 163, 3, 395247, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4620, 'Presentado por Pat Morita', 'Testimonio de John McEnroe.
Dr Alce: Viviendo con Cámaras.
El Amigo.
Retrospecter: Un Abuelo en Apuros.
El Suegro.
Super Ñoño: Robo de una televisión.
La Leyenda del Monje
Economía Chanante: Turismo Rural (Gañan)
Hever vs Clever', 163, 4, 395248, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4621, 'Presentado por John McEnroe', 'Testimonio de Montserrat Caballé
Dr. Alce: Historias Animadas
Necesito un sacerdote
Retrospecter: La Vadá
CÑÑ: Operación Clón
Cuéntaselo a Asun Histórico: Perdoname tunante.
¿De que hablan los juguetes de McDowell?
Economía Chanante: Cuento de Dickens
Hever vs Clever', 163, 5, 395249, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4622, 'Presentado por Monserrat Caballé', 'Testimonio de Ronald Reagan
Dr Alce: Adivina la Tonada
El amigo informático
Retrospecter: Arturo Peñalvert
No estoy loco
Nuestro amigo el cactus
Cuéntaselo a Asun: Quiero decir algo a un amigo
CÑÑ:Estrellas de rock en las alcantarillas
Hever vs Clever', 163, 6, 395250, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4623, 'Presentado por Ronald Reagan', 'Testimonio de Axl Rose
Super Ñoño: Lo que más le gusta
Los tres franceses
Retrospecter: A los hijos no hay que pegarles
CÑÑ: ¿Qué se come en el espacio?
Cultura General
Cuéntaselo a Asun Histórico: Quiero que todo sea para todos.
El Payaso: Contigo pan y cebola
Hever vs Clever
', 163, 7, 395251, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4624, 'Presentado por Axl Rose', 'Testimonio Axl Rose
Super Ñoño: ¿Super Ñoño, usted no tiene un sueño?
Retrospecter: Casas de Alquiler (La Fiesta de los Cocos)
La Vida de Michael Jackson
Sra. Vera limpia la escalera
El Payaso: Payaso Aerolíneas Company
Hever Clever
', 163, 8, 395252, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4625, 'Presentado por Anatoli Karpov', 'Testimonio Dolly Parton
Volvamos Andando
Los Chistes Resumidos de Hincli Mincli
Retrospecter: Presentarle el novio a tus padres
Los Chistes Resumidos de Hincli Mincli II
Los Osos (por Cli Cli)
Los Chistes Resumidos de Hincli Mincli III
Super Ñoño: A Super Ñoño le viene el fontanero
Los Chistes Resumidos de Hincli Mincli IV
El Iluminado
Walter Matthau y Jack Lemon
Los Chistes Resumidos de Hincli Mincli V
Hever Clever', 163, 9, 395253, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4626, 'Presentado por Dolly Parton y Burt Reynolds', 'Testimonio Salman Rushdie
Dr. Alce: Ramoncín el mejor
Pat & Steve
Retrospecter: La Vida profesional de Juseppe Tangana
Musical: ¡Somos de Cuenca!
Clarise no tiene amigos y le consulta al Dr. Lecter
El Payaso: El Zorro 2000
Hever Clever
', 163, 10, 395254, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4627, 'Presentado por Salman Rushdie', 'Testimonio de Liza Minelli
Super Ñoño: ¿Por qué está siempre en la cama?
Libracos de Impresión
Retrospecter: Mano Morcillera: aprendiz de pianista
Marilyn in Heaven
El Sr. Cactus presenta Wild Wild West
El Payaso: ¿Estais contentos con vuestros cuerpos?
Hever Clever
', 163, 11, 395255, 435);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4628, 'Presentado por Liza Minelli y el Master of Ceremonies', 'Testimonio de Mister T
Dr. Alce: Esos chavales
That Fucking English
Retrospecter: Lo mejor de Retrospecter
Las Luces
Atentos al Babuino
Pedro Teixido y striptease
El Payaso: Rap Señor Mono
Hever Clever
', 163, 1, 395936, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4629, 'Presentado por El Equipo A ', 'Testimonio Jimenez del Oso
Super Ñoño: La Mente Cósmica
La Pícara Valenciana: Ligues de última hora
Retrospecter: La facturaza de Boris Karlor
Cosas que dan Cosica
Cuentaselo a Asun histórico: Vivo con Regomello
El Payaso: Cena con el Gañán
Hever vs Clever', 163, 2, 395937, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4772, 'Hopkins Military Academy', 'The teams visit the Hopkins Military Academy, built in 1864 and complete dares in The Boiler Room, Science Laboratory, The Pool, The Barracks, The Stockade, The Cabinet, and The Barracks room #333.', 165, 4, 395133, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4630, 'Presentado por Jiménez del Oso y el contactado', 'Testimonio de Muamar el Gadafi
Super Ñoño: Atacan a Super Ñoño
El Guionista Pelirrojo
Retrospecter: Amigos Especiales
Brillín y Papillitas
Las Aventuras de Guirly y Chorli: Amistad a la Griega
El Manco
El Payaso: Normas Mínimas de comportamiento
Hever Clever
', 163, 3, 395938, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4631, 'Presentado por Muamar el Gadafi y Marlo', 'Testimonio de Stephen King
Dr Alce: Lirios Rotos
La Señorita F******* : Abra Cadaver
Retrospecter: Documentos de Hollywood
La Pícara Valenciana: El lio del coche
Cuéntaselo a Asun "Histórico": Mi padre me da tirria
El Payaso: El payaso y el Amish
Hever vs Clever
', 163, 4, 395939, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4632, 'Presentado por Stephen King y el superfans', 'Testimonio de Nadia Comanecci
Luterano y forzudo: El pan bimbo
Super Ñoño: El sueño de super Ñoño
Luterano y forzudo: El cubo de la basura
Retrospecter: Los padres de la patria
Luterano y forzudo: La compra
Reinventando la cocina
Luterano y forzudo: La leche
El payaso: Soy como una fábrica de producir cosas
Luterano y forzudo: Los fuegos de la cocina
Hever vs Clever', 163, 5, 395940, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4633, 'Especial 25 programas', 'Testimonio de Anatoli Karpov
El pequeño Fiedrich en GOD IS DEAD
Miss F*******: Mucha mierda
Los actores de provincias
Super Ñoño: Muevo los objetos con la mente
Retrospecter: Botellón de passport
Mundos paralelos
La vida de Michael Jackson
Platillo
El café
Sra Vera
El Payaso: Las personas que viven en los culos
Hever vs Clever
', 163, 6, 395941, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4634, 'Presentado por Nadia Comanecci y Marlo', 'Testimonio de Björk
Dr. Alce: despertares
Bocasecaman
Retrospecter: El Taller
Mundo Oculto
CUentaselo a Asun histórico: El emperador de Japón se entrevista con el almirante Perris
El Payaso: Guapamente te lo traigo Nianoniano
Hever vs Clever', 163, 7, 395942, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4635, 'Presentado por Björk, Michel Gondry y Vicentín', 'Testimonio: Karl Lagerfeld
Alerta naranja I
Super Ñoño: Puedo cambiar el estado de los objetos
Alerta Naranja II
Mis amigos
Retrospecter: El arte de la seducción
El Payaso: Payaso 5.0
Hever vs Clever', 163, 8, 395943, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4636, 'Presentado por Karl Lagerfeld y Marlo', 'Testimonio de Sara Montiel
Dr. Alce: viviendo la batmanía
Hay una luz al final del túnel: La máquina del tiempo
Retrospect: A los niños no hay que pegarles ni flojo ni fuerte
El show de Terry Bryant: Sobre los WC: una verdad universal
Felipe II
El Payaso: El payaso se hace artista
Hever vs Clever', 163, 9, 395944, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4637, 'Presentado por Sara Montiel y Tony', 'Testimonio de Bill Cosby
El Binguero
Super Ñoño: Pasando de Dios
Retrospect: Timadores
Cuéntaselo a Asun: Me va todo muy bien
Ponzo Ponzoña
Pat & Steve
Hever vs Clever', 163, 10, 395945, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4638, 'Presentado por Bill Cosby y Vicentín', 'Testimonio de Richard Clayderman
Super Ñoño: Control Mental
El Taxista
Retrospect: La Familia de Bette Deivir
Hay una luz al final del túnel: Abducción extraterrestre
El Show de Terry Bryant: Los secadores de manos
El Payaso: Bocasecaman vs El Gañán
Hever vs Clever', 163, 11, 395946, 436);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4639, 'Presentado por Richard Clayderman y La Música', 'Testimonio de Nana Moskouri
Super Ñoño: haciendo tonterías cuando se está solo
007: Muere hoy
Retrospect: Fraude en Miss España
Cuéntaselo a Asun: El cazador y el pájaro Dodo
Atentos al Babuino: Gente que musita
El Gañán: Obra del Gañán (Monologos con entrecejo)
Hever vs Clever
', 163, 1, 397441, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4640, 'Presentado por Nana Moskouri y Demis Russos', 'Testimonio de Vladimir Tkachenko
Dr. Alce: Minutos Musicales
El cantarín
El Relato
El cantarín II
Retrospect: Los Tacos
Marlo y Claudio
El Payaso: Vivo con tu Madre
Hever vs Clever
', 163, 2, 397442, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4641, 'Presentado por Vladimir Tkachenko y Mr. ******', 'Testimonio Barbara Streisand
Super Ñoño: Los inicios de Super Ñoño
El Bedel
Retrospect: El superdotado
Yo no soy Paco
El Gañán: Gañán 5.0
Hever vs Clever', 163, 3, 397443, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4642, 'Presentado por Barbara Streisand', 'Testimonio de Mike Tyson
Vicentín: Duelo de bailes
Gemelos
Retrospect: Gente que no es lo que aparenta
Soy Idiota
Gemelos II
Sr. Pussy: ¡Viva la Popoch!
El Gañán: Los consejos del Gañán (Cómo vestirse)
Hever vs Clever', 163, 4, 397444, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4643, 'Presentado por Mike Tyson', 'Testimonio de Tim Burton
Concurso de belleza de mascotas humanas
Retrospect: Robo a Boris Karlor
Concurso de belleza de mascotas humanas II
Biografías Acojonantes: Loco las Coles
Super Ñoño: Super Ñoño tiene novia y se llama Bocachoti
Concurso de belleza de mascotas humanas III
El Gañán: Como hablar en Gañán
Hever vs Clever
', 163, 5, 397445, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4644, 'Presentado por Tim Burton y Bitelchús', 'Testimonio de Mario Alberto Kempes
Super Ñoño: Lucecitas Blancas
El Forestal
Gemelos
A las víctimas del Jet-lag
Retrospect: Tangana en el tren
Gemelos II
El Gañán: Curso de Tollinas
Hever vs Clever', 163, 6, 397446, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4645, 'Presentado por Mario Alberto Kempes y Claudio Paul Canniggia', 'Testimonio de Hugh Heffner
Retrospect: El hermano de la novia
Papá, he visto un ovnir
Los consejos de Chimo Bayo
Cuéntaselo a Asun: Mi marido me irrita bastante
Vicentín: Siempre a tope 5.0
Hever vs Clever', 163, 7, 397447, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4646, 'Presentado por Hugh Hefner, Marlo, Claudio y las Playmates (Mandy, Sandy y Brande)', 'Testimonio de Agatha Ruiz de la Prada
Alejando Amenábar y José Luis Cuerda
Los consejos de Chimo Bayo: Iros pronto a Casa
Retrospect: La gente que pide favores
Bocaseca Man: Consejos para el verano
El cantarín
El último discurso de Hitler al culo de Eva Brown
El Hombrecillo de Pan
El cantarín II
El Gañán: La Berbena
Hever vs Clever', 163, 8, 397448, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4647, 'Presentado por Agatha Ruiz de la Prada y Michael Moore', 'Testimonio de David Copperfield
Marlo y Claudio: Cocinando con Marlo
Retrospect: Los Imbeciles, gente especial
Los consejos de Chimo Bayo: No fumeis porros
El juicio a Michael Jackson
Los consejos de Chimo Bayo II: Estudiad
El Gañán: Ligando con el Gañán
Hever vs Clever', 163, 9, 397449, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4648, 'Presentado por David Copperfield y Claudia Shiffer', 'Testimonio de Bill Gates
Super Ñoño: La humanidad está en peligro!
Retrospect: Los festivales de verano
La Pícara Valenciana: Las fiestas de Paco Muerte
Minitestimonios: José Luis Cuerda
Bizcoche y Ojos de Huever: Me saco la pita
El Payaso: La nueva religión del payaso
Hever vs Clever', 163, 10, 397450, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4649, null, null, 163, 11, 397451, 437);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4650, 'Presentado por Sarah Ferguson, La Duquesa de York y Su Majestad Isabel II', 'Testimonio de Nikki Lauda
Las aventuras de Guirli y Chorli: Amor entre robots
Los caprichos de Goya
Retrospect: El gambitero lo flipa
Payaso: Estoy fatal de lo mio
Romántico Fernández (un tío muy chungo)
Bizcoche y Ojos de Huever: el trampero
El Gañán: ¿Cómo utilizar un Gañán?
Hever vs Clever
', 163, 1, 397890, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4651, 'Presentado por Nikki Lauda y Vicentín', 'Testimonio de Jose Luís Moreno
El Show de Marlo
Testimonio de Jose Luís Moreno II
El Show de Marlo II
Super Ñoño: erección mañanera
Men in color
Retrospect: Joseppe Tangana le dice a la gente que se va a quedar calva
Testimonio de Jose Luís Moreno III
El Show de Marlo III
Minutos Musicales: Laura- Tu loca juventud
Testimonio de Jose Luís Moreno IV
El Gañán: Los Homosexuales
Hever vs Clever
Testimonio de Jose Luís Moreno V
', 163, 2, 397891, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4652, 'Presentado por José Luís Moreno, Macario, Rockefeller y Monchito', 'Testimonio de Madonna
24
Super Ñoño: Excuse-man
El Show de Marlo
Retrospect: Las viviendas
El Show de Marlo II
El Show de Marlo III
Se Busca Mazinger Z
Minutos Musicales: Matt Monro- Libre (Born Free)
El Gañán: Las apariciones marianas
Hever vs Clever', 163, 3, 397892, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4653, 'Presentado por Madonna 80''s 90''s y 2000', 'Testimonio de Hugo Chavez
Todo sobre Constantine Edwards
Bizcoche y Ojos de Huever: Brokeback Mountain
Retrospect: Mundo Viejuno
Minutos Musicales: Lolita Garrido- En tus ojos
Cuéntaselo a Asun: Hermanos Siameses
El Gañán: La hospitalidad
Hever vs Clever
', 163, 4, 397893, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4654, 'Presentado por Hugo Chavez y Marlo', 'Testimonio de María Jesús y su acordeón
Bizcoche y ojos de huever: Me pica el ojete
The Naturals
Retrospect: Políticos Viejunos
El escritor bilingüe
Cuéntaselo a Asun: Desde que no somos amigas me siento regular tirando a mal
Minutos Musicales: Billy Cafaro - Baby Rock
El Payaso: Vivía con tu madre
Hever vs Clever
', 163, 5, 397894, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4655, 'Presentado por María Jesús y su acordeón', 'Testimonio de Antonio López
Mensaje extraterrestre
Gremlins 3
Mensaje extraterrestre II
Retrospecter: El arte de el escaqueo
Corto de Aki Kaurismaki
El Payaso: No sin mi hijo
Hever vs Clever
', 163, 6, 397895, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4656, 'Presentado por Antonio López, Salvador Dalí, Picasso y Luis Buñuel', 'Testimonio de Rafaella Carrá
Los tiempos muertos de un superhéroe
Dr. Alce: La odisea de Dr.Alce y el Señor Cabeza
La Profecía V
Los tiempos muertos de un superhéroe II
Retrospecter: Bromicas
Minutos Musicales: Kuldip- La Primera Vez
Los tiempos muertos de un superhéroe III
El Gañán: Consejos para mantener la Paz
Hever vs Clever', 163, 7, 397896, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4657, 'Presentado por Rafaella Carrá', 'Testimonio de Lorenzo Lamas
Muertes Estúpidas
Los Amables consejo de el pequeño Dios del Maiz (I).
Retrospecter: Reuniones de vecinos
Los Amables consejo de el pequeño Dios del Maiz (II).
El interior de un gambitero
El Gañan: El Arte, ese mundo de sinvergüenzas.
Hever vs Clever
', 163, 8, 397897, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4658, 'Especial 50 programas presentado por Lorenzo Lamas', 'Testimonio de Yoko Ono
La leyenda de los Hombres-Castor
Dr Alce: Recordar
Prince ha muerto
Mis mejores invents
La papada de Angela Channing presenta Clásicos del cine, hoy: El carisma de una madre
Retrospecter: pardillo se va con los malos y luego lo paga
El Gañán en la mili
Hever vs Clever
', 163, 9, 397898, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4659, null, null, 163, 10, 6277599, 438);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4660, null, null, 163, 2, 4201062, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4661, null, null, 163, 3, 4201063, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4662, null, null, 163, 4, 4201064, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4663, null, null, 163, 5, 4201065, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4664, null, null, 163, 1, 4201066, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4665, null, null, 163, 6, 6277601, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4666, null, null, 163, 7, 6277602, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4667, null, null, 163, 8, 6277603, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4668, null, null, 163, 9, 6380612, 439);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4669, 'The Death of Marilyn Monroe', null, 164, 1, 395071, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4670, 'Project Underworld:the military and the Mafia', null, 164, 2, 395072, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4671, 'Navajo Code Talkers', null, 164, 3, 395073, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4672, 'The Wright Brothers Controversy', null, 164, 4, 395074, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4673, 'Prophecies', 'Civilizations seek their destinies through prophetic visions.', 164, 5, 395075, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4674, 'Hell''s Angels', null, 164, 6, 395076, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4675, 'Japan''s Mysterious Pyramids', 'Evidence supporting the belief that a highly advanced civilization flourished during the last Ice Age.', 164, 7, 395077, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4676, 'Ancient Aliens', 'Could early civilizations and ancient people really have seen flying saucers?  This documentary reveals how documents and drawings from thousands of years ago might shed some light on possible visits from other beings.
', 164, 8, 395078, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4677, 'Sodom & Gomorrah', 'Archaeologists find what may be the cities of Sodom and Gomorrah, then try to determine what happened to them.', 164, 9, 395079, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4678, 'Ghost Ships', 'Examines the legends and real life occurrences of so-called "ghost ships" found abandoned on the high seas with no crew on board and purported sightings of supernatural specters.

Includes the Flying Dutchman, the privateers Dash and Young Teazer, brig Mary Celeste, commercial schooner Carroll A. Deering, and MV Joyita.', 164, 10, 395080, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4679, 'Doomed Sisters of the Titanic', null, 164, 11, 395081, 440);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4680, 'Chain Gangs', null, 164, 1, 395082, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4681, 'The True Story of Gladiators', 'Some Roman gladiators become the sports stars of their day.', 164, 2, 395083, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4682, 'Cain and Abel: A Murder Mystery', null, 164, 3, 395084, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4683, 'Shark Attack 1916', null, 164, 4, 395085, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4684, 'America''s Stonehenge', null, 164, 5, 395086, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4685, 'The Holy Grail', null, 164, 6, 395087, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4686, 'The Civil War Draft Riots', null, 164, 7, 395088, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4687, 'Five Points Gangs', 'New York''s downtown slums; organized crime.', 164, 8, 395089, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4688, 'Catacombs of Rome', 'The Roman catacombs are a labyrinth of burial chambers and vaults.', 164, 9, 395090, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4689, 'Fatima Secrets Unveiled', null, 164, 10, 395091, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4690, 'The Essex: The True Story of Moby Dick', 'A sperm whale attacks an 1820 whaling ship and inspires Herman Melville''s "Moby Dick".', 164, 11, 395092, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4691, 'The True Story of the Untouchables', null, 164, 12, 395093, 441);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4692, 'Quantrill''s Raiders', null, 164, 1, 395094, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4693, 'Judas: Traitor or Friend?', null, 164, 2, 395095, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4694, 'Failed Assassinations', null, 164, 3, 395096, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4695, 'Buried Treasure', null, 164, 4, 395097, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4696, 'The Mysterious Howard Hughes', null, 164, 5, 395098, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4697, 'The Abominable Snowman', 'Yeti may be Bigfoot''s Eastern cousin.', 164, 6, 395099, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4698, 'U.S. Invaded!', null, 164, 7, 395100, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4699, 'The Shroud of Turin', null, 164, 8, 395316, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4700, 'Monsters of the Sea', 'Sea monsters may be figments of the imagination or living relics of prehistoric times.', 164, 9, 395317, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4701, 'Killer Submarine', null, 164, 10, 395318, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4702, 'The True Story of the Fighting Sullivans', null, 164, 11, 395319, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4703, 'The Search for Noah''s Ark', null, 164, 12, 395320, 442);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4704, 'Drake''s Secret Voyage', 'Sir Francis Drake sails around the world, but accounts of his feat are covered up.', 164, 1, 395321, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4705, 'The True Story of Mutiny on the Bounty', null, 164, 2, 395322, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4706, 'Alamo Scouts', null, 164, 3, 395323, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4707, 'The Mysteries of King Tut', null, 164, 4, 395324, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4708, 'Salem Witch Trials', 'Exploring the Salem Witch Trials, which took place in 17th-century Massachusetts. The hour looks at recorded accounts of accusation, imprisonment, trial and execution.', 164, 5, 395325, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4771, 'Duggan Brothers Cement Factory', 'The members have to visit and hear about the Curse of the Concrete Company and the Blood Moon, while participating in dares such inthe Boiler Room, Basement, Storage Room, Sunken Crusher/Rat Tunnel, Cricket/Elevator Room, the Scrubber, the Cement Catwalk, the Furnace/Kiln Tunnel, and the Suicide Ramp.', 165, 3, 395132, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4709, 'The True Story of the Philadelphia Experiment', 'The rumors have persisted for over fifty years. They have all the trappings of fiction, yet there are those who persist on believing that the U.S. Navy actually rendered a warship invisible and teleported it to and from the Philadelphia Naval Yards in a top-secret project. The True Story of the Philadelphia Experiment chronicles the origins and spread of this tallest of all sailor’s tall tales, revealing how research into anti-submarine technology likely provided the catalyst for the accounts and documenting stages in the story’s development in the pages of pulp fiction.', 164, 6, 395326, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4710, 'Secret Brotherhood of Freemasons', 'Tracing the ancient roots of the Freemasons, including the murderous legend that inspired their rituals.', 164, 7, 395327, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4711, 'Ancient City: Found and Lost', null, 164, 8, 395328, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4712, 'The FBI Celebrity Files', null, 164, 9, 395329, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4713, 'The Cavemen', 'Neanderthals may have coexisted with our predecessors.', 164, 10, 395330, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4714, 'Secret Plunder: GI Looters', null, 164, 11, 395331, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4715, 'Raise the Hunley', 'HL Hunley, a Confederate States warship, was the first combat submarine to sink a warship, which also resulted in her own sinking, on February 17, 1864.  

Hunley was raised in a salvage operation in 2000.', 164, 12, 395332, 443);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4716, 'Werewolves', 'Werewolf legends date back to ancient Greece and Rome.', 164, 1, 395333, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4717, 'Roman Roads: Paths to Empire', null, 164, 2, 395334, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4718, 'The End of the World', null, 164, 3, 395335, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4719, 'Where is Jimmy Hoffa?', null, 164, 4, 395336, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4720, 'The Bloody Tower of London', 'We''ll go inside the Tower of London, actually 20 towers, and see how this microcosm of nine centuries of history struck fear into the hearts Englishmen. Built by William the Conqueror in 1067 to subdue the turbulent citizenry of London, the Tower claimed the lives of many until the mid-18th century.', 164, 5, 395337, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4721, 'Ghost Plane of the Desert: Lady Be Good', null, 164, 6, 395338, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4722, 'Jack Ruby on Trial', null, 164, 7, 395339, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4723, 'Vigilantes', null, 164, 8, 395340, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4724, 'Area 51: Beyond Top Secret', null, 164, 9, 395341, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4725, 'The Occult and the Third Reich', null, 164, 10, 395342, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4726, 'Witchcraft', 'Psychological and social causes of the European and Salem witch trials.', 164, 11, 395343, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4727, 'Amityville: Horror or Hoax?', null, 164, 12, 395344, 444);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4728, 'Amityville: The Haunting', 'The Haunting. November 13, 1974. The idyllic Long Island town of Amityville sleeps peacefully. At about 3:15 a.m., using a high-powered hunting rifle, 23-year-old Ronald DeFeo Jr., systematically murders his entire family in their beds. Troubling questions surrounding the murders remain. 13 months later, the house''s new owners claim to be terrorized and driven out by evil spirits. What is the story behind the real incident that inspired one of the most popular horror books and films of our time?', 164, 1, 395345, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4729, 'Zombies', 'Voodoo priest; man who says he has discovered a zombie poison.', 164, 2, 395346, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4730, 'The Real Dracula', null, 164, 3, 395347, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4731, 'The Boy Who Gave Away the Bomb', null, 164, 4, 395348, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4732, 'Hitler''s perfect children', null, 164, 5, 395349, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4733, 'The Hitler Youth', null, 164, 6, 395350, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4734, 'The Real Robinson Crusoe', null, 164, 7, 395351, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4735, 'Tales of the FBI: Operation Solo', null, 164, 8, 395352, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4736, 'Natural Mummies', null, 164, 9, 395353, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4737, 'Cliff Mummies of the Andes', 'The Chachapoya of Peru place mummified corpses in impressive tombs.', 164, 10, 395354, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4738, 'Body Snatchers', null, 164, 11, 395355, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4739, 'The Onion Field With Joseph Wambaugh', null, 164, 12, 395356, 445);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4740, 'FBI''s Ten Most Wanted', null, 164, 1, 395357, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4741, 'Lost City of Atlantis', 'Diverse cultures have legends of an advanced civilization which disappeared under the sea.', 164, 2, 395358, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4742, 'Dr. Guillotin and His Execution Machine', null, 164, 3, 395359, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4743, 'Secrets of the Dinosaur Hunters', null, 164, 4, 395360, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4744, 'The Mafia at War', null, 164, 5, 395361, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4745, 'San Quentin', null, 164, 6, 395362, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4746, 'King Herod''s Lost City', null, 164, 7, 395363, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4747, 'Lost Colony of Roanoke', 'In 1590 the governor of Roanoke returns from England to find the colony devoid of people.', 164, 8, 395364, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4748, 'Secret UFO Files', null, 164, 9, 395365, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4749, 'Ship of Gold', null, 164, 10, 395366, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4750, 'The Legacy of Al Capone', null, 164, 11, 395367, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4751, 'Infamous Murders: Horror on the Highways', null, 164, 12, 395368, 446);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4752, 'Infamous Murders: Mass Murders', null, 164, 1, 395369, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4753, 'Vanished!', null, 164, 2, 395370, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4754, 'A Question of Conspiracy: The RFK Murder', null, 164, 3, 395371, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4755, 'Infamous Murders: Trapped by Forensics', null, 164, 4, 395372, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4756, 'Infamous Murders: Intent on Murder', null, 164, 5, 395373, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4757, 'Infamous Murders: Streets of Fear', null, 164, 6, 395374, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4758, 'Mysteries of Easter Island', null, 164, 7, 395375, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4759, 'Infamous Murders: The Cannibals', null, 164, 8, 395376, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4760, 'Outlaws: The Ten Most Wanted', null, 164, 9, 395377, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4761, 'Infamous Murders: Stalking the Innocent', null, 164, 10, 395378, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4762, 'Organized Crime: A World History: Sicily', null, 164, 11, 395379, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4763, 'Alcatraz', null, 164, 12, 395380, 447);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4764, 'Sex in the Real West', null, 164, 1, 395381, 448);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4765, 'The War Illusionist', 'A British magician fools Hitler''s generals and pilots.', 164, 2, 395382, 448);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4766, 'Alaska''s Bermuda Triangle', 'The 1972 incident that sparked suspicion about Alaska when a plane carrying two U.S. congressmen vanished between Anchorage and Juneau.', 164, 3, 395383, 448);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4767, 'Infamous Murders: Killing for Thrills', null, 164, 4, 395384, 448);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4768, 'The Enduring Mystery of Stonehenge', null, 164, 5, 395385, 448);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4769, 'West Virginia State Penitentiary', 'a small number of young adults spending the night in the penitentiary, attempting to document any paranormal activities. The West Virginia State Penitentiary''s design is similar to the facility at Joliet with its castellated Gothic, stone structure, complete with turrets and battlements, except only half the size.[1][2] Unfortunately, the original architectural designs have been lost.', 165, 1, 395130, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4770, 'St. Agnes Hospital', 'The location and real name of St. Agnes Hospital were closely guarded secrets to keep away curiosity seekers. Once the show aired though, word quickly got out. The fate of the real "St. Agnes" is being decided. Will it be a golf course? An amusement park? An office complex? Time will tell.The Real Location was released after season 1 came out it is Fairfield State Hospital, CT ', 165, 2, 395131, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4773, 'Camp Spirit Lake', 'The teams visit Camp Panther Lake and compete in dares at the Hopi Cabin, Lakota Ruins, Psychomanthium, Chopping block, Hollow Site, Pawnee Cabin, Lakeside Burial Ground, and the Pet Cemetery.', 165, 5, 395134, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4774, 'Buck Hill Inn', 'The teams visit the Buck Hill Inn, a place possessed by evil with a long history of violence, murders, suicides and multiple reports of ghost sightings and strange noises. The teams compete in dares at the East Room/The Lamp Room, Main Lobby/Corridor Of Arches, Kitchen, Room 354, Basement Men''s Washroom, Washroom Junction, Staff Quarters 3rd Floor, and the Basement Office.
', 165, 6, 395135, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4775, 'Eastern State Penitentiary', 'A new batch of contestants face their worst fears in the abandoned Eastern State Penitentiary, one of the most haunted places in the US. How many of them will make it through the dares and collect their prize money, and how many will run from the prison in terror?', 165, 7, 395136, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4776, 'USS Hornet', 'The teams visit the USS Hornet, a 41,000-ton aircraft carrier and compete in dares in the Officer''s Berth, Catapult Room, The Brig, Central Intelligence Center Deck, and the Engine Room.', 165, 8, 395137, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4777, 'Fort Gaines', 'Welcome to Fort Gaines on Massacre Island. This weeks dares take place in the West Bastion Cistern, Quarter Master''s Room, Ammunition Room, Infirmary, The Collapsed Bastian Tunnel, and the POW Cell.', 165, 9, 395138, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4778, 'La Guerre Plantation', 'Welcome to Fort Gaines on Massacre Island. This weeks dares take place in the West Bastion Cistern, Quarter Master''s Room, Ammunition Room, Infirmary, The Collapsed Bastian Tunnel, and the POW Cell.', 165, 10, 395139, 449);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4779, 'Inside Fear', 'A behind-the-scenes look at Fear, MTV''s hottest new foray into reality programming. "Inside Fear" includes never before seen footage and cast interviews with 6 contestants trying to survive a weekend of terror at "Haunted" locations.
', 165, 1, 406827, 450);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4780, 'The Faces of Fear', 'A compilation of clips from the series.', 165, 2, 4153451, 450);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4781, 'St. Agnes Hospital: Uncut & Uncensored! ', 'Uncut and uncensored for media review. Never broadcast.', 165, 3, 4153455, 450);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4782, 'The Other Side of Fear', 'A behind the scenes look at MTV''s Fear.
', 165, 4, 5326192, 450);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4783, 'Mina Dos Estrellas Part One', 'Welcome to the Mina Dos Estrellas Mine, built in 1903 by European gold diggers. This mine soon fell pray to the wrath of the legendary creature called Nahual.', 165, 1, 1074121, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4784, 'Mina Dos Estrellas Part Two', 'A new group of contestants return to the Mina Dos Estrellas Mine, built in 1903 by European gold diggers, and said to have fallen prey to the wrath of the Nahual. The Nahual are creatures from Mesomerican legend, either witches or spirits that can change shape, taking on the forms of animals. Will any of the contestants make it through to the end, or will they all be driven away by their fears, as were the last group who attempted to stay there?', 165, 2, 1074131, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4785, 'Hacienda Tabi', 'A new group of people take the challenge to face their worst fears. Their location is the Haceinda Tabi, a former colonial outpost in the Yucatan. Clashes between the Spanish conquistadors and the Mayan people often ended in blood, and in time the once vibrant Mayan culture was lost, its people little better than slaves to their Christian overlords. But perhaps their spirits live on within these crumbling walls. And by the end of the night, each of the people visitng the location will know their answer to this question, "Is the Hacienda Tabi haunted?"
', 165, 3, 1074141, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4786, 'Ki Sugar Mill', 'Seven people will face their greatest fears at the haunted Ki Sugar Mill. First built in 1876, this South Pacific sugar mill was plagued by strange deaths and terrible accidents, making it one of the most paranormally active sites in the world. Will the seven contestants make it to the end, or will some fall out, their fear greater than their will to see it through?
', 165, 4, 1074151, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4787, 'Serenity Lake Sanatorium', 'Six people agree to confront their worst nightmares and spend the night in a haunted hospital. They''re sent to Canada''s Serenity Lake Sanatorium, a former TB clinic, where thousands of patients, and even staff members lost their lives to the disease.
', 165, 5, 1074161, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4788, 'Boettger Brewery', 'Four complete strangers investigate the haunted former Boettger Brewery and the owner''s mansion which is connected to it. Those who complete their dares and remain in the location until released will win a cash prize, while those who succumb to terror leave with nothing except a better understanding of where their breaking point is.', 165, 6, 1074171, 451);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4789, 'Episode 1', null, 166, 1, 2216131, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4790, 'Episode 2', null, 166, 2, 2216141, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4791, 'Episode 3', null, 166, 3, 2216151, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4792, null, null, 166, 4, 3121981, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4793, null, null, 166, 5, 3122001, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4794, null, null, 166, 6, 3122021, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4795, null, null, 166, 7, 3122031, 452);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4796, null, null, 166, 10, 3121361, 453);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4797, null, null, 166, 1, 3121371, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4798, null, null, 166, 2, 3121381, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4799, null, null, 166, 3, 3121391, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4800, null, null, 166, 4, 3121401, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4801, null, null, 166, 5, 3121411, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4802, null, null, 166, 6, 3121421, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4803, null, null, 166, 7, 3121431, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4804, null, null, 166, 8, 3121441, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4805, null, null, 166, 9, 3121451, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4806, null, null, 166, 10, 3121461, 454);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4807, null, null, 166, 1, 3121601, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4808, null, null, 166, 2, 3121711, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4809, null, null, 166, 3, 3121721, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4810, null, null, 166, 4, 3121741, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4811, null, null, 166, 5, 3121761, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4812, null, null, 166, 6, 3121781, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4813, null, null, 166, 7, 3121801, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4814, null, null, 166, 8, 3121811, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4815, null, null, 166, 9, 3121831, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4816, null, null, 166, 10, 3121841, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4817, null, null, 166, 11, 3121871, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4818, null, null, 166, 12, 3121881, 455);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4819, 'Jackie Kennedy''s Bloodstained Dress', null, 167, 1, 395145, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4820, 'Iwo Jima Flags', null, 167, 4, 395146, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4821, 'Saigon Staircase', null, 167, 6, 396362, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4822, 'Nixon''s Taping System', null, 167, 7, 396363, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4823, 'Benjamin Franklin''s Armonica', null, 167, 14, 396364, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4824, 'Air Force One #26000', null, 167, 16, 396365, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4825, 'William Shakespeare''s Will', null, 167, 20, 396366, 456);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4826, 'Louie Armstrong''s Private Recordings', null, 167, 1, 395147, 457);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4827, 'Atlantis Found', null, 167, 2, 5377897, 457);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4847, 'Forest Gravestone', 'Arietta challenges Anise to a battle because she blames Anise for Ion''s death. In a flashback, Arietta''s first meeting with Ion is shown, as well as their time together. She never knew that the real Ion had died, so she believed the replica was the same person. Anise agrees to the fight and they meet in the Cheagle woods. While Luke and the others fight Arietta''s animal friends, Anise and Arietta battle. In the end, Anise wins, killing Arietta. Largo, who was acting as referee, carries Arietta''s body away and swears to avenge her death. ', 168, 20, 431027, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4828, 'World of the Score', 'Luke fon Fabre is enduring another boring day "trapped inside the mansion" of Baticul when his father calls him to the dining table. Luke''s mentor and teacher, Van is going to Daath to search for the missing Fon Master Ion. Before Van leaves, he gives Luke another training session. It is interrupted by a woman who uses fonic hymns to put the guards to sleep before confronting, then attacking Van. Luke jumps between them to stop her, but a hyperresonance occurs and they are transported to the Tataroo Valley, located on far east side of Kimlasca territory. The woman introduces herself as Tear Grants. After a battle with some monsters, they find someone willing to transport them to the capital in exchange for a treasured gem of Tear''s. During their trip, they see a large vehicle attacking a fleeing smaller one. ', 168, 1, 395225, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4829, 'Sacred Beast Woods', 'Luke and Tear find out that they are in Malkuth. They go to Engeve, and Luke is blamed for the recent food robberies. After being taken to the mayor, Rose, they meet Ion, the Fon Master of the Order of Lorelei who is supposed to be missing and Anise. Luke and Tear go to the Cheagle Woods to confront the cheagles. They meet Ion again at the entrance, and he accompanies them. When confronting the cheagles, they learn that a cheagle accidentally set fire to the ligers'' home. Now they must steal food to feed the ligers so they are not eaten. Fon Master Ion, Luke, and Tear decide to talk to the Liger Queen. Mieu, the cheagle who set fire to the liger''s home, goes with them and acts as a translator. After defeating them with help from Jade, a Colonel in the Malkuth military, Mieu is exiled from the Cheagle Woods and must serve Luke for a full cycle of the seasons. Luke and Tear are then arrested by the Malkuth military.', 168, 2, 395226, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4830, 'Oracle Knights Attack', 'Luke reveals himself to be the son of the duke of Kimlasca and is then asked to deliver a peace treaty to the king of Kimlasca. On their way to Kimlasca however, the Tartarus is attacked by a large number of Griffins and Ligers. They were attacked by Largo the Black Lion and Jade ends up getting hit by a fon slot seal. Anise were to take Fon Master Ion and escape, while Jade manage to defeat Largo after getting hit by the fon slot seal. Ion and Anise were to flee but Ion was captured by the Oracle knights and Anise was seen thrown off the Tartarus. Luke, Tear and Jade are then locked up in the ambush on the bridge but they were able to shut down the Tartarus. Their next move is to retrieve the Ion, which was successful due to the appearance of Guy, a servant in Fabre''s manor. Guy''s phobia is first shown here. The party is attacked by Oracle Knights and Luke refuses to kill any soldiers which result in wounding Tear, who was trying to protect him. ', 168, 3, 400715, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4831, 'Hidden Truth', 'Tear awakens after the attack, and heals herself. The party learns that Anise has already moved to the second location which is Kaitzur. Luke learns that Van is also at Kaitzur and is determined to head there immediately. The party meets up with Anise who is seen trying to enter Kaitzur but it seems she had lost her passport. Van enters and Tear readies her weapon causing a scene. Ion explains what happen so far to Van, Tear seems untrusting of her brother. It is revealed that Tear is assigned my Mohs to look for the Seventh Fonstone. Arietta kidnaps the engineer at the Kaitzur Port and tells everyone to bring Luke and Ion to Coral Castle. Two young men beg the Fon Master to rescue the engineer, who then agrees. Guy had another reaction when Anise hug him from behind, while entering the Castle. Luke is then kidnapped not long after that, and everybody was attacked by Arietta the Wild and her monster friends, in which the party finds out that the Liger Queen they had killed was her mother. Dist and Sync did something to Luke while everybody takes on Arietta and Guy manages to go find Luke first. Guy then attacks Sync, who fled the scene right after, and gives a fon disc dropped by Sync to Jade, who appeared shocked looking at the Fon machinery Luke was found in. The party then departs Kaitzur and headed to Baticul.', 168, 4, 400716, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4832, 'Chosen Hero', 'Jade discuss with everybody what on the Fon Disc. He explains that the Fon Disc contains information about Lorelei, the aggregate sentience of the Seventh Fonon who''s existance is hypothetical. Luke still do not comphrehend the information given in which Tear learns that Luke had to recall everything he had lost such as remembering his parent''s faces and words. The ship was then attacked by an unknown fontech signiture, and the party rushes outside to see the problem. Only to be greeted by Dist the Reaper, one of the God-Generals, in which Jade calls him Dist the "Runny". Dist demands the return of the Fon Disc that was taken from Choral Castle. He successfully snatch the disc from Jade only to find out that Jade has already memorized the contents within the disc, enraging him even further. Kaizer Dist R was summoned and was soon damaged by Splash casted by Jade. Van shows up and destroys the Fontech along with Dist, who was seen falling in the ocean. Jade commented on the fact that Dist has the tenacity of a cockroach. Luke releases hyperresonace later in the evening, scaring him. Van tells him to calm down and tells him that the reason why he was holed up in his manor because the King wanted to use him as a weapon of Kimlasca. The party enters Baticul and was greeted by Commander Goldberg and Brigadier General Cecille. They are taken to the castle of Baticul where they interrupt a meeting between the King and Grand Maestro Mohs. The letter from Emperor Peony the Ninth was delivered and King Ingobert considers the letter. The party heads to the manor where Luke lives only to be greeted by Princess Natalia, his fiancee. He finds out that his mother had fallen ill and visits her along with Tear who apologizes for being the cause of Luke''s disapearance. Luke is asked to be the good-willed ambasador of Kimlasca and head to Akzeriuth, since Malkuth asks for the aid of Kimlasca along with the peace treaty. Luke accepts the offer. Kimlasca sends Guy, the Order of Lorelei sends Tear and Van, and Jade is to accompany them as well. Van talks to Luke later in the afternoon and tells Luke that he will cause war if he were to move people out of Akzeriuth. Luke then learns that it was Van, not Malkuth, kidnapped Luke in the past now he asks Luke to run away with him to Daath. Natalia is seen eavsdropping on the two of them.', 168, 5, 401855, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4833, 'Desert Rain', 'The Dark Wings capture Fon Master Ion and brought him before Asch the Bloody, who bears a striking resemblance to Luke. Meanwhile, Luke and the others make preparations to leave for Akzeriuth. Van embarks on a decoy ship while Luke and the others make their way to Chesedonia by land. Learning that the God-Generals are guarding the exit to the city, Luke and the others made their way through an underground passage, where Princess Natalia joins them on their quest. Asch brings Ion to the other God-Generals aboard the Tartarus, where Luke and the others confront Asch. Luke is shocked by the fact that Asch looks exactly like him; Asch and the God-Generals make their escape. Using a telepathic link which Asch tells Luke he should understand, Asch instructs Luke and the others to follow them to the Zao ruins. ', 168, 6, 402963, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4834, 'Isolation', 'Luke and the others arrive at the Zao Ruins. Asch uses Ion to open the Daathic Seal deep within the ruins, but Luke and the others arrive before they can proceed in. Sync and Largo appear to prevent Luke and the others from interfering, and engages in battle with the party. Asch joins in the fray, engaging Luke in one-on-one sword fight; however, their moves mirror''s each other. When a final clash of their blades generates a hyperresonance that threatens to collapse the ruins, everyone flees the ruins. Later, as Luke and the others prepare to board their ship, Guy falls to the ground, clutching a strange glyph on his arm, which Ion reveals to be a curse slot placed on him by Sync. As Luke and the others proceed further on their way, they are confronted by Legretta, who scorns them for following the Score without question before leaving. As the rest of the group walks onward, Luke has a childish outburst, and Tear coldly tells him to think for himself, warning him that if he does not, he will make a mistake he will later regret. ', 168, 7, 402964, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4873, 'Episode 8', null, 169, 8, 779011, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4874, 'Episode 9', null, 169, 9, 779021, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4835, 'Collapse', 'Luke and the others arrive at Akzeriuth after hearing the score about Luke''s destiny. Everyone except Luke did what they can to neutralize the miasma around the area. Going into tunnel 14, Luke and Ion encounters Van who leads them to a Sephiroth. At that time, Van tells Luke to release a hyperreasonance with the words "Foolish Replica Luke". Luke opens all of his fon slots, causing the destruction of the passage rings and Akzeriuth. Tear informs Jade that Van is trying to destroy Akzeriuth and Asch arrives at the scene too late. Tear accuses Van that he betrayed them all and Van addressing Tear as Mystearica, telling her about the folly of the world and to use the fonic hymns. Tear saves Luke and the others, but failed to protect Akzeriuth, and they fall to the Qlipoth. They went into the Tartarus, which is operational enough to go through the mud and miasma. Tear then informs the group about the world they live in is called the Shell world. However, the Sephiroth that supports Akzeriuth was destroyed by Luke, who says it''s not his fault. Everyone leaves Luke except for Mieu, who understands his pain. They arrive at Yulia City and Luke refuses to go inside the Mayor''s office and is confronted by Asch, who fought Luke and won. ', 168, 8, 402965, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4836, 'The Usurped One', 'Luke awakens to find himself in Asch''s body, he then learns that perfect isofons can communicate with each other in which his fon slots were opened at Choral Castle. Asch enters the meeting room in which everybody agrees to assist him except Tear, who will stay in Yulia City. The Tartarus returns to the Outer Lands via the memory particles that cause the Sephiroth to appear where Akzeriuth had once been. The party head to Belkend where Van visits often to gather information. They enter an office where they learn that the traitor to Kimlasca, Spinoza, is still working in Belkend. Jade is then revealed to be Dr Balfour the father of fomicry. Spinoza escapes but not before mentioning Van''s preservation project and leaving information leading to Ortion Cave. Guy leaves the party for Luke at Aramis Spring. Asch dreams of his past seven years ago when he was kidnapped and when Luke was born. Reaching the end of the cavern, they find out that fonimin that is mined out of the cavern covers at least a tenth of Auldrant. Data of the residents of Hod, which should have been removed by the Malkuth military, is also found. An earthquake happens and Asch tells the party that the earthquake was caused by the falling of the Runica Plains. Luke is sent back to his own body and confronts Tear about the destruction of Akeriuth. He plans to change and as proof of that he cuts his hair.', 168, 9, 402966, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4837, 'Return of Atonement', 'Luke awakens to find himself in Asch''s body; he learned that perfect isofons can communicate with each other in which his fon slots were opened at Choral Castle. Asch enters the meeting room in which everybody agrees to assist him except Tear, who will stay in Yulia City. The Tartarus returns to the Outer Lands via the memory particles that caused the Sephiroth to appear where Akzeriuth had once been. The party head to Belkend where Van visits often to gather information. They went in an office where they learned that the traitor to Kimlasca, Spinoza, is still working in Belkend. Jade is then revealed to be Dr Balfour, the Father of Fomicry. Spinoza escapes but not before mentioning Van''s preservation project and left an information leading to Ortion Cave. Guy leaves the party for Luke at Aramis Spring. Asch dreams of his past seven years ago when he was kidnapped and when Luke was born. Reaching the end of the cavern, they found out that fonimin that is mined out of the cavern covers at least a tenth of Auldrant. Data of the residents of Hod, which should have been removed by the Malkuth military, is also found. An earthquake happens and Asch tells the party that the earthquake was caused by the falling of the Runica Plains. Luke is sent back to his own body and confronts Tear about the destruction of Akeriuth. He plans to change and as proof of that he cuts his hair. ', 168, 10, 402967, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4838, 'City of Falling Snow', 'The Tartarus has a partial engine failure and must stop in a nearby port, Keterburg Bay, for repairs. Upon arriving in town, it is revealed that Jade, Dist, and Emperor Peony of Malkuth were all raised in this same city. Jade meets with his sister, Nephry, the governor of the city, and made arrangements for the ship to be repaired. While they are stranded in the city, Jade speaks of his past to Luke and reveals that he and Dist, formerly called Saphir, had experimented with replication and fonic artes. One day, Jade unleashed a fonic arte that he was unable to control; which, resulted in the death of his instructor, Professor Nebilim. This sparked his research into fomicry, as he attempted to create a replica of Nebilim, but was unsuccessful. He was then adopted into a military family and through his military career gathered data from corpses on the battlefield to fuel his research, earning him the title of "the Necromancer." The ship is soon repaired, and Luke and the others set sail for Grand Chokmah. ', 168, 11, 402968, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4839, 'Water Metropolis', 'Luke and the others arrive in Grand Chokmah, where they are denied entry due to a security lock down. Jade, as a colonel of the Malkuth military, is allowed entrance, and the others are forced to wait outside where they are attacked by Largo. Guy''s curse slot is then activated by Sync causing him to attack Luke. The Malkuth military intervenes; hence, prompting Largo and Sync to retreat. Ion reveals that the curse slot can only work if the person possessed a strong desire to kill their target, which makes Luke wonder how he had wronged Guy in the past. He asks Guy about this, and Guy reveals that he was initially from the Island of Hod, and Luke''s father led the attack which destroyed the city. Luke and the others then meet with Emperor Peony, and Kimlasca officially declares war upon Malkuth. Desperate to stop the war, Luke and the others volunteer to go to St. Binah and rescue the citizens before the city sinks into the Qliphoth. Although Luke and the others manage to rescue the majority of the citizens, many are still on a portion of the land as it begins to sink. As Luke bemoans his inability to save them, an airship arrives to assist in the rescue. ', 168, 12, 402969, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4840, 'Outbreak of War', 'Returning from their rescue mission, the group sees that war has broken out between Malkuth and Kimlasca. Wanting to halt the war, they split into two groups to approach the rulers of the two kingdoms, with Jade, Anise and Ion going to seem Emperor Peony in Malkuth. Luke, Natalia, Tear, Guy, and Mieu go to Kimlasca, but when they arrive at Baticul, Grand Maestro Mohs declares that Natalia is not the true princess. The real daughter of the king and queen died in childbirth, but to avoid grieving the queen, her attendant replaced the dead baby with her daughter''s recently born child, Merle. Denouncing Natalia as a traitor to the kingdom for being a false princess and Luke for his role in the destruction of Akzeriuth, the group is lead away, with Guy and Tear put in the dungeon and Natalia and Luke put in a private room. They are brought poison to drink to end their shame in a "dignified" fashion, but Luke destroys the glasses. Ashe frees Tear and Guy who rescue Luke and Natalia from the room.', 168, 13, 402970, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4875, 'Episode 10', null, 169, 10, 779051, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4876, 'Episode 11', null, 169, 11, 779061, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4877, 'Triple Crown Cake', '21 cakes in a week? Sounds like a lot, but for Duff Goldman and his crew, it''s just a normal week at Charm City Cakes. With cakes shaped like Jeeps, game consoles, fish and a special cake for the Preakness Horse Race; this is no easy task - can Duff and his crew pull it off in time?', 170, 1, 395256, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4841, 'Closed Past', 'Natalia, Luke, Tear, and Guy flee Baticul and reunite with Jade and the others. They travel to Belken to try to find a way stop the fallen lands from sinking into the Qliphoth. There, they learn that the liquefaction is being caused by vibrations from Auldrant''s core, caused by the use of the "Planet Storm" energy distribution system. As the system cannot be shut down without rendering fonic arts and fon machines useless, they find a text that describes away to stop the vibrations. While in Belken, Guy meets with Van, revealing that Guy was once Van''s master. He asks Van to stop with his plan, but Van refuses and Guy dismisses him as his servant. Leaving the Belken researchers to work on the machine, they take a measuring device and travel to the cathedral in Daath to find another a standing Sephiroth tree that they can go to measure. They meet Anise''s mother, but are attacked by Arietta and her two ligers. During the battle, Ion runs over to protect a child from one of the liger''s blasts, but Anise''s mother takes the blast instead to protect him. She''s only mildly wounded, but the battle causes Guy to remember his families death, revealing the reason behind his fear of women: he was protected from the attacking soldiers by his dying sister and maids covering his body with their own. Ion reads the closed scored, revealing that the replica Luke was not part of the original score, and that they can find a tree in Tataroo Valley. As they travel to the core, Anise chases a rare butterfly and nearly falls off a cliff, but Guy saves her only realizing after that he had touched a female. When the group reaches the Sephiroth tree, they find the passage ring has stopped. Tear walks around the path circling the tree and it suddenly restarts. As Guy gets the measurements, Luke checks on Tear who is on kneeling on the ground seemingly in pain.', 168, 14, 402971, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4842, 'Their Decisions', 'The group returns to Belken with the measurements. Class I''s Iemon and his partner Aston have arrived. They reveal that from the measurements it seems Sephiroth trees have all weakened and all of the land will fall into the Qliphoth. Jade asks the researches to build a device to stop the vibrations, and says they will use the Tartarus to drop it into the core. Then the lands can safely descend into the miasma without danger. The group goes to rest at the Inn, but Luke questions whether they should be making the decision on their own as it will drastically change the world. He feels they should speak with his Uncle and Emperor Peony first. Natalia is scared to return to Baticul and goes off alone to think, so the others go on to the inn to wait until she has time to think. That night, Luke sees her go out alone. He follows her to the coast where Asch surprises her. He overhears them talking, as Asch reminds her it isn''t like her to be afraid and that the citizens are her allies. He repeats the promise they made long ago, that when they grow up, they would work together to change the country forever. As Luke leaves, Tear spots him. He expresses regret over being born and tearing them apart, but Tear comforts him and remind him that without his being born, Asch would have died in Azkeriuth and that he has his own life to live. In the morning, Natalia rejoins the others and they go to Baticul where Ion requests audience with Inogbert and threatens that Daath will not longer read Kimlasca''s score if Natalia is barred from entering. Luke reminds his uncle that their seventeen years as a family is evidence that Natalia is his daughter, regardless of her birth. Natalia begs him to stop the war as does Ion. Mohs tries to interfer, but Ion orders him to be quiet and the others also speak up on Natalia''s behave. Finally Natalia''s words reach Ingobert and he agrees to the peace treaty with Malkuth and the plan to lower the lands. Mohs and his advisor try to change his mind, but he orders them not to disrespect his daughter, then thanks Natalia for reminding him of his own love for his country. Embracing the crying Natalia, he reclaims her as his daughter. Emperor Peony also agrees to reconsider the peace treaty. At Luke''s suggestion, the peace treaties are signed in Yulia City. Guy interrupts and puts his sword to the Emperor, asking if will keep his word now when he did not keep his word regarding Hod. There he learns that Kimlasca did not destroy Hod, but Malkuth did as it was being used for fonic experiments. Van, a test subject at the time, created a hyperresonence destroying the city at the age of 11. Maluth said it was Kimlasca to avoid revealing their research. Guy sheaths his sword. Later, Luke asks Guy if he truly doesn''t want revenge and Guy promises all he wanted was the truth, not revenge. The treaty is finalized and the group leaves Yulia City to begin the operation to stop the vibrations.', 168, 15, 402972, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4843, 'The Core Entry Operation', 'The device to neutralize the core vibration installed on the Tartarus, and the Albiore is loaded onto the ship as well so the group will be able to escape the core before being crushed by the pressure. As they prepare to leave, Major Legretta arrives and the Oracle Knights have taken over the port. The builders help them escape; Iemon and Tamara are killed by Legretta for their actions. At the port, the rest of the builders put the Oracle Knights to sleep to save the Tartarus. Van arrives, with Spinoza who was the one who told them about the plan. Van reveals that he knows humanity will die and that it was his plan all along, as he feels they are nothing but puppets living by the store. He will clear the entire world and recreate it all from "nothingness" using replicas. Jade and Tear argue that its impossible as replicas can''t be maintained for long and that there are not enough Seventh Fonons, but Van says destroying Lorelei will fix that problem. Legretta and the rest arrive. The group runs away as Aston, Cathy, and Henken, the remaining builders, throw themselves in front of Van and are killed. On the Tartarus, the others mourn the deaths of the builders. Luke is angry that Tear says it isn''t the time to cry, but Guy assures him she wants to cry too. After the group enters the core, they set up the device. As the flee to the Albiore, they are confronted by Sych, who used the distraction provided by Van and Legretta to get on board. During the battle, Luke, determined not to die, shatters his mask, revealing that he looks just like Ion. The group is shocked to that both Synch and Ion are replicas. Ion is the seventh replica of the original Fon Master Ion having been created two years ago. The original Ion was sick and dying, so Van and Mohs made replicas. The ones with the closest abilities were kept, while ones like Sync were considered trash and thrown away to be used by Van. Ion tries to convince him that his life has more meaning than that, but Sync, saying his usefulness is now at an end, throws himself from the ship and into the core. Ion cries soundlessly and without realizing he is. Ion says its the first time he has ever cried or felt sadness. As the group again heads to the Albiore before time runs out, Luke is beseiged by a voice again and collapses in pain. Tear tries to heal him, and the voice, calling her a descendent of Yulia, borrows her body. It reveals that it is Lorelei and that that Luke is one of his perfect isofons. He tells him that something is draining his power and that he is trapped, requesting Lukes help. Tear collapses and the voice fades. The group escapes from the core in the Albiore just in time, but Tear remains unconcious and Natalia''s healing powers have no affect. They take her Belkend for treatment. The doctor says her body has absorbed seventh fonons contaminated by the miasma, with Jade deducts happens each time Tear interacted with the Passage Rings during the actions to lower the lands. The doctor warns if she continues doing so, she''ll die.', 168, 16, 402973, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4844, 'Overture to Collapse', 'The group reluctantly agrees that they must take Tear with them to lower the lands, as she is the only one who can activate the passage rings. Spinoza approaches them, expressing his regret that his desire to do his own research resulted in the deaths of his friends. Anise doesn''t want to believe him and doesn''t understand why Luke and the others agree to trust him. Jade asks Spinoza to help them with the mission. Luke visits Tear and she acts like she is fine with dying. He yells at her for not being honest, then refuses to leave as she begins shaking only agreeing to turn around so he doesn''t "see" her. In the morning the group goes to the Meggiora Highlands, where Tear activates the passage ring and nearly collapses again. She insists on continuing and they go on to the desert ruins where she faints after activating its passage ring. By the end of the day, they have only one Sephiroth left to activate and Spinoza has confirmed that they can seal the miasma. At camp that night, they realize Van must have somehow found and read the Seventh Fonstone. Guy remembers Van taking him to a "secret place" in Hod as a child and realizes now that it contains something that may be the fonstone. That night, Van approaches Tear and asks her to stop activating the passage rings, revealing that his body is also being affected. He again asks her to join him, but reflecting on her friends, she refuses. Asch interrupts and attacks Van. The others arrive just as Asch is badly wounded by Van. Van asks why he wants to save a world that left him despair. While he hates the world and wants the score destroyed, Asch says he has something precious he wants to protect, which Natalia realizes is her. Van tells him still needs him, not Luke, then turns again to Tear. Tear tells him to kill her and make a replica, since all he wants is a world of them. Van retreats and tells Asch to meet him at the Absorption Gate. Asch runs after him, refusing to allow Natalia to heal his wound. At the camp, Tear resolves to fight her brother to the end. In the morning, they go to Mount Roneal where the last passage ring is located, traveling through Keterberg as they can''t land the Albiore in the avalance ridden area. While in Keterberg, they find Dist throwing a tantrum about being left behind. Jade turns him over to the military police after taking him into a alley and making him talk through unknown means. As the group continues, Ion and Luke discuss being replicas and Ion admits that he once felt like Sync, that he was nothing but a replacement that could die without regard. Luke isn''t sure what he wants, but Ion tells him he will discover the answer after he is free from Van. Legretta, Arietta, and Largo attack. Realizing they are running out of time, Jade uses his fonic arts to cause an avalanche. The group gathers around Tear who creates a shield to protect them, while the soldiers and the God-Generals are pushed off a cliff. Afterwards they find themselves at the door to the passage ring. After the last ring is activated, something goes wrong and Jade realizes that the ring held a trap to cause the ring''s activation to reverse the particle flow and accelerate the land collapse.', 168, 17, 402974, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4845, 'Absorption Gate', 'The group rest for the night in Keterberg as a snow storm has the Albiore grounded. Luke apologizes to Natalia for not knowing the words of Asch''s promise to her. Natalia asks him to make the promise now, which he does. Afterwards she promises not to doubt him or who he is anymore, her dear childhood friend. Luke hestitates to go to Tears room, unsure of what to say to her, and instead talks with Guy about their conflicting feelings about having to fight Van. In the morning, Luke feels something calling him and goes out to find Asch. Luke asks him to join them, but he refuses due to his inury and makes Luke promise to kill Van. At the Absorption Gate, and earthquake breaks the path under their feet. Luke and Tear fall, waking up on a lower level. As they search for the others, Tear tells Luke about Van''s raising of her and his being used to destroy Hod. When they reach the ring, they find Van playing an organ and confront him. Van demands to know why Luke is there instead of Asch, and Luke asks why he was made. Van tells him he was born to be a dispoable pawn to mess up the score, but it didn''t work and the he says the score is continuing on to its major events despite the disruption. As Van refuses to listen to them, Luke and Tear begin battling him, but Luke hestitates to make a killing blow and is disarmed. As Van is about to kill him, the others arrive and attack. Luke regains his feet and slices Van across the chest, defeating him. Van, laughing at his being defeated by a "failure" throws himself backwards off the platform and into the core. Jade asks Luke to use his hyperresonance to stop the ring. Asch helps him from a distance and the ring is successfully reversed. Loreli contacts them both and tells them that he is sending them a key to set him free. Luke collapses afterwards. A month later, a bored Luke is back in Baticul with Mieu. The war has ended and the lands safely lowered into the Qliphoth. Everyone has returned to their own homelands, Guy has returned to Malkuth, and Natalia is busy fulfilling her official duties. Luke is unhappy, shutting himself in the house and mostly sleeping. His mother encourages him to go visit his friends, having arranged for Noelle to come pick him up in the Albiore. She tells him Sheridan has revived, and that Asch borrowed the Albiore III to go to Yulia City. The land is shown to appear normal, with Yulia City bathed in sunlight. Luke visits Tear where she is praying at Van''s grave, hopeful that they can find a way to make a world that does not depend on the score. Asch has already left, and Luke wonders what he''s investigating. Tear tells him that Van''s sword is missing from the Absorption Gate, leading to wonder if one of the Six-God Generals is still alive. They set out for Daath to ask Ion.', 168, 18, 402975, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4846, 'The Last Score', 'In Daath, Luke and Tear are reunited with Anise, who gets them an audience with Ion. Jade and Guy are already there, and Luke asks if Asch has been buy. They tell them about the Planet Storm''s activity increasing, which was Van''s original plan, and the missing sword. Jade and Luke reveal that Dist escape from prison and rescued Mohs from the ship carrying him to trial. Malkuth''s troops was attacked by unknown forces carrying the Kimlascan banner. General Friggs was fatally wounded, but made it back to rport that the troops had empty eyes as if they were dead. The group agrees they should go to speak with King Inogbert about someone framing Kimlasca. Anise attempts to discourage him from going, then runs from the room and asks them to go on with out her. Outside, they run into Natalia who came to ask Ion to officially complain about Malkuth''s forces attacking Kimlasca. They explain the apparent framing to her, and Jade believes they may be replicas to impersonate both kingdoms to restart the war. As they speak,Tear collapses from her worsening condition because of the miasma built up in her body. Ion says he could remove it, but that there is a problem. Before he can explain, Anise runs in and tells them miasma is everywhere then drags him from the room. Outside, Anise and Ion are gone, and they find Arietta who begs them to save Ion from Anise, explaining that Anise has taken Ion to the Sephiroth in the cathedral to read the Seventh Fonstone, which would kill Ion. The group finds them with Mohs where they learn that Anise has been spying for Mohs because he is holding her parents hostage. Mohs and Anise escape through a passageway with Ion, with Arietta managing to pass through the door before it closes. The others are confronted by a group of replicas of people they knew, including one of Guy''s sister. Tear uses a fonic hymn to put them to sleep, but it causes her to get collapse again. On Anise''s doll they find a letter from her apologizing and telling them how to reach the Sephiroth. They quickly travel to Mount Zeloh, where Ion is reading the score. After they dispose of Moh''s troops, Luke runs to Ion to stop him. Ion tells him the last of the score before the fonstone shatters and Mohs escapes. Ion tells Luke he read the score for him, as a way to help him see his own path. Ion takes the miasma out of Tear and into his body. As Ion dies, he tells Anise he understood and calls her his most cherished, then disappears. At Daath, Anise explains to Luke that her parents were tricked and Mohs used their debt to force Anise to obey. Luke holds her as she cries over Ion.', 168, 19, 402976, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4878, 'Wedding Cakes & Headaches', 'This week''s projects range from large to small, including 300 individual cookie towers; then there are the plans for Duff''s Dad''s birthday.', 170, 2, 395257, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4848, 'Ancient Tower', 'The miasma has reached nearly critical levels across the surface of Auldrant, and Kimlasca and Malkuth struggle to come to a solution. When they are unable to do so, however, Jade suggests that an amplified hyperresonance might be able to destroy the miasma, however, in order to affect the entire world, it would require both an amplifier such as the Sword of Lorelei and a large number of Seventh Fonons: approximately equal to those found in 10,000 living Seventh Fonists. Asch overhears this conversation and determines to use replicas as they too are composed of Seventh Fonons. The zombie-like replicas that formerly served Mohs have begun to gather at the Tower of Rem in the Qliphoth, and Asch has headed there in order to sacrifice their lives to fuel his hyperresonance. Realizing that Asch has overheard this and is likely to attempt this, Luke and the others race to the tower in pursuit and arrive moments after Asch, who has just begun his ascent up the tower. ', 168, 21, 431028, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4849, 'The One Who Vanishes', 'Luke and the others race to the top of the tower to stop Asch from completing his plan of sacrificing himself with the Replicas in the tower to rid the world of Miasma. As they talk it over, Dist makes his appearance once more in another machine. The others fight, but Jade gets in the last blow with Mystic Cage and kills him. Debating continues on whether the Replicas have a place in the world or not afterward. Asch leaves it to them to decide to sacrifice themselves or not. At Kimlasca, Jade pointed out that with using Luke as the one to sacrifice the Replicas, they can save Asch, the original. Luke''s friends, especially Tear, tries their best to talk him out of it, but Luke chose this for himself, despite the high chance that he won''t survive it. The Replicas decide to go through with it as long as the ones that were not in the tower were to have a place in the world. Before Luke could begin, Asch tried to interfere, but Luke grabbed the Key of Lorelei and begun the transference. The Seventh Fonons began dispersing, so Asch stepped in to assist him. This little teamwork showed that Luke had the Jewel of Lorelei all along as it revealed itself while Luke''s body was fading like the other replicas were. A bright light filled the world as the Miasma was completely removed from the surface. With the Jewel of Lorelei in Luke''s possession, Asch leaves the group again. Jade suggests that Luke get an examination in Belkend before continuing on. Luke said he was ok, but Jade knew better and so Luke told him the truth, that he was slowly dying. Only two others heard this as they were right outside the room, Tear and Mieu. ', 168, 22, 431029, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4850, 'Sorrowful Parting', 'Natalia is told that her father is alive and that they know where he is. She is also told his name and that he was working with Fon Master Mohs. Her father is none other than Badaq, or as he is known as now, Largo the Black Lion. Luke and the others discovered from Spinoza that they can access Auldrant by using the jewel to absorb the seventh fonons at the absorption gate, but they also have to go to the radiation gate simultaneously. So Luke, Natalia, and Guy go to the radiation gate and Tear, Jade, and Anise go to the absorption gate. When Luke, Natalia, and Guy arrive they encounter Largo, and they fight to the death. Natalia shoots an arrow in order to prevent Largo from killing Luke and it hits Largo and he dies telling Natalia that she looks like her mother. Tear, Jade, and Anise arrive at the absorption gate and they encounter Fon Master Mohs, who brings Van back from the core in exchange for the seventh fonstone. Van tells them how he came back to life and Tear and the others prepare to fight Fon Master Mohs and Tear kills him with Holy Cross. Luke then fills the key with seventh fonons and opens the road to Eldrant. ', 168, 23, 431030, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4851, 'Land of Glory', 'With Mohs and Largo dead and the Planet Storm stopped at last, the shield surrounding Eldrant has been brought down, but the raised city is still protected by heavy anti-aircraft artillery. While Kimlasca and Malkuth prepare for an attack, Luke and the others prepare themselves as well. Guy gives up his quest for vengeance, Natalia accepts her birth father''s death, and Luke and Asch quarrel over the reason for their existence. Finally, the military forces of both countries create a diversion to draw the fire of Eldrant''s anti-aircraft defenses, and as the city of Eldrant attempts to ram the Albiore, Ginji crashes the Albiore III into the side of the city, creating an opening. The party heads for the newly made entrance to Eldrant while Van awaits their arrival. ', 168, 24, 431031, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4852, 'Wagering Your Existence', 'Luke and the others arrive at Eldrant and prepare for the battle against Van, but on the way, they are informed by Ginji that Asch went to fight on his own. While running in to a room, the group encounters Asch who was killing Oracle Knight replicas and they fall for a trap, which Asch and Luke fall into another room. Tear and the others are left to fight Legretta and Sync. Tear and Jade fight Legretta and Anise and Guy fight Sync. They manage to defeat Legretta and Sync and look for Luke. Meanwhile Luke talks to Asch and tells him to fight Van which infuriates because Luke isn''t doing anything to acknowledge himself. Asch challenges Luke calling him a replica and Luke wins and so Asch hands Luke the key of Lorelei. Asch stays behind in order to fight the Oracle Knights in the room. But Asch fights not as Asch the Bloody, but as the real Luke Fon Fabre. Luke finds the others and they go to fight Van. Asch manages to kill most of the knights but he suddenly had a pain in his chest because he was slowly dying and ends up getting stabbed from behind. Asch then kills all the replicas and dies. Luke senses Asch''s death and informs them of it. Natalia becomes heartbroken, and Jade tells Natalia to get up and to know who was really suffering. Luke and the others go to fight Van for the final showdown. ', 168, 25, 431032, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4853, 'A New World', 'The battle with Van begins. Van utilizes the power of Lorelei and starts to defeat the heroes. Tear begins to sing the Grand Fonic Hymn. Van is defeated. Luke stays behind to use the Key. As everyone leaves, Luke promises Tear he will return. Hod begins to fall and Luke catches Asch. Two years later Tear and the others are at the Cove where the adventure begun as a memorial for Luke. In the distance, a man approaches the group and tells Tear that he came to the Cove to fulfill his promise to her. Everyone gathers around to greet the man. While the man appears to be a physical combination of both Luke and Asch, a final view of the man shows him carrying his sword in the same fashion as Luke. ', 168, 26, 431033, 458);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4854, 'Episode 1', null, 169, 1, 395237, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4855, 'Episode 2', null, 169, 2, 395238, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4856, 'Episode 3', null, 169, 3, 395239, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4857, 'Episode 4', null, 169, 4, 395240, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4858, 'Episode 5', null, 169, 5, 404820, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4859, 'Episode 6', null, 169, 6, 404821, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4860, 'Episode 7', null, 169, 7, 404822, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4861, 'Episode 8', null, 169, 8, 404823, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4862, 'Episode 9', null, 169, 9, 404824, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4863, 'Episode 10', null, 169, 10, 1392701, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4864, 'Episode 11', null, 169, 11, 1392711, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4865, 'Episode 12', null, 169, 12, 1392721, 459);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4866, 'Episode 1', null, 169, 1, 563041, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4867, 'Episode 2', null, 169, 2, 563051, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4868, 'Episode 3', null, 169, 3, 563061, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4869, 'Episode 4', null, 169, 4, 605341, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4870, 'Episode 5', null, 169, 5, 605351, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4871, 'Episode 6', null, 169, 6, 778991, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4872, 'Episode 7', null, 169, 7, 779001, 460);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4879, 'Hell Week', 'Duff and his team cope with Summer''s most crammed week, bringing not only multiple weddings, but graduation festivities that total 27 cakes this week.', 170, 3, 395258, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4880, 'Life''s a Zoo', 'A benefit for the local zoo takes up time for research and problem-solving, while other staff prepare an unusual groom cake, and Duff reconnects with an old friend.', 170, 4, 395259, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4881, 'Duff Goes Hollywood', 'Creating a cake for Jay Leno is the focus of this episode, and the kitchen location is pretty unbelievable. Duff also helps a restaurant celebrate a birthday, tutors some Brownies, and indulges himself while in Los Angeles.', 170, 5, 395260, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4882, 'Cake Walk', 'An amusement park wedding, a museum birthday and a gallery opening all require Duff''s services, and the cakes are as unusual as the settings. These cakes are for kids and kids at heart.', 170, 6, 395261, 461);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4883, 'Chi-Town and Wedding Gowns', 'Weddings and a birthday populate the second season premiere, as a delivery requires Duff''s personal services, and the standard-bearer for groom cakes is created.', 170, 1, 395545, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4884, 'The Boss is Gone', 'Chaos ensues while Duff is gone, since there are 39 cakes to prepare this week, and Mary Alice must deal not only with her regular duties, but dip her finger into repairs when a broken cake comes back in. Meanwhile, Duff is having a grand old time on his version of a road trip which includes using the van as his stove.', 170, 2, 395546, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4885, 'Great Scot', 'Duff employs some unusual methods to get inspiration for a Scottish wedding cake, a cake is ordered with an addition, and the team is challenged with a flower-themed cake.', 170, 3, 395547, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4886, 'Four Weddings and a Rat', 'Duff and his team are faced with two weddings that each want two cakes, one for the groom and one each for three brides. All of these cakes are technically challenging, but none quite as much as the wedding cake for one of the assistant decorators – emergency surgery is required. Elsewhere, Geof gets to do a repeat of a popular groom''s cake.', 170, 4, 395548, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4887, 'Monkey Business', 'Replicas make up this week''s work. First the team must create a ship, then a famous gorilla, and last is a DJ''s groom''s cake. Everything still must be transferred, of course, and potholes may ruin a christening.', 170, 5, 395549, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4888, 'Tributes and Tribulations', 'Duff has a special cake to make for a charity flag football event held by the Baltimore Fire Department, a theater group wants a fairy godfather, and Duff helps his father celebrate a milestone.', 170, 6, 395550, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4889, 'Flying High', 'It''s a week of complicated and artistic cakes that put Geof and Duff to the test with a cake interpretation of the Dance of the Veils, a renowned ski slope and a plane.', 170, 7, 395551, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4890, 'Milestones and Monuments', 'A cake for a tree lighting ceremony presided over by Duff guarantees fireworks; Geof gets to create a cake for one of his idols, a tennis star; and Duff creates a surprise for a party given by dear friends.', 170, 8, 395552, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4891, 'Cake-Tastrophe', 'Duff and crew are experiencing their busiest week to date, with 40 cakes in the offing. A birthday party requires three cakes, Starbucks asks for a holiday-themed one, and just for a change they get to create a goth one as well.', 170, 9, 395553, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4892, 'Shell Shocked', 'A slow week with only seven cakes turns out to be more difficult than expected when the bakery seems to be cursed. Cakes include a difficult turtle, a hamburger and the Taj Mahal.', 170, 10, 395554, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4893, 'Playing Games', 'Lettered tiles and a cake of squares add up to a famous game replica for a mom.', 170, 11, 395555, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4894, 'The Super Cake', 'Duff and his staff head for Miami to create the bakery''s largest cake ever for the Super Bowl.', 170, 12, 395556, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4895, 'Dr. Duff', 'The bakery focuses on birthdays and doctors. A radiology company asks the team to create a CT scanner, complete with patient inside. It''s also a time for reflection at Charm City Cakes as the staff reflects on moments from the past with a series of flashbacks and outtakes.', 170, 13, 395557, 462);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4896, 'Wedding Bells and Shotgun Shells', 'The Charm City Bakery staff takes a trip to a shooting range and celebrates Sherri''s wedding.', 170, 1, 395558, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4897, 'Tattoos and Traditions', 'The staff creates a variety of nature inspired cakes, including a duck hunt and an armadillo dressed as an EMT. Geof must play EMT, himself, when one of this week''s cakes has problems after delivery. Also, Charm City visits a tattoo museum.', 170, 2, 395559, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4898, 'Mary (Alice) Go Round', 'Charm City Cakes tackles a carousel cake and a hospital-themed cake.', 170, 3, 395560, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4899, 'Challenge Road Trip', 'Duff, Geof and Mary Alice are tapped to serve as judges for a Food Network Challenge episode, "Extreme Cakes." They leave Anna in charge to complete the week''s cakes.', 170, 4, 395561, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4900, 'Rock & Roll', 'The Armed Forces Foundation Gala requests a special cake from the Charm City Bakery. The bakery also has an order for a pirate ship and a thank you gift for a very special band.', 170, 5, 395562, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4901, 'Wishes Granted', 'The bakery makes some children''s dreams come true, including a wedding couple whose children design their cake and a special young guest from the Make A Wish Foundation.', 170, 6, 395563, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4902, 'Stadium Games and Eating Brains', 'First, the staff has to make zombies. Then, the bakery has two separate orders for stadiums–Camden Yards and Raven''s Stadium. Can the staff finish these complicated structures on time and deliver them to their respective owners?', 170, 7, 395564, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4903, 'Battleships and Birthdays', 'Author Tom Clancy wants a Charm City cake, so the bakery scrambles to make him the Tower of London. Also, Duff''s college roommate is getting married. So, this cake is special. To complicate matters even more, the bakery has a cake bound for Philadelphia when Helena requests King Tut''s sarcophagus.', 170, 8, 395565, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4904, 'Charm and Charities', 'This week features three cakes that will get lots of publicity. First, it''s the bakery''s second Zoomerang cake. Next, HBO''s The Wire gets a special cake for a party. And, a Lighthouse cake for a very special Baltimore school.', 170, 9, 395566, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4905, 'Uncle Sam Wants Duff', 'A special Army birthday cake brings out some special guests. Other cakes include wine and humidors.', 170, 10, 395567, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4906, 'Coach Duff', 'NBA superstar and Baltimore native, Carmelo Anthony, asks Duff to participate in his charity organization. Duff agrees and brings cake Carmelo helped decorate. Other cakes include a musician''s cake and a replica of the USS Carney.', 170, 11, 395568, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4907, 'Hairspray Premiere', 'The bakery is consumed with the Baltimore premiere of of Hairspray. They also recreate the tea party from Alice in Wonderland. And, Jeopardy calls on Duff to be a category.', 170, 12, 395569, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4908, 'Charm City Christmas', 'Duff and company are put in a holiday mood after meeting with Radio City Music Hall about the cake for the Rockette''s Christmas Spectacular that is also the 75th anniversary for the show. They also create a cake for a children''s charity.', 170, 13, 395570, 463);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4944, 'What''s Up Cookie?', 'Girl scouts, office chairs and plantation houses feature prominently in this week''s cakes.', 170, 8, 754901, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4909, 'The Harry Potter Cake', 'When the bakery is asked to create a cake for the LA premiere of Harry Potter, Duff and the gang go all out to create a complete Hogwarts.', 170, 1, 395949, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4910, 'Volcano Cakes and Mix Tapes', 'The bakery is extremely busy this week with a celebrity softball game, a moonbounce cake and a volcano cake.', 170, 2, 395950, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4911, 'Airplanes and Arks', 'Three transportation cakes take center stage this week–Noah''s Ark with a unicorn, a Delta jet, and a subway car.', 170, 3, 395951, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4912, 'Mascots and Mice', 'The bakery makes the wedding cake for a couple who used a Charm City cake to get engaged in Season 2. Also, they have to make French toast with a French mouse.', 170, 4, 395952, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4913, 'The Spy Who Caked Me', 'This week has a wide range of cakes. The gang has to make a birthday cake for Sir Roger Moore''s 80th birthday, recreate a scene from The Exorcist, and make a girl scout cookie cake.', 170, 5, 395953, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4914, 'Skaters and Speedsters', 'Four cakes dominate Charm City this week: a pro-skater''s cake, a massive wedding cake, an over the top baby shower cake, and a replica of a Porsche.', 170, 6, 395954, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4915, 'Celebration Week', 'The gang has to make a lot of cakes for various celebrations. Cakes this week include: a fork cake, a 21st birthday cake wit hthe theme of cocktails and coffee, and a Bicentennial Clock for St. Mary''s University.', 170, 7, 395955, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4916, 'Police Cars and Wine Bars', 'Charm city has a host of complicated cakes this week. First, a replica police cruiser with working lights proves difficult. But, they also have to create a magnum of wine, a basket of yarn, and a Harley Davidson.', 170, 8, 395956, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4917, 'Avenue Q Cake', 'The bakery gets a backstage tour when the Broadway play Avenue Q comes to Baltimore.', 170, 9, 395957, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4918, 'Duff''s Birthday', 'This is a week filled with some serious birthdays, including an autograph book, a fishing boat that brings back bad memories, and Duff''s birthday celebration. A scrapple battle features prominently. ', 170, 10, 395958, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4919, 'Skate, Rattle and Roll', 'This week, the cakes include a roller derby celebration cake, a corvette, and a manatee''s whole family.', 170, 11, 395959, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4920, 'Wedding Week', 'Charm City Cakes focuses on weddings with cakes that celebrate hockey, the Baltimore skyline, and a traditional four-tiered flower cake.', 170, 12, 395960, 464);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4921, 'Food Network Friends', 'The Broadway premiere of Crybaby demands a huge cake. Geof has to create a giant skyscraper for Philadelphia. And, Duff is extremely busy when he''s asked to appear on several other Food Network shows (Diners, Drive-Ins and Dives and Paula''s Party).', 170, 1, 406173, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4922, 'World''s Largest Cupcake', 'Charity takes center stage with two cakes destined for charity events–a giant cupcake and a roulette wheel. Also, Charm City designs a cake that replicates the bakery.', 170, 2, 406174, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4923, 'Elephant Delivery Service', 'A book cart, a novel on the Federalist Papers and a toy tower are a few of the cakes the gang makes this week. The toy tower is extra special because Duff dresses as an elephant to deliver it.', 170, 3, 406175, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4924, 'Pandamonium', 'This week''s premiere cake features giant replicas of the cast and two smoke machines. A special appearance by Jack Black at the Kung Fu Panda premiere makes Duff''s day.', 170, 4, 406176, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4925, 'Swimming with the Sharks', 'Duff takes a cake to an aquarium where he gets up close and personal with some sharks. The bakery crew creates a dog show cake and a rubber ducky for an anniversary.', 170, 5, 406177, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4926, 'Pinball Wizard', 'While Duff skates for charity, the staff creates some detailed cakes--a Fenway replica, a pinball machine, and a light up Goddess.', 170, 6, 406178, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4927, 'Lord Stanley', 'Charm City gets a visit from the NHL''s actual Stanley Cup as a model for a wedding cake. The gang also creates a dirt bike cake and an island-themed wedding cake.', 170, 7, 406179, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4928, 'Gone to the Dogs', 'When Charm City is asked to make a cake for Milkbone, Geof''s dog is used as the model. the gang also makes a Star Trek inspired cake and Dachshund in a bun.', 170, 8, 406180, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4929, 'Frogs to Turkey and Everything In Between', 'Charm City creates a frog cake for the zoo. They also design a replica of the Lincoln memorial and turducken made of cake.', 170, 9, 406181, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4930, 'Get Cake', 'The movie Get Smart premieres in Boston, and Geof, Mary Alice and Duff get to attend. When the three return, the bakery is making a crazy funeral cake.', 170, 10, 406182, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4931, 'Tanks, Trucks and Vikings', 'A veteran wants an Army tank. The bakery staff also makes a replica of a Mack truck. And, a couple of Renaissance Fair participants are getting married and want a Viking ship as their cake.', 170, 11, 406183, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4932, 'The Big Cakeowski', 'Charm City goes to the movies with cakes dedicated to The Coen Brothers'' The Big Lebowski and Star Wars'' Millennium Falcon.', 170, 12, 406184, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4933, 'New Frontiers', 'This week''s cakes (a giant moon, a peanut butter cup and a sandcastle) take a backseat as Duff and Mary Alice explore LA and consider opening a Charm City in the West.', 170, 13, 406185, 465);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4934, 'I Do!', 'There''s a wide range events tonight, as Duff and his crew build an anesthesia machine out of cake, channel Edgar Allen Poe, and help a client who chooses Charm City and a fortune cookie cake to propose – a first for the building.', 170, 9, 733881, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4935, 'The Eagle Has Landed', 'Charm City Cakes'' latest assignment includes the Philadelphia Eagles'' mascot who may or may not be an asset. Elsewhere, a Nikon camera cake is perfected, and everyone attends a benefit for the Make a Wish Foundation.', 170, 10, 733891, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4936, 'Demolition Cakes', 'There are bridal cakes galore and a Christmas stocking cake tonight, but the biggest challenge is a cake made to look like a house mid-destruction.', 170, 11, 733901, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4937, 'Fire Fighters and Fire Breathers', 'The bakery is all fired up when they make a special cake for a firefighting contest and a giant fire breathing dragon.', 170, 1, 754621, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4938, 'Snow Boards and Cupcakes', 'The bakery has never had good luck with cupcakes and this week is no different. Meanwhile, Duff tries his hand at a snowboarding cake.', 170, 2, 754831, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4939, 'Tiki Time', 'The crew has a variety of cakes this week: a tiki wedding cake, a couch potato and a horse cake with a pattern.', 170, 3, 754841, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4940, 'Food, Fashion and Galactic Bounty Hunters', 'Duff builds a whisk and shoes for charities. Plus, a Star Wars cake is a lot of fun.', 170, 4, 754851, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4941, 'Macy''s and the Big Apple', 'It''s all about New York as Charm City helps Macy''s celebrate. Also, a petting zoo needs a cowboy cake.', 170, 5, 754861, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4942, 'King of Charm City', 'The TV show, King of the Hill orders a barbecue grill. The team makes a school locker for a teen. And, Du Pont Circle from D.C. is recreated in cake.', 170, 6, 754881, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4943, 'Ghoul''s, Ghosts and Chocolate', 'This week''s cakes include a giant chocolate bar, a haunted chapel complete with zombies, and a Great Pumpkin cake.', 170, 7, 754891, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4945, 'Bobble Head Bakery', 'Duff''s team goes international with a cake based on a beloved French children''s book, a birthday cake inspired by Antartica, and a tricky one that recreates a bobble head pitcher from American baseball.', 170, 12, 754911, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4946, 'LOST in Hawaii', 'Duff and the Charm City Cakes team head to Hawaii when one of the actors from ABC''s Lost orders an unusual cake to commemorate the show''s 100th episode.', 170, 13, 754921, 466);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4947, 'Baked Alaska', 'It''s an astronomy-themed week as the team creates a planet and a famous telescope, and then get in touch with their charitable side. Meanwhile, Duff is on a road trip to Alaska where he will help celebrate the state''s 50th anniversary.', 170, 1, 959511, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4948, 'Three Ringed Bakery', 'Cirque du Soleil demands a high flying cake. The bakery designs a cake for dummies, and Duff serves as a judge at a culinary competition.', 170, 2, 959521, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4949, 'Cakes Take Flight', 'Mary Alice parties. Katie makes an intricate surprise birthday cake. Geof and Duff spend time on the hot air balloon from the Wizard of Oz. And, the gang makes a cake for an anonymous customer. ', 170, 3, 959531, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4950, 'Pasta, Pizza and Pastry', 'This week is crazy at Charmed City Cakes. The week takes on an Italian theme with a Venitian gondola, gangsters, pizza and a missing pasta machine.', 170, 4, 986661, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4951, 'Yankee Stadium', 'Elena creates a bass guitar for a special client. Erica feels a lot of pressure while creating her cake. And, Duff, Geof and Mary Alice travel to New York for the opening of the New Yankee Stadium.', 170, 5, 1055691, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4952, 'Big Red Squig', 'The Charm City gang creates a video tribute at the Contemporary; Duff and Ben come up with the craziest video game star ever', 170, 6, 1075321, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4953, 'Double Secret Cake Surprise', 'This week Mary Alice is a nervous wreck trying to keep everything straight without spilling the beans - a bride and groom have BOTH ordered surprise cakes for each other on the day of their rehearsal dinner. Ben and Elena work on a huge Humpty Dumpty bridal shower cake and the bakery staff muses on the consequences of National Egg Day.', 170, 7, 1075331, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4954, 'It''s a Hard Knock Cake for Duff', 'Big cakes and even bigger events are on order this week. Duff and his new buddy Brett make a cake for a Best Buddies International gala hosted by Superstar quarterback Tom Brady. Ben engineers an evil robot cake from the BBC TV series "Dr. Who" that spins, yells and destroys. The entire bakery staff gets to settle some workplace grievances at Splatter Hill paintball field. And Duff and Mary Alice make their long-awaited stage debut with the Annie National Tour.', 170, 8, 1075341, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4955, 'Charm City Carnival', 'Carnival Cruise Lines is coming to Baltimore and what better way to kick off the celebration than with a cake of the cruise ship Carnival Pride from Charm City Cakes! To Duff''s surprise, Katie asks to take the lead on this massive project. But she''s quickly overwhelmed by all the details on the Pride and falls behind schedule - can Duff and the decorators save her from going down with the ship?? And OMG! Lauren is making a cake inspired by the totally awesome 80''s. Duff, Mary Alice and the decorators get radical remembering all the tubular 80''s fashion. The beat is on as Duff and Geoff create another crazy cake... A giant marimba!', 170, 9, 1107011, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4956, 'En Garde!', 'This week Erika is tasked with creating an extravagant, 5-cakes-in-1 anniversary cake for Philadelphia''s famed Mummers Parade, only to have gravity rain on her parade as full-blown cake-meltdown strikes. Duff is asked to throw out the first pitch at an Orioles game but has to be taught how to throw a ball first. And in a bakery first, Charm City Cakes is challenged to a duel by one of their clients. Will Geof be able to defend the bakery''s honor?', 170, 10, 1126271, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4957, 'Get Your Kicks on Cake', 'Katherine and Ben make a diner cake as they celebrate Route 66. A pacemaker cake grosses out Lauren. And, Charmed City has to deal with horrific humidity.', 170, 11, 1241551, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4958, 'Dizzy Doings', 'A psychic causes havoc in Charm City Cakes. An alien wedding cake commands attention. And, Duff plays with fireworks.', 170, 12, 1241561, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4959, 'Book of Cakes', 'This episode finds the CCC team hard at work creating cakes that will be photographed for an upcoming book about the bakery. Hilarity ensues as the decorators are given free REIN to make the cakes of their dreams!', 170, 13, 1241571, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4960, 'Harry Potter and the Big Apple', 'Duff is invited to design a cake for the premiere of "Harry Potter and the Half-Blood Prince". Later on, Mary Alice and Duff deliver a cake for the publication of the "Ghost Girl" novel. ', 170, 14, 1562171, 467);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4961, 'Working With Friends', 'Duff shares his thoughts about working with friends.', 170, 2, 1026921, 468);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4962, 'Tour', 'Duff tours his bakery.', 170, 1, 1026931, 468);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4963, 'Live Where You Work', 'Duff and company talk about working in Baltimore.', 170, 3, 1026941, 468);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4964, 'Man Caves', 'It''s a testosterone-filled bakery as the crew of "DIY Network''s Man Caves" invades the bakery to outfit Duff with a new guy-themed basement. Duff, Elena and Geof road trip to the Windy City to deliver a cake and wow the lovers of the independent music scene with some Baltimore rock.', 170, 1, 1718771, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4965, 'Fondant and Finances', 'Duff doesn''t even own a tie, yet he gets to ring the opening bell on Wall Street when he is commissioned to do a cake modelled after the New York Stock Exchange. Plus, he delivers a whisky celebration cake to the famous James Beard kitchen.', 170, 2, 1718781, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4966, 'Christmas in July', 'Duff helps a romantic fireman find a very memorable way to propose. Then he lets Joe tag along for a taste of big city life as he prepares a dessert buffet for a high end New York PR firm celebrating Christmas in July. And, the bakery staff become silent film comedy stars.', 170, 3, 1718791, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4967, 'Copper, Carbonite and Jewels', 'Elena goes all out creating a cake of Han Solo frozen in carbonite while the entire bakery staff chips in to help mould a 70-plus pound chocolate likeness of the famous Civil War statue, Moment of Mercy. Musician Jewel stops by Charm City cakes and shows off her skills with fondant.', 170, 4, 1718801, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4968, 'A Four Letter Word For Pastry', 'Charm City Cakes is bitten by the crossword by as they concoct a living crossword wedding cake. Duff and his decorators hob nob with celebrities as they participate in a star-studded USO gala then deliver the cake to the everyday service men and women.', 170, 5, 1718811, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4969, 'Oprah!', 'Charm City Cakes gets a visit [and performance] from the country rock trio The Avett Brothers. Lauren pesters Geof to oversee her work on a crazy groom''s cake, a band bus. And Duff gets an impossible deadline to make a cake to take to a TV set in Chicago... and when Oprah calls, how can you refuse?', 170, 6, 1718821, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4970, 'Charm City Throwdown', 'Duff and his bakery staff concoct an elaborate cake to celebrate the 40th anniversary of Monday Night Football and Duff gets to deliver the cake to "Redskins'' field" on game day. Then, Duff puts his chef skills on the line when he battles Michael Symon in the Iron Chef kitchen stadium.', 170, 7, 1718831, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4971, 'A Cake to Take the Cake', 'CCC gets its biggest cake challenge EVER when Duff and his bakery are commissioned to do a life-sized motorcycle groom''s cake, complete with ignition! Plus, it''s paired with a sky-high 10-tiered photo cake for the same wedding.', 170, 8, 1718841, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4972, 'Dog Day Afternoon', 'Haloti Ngata of the Baltimore Ravens drops by the bakery to fix up a pre-game cake for his teammates. And, the bakery staff muses about pets as cakes go to the dogs... dogs on airplanes, dogs in armchairs, and fabulous Arnie, the growling Chihuahua.', 170, 9, 1718851, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4973, 'The Revenge of Ivan the Terrible', 'Charm City Cakes practices its foreign language skills as the decorators take on two formidable historic figures... a Terra Cotta warrior from China and huge replica of Russia''s Saint Basil''s Cathedral.', 170, 10, 2162841, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4974, 'Bake, Rattle and Roll', 'Duff is commissioned to do a cake for Aflac''s Pediatric Cancer Center in Atlanta. Then Duff, Geof and Elena head out to NAMM where they check out the latest and greatest in the music world and create and upright, oversized guitar for the 20th anniversary of Acoustic Guitar Magazine.', 170, 12, 2162851, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4975, 'Clone Wars', 'Star Wars geeks unite! Duff and his team travel to California to because they''ve been asked to make an R2-D2 Cake at Big Rock Ranch located at Lucasfilm for the season two wrap party for The Clone Wars. Not only do they get a behind-the-scenes look at the animation process, but a certain someone drops by the party.', 170, 13, 2162861, 469);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4976, '100 Episodes Of Cake', 'Duff and the rest are challenged with creating a roller coaster cake; the bakery staff looks back on past episodes. ', 170, 1, 2461161, 470);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4977, 'Gas Pills', 'A radical new pill has Peter believing he has a miracle growing inside him. ', 171, 1, 395262, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4978, 'Pill for Men', 'After losing something unexpected, in the pants area, Peter and Ron test the waters to see what it''s like to be a woman.', 171, 2, 398494, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4979, 'Memory Loss', 'For Ron and Peter, a brain washing experiment goes horribly wrong, but not for Nugget. ', 171, 3, 400515, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4980, 'Vac Attack', 'When super slob Peter earns the boys a chance to test a million dollar vacuum, they discover having a hyper intelligent, military grade home appliance really sucks.', 171, 4, 401098, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4981, 'Uber-Glued', 'Ron and Peter test the world''s strongest glue and they become closer than they ever thought possible.', 171, 5, 403890, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4982, 'Herfume', 'Ron and Peter test an experimental new pheromone spray that makes them irresistible to women.', 171, 6, 403891, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4983, 'Kicking the Bucket List', 'As the guys face death, they come to the realization that they have yet to really live. ', 171, 7, 407839, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4984, 'Abstinence Underwear', 'Ron and Peter must refrain from sex for a week when they test chastity belts. ', 171, 8, 412480, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4985, 'Jelly Bean Omelettes', 'Peter becomes totally paralyzed by a potent new muscle relaxant, and must use Ron for his daily care. ', 171, 9, 412481, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4986, ' Mr. Pain and Danger Lad', 'When the doctors at Testico tell Ron and Peter they''ve lost the ability to feel pain, they turn into daredevils.', 171, 10, 414700, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4987, 'Pineapple Shampoo', 'Nugget moves into Ron and Peter''s apartment, to live rent free, after they are blinded by a new shampoo.', 171, 11, 414701, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4988, 'Project X', 'Ron and Peter begin imagining symptoms after Testico will not tell them what they are testing out.', 171, 12, 416209, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4989, 'Truth Serum', 'Ron and Peter test out a new truth serum for Testico, which unravels Peter''s past and puts his friendship with Ron in jeopardy. ', 171, 13, 416210, 471);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4990, 'Webisode - Meet Dr. NG', null, 171, 1, 4205280, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4991, 'Webisode - Larry''s Love Tips', null, 171, 2, 4205281, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4992, 'Webisode - Hypnotism Device', null, 171, 3, 4205282, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4993, 'Webisode - Cooking with Marcel', null, 171, 4, 4205283, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4994, 'Webisode - Nugget Scams 1', null, 171, 5, 4205284, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4995, 'Webisode - Nugget Scams 2', null, 171, 6, 4205285, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4996, 'Webisode - Sex Doll 1', null, 171, 7, 4205286, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4997, 'Webisode - Sex Doll 2', null, 171, 8, 4205287, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4998, 'Webisode - Sex Doll 3', null, 171, 9, 4205288, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (4999, 'Webisode - The Promo Song', null, 171, 10, 4205289, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5000, 'Webisode - Ron''s Dating Video', null, 171, 11, 4205290, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5001, 'Webisode - Pete''s Dating Video', null, 171, 12, 4205291, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5002, 'Webisode - Nugget''s Dating Video', null, 171, 13, 4205292, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5003, 'Webisode - Kate''s Funeral', null, 171, 14, 4205293, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5004, 'Webisode - Marcel''s Stand Up Routine 1', null, 171, 15, 4205294, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5005, 'Webisode - Marcel''s Stand Up Routine 2', null, 171, 16, 4205295, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5006, 'Webisode - Nugget''s Website', null, 171, 17, 4205296, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5007, 'Webisode - The Vagina Song', null, 171, 18, 4205297, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5008, 'Webisode - Jeff''s First Drink', null, 171, 19, 4205298, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5009, 'Webisode - Jeff Calls his Wife', null, 171, 20, 4205299, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5010, 'Webisode - Joke Corner with Steve Markel 1', null, 171, 21, 4205300, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5011, 'Webisode - Joke Corner with Steve Markel 2', null, 171, 22, 4205301, 472);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5012, 'Life is like Bonbon au Chocolat, a box full of chocolate', 'On Christmas Eve, Sam-soon enters into a hotel looking for her cheating boyfriend Hyeon-woo. She’s been suspicious about his behavior and she sees him going up to the room with a beautiful woman.', 172, 1, 395266, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5013, 'Should we try dating?', 'Sam-soon gets a job at Jin-heon’s restaurant and a welcoming party is thrown. Everyone is having fun at the party. Sam-soon approaches Jin-heon dancing.', 172, 2, 395267, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5014, 'Please teach me how to', 'Sam-soon is at a loss when Jin-heon asks her to pretend to be his girlfriend in front of his mother Mrs. Na. Sam-soon asks him why he chose her.', 172, 3, 395268, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5015, 'Oh we are on break right now', 'During Sam-soon’s break time, a woman comes into the restaurant. Since Sam-soon doesn’t like her name, she wears a name tag that reads “Kim Hee-Jin” at work.', 172, 4, 395269, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5016, 'Love is childish', 'Sam-soon takes Jin-heon who is completely drunk to his apartment. Whether he realizes it or not, he doesn’t let Sam-soon leave. Sam-soon spends the night in his apartment.', 172, 5, 395270, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5017, 'Calories of kisses, calories of love', 'Hyeon-woo who was Sam-soon’s ex-boyfriend asks her to make a cake for his engagement party. Furious about him, Sam-soon thinks about putting very spicy peppers into the cake, but soon decides not to.', 172, 6, 395271, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5018, 'Madeline, in search of lost time', 'Jin-heon and Sam-soon are at the grand opening party of the hotel that Jin-heon’s family owns on Jeju Island. Hyeon-woo and Chae-ri are there, as well. Jin-heon sees Hyeon-woo talking to Sam-soon and gets furious.', 172, 7, 395272, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5019, 'Dad, why is it hard for me to fall in love?', 'Sam-Soon hasn’t heard from Jin-heon since they came back from Jeju Island. He doesn’t come to work, which worries her. Meanwhile Jin-heon lets Hee-jin take a medical test.', 172, 8, 395273, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5020, 'Are my truthful feelings a Joke?', 'Mrs. Na who wants to separate Hee-jin from Jin-heon decides to use Sam-soon. Jin-heon is surprised to see Sam-soon coming to his brother’s memorial service with his mother. Jin-heon claims that he broke up with Sam-soon, but his mother walks away leaving Sam-soon with him.', 172, 9, 395274, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5021, 'My name is Kim Hee Jin', 'On her way out from the restaurant, Jin-heon realizes that the bakery seems empty and lifeless without Sam-soon. He smiles as if he’s just thought of a good idea to bring her back. He offers her an incredible raise to change her mind.', 172, 10, 395275, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5022, 'What are you doing?', 'Sam-soon can’t believe Jin-heon and Hyeon-woo exchanging punches while fighting over her. Jin-heon asks Sam-soon not to leave him, but she shakes off his hand. Jin-heon is shocked at the fact that Sam-soon has refused him.', 172, 11, 395276, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5023, 'So what? I am only 30 years old!', 'Jin-heon confesses to Sam-soon that he can’t get her out of his head. He hugs her. Sam-soon bursts into tears with joy. Later, Yi-young asks Jin-heon to stop confusing Sam-soon.', 172, 12, 395277, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5024, 'The way to break up with her..', 'Jin-heon and Sam-soon are on Jeju Island again. He asks her to extend their contract. He suggests pretending to be a couple for the next 100 years. Sam-soon just laughs at him. However, when he prepares birthday soup for her, she’s impressed.', 172, 13, 395278, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5025, 'The basics of dating', 'Hee-jin tries to keep her cool, but she’s very upset. She starts hitting Jin-heon out of frustration. Jin-heon just lets her hit him. He hugs her tightly and sheds tears. Meanwhile, Mrs. Na finds out that originally Jin-heon paid Sam-soon to pretend to be her girlfriend. Angry at him, she blames him for buying other people with his money. ', 172, 14, 395279, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5026, 'The old fashioned rules of falling in love', 'Sam-soon is confused when she sees Jin-heon and Hee-jin getting out of the elevator together. Jin-heon asks her not to misunderstand him, but she tells him that she still feels that three people are involved in their relationship. Sam-soon goes to Hee-jin’s house when she hears that Hee-jin is sick.', 172, 15, 395280, 473);
INSERT INTO public.episode (id, name, overview, seriesid, numepisode, tvdbid, seasonid) VALUES (5027, 'Let''s love like we''ve never been hurt before', 'Jin-heon leaves for the US saying that he will be back in a week. However, it’s been three months since he left. Sam-soon hasn’t heard from him since then.', 172, 16, 395281, 473);
INSERT INTO public.genres (id, genre) VALUES (10, 'Travel');
INSERT INTO public.genres (id, genre) VALUES (3, 'Documentary');
INSERT INTO public.genres (id, genre) VALUES (12, 'Reality');
INSERT INTO public.genres (id, genre) VALUES (15, 'Special Interest');
INSERT INTO public.genres (id, genre) VALUES (20, 'Comedy');
INSERT INTO public.genres (id, genre) VALUES (1, 'Drama');
INSERT INTO public.genres (id, genre) VALUES (18, 'Mini-Series');
INSERT INTO public.genres (id, genre) VALUES (13, 'Crime');
INSERT INTO public.genres (id, genre) VALUES (4, 'Action');
INSERT INTO public.genres (id, genre) VALUES (11, 'Adventure');
INSERT INTO public.genres (id, genre) VALUES (16, 'Game Show');
INSERT INTO public.genres (id, genre) VALUES (23, 'Animation');
INSERT INTO public.genres (id, genre) VALUES (22, 'Home and Garden');
INSERT INTO public.genres (id, genre) VALUES (9, 'Sport');
INSERT INTO public.genres (id, genre) VALUES (5, 'Romance');
INSERT INTO public.genres (id, genre) VALUES (6, 'Soap');
INSERT INTO public.genres (id, genre) VALUES (24, 'Science-Fiction');
INSERT INTO public.genres (id, genre) VALUES (25, 'News');
INSERT INTO public.genres (id, genre) VALUES (19, 'Talk Show');
INSERT INTO public.genres (id, genre) VALUES (7, 'Children');
INSERT INTO public.genres (id, genre) VALUES (17, 'Fantasy');
INSERT INTO public.genres (id, genre) VALUES (14, 'Food');
INSERT INTO public.genres (id, genre) VALUES (8, 'Family');
INSERT INTO public.genres (id, genre) VALUES (26, 'Anime');
INSERT INTO public.genres (id, genre) VALUES (21, 'Mystery');
INSERT INTO public.genres (id, genre) VALUES (2, 'Horror');
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (1, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (1, 2);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (2, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (3, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (3, 2);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (4, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (4, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (4, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (5, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (5, 9);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (5, 10);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (6, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (7, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (8, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (8, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (9, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (9, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (10, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (11, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (11, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (12, 16);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (13, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (14, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (14, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (14, 19);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (15, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (15, 9);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (16, 10);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (17, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (17, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (17, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (18, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (18, 8);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (18, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (19, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (19, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (19, 8);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (19, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (20, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (21, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (22, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (23, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (23, 19);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (24, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (25, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (25, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (26, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (27, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (27, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (27, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (27, 2);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (27, 21);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (28, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (28, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (29, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (29, 19);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (30, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (30, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (31, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (31, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (32, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (33, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (34, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (34, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (34, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (35, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (36, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (36, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (37, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (38, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (39, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (39, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (39, 10);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (40, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (40, 14);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (40, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (41, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (42, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (44, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (44, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (44, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (45, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (46, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (46, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (46, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (47, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (48, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (48, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (49, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (49, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (49, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (50, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (50, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (51, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (51, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (51, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (52, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (53, 16);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (54, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (54, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (54, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (55, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (55, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (56, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (58, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (59, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (59, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (60, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (61, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (62, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (62, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (62, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (62, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (63, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (63, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (64, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (64, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (65, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (65, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (65, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (66, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (66, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (66, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (67, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (68, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (68, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (69, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (69, 9);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (70, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (70, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (71, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (72, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (73, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (74, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (74, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (74, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (75, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (75, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (75, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (76, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (77, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (77, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (77, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (78, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (79, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (79, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (79, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (80, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (80, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (81, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (82, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (82, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (82, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (82, 6);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (83, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (84, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (85, 16);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (86, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (87, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (88, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (88, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (88, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (89, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (89, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (90, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (91, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (91, 25);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (92, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (93, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (93, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (93, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (93, 19);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (94, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (94, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (94, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (95, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (96, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (96, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (97, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (97, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (98, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (98, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (98, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (98, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (99, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (100, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (101, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (101, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (102, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (102, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (103, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (104, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (105, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (105, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (105, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (106, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (106, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (106, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (106, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (109, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (109, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (110, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (111, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (111, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (111, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (111, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (112, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (112, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (112, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (113, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (113, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (113, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (113, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (114, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (114, 14);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (115, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (116, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (116, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (116, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (116, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (116, 8);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (117, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (117, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (118, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (118, 26);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (118, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (118, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (118, 5);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (119, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (119, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (119, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (119, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (120, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (121, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (121, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (122, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (123, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (123, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (123, 21);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (124, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (125, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (126, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (127, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (128, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (128, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (129, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (129, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (129, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (130, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (130, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (131, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (131, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (131, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (132, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (133, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (133, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (134, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (134, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (134, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (134, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (135, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (135, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (136, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (136, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (137, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (137, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (138, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (139, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (140, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (141, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (142, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (142, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (143, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (144, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (144, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (144, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (144, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (144, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (145, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (145, 7);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (146, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (147, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (147, 6);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (148, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (149, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (149, 11);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (149, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (149, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (150, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (150, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (150, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (151, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (151, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (152, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (152, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (153, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (153, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (154, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (156, 4);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (156, 26);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (156, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (156, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (156, 24);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (157, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (158, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (158, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (159, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (160, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (161, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (161, 13);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (161, 1);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (162, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (163, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (164, 3);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (165, 2);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (165, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (166, 22);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (166, 15);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (168, 23);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (168, 17);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (169, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (170, 14);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (170, 12);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (171, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (172, 20);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (172, 18);
INSERT INTO public.hasgenre (seriesid, genreid) VALUES (172, 5);
INSERT INTO public.network (networkid, name) VALUES (2, 'Netflix');
INSERT INTO public.network (networkid, name) VALUES (3, 'Rai 3');
INSERT INTO public.network (networkid, name) VALUES (5, 'VPRO');
INSERT INTO public.network (networkid, name) VALUES (6, 'BNN (NL)');
INSERT INTO public.network (networkid, name) VALUES (8, 'הערוץ הראשון');
INSERT INTO public.network (networkid, name) VALUES (9, 'DR1');
INSERT INTO public.network (networkid, name) VALUES (10, 'TV 2');
INSERT INTO public.network (networkid, name) VALUES (12, 'NBCSN');
INSERT INTO public.network (networkid, name) VALUES (13, 'EBS');
INSERT INTO public.network (networkid, name) VALUES (14, 'Mnet');
INSERT INTO public.network (networkid, name) VALUES (15, 'YouTube');
INSERT INTO public.network (networkid, name) VALUES (16, 'TVB');
INSERT INTO public.network (networkid, name) VALUES (18, 'TV3 (ES)');
INSERT INTO public.network (networkid, name) VALUES (20, 'PBS');
INSERT INTO public.network (networkid, name) VALUES (21, 'DR2');
INSERT INTO public.network (networkid, name) VALUES (22, 'Comedy Central');
INSERT INTO public.network (networkid, name) VALUES (26, 'Quest');
INSERT INTO public.network (networkid, name) VALUES (27, 'YLE');
INSERT INTO public.network (networkid, name) VALUES (28, 'Rai 1');
INSERT INTO public.network (networkid, name) VALUES (30, 'France 5');
INSERT INTO public.network (networkid, name) VALUES (31, 'Daum tvPot');
INSERT INTO public.network (networkid, name) VALUES (32, 'KBS TV2');
INSERT INTO public.network (networkid, name) VALUES (34, 'RTP1');
INSERT INTO public.network (networkid, name) VALUES (35, '+Globosat');
INSERT INTO public.network (networkid, name) VALUES (36, 'Rede Globo');
INSERT INTO public.network (networkid, name) VALUES (37, 'DIY Network');
INSERT INTO public.network (networkid, name) VALUES (38, 'Travel Channel');
INSERT INTO public.network (networkid, name) VALUES (39, 'LifeStyle HOME');
INSERT INTO public.network (networkid, name) VALUES (41, 'ProSieben');
INSERT INTO public.network (networkid, name) VALUES (42, 'SWR');
INSERT INTO public.network (networkid, name) VALUES (43, 'Servus TV');
INSERT INTO public.network (networkid, name) VALUES (44, 'NDR');
INSERT INTO public.network (networkid, name) VALUES (46, 'Channel 4');
INSERT INTO public.network (networkid, name) VALUES (47, 'RTL 4');
INSERT INTO public.network (networkid, name) VALUES (11, 'SBS (KR)');
INSERT INTO public.network (networkid, name) VALUES (48, 'TV4 (SE)');
INSERT INTO public.network (networkid, name) VALUES (1, '');
INSERT INTO public.network (networkid, name) VALUES (49, 'CTV (CN)');
INSERT INTO public.network (networkid, name) VALUES (23, 'BBC Four');
INSERT INTO public.network (networkid, name) VALUES (50, 'ABC (US)');
INSERT INTO public.network (networkid, name) VALUES (51, 'WOWOW');
INSERT INTO public.network (networkid, name) VALUES (52, 'SAT.1');
INSERT INTO public.network (networkid, name) VALUES (53, 'BBC');
INSERT INTO public.network (networkid, name) VALUES (40, 'Das Erste');
INSERT INTO public.network (networkid, name) VALUES (54, 'National Geographic');
INSERT INTO public.network (networkid, name) VALUES (55, 'Rai');
INSERT INTO public.network (networkid, name) VALUES (56, 'ZDF');
INSERT INTO public.network (networkid, name) VALUES (57, 'TF1');
INSERT INTO public.network (networkid, name) VALUES (58, 'TV3 (NO)');
INSERT INTO public.network (networkid, name) VALUES (59, 'RTL Television');
INSERT INTO public.network (networkid, name) VALUES (60, 'AXN');
INSERT INTO public.network (networkid, name) VALUES (61, 'ITV');
INSERT INTO public.network (networkid, name) VALUES (45, 'BBC One');
INSERT INTO public.network (networkid, name) VALUES (62, 'TVNZ');
INSERT INTO public.network (networkid, name) VALUES (63, 'Disney Channel');
INSERT INTO public.network (networkid, name) VALUES (64, 'HGTV');
INSERT INTO public.network (networkid, name) VALUES (19, 'BBC Two');
INSERT INTO public.network (networkid, name) VALUES (65, 'truTV');
INSERT INTO public.network (networkid, name) VALUES (66, 'ANT1');
INSERT INTO public.network (networkid, name) VALUES (67, 'Mega Channel');
INSERT INTO public.network (networkid, name) VALUES (68, 'BET');
INSERT INTO public.network (networkid, name) VALUES (69, 'Channel 5');
INSERT INTO public.network (networkid, name) VALUES (70, 'NBC');
INSERT INTO public.network (networkid, name) VALUES (25, 'HBO');
INSERT INTO public.network (networkid, name) VALUES (4, 'SBS (AU)');
INSERT INTO public.network (networkid, name) VALUES (71, 'Syfy');
INSERT INTO public.network (networkid, name) VALUES (72, 'M6');
INSERT INTO public.network (networkid, name) VALUES (73, 'TV4');
INSERT INTO public.network (networkid, name) VALUES (74, 'TV Tokyo');
INSERT INTO public.network (networkid, name) VALUES (75, 'RAI Fiction');
INSERT INTO public.network (networkid, name) VALUES (76, 'SVT');
INSERT INTO public.network (networkid, name) VALUES (77, 'NTR');
INSERT INTO public.network (networkid, name) VALUES (78, 'VH1');
INSERT INTO public.network (networkid, name) VALUES (79, 'Kanal 5');
INSERT INTO public.network (networkid, name) VALUES (80, 'BNN');
INSERT INTO public.network (networkid, name) VALUES (81, 'Canal+');
INSERT INTO public.network (networkid, name) VALUES (82, 'LivingTV');
INSERT INTO public.network (networkid, name) VALUES (83, 'CBeebies');
INSERT INTO public.network (networkid, name) VALUES (84, 'Starz');
INSERT INTO public.network (networkid, name) VALUES (85, 'Cuatro');
INSERT INTO public.network (networkid, name) VALUES (86, 'Disney+');
INSERT INTO public.network (networkid, name) VALUES (87, 'ORF');
INSERT INTO public.network (networkid, name) VALUES (33, 'NRK1');
INSERT INTO public.network (networkid, name) VALUES (88, 'Fuji TV');
INSERT INTO public.network (networkid, name) VALUES (89, 'Telefe');
INSERT INTO public.network (networkid, name) VALUES (29, 'TVE');
INSERT INTO public.network (networkid, name) VALUES (90, 'SundanceTV');
INSERT INTO public.network (networkid, name) VALUES (91, 'Discovery');
INSERT INTO public.network (networkid, name) VALUES (92, 'BBC Three');
INSERT INTO public.network (networkid, name) VALUES (93, 'Cartoon Network');
INSERT INTO public.network (networkid, name) VALUES (94, 'TeleToon');
INSERT INTO public.network (networkid, name) VALUES (95, 'Nippon Housou Kyoukai');
INSERT INTO public.network (networkid, name) VALUES (96, 'Joi');
INSERT INTO public.network (networkid, name) VALUES (97, 'YTV');
INSERT INTO public.network (networkid, name) VALUES (98, 'ITV1');
INSERT INTO public.network (networkid, name) VALUES (99, 'FOX');
INSERT INTO public.network (networkid, name) VALUES (100, 'The CW');
INSERT INTO public.network (networkid, name) VALUES (101, 'Tokyo Broadcasting System');
INSERT INTO public.network (networkid, name) VALUES (102, 'Adult Swim');
INSERT INTO public.network (networkid, name) VALUES (103, 'MBS');
INSERT INTO public.network (networkid, name) VALUES (104, 'France 3');
INSERT INTO public.network (networkid, name) VALUES (105, 'VTM');
INSERT INTO public.network (networkid, name) VALUES (106, 'CTC (JA)');
INSERT INTO public.network (networkid, name) VALUES (107, 'Tokyo MX');
INSERT INTO public.network (networkid, name) VALUES (108, 'Showcase (CA)');
INSERT INTO public.network (networkid, name) VALUES (109, 'Sky1');
INSERT INTO public.network (networkid, name) VALUES (110, 'The History Channel');
INSERT INTO public.network (networkid, name) VALUES (24, 'E!');
INSERT INTO public.network (networkid, name) VALUES (111, 'BR');
INSERT INTO public.network (networkid, name) VALUES (112, 'Paramount Comedy');
INSERT INTO public.network (networkid, name) VALUES (7, 'History');
INSERT INTO public.network (networkid, name) VALUES (113, 'MTV');
INSERT INTO public.network (networkid, name) VALUES (114, 'TV3');
INSERT INTO public.network (networkid, name) VALUES (115, 'The Comedy Channel');
INSERT INTO public.network (networkid, name) VALUES (116, 'Food Network');
INSERT INTO public.network (networkid, name) VALUES (117, 'FX');
INSERT INTO public.network (networkid, name) VALUES (17, 'MBC');
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (1, 1, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (2, 2, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (3, 3, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (4, 3, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (5, 3, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (6, 3, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (7, 4, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (8, 5, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (9, 6, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (10, 7, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (11, 8, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (12, 9, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (13, 9, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (14, 9, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (15, 10, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (16, 12, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (17, 12, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (18, 12, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (19, 12, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (20, 12, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (21, 12, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (22, 12, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (23, 12, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (24, 13, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (25, 14, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (26, 15, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (27, 16, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (28, 16, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (29, 17, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (30, 17, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (31, 17, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (32, 18, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (33, 19, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (34, 20, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (35, 20, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (36, 22, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (37, 22, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (38, 22, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (39, 23, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (40, 23, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (41, 24, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (42, 25, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (43, 25, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (44, 25, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (45, 25, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (46, 25, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (47, 26, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (48, 26, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (49, 26, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (50, 27, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (51, 27, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (52, 27, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (53, 27, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (54, 28, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (55, 29, 2014);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (56, 29, 2015);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (57, 29, 2016);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (58, 30, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (59, 31, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (60, 32, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (61, 32, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (62, 32, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (63, 33, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (64, 34, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (65, 35, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (66, 35, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (67, 35, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (68, 36, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (69, 36, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (70, 37, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (71, 37, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (72, 37, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (73, 37, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (74, 38, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (75, 38, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (76, 39, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (77, 39, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (78, 40, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (79, 41, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (80, 42, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (81, 43, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (82, 44, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (83, 44, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (84, 44, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (85, 45, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (86, 46, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (87, 46, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (88, 46, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (89, 46, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (90, 46, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (91, 47, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (92, 47, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (93, 47, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (94, 47, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (95, 47, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (96, 48, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (97, 49, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (98, 49, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (99, 49, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (100, 49, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (101, 49, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (102, 49, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (103, 49, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (104, 50, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (105, 51, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (106, 52, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (107, 52, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (108, 53, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (109, 54, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (110, 55, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (111, 55, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (112, 55, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (113, 56, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (114, 57, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (115, 57, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (116, 58, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (117, 59, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (118, 60, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (119, 60, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (120, 60, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (121, 60, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (122, 60, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (123, 60, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (124, 60, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (125, 60, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (126, 60, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (127, 60, 10);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (128, 60, 11);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (129, 60, 12);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (130, 60, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (131, 61, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (132, 62, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (133, 62, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (134, 63, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (135, 64, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (136, 64, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (137, 64, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (138, 64, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (139, 64, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (140, 64, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (141, 64, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (142, 64, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (143, 64, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (144, 64, 10);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (145, 65, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (146, 65, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (147, 66, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (148, 66, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (149, 66, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (150, 66, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (151, 66, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (152, 66, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (153, 66, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (154, 66, 25);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (155, 66, 19);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (156, 66, 15);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (157, 66, 12);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (158, 66, 13);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (159, 66, 14);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (160, 66, 11);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (161, 66, 21);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (162, 66, 26);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (163, 67, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (164, 67, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (165, 68, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (166, 69, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (167, 70, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (168, 71, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (169, 72, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (170, 72, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (171, 72, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (172, 72, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (173, 73, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (174, 73, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (175, 74, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (176, 75, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (177, 75, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (178, 75, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (179, 75, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (180, 76, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (181, 77, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (182, 78, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (183, 79, 1970);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (184, 79, 1971);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (185, 79, 1972);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (186, 79, 1973);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (187, 79, 1974);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (188, 79, 1975);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (189, 79, 1976);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (190, 79, 1977);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (191, 79, 1978);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (192, 79, 1979);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (193, 80, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (194, 80, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (195, 81, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (196, 81, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (197, 81, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (198, 82, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (199, 82, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (200, 83, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (201, 84, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (202, 85, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (203, 85, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (204, 85, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (205, 85, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (206, 85, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (207, 85, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (208, 85, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (209, 86, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (210, 87, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (211, 88, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (212, 89, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (213, 90, 2008);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (214, 90, 2012);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (215, 90, 2015);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (216, 90, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (217, 90, 2016);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (218, 90, 1960);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (219, 90, 1976);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (220, 90, 2004);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (221, 90, 1980);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (222, 90, 1984);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (223, 90, 1988);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (224, 90, 1992);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (225, 90, 1996);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (226, 90, 2000);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (227, 90, 2020);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (228, 91, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (229, 91, 2006);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (230, 91, 2007);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (231, 91, 2008);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (232, 91, 2009);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (233, 91, 2000);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (234, 91, 2010);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (235, 91, 2005);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (236, 91, 2004);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (237, 91, 2002);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (238, 91, 2001);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (239, 91, 2011);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (240, 91, 1987);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (241, 91, 1988);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (242, 92, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (243, 92, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (244, 93, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (245, 93, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (246, 93, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (247, 93, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (248, 93, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (249, 94, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (250, 94, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (251, 94, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (252, 95, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (253, 96, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (254, 97, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (255, 97, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (256, 97, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (257, 98, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (258, 99, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (259, 99, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (260, 99, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (261, 99, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (262, 99, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (263, 99, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (264, 99, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (265, 99, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (266, 99, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (267, 99, 10);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (268, 99, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (269, 100, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (270, 100, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (271, 101, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (272, 102, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (273, 102, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (274, 102, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (275, 102, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (276, 102, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (277, 103, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (278, 104, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (279, 105, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (280, 106, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (281, 107, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (282, 108, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (283, 109, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (284, 109, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (285, 109, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (286, 110, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (287, 110, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (288, 111, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (289, 111, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (290, 112, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (291, 112, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (292, 112, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (293, 112, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (294, 112, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (295, 113, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (296, 113, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (297, 114, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (298, 114, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (299, 115, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (300, 115, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (301, 115, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (302, 116, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (303, 116, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (304, 116, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (305, 116, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (306, 116, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (307, 117, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (308, 117, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (309, 118, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (310, 118, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (311, 119, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (312, 120, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (313, 120, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (314, 120, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (315, 121, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (316, 121, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (317, 122, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (318, 122, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (319, 122, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (320, 122, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (321, 122, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (322, 122, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (323, 122, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (324, 123, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (325, 123, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (326, 123, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (327, 123, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (328, 123, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (329, 123, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (330, 123, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (331, 123, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (332, 123, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (333, 124, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (334, 124, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (335, 124, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (336, 124, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (337, 125, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (338, 125, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (339, 125, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (340, 125, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (341, 126, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (342, 127, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (343, 127, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (344, 127, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (345, 127, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (346, 127, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (347, 128, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (348, 128, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (349, 129, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (350, 129, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (351, 129, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (352, 130, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (353, 131, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (354, 131, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (355, 132, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (356, 132, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (357, 133, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (358, 133, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (359, 133, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (360, 133, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (361, 133, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (362, 134, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (363, 135, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (364, 135, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (365, 135, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (366, 136, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (367, 137, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (368, 138, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (369, 138, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (370, 139, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (371, 140, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (372, 140, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (373, 140, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (374, 141, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (375, 141, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (376, 141, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (377, 142, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (378, 142, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (379, 142, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (380, 142, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (381, 142, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (382, 143, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (383, 144, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (384, 145, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (385, 145, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (386, 145, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (387, 145, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (388, 145, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (389, 145, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (390, 145, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (391, 146, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (392, 147, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (393, 147, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (394, 147, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (395, 147, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (396, 147, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (397, 147, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (398, 147, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (399, 148, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (400, 149, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (401, 149, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (402, 149, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (403, 149, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (404, 150, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (405, 150, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (406, 151, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (407, 152, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (408, 152, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (409, 153, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (410, 153, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (411, 154, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (412, 155, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (413, 155, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (414, 156, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (415, 156, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (416, 156, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (417, 156, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (418, 157, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (419, 157, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (420, 157, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (421, 158, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (422, 158, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (423, 159, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (424, 160, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (425, 160, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (426, 160, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (427, 161, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (428, 161, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (429, 162, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (430, 162, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (431, 162, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (432, 162, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (433, 162, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (434, 163, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (435, 163, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (436, 163, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (437, 163, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (438, 163, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (439, 163, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (440, 164, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (441, 164, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (442, 164, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (443, 164, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (444, 164, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (445, 164, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (446, 164, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (447, 164, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (448, 164, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (449, 165, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (450, 165, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (451, 165, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (452, 166, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (453, 166, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (454, 166, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (455, 166, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (456, 167, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (457, 167, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (458, 168, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (459, 169, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (460, 169, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (461, 170, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (462, 170, 2);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (463, 170, 3);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (464, 170, 4);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (465, 170, 5);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (466, 170, 6);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (467, 170, 7);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (468, 170, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (469, 170, 8);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (470, 170, 9);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (471, 171, 1);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (472, 171, 0);
INSERT INTO public.season (seasonid, seriesid, seasonnumber) VALUES (473, 172, 1);
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (1, 305188, 'Neighborhood Ghost Stories', 'Into commonly known as "ghost month" in the lunar calendar, when the value of the ghost door wide open, Roland once again "dragon woman" upper body with the same Lu Yong visited different parts of the territory, to understand the local neighborhood of the most bizarre supernatural events.

In addition, a set of seven consecutive Long Po District One ancient ghost by seven artists reinterpreted the classic chilling ghost story, including a ghost theater East, Wan Chai, Sha Tin braids girl, haunted house and other high street, take you into the scary fright country. Ghost story behind, and below, the dragon woman will invite a number of experts to explore the causes of the district Guigu things and share good fortune of the law, the spirit world reveal a variety of lesser-known underworld ghost town "culture."', null, 'Continuing', 45, 1, '2014-07-26', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (2, 305190, 'Outlaws and Lawmen', 'You know the names - Jesse James, Bat Masterson, Wyatt Earp, Pretty Boy Floyd, Bonnie & Clyde, John Dillinger, The Wild Bunch - but do you know their stories? From the end of the Civil War to the mid-1930s notorious lawmen and lawbreakers rose from obscurity to legend with the twitch of a trigger finger. They were the heroes and villains whose myths shaped our heritage, but the truth has rarely been explored. This magnificent mini-series sheds new light on the saints and sinners in a unique, entertaining and all-American tale that shoots straight from the hip. Executive producer for Discovery Channel: Angus Yates ; created and written by John Byrne Cooke ; Produced by TELENOVA Productions, Inc. in association with DISCOVERY CHANNEL ', null, 'Ended', 60, 1, null, 'tt3907936', null, null, 'N/A', 0, 'graphical/305190-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (3, 305194, 'Slasher', 'Rampaging serial killers leave carnage in their wake as their next victims fight to stay alive in this horror anthology series.

The first season, "The Executioner", centers around Sarah Bennett who, with husband Dylan, moves back to the town of her birth, Waterbury, and into her parents'' former home where them were murdered.

The second season, "Guilty Party", is centered on a group of former summer camp counselors who return to an isolated campground in order to bury the sins of their past, before being targeted, one by one, by an unknown killer.

The third season, "Solstice", centers around a group of neighbors who are targeted by a mysterious killer known as "The Druid" during the summer solstice period, due to their complicity in not saving a murder victim, in the previous year, who later wounded up being killed in front of their apartment complex.', null, 'Continuing', 50, 2, '2016-03-04', 'tt4667888', null, null, 'https://m.media-amazon.com/images/M/MV5BZDI4NDkyZTItYzg4Ni00MDc1LWE2MGYtMGI5NjYxZDhlODhmXkEyXkFqcGdeQXVyMjYwNDA2MDE@._V1_SX300.jpg', 0, 'graphical/305194-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (4, 305197, 'The Great Protector', 'During the chaotic times at the end of the Qing dynasty and in the early Republic of China, Elder escort master Dai establishes a reputable armed escort business. His disciple Liu Anshun is not only the one to follow him up as head of the business, he is also the one Master Dai wants to marry his daughter Dai Rong. Unfortunately, Liu Anshun is forced by circumstances to go to Beijing alone, where he establishes an escort business on his own. He grows out to be a legend in the escort world.
', null, 'Ended', 45, 1, '2014-12-25', '', null, null, null, 0, 'graphical/305197-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (5, 305200, 'North Sea Cycle Route', 'This documentary explores the north- sea-facing, eastern coast of Scotland and England, which offers powerful visual stimuli with its light, its atmosphere, its landscape and historic buildings. Life in the sparsely populated coastal regions of these two countries is archaic and has remained in close touch with nature: shaped by the Celts and Vikings, exposed to the forces of the elements and the North Sea. Endless expanses, dramatic cloud formations, hills, moors, forests and lakes characterise the region, as do the steep cliffs and long sandy beaches, fishing villages and lighthouses,castles, manors, parks and gardens.', null, 'Ended', 60, 4, '2015-06-09', '', null, null, null, 0, 'graphical/305200-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (6, 305207, 'Tent and Sex', 'How sexually liberated are we really? Sunny Bergman sets out to shine a light on various common sex subjects by means of four topics. Young, old, newly in love or together for years, gay, straight or transsexual, they all drop their guards in Sunny''s tent.', null, 'Ended', 30, 5, '2014-07-17', '', null, null, null, 0, 'graphical/305207-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (7, 305208, 'The Sunny Side of Sex', 'Since the sexual revolution of the 1960s, Westerners like to think their ideas about sex are fairly sophisticated compared to less developed nations. Dutch filmmaker Sunny Bergman sets out to talk to the women of Uganda, India and Cuba in an attempt to challenge this idea.', null, 'Ended', 30, 5, '2013-09-12', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (8, 305212, 'Live to Tell', 'Peter Berg ("Lone Survivor'''') serves as an executive producer of this series that features first-person accounts of people who have served on the front lines of the missions carried out by U.S. Special Operations Forces during the War on Terror since 2001. The hourlong episodes tell harrowing tales of the soldiers'' triumphs and sacrifices on the battlefields of Afghanistan and Iraq. In addition to first-person storytelling the show uses archival footage and cinematic re-enactments to bring the wartime experience to life for viewers.', null, 'Ended', 45, 7, '2016-01-10', 'tt5530706', null, null, 'https://ia.media-imdb.com/images/M/MV5BYzlkNTk2NTAtOTU1Mi00MWQ0LWFhYTEtNDJmZGE4ZjcwZjQ4XkEyXkFqcGdeQXVyMzUxODQwMw@@._V1_SX300.jpg', 0, 'graphical/305212-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (9, 305220, 'Follow the Money', 'Danish drama series set in the world of economic crime in the banks, on the stock exchanges, and in the boardrooms. It is the story of speculators, swindlers, corporate moguls and the crimes they commit in their hunt for wealth. It is the story of ambition that corrupts, and of the way organized criminals launder their ill-gotten gains. A story of our world the economic crisis almost overturned five years ago, and which is still holding its breath as it waits for the next bubble to burst and for the next economic tsunami to strike. And of course, it is the story of us human beings - the rich, the poor, the greedy, the fraudulent, the robbers who''ll go to any lengths to build the lives of our dreams.', null, 'Continuing', 60, 9, '2016-01-01', 'tt3638488', null, null, 'https://m.media-amazon.com/images/M/MV5BZWExN2E0ZDYtZDVjNC00NjY2LTk3MjEtNzdkYzBlNTk4ZWRjXkEyXkFqcGdeQXVyNjM5NTI4ODY@._V1_SX300.jpg', 0, 'graphical/305220-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (10, 305228, 'The History of Christmas', 'Hop on Santa''s sleigh and take an enchanting journey through the history of the world''s favorite holiday. Learn the origins of the Western world''s most enduring traditions.', null, 'Ended', 200, 7, '2008-10-28', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (11, 305235, 'Timmy Horton Outdoors', 'Timmy Horton Outdoors presented by Raymarine is a family-friendly outdoor television show recorded on public waters with the focus on entertaining and educating anglers of all levels.
Bassmaster Elite Pro, Timmy Horton has won over 1 million dollars on the Bassmaster trail. Tim hosts the show and provides an in depth perspective of “how to” become a better angler. The show is recorded on a variety of public waters around the country in order to provide a broad perspective of fishing action for viewers and to highlight different tactics and methods in various fishing scenarios.
Timmy’s seasoned knowledge and laid-back style set the stage for an entertaining
30-minute show that presents a load of fishing tips for the viewer in every episode.', null, 'Continuing', 25, 12, null, '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (12, 305237, 'Superstar K', 'Survival public audition program to dig a new singer', null, '', 60, 14, '2009-07-04', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (13, 305243, 'Shaolin Clenched Fists ', 'Shaolin Clenched Fists is a SBS variety show that centers on Kim Byung Man and a group of male and female celebrities going to the Shaolin Temple to train themselves in martial arts.', null, 'Continuing', 85, 11, '2015-10-17', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (14, 305245, 'f(x)=1cm', 'Open your eyes and what? f(x) is in front of you? f(x) are in my seat? I''ll get f(x)! A hidden camera program.', null, 'Ended', 10, 1, '2015-11-10', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (15, 305250, 'Puck!', 'Due to his ex-wife’s debt, Joon-Man had no choice but to work for a gang boss. Even though he has a warm personality, he works as a loan shark. To get debt from an ice hockey coach, Joon-Man joins the ice hockey team.', null, 'Ended', 60, 11, '2016-01-01', 'tt5545832', null, null, 'https://m.media-amazon.com/images/M/MV5BNTJjMWU1YWMtYWRiNy00NTU4LWJlMGMtOTM1YWExZDhkNmMyXkEyXkFqcGdeQXVyNjE5NzI3NTU@._V1_SX300.jpg', 0, 'graphical/305250-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (16, 305252, 'DoDo Goes Shopping', null, null, 'Ended', 30, 16, '2015-11-09', '', null, null, null, 0, 'graphical/305252-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (17, 305254, 'NFL Cheerleaders Making the Squad', 'NFL Cheerleaders Making the Squad takes viewers behind the scenes to see what it''s really like to audition for three of the biggest cheerleading squads going!', null, 'Ended', 45, 1, null, '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (18, 305255, 'Tomorrow Victory ', 'A delightful growth story of a woman who fights the adversities and overcomes them with fierce struggle, as she tries to keep her family business running.', null, 'Ended', 35, 17, '2015-11-02', 'tt6457530', null, null, 'https://m.media-amazon.com/images/M/MV5BYjhkMWM0YzktOGNkMy00MGI4LWIyYTUtNDljMWJkNWNkMTcwL2ltYWdlXkEyXkFqcGdeQXVyMzE4MDkyNTA@._V1_SX300.jpg', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (19, 305263, 'One More Happy Ending', 'What if true happiness comes only after you’ve gone around the block a few times? Han Mi Mo and Baek Da Jung were members of a former girl group known as Angels. They now run a remarriage consulting company that gives divorced people a second chance at love. Mi Mo is divorced while Da Jung is in a troubled marriage to a rich man. Former band mate Go Dong Mi is now an elementary school teacher while Hong Ae Ran works for an Internet shopping mall. When the four friends all become entangled with Song Soo Hyuk, an entertainment reporter and single father, and his friend, Goo Hae Joon, will they get a second chance at love? ', null, 'Ended', 60, 17, '2016-01-20', 'tt5445338', null, null, 'https://m.media-amazon.com/images/M/MV5BZDYyNTE1ODYtNzU4My00ZjQ4LTlkYzgtYjY3MjlmN2NiZmQ0XkEyXkFqcGdeQXVyMzE4MDkyNTA@._V1_SX300.jpg', 0, 'graphical/305263-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (20, 305266, 'Country Strife: Abz on the Farm', 'Ex-boyband rapper Abz Love and his girlfriend Vicky Fallon want to leave their city life and buy a smallholding in Wales. But with little money and farming experience, will they achieve their dream?', null, 'Continuing', 30, 19, '2015-08-16', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (21, 305268, 'America''s Heartland', 'Now in our eleventh season, America''s Heartland continues to bring in stories from all across the United States. We''ve discovered unforgettable people and places in the world of food and farming. America''s Heartland is made possible by funding from Farm Credit, Crop Life America and the Fund for Agriculture Education. Americas Heartland is produced by KVIE in Sacramento, California.', null, 'Continuing', 30, 20, null, 'tt0802425', null, null, 'https://m.media-amazon.com/images/M/MV5BNjY5NTE3NmYtZjlhMC00MmVlLWE4NjQtY2QzZWI5MGY0MjMyXkEyXkFqcGdeQXVyNjc3ODM3NzM@._V1_SX300.jpg', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (22, 305279, 'Street Outlaws: New Orleans', 'This time instead of being in the 405 this show will take us to the Big Easy; New Orleans! Featuring no one else but Big Chief''s number one enemy, Kye Kelly his third generation Camaro The Shocker. Big Chief claims that Kye Kelly is the one and only person he has not beat yet. Chief is so set on beating Kye Kelly that he now has a Promod called the Crowmod which his first goal is to use to beat Kye Kelly!', null, 'Continuing', 45, 1, '2016-02-22', 'tt4728346', null, null, 'N/A', 0, 'text/305279.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (23, 305283, 'Not Safe with Nikki Glaser', 'Not Safe with Nikki Glaser blends interviews, experiments, and discussions about subjects revolving around sex, relationships, and the stuff nobody wants to talk about.', null, 'Ended', 25, 22, '2016-02-09', 'tt4918098', null, null, 'https://m.media-amazon.com/images/M/MV5BMTQ5NDcyOTEyM15BMl5BanBnXkFtZTgwNTU0MzkwODE@._V1_SX300.jpg', 0, 'graphical/305283-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (24, 305284, 'Empire of The Tsars: Romanov Russia with Lucy Worsley', 'British historian Lucy Worsley travels to Russia to investigate the 300-year reign of the Romanov dynasty.', null, 'Ended', 60, 23, '2016-01-06', '', null, null, null, 0, 'graphical/305284-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (25, 305285, 'Hollywood Medium with Tyler Henry', 'HOLLYWOOD MEDIUM is a one-hour reality series that follows 20-year old Tyler Henry, exploring the world of this self-proclaimed clairvoyant medium as he balances his unique abilities with trying to be a regular young adult. Formerly of a small-town and now living in the City of Angels, Tyler has quickly become one of Hollywood''s top mediums, bringing messages from the heavens and profound visions to today''s stars.', null, 'Continuing', 45, 24, '2016-01-24', 'tt5271054', null, null, 'https://m.media-amazon.com/images/M/MV5BZWM3ZjRkNmUtNGU0Yy00NTFlLThkNTUtZmQxZjI4OTMzMTM4XkEyXkFqcGdeQXVyNTY4Nzk2NTY@._V1_SX300.jpg', 0, 'graphical/5c6a62ac6c538.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (26, 305286, 'Tracey Ullman''s Show', 'Tracey Ullman returns to British screens with her unique take on some of the extraordinary characters who live in, or are visiting, the global hub that is the UK.', null, 'Continuing', 30, 25, '2016-01-11', 'tt5337038', null, null, 'https://m.media-amazon.com/images/M/MV5BMzc3ZTdhYzEtYzFmYi00MGUyLWFmZDMtNzZmZWNkMDFlOGU3XkEyXkFqcGdeQXVyNTcxNzI4NQ@@._V1_SX300.jpg', 0, 'graphical/305286-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (27, 305288, 'Stranger Things', 'Tribute to the classic supernatural mysteries of the 80s, "Stranger Things" is the story of a boy who disappears in the small town of Hawkins, Indiana, without a trace in 1983. In his desperate search, both his friends and family and the local sheriff are involved in an extraordinary enigma: top-secret experiments, terrifying paranormal forces and a very, very rare girl ...', null, 'Continuing', 50, 2, '2016-07-15', 'tt4574334', null, null, 'https://m.media-amazon.com/images/M/MV5BZGExYjQzNTQtNGNhMi00YmY1LTlhY2MtMTRjODg3MjU4YTAyXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_SX300.jpg', 0, 'graphical/5c37201658a89.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (28, 305289, 'Music Moguls: Masters of Pop', 'This is the secret, and untold, history of pop and rock from the men and women who pulled the strings behind the scenes - the producers, the managers and the PR giants.', null, 'Ended', 60, 23, '2016-01-15', '', null, null, null, 0, 'graphical/305289-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (29, 305290, 'h3h3Productions', 'A chubby manchild makes video blogs.', null, 'Continuing', 10, 15, null, '', null, null, null, 0, 'graphical/305290-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (30, 305291, 'Engine Addict with Jimmy de Ville', null, null, 'Continuing', 45, 26, '2015-09-08', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (31, 305313, 'Girls'' Love Story', null, null, 'Ended', 10, 31, '2015-06-16', '', null, null, null, 0, 'graphical/305313-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (32, 305321, 'Undersea Explorer', 'This nature series takes you beneath the surface of the ocean and into some of the greatest aquatic environments of the world. Discover mysterious marine locales and remarkable coral formations. Visit the exquisite Galapagos Islands and learn how this rich ecosystem is under attack. Enter an extensive system of underground caves in Acumel. And explore the Canadian government''s efforts to develop an ambitious artificial reef project. With breath-taking underwater photography, this series reveals the many facets of this dangerous and fascinating kingdom.', null, 'Ended', 1, 1, null, '', null, null, null, 0, 'text/305321.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (56, 83182, 'Travellers'' Century', 'Benedict Allen follows in the footsteps of three celebrated travellers.', null, 'Ended', 60, 53, '2008-07-24', '', null, null, null, 0, 'graphical/83182-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (33, 305323, 'My Mediterranean with Adrian Chiles', 'Adrian Chiles explores his religious beliefs by visiting various festivals across the Mediterranean to find out whether or not his choice of church was down to were he was born.', null, 'Ended', 60, 19, '2016-01-03', 'tt5359760', null, null, 'N/A', 0, 'graphical/305323-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (34, 305325, 'Out 1', '"Out 1" is a very precise picture of post May ''68 malaise - when Utopian dreams of a new society had crashed and burned, radical terrorism was starting to emerge in unlikely places and a great many other things. Two marginals who don''t know one another stumble into the remnants of a "secret society": Colin, a seemingly deaf-mute who all of a sudden begins to talk and Frederique, a con artist working the "short con" (stealing drinks and tricking men who think she''s a hooker out of their money). Meanwhile there are two theater groups rehearsing classic Greek dramas: "Seven Against Thebes" and "Prometheus Bound". A member of the Moretti group passes a note to Leaud about "The 13" which sends Leaud on a search for "The 13". His search brings him eventually to Bulle Ogier''s shop in Les Halles "L''Angle du Hasard." Berto follows much the same path when she steals a cachet of letters from Jacques Doniol-Valcroze and tries to get money from their owners for their return. These twin activities reactivate "The 13" which had been dormant for years, revealing among other things that the two theater groups were once one.', null, 'Ended', 90, 1, '1971-10-09', '', null, null, null, 0, 'graphical/305325-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (35, 305326, 'Idiotsitter', 'When wild child Gene is put under house arrest in her family''s mansion, her parents hire buttoned-up nanny Billie to look after her. Trapped in each other’s company, the two strike up an unlikely friendship and cause all sorts of trouble. It''s an odd-couple story that reaches new depths of depravity.', null, 'Continuing', 25, 22, '2016-01-14', 'tt3532050', null, null, 'https://m.media-amazon.com/images/M/MV5BMTkyMTIxMzQ4MV5BMl5BanBnXkFtZTgwNTY3MjY2MTE@._V1_SX300.jpg', 0, 'text/305326.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (36, 305327, 'Descendants of the Sun', 'It''s love at first sight for special forces Captain Yoo Shi-jin when he meets a beautiful doctor who treats his wounds. Over before it can truly begin, the two separate due to their opposite values -- one being a soldier who takes lives, and the other a doctor who fights to save them. Almost a year later, a fateful reunion takes place in Uruk, causing them to work together. Can Shi-jin and Mo-yeon overcome their biggest hurdle, or was it never meant to be?', null, 'Ended', 60, 32, '2016-02-24', 'tt4925000', null, null, 'https://m.media-amazon.com/images/M/MV5BM2ExNGE4ZjItMmY5My00ZDU5LWJiMzMtOTFjMDRmNWVlMzZiXkEyXkFqcGdeQXVyMzE4MDkyNTA@._V1_SX300.jpg', 0, 'graphical/305327-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (37, 305340, 'The Voice Kids (BR)', 'The series is part of the franchise The Voice and is based on a similar competition format in the Netherlands, called The Voice of Holland. But The Voice Kids is a competition for children and adolescents. The winner is entitled to a prize of R $ 250,000.', null, 'Continuing', 90, 36, '2016-01-03', '', null, null, null, 0, 'graphical/305340-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (38, 305344, 'Stone Age', 'Father and son stone experts Steve and Nick Rhule do kick-ass yard makeovers using rock to make everything from waterfalls to fire pits to patios to one-of-a-kind art pieces.', null, 'Ended', 30, 37, '2013-06-16', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (39, 305345, 'Boy to Man', 'Award-winning filmmaker Tim Noonan is on an epic quest to discover what it means to become a man. He travels the globe to immerse himself in unique native cultures and experience the most extreme and dangerous coming-of age rituals. Tim endures ancient ceremonies, bloody initiations and gruelling tests of manhood to be accepted as man of the tribes. Amongst a clan of reindeer people in Siberia Tim learns to drive a sled, sleeps in the snow, braves frostbite and drinks reindeer blood. On the mysterious Guinea Bissau Islands Tim must pass a series of tests such as being beaten naked, eating bush rats and monkeys and receiving a tribal scar. Deep in Mongolia as an ancient rite of passage, he must capture and train a golden eagle to successfully hunt a fox in the wild. This is a solitary mission with Tim filming everything himself. There is no backing out so Tim has no choice but to toughen up to survive. ', null, 'Continuing', 60, 38, null, '', null, null, null, 0, 'graphical/305345-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (40, 305349, 'Offworld Cookery', 'Offworld Cookery, a tragic outdoor food spasm following two (or sometimes three when he can be fucking bothered) inebriated Northern English morons and their failed attempts at cooking three course meals in the wilderness. You may pick up some useful culinary techniques... but we fucking doubt it.', null, 'Ended', 20, 1, '2015-04-08', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (41, 305352, 'Tiny House Australia', 'The "tiny house" movement has spread from Britain to the US and now Australia as space-conscious folk downsize to homes as small as 10 square metres.

Whether it’s their home, holiday house, cute cottage, rural retreat or beloved beach shack, thousands are reaping the benefits of tiny living, enjoying quality of life at a fraction of the price.

Yet the trick is to get as much of the charm and functionality of a big home into those tiny houses without compromising the “tiny house” spirit.  

Follow eight Australian couples as they search for the perfect tiny house in a new, locally made series Tiny House: Australia.

Selling Houses Australia host Andrew Winter guides the couples over eight weeks as they consider three homes in each epiosde.

Australia has some of the largest homes in the world – with an average of 243 square metres – so it will be fascinating to see what can be done with a fraction of the size and a “little” inspiration … as well as the ultimate choices our couples make.', null, 'Continuing', 30, 39, '2016-01-04', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (42, 305357, 'Iftah Ya Simsim', 'Iftah Ya Simsim is the first international co-production of the American children''s television series Sesame Street created in the Arab world', null, 'Continuing', 25, 20, '2015-05-04', 'tt4550686', null, null, 'N/A', 0, 'graphical/305357-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (43, 305375, 'Children Talking', 'A captivating insight into British life straight from the mouths of school children from the 1960s and ''70s.', null, 'Ended', 60, 23, '2015-12-21', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (44, 305378, 'Love', 'A program that follows a couple who must navigate the exhilarations and humiliations of intimacy, commitment and other things they were hoping to avoid.', null, 'Ended', 30, 2, '2016-02-19', 'tt4061080', null, null, 'https://m.media-amazon.com/images/M/MV5BYzgwMWI4ZGMtOGYyMi00ZmYyLWE0MzUtYmU5MjE1NDQ5MDhmXkEyXkFqcGdeQXVyNjEwNTM2Mzc@._V1_SX300.jpg', 0, 'graphical/305378-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (45, 305381, 'Plotlands', 'Sold a small plot of land for a tiny outlay, Cockney widow Chloe Marsh and her two daughters flee the slums of post-war London for a better life in the country. But rural life in 1922 is hard. Chloe and her fellow pioneers have no mains water, no gas, no electricity and no jobs. Forced to live in tents until they can afford a shack,  they carve a community out of the hostile countryside.', null, 'Ended', 50, 45, '1997-05-18', 'tt0118432', null, null, 'N/A', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (55, 83181, 'Turbulent Men', 'This is a spin-off from the german movie "Maybe, Maybe Not". It starts in the middle of the movie while Axel, the straight sexy guy, moved in with Norbert, the shy gay guy. After leaving his wife Doro the whole story gets into a total different direction. Norbert and his gay friends are getting Axel into all kinds of trouble and Axel drags em into all sorts of missunderstanding during his straight-sex-stories. Hilarious!', null, 'Ended', 30, 52, '2003-04-25', 'tt0341135', null, null, 'https://m.media-amazon.com/images/M/MV5BNDlkNTViYjEtNDJlOC00YTI4LWFjMzAtODM1Yjk1MmMzYjczXkEyXkFqcGdeQXVyMzYwMTkzNTQ@._V1_SX300.jpg', 0, 'graphical/83181-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (46, 83169, 'The Sex Education Show', 'When it comes to sex, Britain is in meltdown. We''ve got the worst ever rate of sexually transmitted diseases among young people, the highest number of teenage pregnancies in western Europe and, most worryingly of all, unlimited access to extreme pornography.

Presented by journalist Anna Richardson, this new six-part series aims to tackle the nation''s sexual ignorance and reticence by capturing a wide range of different personal experiences of sexual issues and problems, as well as offering candid advice.

The series will reveal the secret sex lives of teenagers as they talk about pornography, abortion, sexual disease, homosexuality, peer pressure and pregnancy. The series will also reveal the results of the biggest ever television survey of teenage attitudes to sex to discover the real state of sex education in Britain today.', null, 'Ended', 30, 46, '2008-09-09', '', null, null, null, 0, 'graphical/83169-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (47, 83170, 'Vrienden voor het leven', 'Vrienden voor het Leven was a Dutch sitcom that from 1991 to 1995 was broadcasted by RTL 4. The series was based on the British television series The Two of us by Alex Shearer. The series was produced by Joop van den Ende TV Productions, later Endemol. Vrienden voor het Leven revolves around the events of the cohabiting couple Eddie Veenstra (Peter Lusse) and Ellen van den Berg (Mary-Lou van Steenis) with their relatives and acquaintances.', null, 'Ended', 30, 47, '1991-09-23', 'tt0098943', null, null, 'N/A', 0, 'graphical/83170-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (48, 83171, 'Alone in Love', 'This is the story of two ordinary people who meet and fall in love, marry and divorce, but are unable to move on from that point, because their love did not end when they separated.
Eun-ho (Son Ye-jin) and Dong-jin (Gam Woo-seong) meet one day at the bookstore where he works and they''re immediately drawn to each other. They fall in love after subsequent meetings, and the two are married like millions of others who are in similar situations.
But two years later they are divorced, and that''s where the story opens, a pair of divorcees sitting across from each other talking about each other''s lives. At first, there''s nothing about them that seems to stand out from the crowd - they have ordinary jobs, he still works at a bookstore and she at the fitness club and neither is extremely good-looking, nor rich, nor charismatic. As the story progresses and reveals the reasons behind their divorce, their continuing meetings after divorce, their mingling in each other''s lives, their matchmaking attempt for each other, and their internal monologues about each other, it becomes apparent they are each other''s destiny if such thing exists. Even so, getting back together might be asking too much, since that would open up a wound that they''ve tried to bury for 3 years. Furthermore their new love-interests, Mi-yeon (Oh Yoon-ah) and Hyeon-joong (Lee Jin-wook) are marking their steps into Dong-jin and Eun-ho''s lives, and the new love might just be a wiser option for two that have tried but failed already. In fact, Hyeon-joong may have more things in common with Eun-ho than she ever did with Dong-jin, and Mi-yeon seems to need Dong-jin more than Eun-ho ever did, this alone might be enough for the pair of divorcees to finally cut the tie between them....', null, 'Ended', 60, 11, '2006-04-03', '', null, null, null, 0, 'graphical/83171-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (49, 83172, 'Maria Wern', 'After the death of her husband, Police Inspector Maria Wern moves to the picturesque Swedish island of Gotland with her two children to start over. While struggling with raising two children as a single mother and still mourning her husband''s death, Maria manages to sustain her female perspective and approach to life in a harsh and male dominated environment. She constantly encounters rage, death and evil but she remains determined to endure what sometimes feels like an losing battle. ', null, 'Ended', 60, 48, '2008-09-16', 'tt1129398', null, null, 'https://m.media-amazon.com/images/M/MV5BNThmMjA4MjAtOGYyYS00YzU1LWIzMWUtZDExZjU2MWJjNzhjXkEyXkFqcGdeQXVyMTMwOTMzNzU@._V1_SX300.jpg', 0, 'graphical/83172-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (50, 83173, 'All You Need Is Love: The Story of Popular Music', 'All You Need Is Love: The Story of Popular Music is the name of a 17-part television documentary series on the history of modern pop music directed by Tony Palmer, originally broadcast worldwide between 1976 and 1980. The series covers the many different genres that have fallen under the "pop" label between the mid-1800s and 1976, including folk, ragtime, Tin Pan Alley, vaudeville and music hall, musical theater, country, swing, jazz, blues, R&B, rock ''n'' roll and others.', null, 'Ended', 55, 1, '1977-01-01', 'tt0247846', null, null, 'N/A', 0, 'graphical/83173-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (51, 83174, 'The Spirit of the Sword', 'Hong Kong star Nicholas Tse continues his string of period action dramas with the exciting epic series The Spirit of the Sword. This is Tse''s third starring role in a Gu Long adaptation, following Big Shot and Proud of Twins, and he is clearly in his element, handling both the action and drama with convince and charisma. Television fans may remember ATV''s classic 1978 The Spirit of the Sword adaptation starring the late Leslie Cheung, but this new updated version is an equally worthwhile and star-studded affair. Other than Tse, the drama stars EEG labelmate Gillian Chung of Twins, as well as Hong Kong actor Patrick Tam (Born Wild) and Taiwanese singer/actress Annie Yi (Poor Prince).

This new version of The Spirit of the Sword departs from the original novel by revolving around Japanese swordsman Bai Yi Ren, offering a new perspective on the story. Tse stars as a young swordsman who travels to the Middle Kingdom in search of seven mythical swords to fulfill his father''s dying wishes.

Though he has no intentions of causing trouble, his quest unwittingly brings him into conflict with the martial arts world as he gets pulled into mysterious conspiracies and a dangerous clash with his stepbrother.', null, 'Ended', 45, 49, '2007-12-04', '', null, null, null, 0, 'graphical/83174-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (52, 83175, 'Inside the Medieval Mind', 'In ‘Inside the Medieval Mind’ one of the world’s greatest authorities on the Middle Ages, Professor Robert Bartlett of St Andrews University, investigates the intellectual landscape of the medieval world.

In this series he opens up the often surprising discontinuities and similarities between the medieval age and our own as he remarks:

“In many ways these were people very much like us, in terms of family, ambitions for children and the world of emotions. On the other hand, they inhabited a very different world, in which it was believed the dead visited the living, and where somewhere there lived a race of people with the heads of dogs.”

The series comprises four one hour programmes, each on a different aspect of medieval thinking: Belief; Sex; Power; Knowledge. During the series he visits numerous medieval locations, from Westminster Abbey to Pluscarden Abbey near Inverness, with wide use of readings from original medieval sources.', null, 'Ended', 60, 23, '2008-04-17', 'tt1245423', null, null, 'N/A', 0, 'graphical/83175-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (53, 83176, 'Opportunity Knocks', 'From the creators of Beauty and the Geek comes a new kind of game show that shows up right on your doorstep.
Contestants on this ABC show are quizzed about their knowledge of their family members for cash prizes. Ashton Kutcher''s production company is the force behind this alternative project', null, 'Ended', 45, 50, '2008-09-23', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (54, 83178, 'Sadamitsu the Destroyer', 'Sadamitsu, a high-school delinguents turned to a masked-hero, while not dealing with his rocky relationship with the strong female protagonist, he puts on a motorcycle-helmet-like mask and becomes a semi-robotic superhero who fights. He is assisted by other possibly- mechanical creatures in order to save the earth from the invasion of 20,000,000 escaped alien convicts.', null, 'Ended', 25, 51, '2001-01-17', '', null, null, null, 0, 'graphical/83178-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (57, 83183, 'Abenteuer 1900 ', null, null, 'Ended', 25, 40, '2004-11-09', 'tt0381777', null, null, 'N/A', 0, 'graphical/83183-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (58, 83184, 'Secret Society', 'This is Duncan Campbell''s shocking BBC video documentary series Secret Society (1987) which shows the never broadcasted episodes on secret groups, committees and societies that operate silently within British government.', null, 'Ended', 30, 53, '1987-08-01', 'tt0815076', null, null, 'N/A', 0, 'graphical/5bb2bbcd02e23.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (59, 83185, 'My Brilliant Brain', 'My Brilliant Brain is a compelling three part documentary series exploring the incredible inner workings of the human brain. The programmes look at a group of remarkable people and poses questions about the origins of genius: are these extraordinary abilities genetic, developed or acquired by accident?', null, 'Ended', 45, 54, '2007-07-09', 'tt1066834', null, null, 'https://m.media-amazon.com/images/M/MV5BZGQ5ODg3NTYtMTA3MC00OTE2LWI2ODItODQ4NjM1MWIwN2FhXkEyXkFqcGdeQXVyOTI1Mjc0OA@@._V1_SX300.jpg', 0, 'graphical/83185-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (60, 83186, 'Blu Notte', 'The program shows some of the most controversial events in recent Italian history, using narrative techniques and in depth analysis of the historic documents.', null, 'Ended', 60, 55, '1998-09-25', 'tt4574914', null, null, 'N/A', 0, 'graphical/83186-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (61, 83190, 'Moar Gardening', 'MOAR GARDENING is all about getting the most out of your outdoor space. Landscape architect Brendan Moar shows how to create spectacular gardens simply. Brendan takes us on a journey to discover everything there is to know about gardens and landscape.', null, '', 25, 1, null, '', null, null, null, 0, 'graphical/83190-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (62, 83191, 'Miss Marple Classic', 'Never mind purists who bemoan Margaret Rutherford''s incarnation of Agatha Christie''s celebrated spinster sleuth. These four British films, produced between 1961 and 64, are jolly good, regardless of their tenuous connection with Miss Marple as written, or with Christie herself. One of the films, in fact, Murder Ahoy, is an original screenplay credited as "an interpretation of Miss Marple." And two others, Murder at the Gallop and Murder Most Foul were based on books featuring Christie''s other famed detective, Hercule Poirot." But no matter. The redoubtable Rutherford indelibly makes Marple her very own, or, as she proclaims to Inspector Craddock (Charles Tingwell), with whom she locks horns throughout all four films, "I am always myself." ', null, 'Ended', 85, 1, '1962-02-02', '', null, null, null, 0, 'graphical/83191-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (63, 83193, 'The Miserables (2000)', 'Set against the background of the French Revolution and based on Victor Hugo''s classic novel this is the story of Jean Valjean who is sent to prison for stealing a loaf of bread and is released after nineteen years. He meets and cares for a beautiful but poverty-stricken young girl named Fantine who has daughter Cosette. After Fantine''s death Valjean brings Cosette up but he is haunted by Javert - a policeman whose search for Valjean has become an obsession.', null, 'Ended', 90, 57, '2000-09-04', 'tt0230534', null, null, 'https://m.media-amazon.com/images/M/MV5BMTkzMzIxNTQ4MF5BMl5BanBnXkFtZTcwNzQwMDcxMQ@@._V1_SX300.jpg', 0, 'graphical/83193-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (64, 83194, 'Luksusfellen', null, null, 'Continuing', 45, 58, '2008-01-30', 'tt7044706', null, null, 'https://m.media-amazon.com/images/M/MV5BNTdhYzlmYTMtZjc3NS00YTIwLWJiYTUtNDgwZjdhZDhiZGVlXkEyXkFqcGdeQXVyNzk2MDI0OTQ@._V1_SX300.jpg', 0, 'graphical/83194-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (65, 83195, 'The Manns', null, null, 'Ended', 90, 40, '2001-12-17', 'tt0250573', null, null, 'https://m.media-amazon.com/images/M/MV5BMmVkNThmMmMtZmU0ZC00MjEzLTk0OGQtZWRkNmNjYmIxYTMwXkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg', 0, 'graphical/83195-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (66, 83196, 'Alarm for Cobra 11', 'Their precinct is the Autobahn, they work at breakneck speed. Their enemies: stolen car dealers, killers and extortionists. 24/7 service for the men of Cobra 11 - Our safety is their job!', null, 'Continuing', 45, 59, '1996-03-12', 'tt0115088', null, null, 'https://m.media-amazon.com/images/M/MV5BMTU5Mzk5OTk2NV5BMl5BanBnXkFtZTcwNjMxODQ2NQ@@._V1_SX300.jpg', 0, 'graphical/83196-g5.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (67, 83198, 'Gunther''s ER', 'He''s Back... And This Time He''s Trying To Save Lives

First he dissected human bodies to show you how they work. Next he did it to show you how they die. Now he''s going to show you how to save them. Dr Gunther von Hagens presents his third series of lectures given to an audience of body donors and their families.

In these master classes, von Hagens recreates serious injuries on human bodies to reveal just what happens to the body when faced with assaults or accidents and to show what doctors, nurses and first-aiders can do, working against the clock, to try to preserve life.

He is joined by Dr John Heyworth, A&E Consultant, Southampton University Hospitals Trust, whose illuminating commentary is based on his first-hand, frontline experience of a busy Emergency Department. And for the first time, von Hagens has teamed up with the British Red Cross, whose representative, Emma Rand, demonstrates simple First Aid techniques that could mean the difference between life and deat', null, 'Ended', 60, 46, '2008-12-28', '', null, null, null, 0, 'graphical/5cb031a1a6099.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (68, 83200, 'Exposed...', 'What makes us do the things we do?  It´s perplexed philosophers and scientists for centuries, but *Exposed…* hopes to unravel what it means to be human.

Presented by Dr John Marsden, one of the most down to earth psychologists you will ever meet, the four programmes tackle the biological and psychological background to the way we think, feel and behave.

If we know more about how and why we behave in the way we do, perhaps we may even be able to live happier, more fulfilled lives.

The series is packed with impressive snippets of must-tell-your-friends information, and includes amazing insights into what makes us tick.

Each programme looks at how we survive with certain kinds of people, situations and environments:
Liars , Heartbreak , Persuaders , and City Life.', null, 'Ended', 60, 53, '2005-05-28', '', null, null, null, 0, 'graphical/83200-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (69, 83201, 'The Contender Asia', 'From the creator of Survivor and The Apprentice, The Contender Asia follows 16 Muay Thai middleweights as they compete to win $150000 US and the title of Contender Champion.', null, 'Ended', 60, 60, '2008-01-16', 'tt1068188', null, null, 'N/A', 0, 'graphical/83201-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (70, 83202, 'The 60s: The Beatles Decade', 'When people are asked to think about the 1960s, they automatically think love, peace and...The Beatles.

Over the decade, the Fab Four changed from cheeky pop mop-heads to blissed-out experimentalists, and this transformation mirrored the country as a whole.

This five-part documentary series looks at how the world''s most famous pop group personified one of the most explosive and volatile decades of the 20th century. Although the 60s generation had it all, a changing political landscape and changing attitudes to sex and relationships were dragging Britain into a new age.

By the end of the decade, The Beatles had split up, proving that the band''s personalities and their music had become true symbols of an iconic decade.', null, 'Ended', 1, 1, '2007-05-25', '', null, null, null, 0, 'graphical/83202-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (71, 83203, 'Heretic', 'Series of six programmes each looking at a scientist who challenged accepted wisdom and offended the scientific establishment with unorthodox theories.', null, 'Ended', 1, 53, '1994-07-05', '', null, null, null, 0, 'graphical/83203-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (72, 83204, 'Katy Brand''s Big Ass Show', null, null, 'Ended', 30, 61, '2007-10-19', 'tt1181712', null, null, 'https://m.media-amazon.com/images/M/MV5BMTg3MjM2MDM3N15BMl5BanBnXkFtZTgwMTY5MjcwMzE@._V1_SX300.jpg', 0, 'graphical/83204-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (73, 83205, 'Sky Cops', null, null, '', 30, 45, '2006-09-13', 'tt1851599', null, null, 'N/A', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (74, 83206, 'Off the radar', 'There is much romance surrounding the concept of escaping the rat race to live a self-sustainable lifestyle and surely Aotearoa is the best place on earth to make this back-to-basics dream come true... comedian Te Radar is finding out. 

This series explores the delights and difficulties of trying to sustain oneself off what one man can hunt, grow and fish.  Te Radar is discovering there is much to keep one occupied on long cold nights in the tent; do saucers of beer really keep snails off cabbages?   Does goat make tasty salami? And what happens when the time comes for Willie the pet pig to hit the dinner platter? ', null, 'Ended', 60, 62, '2008-08-31', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (75, 83207, 'The Suite Life on Deck', 'It''s the Suite Life on the high seas when Zack and Cody leave the Tipton Hotel and mom behind to attend Seven Seas High aboard luxury cruise liner, the SS Tipton. London joins them for the semester at sea because her father knows it''s the one school she can''t ditch, at least not without getting her hair wet – which she hates. London’s new roommate is fifteen-year-old Bailey, fresh off the farm and less worldly than London, but she is incredibly book smart and thrilled to have shaken the dust of Kettlecorn, Kansas off her feet. Meanwhile, a reluctant Mr. Moseby has been reassigned to be the "hotel manager” of the SS Tipton to watch over London, but when he finds out Zack and Cody are also coming along, it''s man overboard!', null, 'Ended', 25, 63, '2008-09-26', 'tt1181917', null, null, 'https://m.media-amazon.com/images/M/MV5BYjI2MGUxOWMtNDM2NS00ZTI0LWJmZmUtMDM0ZDk3YzkzNjJhL2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyMTEwMTkwOTI@._V1_SX300.jpg', 0, 'graphical/83207-g5.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (76, 83208, 'World''s Most Extreme Homes', 'It may look weird to an onlooker but it''s home, sweet, home to the owners of the most bizarre and unusual dwellings around the world, as host Ruth England finds out when pays a visit and gets a guided tour by the families who call these unconventional houses home.', null, 'Ended', 25, 64, null, '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (77, 83209, 'The Real Family of Jesus', 'Little is known about Jesus'' family, who they were and what role they played in his public life. Uncover evidence from the gospels and archeology that reveals Jesus as a part of a large extended family that spearheaded the spread of Christianity.

', null, 'Ended', 45, 1, '2005-10-10', 'tt0937105', null, null, 'N/A', 0, 'graphical/83209-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (78, 83212, 'Francesco''s Mediterranean Voyage', 'Venetian architect and historian Francesco da Mosto sets out from Venice to cross the Mediterranean - following in the wake of his ancestor, the explorer Alvise da Mosto - to discover the cities and islands where Western civilization was born. Sailing in a late nineteenth-century yawl, his journey starts in Venice and finishes in Istanbul. Along the way he takes in spectacular ruins, like the Acropolis in Athens and the Lycian Tombs in Turkey; sacred sites like the monasteries of Mount Athos and the Hagia Sophia in Istanbul; and beautiful Dubrovnik (destroyed and rebuilt in the last decade). Ancient history and bygone legends intertwine as Francesco visits these wonderful ancient sites, bringing the past vividly to life, and taking viewers on a thrilling cultural odyssey.', null, 'Ended', 60, 19, '2008-06-08', 'tt1034227', null, null, 'https://m.media-amazon.com/images/M/MV5BMTk3Mzk1NjQ5MF5BMl5BanBnXkFtZTcwODY2ODc4Mw@@._V1_SX300.jpg', 0, 'graphical/83212-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (79, 83214, 'Tatort', 'Tatort is a long-running German/Austrian/Swiss crime television series set in various parts of these countries. The first episode was broadcast on November 29, 1970. The opening sequence for the series has remained the same throughout the decades, which remains highly unusual for any such long-running TV series up to date.', null, 'Continuing', 90, 40, '1970-11-29', 'tt0806910', null, null, 'https://m.media-amazon.com/images/M/MV5BMTM4MTA4NTM1MV5BMl5BanBnXkFtZTcwMjE2MjY4Mw@@._V1_SX300.jpg', 0, 'graphical/83214-g5.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (80, 83215, '''Til Death Do Us Part', '''Til Death Do Us Part is murder-mystery based on a reality history. As dark and irreverent a series as would be expected with cult movie writer/director John Waters hosting. Waters is the "Groom Reaper", a guest at the happy couple''s wedding. The marriage starts out well enough, but goes very wrong along the way. Perhaps the most unusual twist for this series is that you don''t know which of the couple is the one murdered, until the end.

This show is also known as "Love You to Death"', null, 'Ended', 25, 65, '2007-03-19', 'tt0498612', null, null, 'https://m.media-amazon.com/images/M/MV5BMTgwMDg4NTMzMl5BMl5BanBnXkFtZTYwMTgyNTg2._V1_SX300.jpg', 0, 'graphical/83215-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (81, 83216, 'Εκείνες & Εγώ', 'The protagonist of this series is Zahos Doganos (Bezos) a rich ladies'' man whose interests revolve around women and partying hard. Although he has a fiancee, Eleni, this doesn''t seem to affect his life. In fact we see him in every episode with a different female guest star who in most cases comes from his past. In a few episodes we see him with huge lists of the names of women he has dated in the past. He lives with his housekeeper Debora (an African girl) who is also his protegee. Zahos is completely against marriage, in contrast with some of the other main characters of the show. He co-owns the "Doganos-Marikos" corporations along with his friend and associate Dimitris Marikos. One of their best clients is Iason Papapetrou who gets tricked all the time by Zahos because of his affection for him. One of Zahos'' most favorite places for entertainment is bouzoukia, where he goes with either ladies or his friends and relatives; actually in most episodes we see him sing too.
Ekeines kai Ego (Greek: Εκείνες και Εγώ) was an ANT1 television series which starred Yannis Bezos and Tasos Kostis. It was written by Bezos and Andreas Morfonios and it was directed by Morfonios. The series aired beginning in 1996 and lasted two years. It wa quite successful and was one of Bezos'' most famous works in Greece.
The title means "Those and me". "Those" refers to the women surrounding the series'' main character, a hopeless womaniser. It was based on Costas Pretederis'' earlier hit series Ekeines kai Ego (1976), and featured Labros Konstadaras in the role of Zahos Donganos, Antonis Yakovakis as his friend Dimitris Marikos and Rena Voutsina as Debora. The original series was directed by Dimitris Nikolaidis. Pretederis was also the writer for the 1996 version.', null, 'Ended', 40, 66, '1996-10-02', 'tt0229894', null, null, 'N/A', 0, 'graphical/5b4b4160b1ea7.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (82, 83217, 'Dolce Vita', 'Christina is a middle-aged woman, whose daughter Dorita is in Italy for studies. Going to visit Dorita, she meets a young man on the boat and they end up in bed together. Upon returning to Greece, she tells her best friend Sasa about the stranger she met, but the biggest surprise comes when Dorita also returns to Greece and meets her boyfriend to her family... ', null, 'Ended', 45, 67, '1995-10-05', 'tt0254019', null, null, 'N/A', 0, 'graphical/83217-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (83, 83218, 'How We Built Britain', 'Join David Dimbleby on a journey through a thousand years of history in a celebration of Britain''s buildings.', null, 'Ended', 60, 45, '2007-06-03', '', null, null, null, 0, 'text/83218.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (84, 83220, 'Somebodies', null, null, 'Ended', 30, 68, '2008-09-09', 'tt1017289', null, null, 'https://m.media-amazon.com/images/M/MV5BOTk0MTcxOTA5NF5BMl5BanBnXkFtZTcwNzYwNTI5MQ@@._V1_SX300.jpg', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (85, 83221, 'Only Connect', 'Victoria Coren Mitchell hosts the series where knowledge will only take you so far. Patience and lateral thinking are also vital.', null, 'Continuing', 30, 19, '2008-09-15', 'tt1294009', null, null, 'https://m.media-amazon.com/images/M/MV5BMzExNGFlMmYtZjIzNi00OWY5LTk2M2YtNGRkMDdjNTA5NTM1XkEyXkFqcGdeQXVyMzMxNDQ0NQ@@._V1_SX300.jpg', 0, 'graphical/83221-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (86, 83223, 'A Very British Coup', 'Harry Perkins, Labour MP and self-confessed third generation socialist, is elected Prime Minister of the UK. With stated policies of unilateral nuclear disarmament, neutrality and open government, his enemies quickly accumulate, from the US administration, to those much closer to home, such as the right-wing press and the security services. It is this disparate group who will unite in the hopes of ousting a democratically-elected leader in a very British coup...', null, 'Ended', 60, 46, '1988-06-19', 'tt0094576', null, null, 'https://m.media-amazon.com/images/M/MV5BMTY3NjgyNTg4MV5BMl5BanBnXkFtZTcwMDQ0OTMyMQ@@._V1_SX300.jpg', 0, 'graphical/83223-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (87, 83225, 'I Own Britain''s Best Home And Garden', null, null, '', 60, 69, '2008-09-04', '', null, null, null, 0, 'graphical/83225-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (88, 83226, 'Crusoe', 'Based on the classic Daniel Defoe novel, Crusoe tells the story of young Robinson Crusoe as he leaves the love of his life to set out on an adventure. When the trip takes a turn for the worst, Crusoe ends up shipwrecked on a tropical island, detached from the only life he''s known. Stranded, his friendship with Friday and memories of his wife keep him sane as he battles enemies, braves the elements, and learns how to survive on the island for over 28 years.
 ', null, 'Ended', 45, 70, '2008-10-17', 'tt1117552', null, null, 'https://m.media-amazon.com/images/M/MV5BMTgyNDc1MTUyM15BMl5BanBnXkFtZTcwNDExMzg5MQ@@._V1_SX300.jpg', 0, 'graphical/83226-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (89, 83227, 'James May''s Big Ideas', 'James looking at some of the big ideas from the previous century. 
', null, 'Ended', 60, 19, '2008-09-28', 'tt1301844', null, null, 'https://m.media-amazon.com/images/M/MV5BMjI0ODg3MDcxOV5BMl5BanBnXkFtZTcwMDA2MjY4Mw@@._V1_SX300.jpg', 0, 'graphical/83227-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (90, 83228, 'US Presidential Debates', 'Televised presidential candidate debates starting with 1960', null, 'Continuing', 85, 1, '2008-08-16', '', null, null, null, 0, 'graphical/83228-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (91, 83231, 'Dispatches', 'Dispatches is the British TV current affairs documentary series on Channel 4, first transmitted in 1987. The programme covers issues about British society, politics, health, religion, international current affairs and the environment, and often features a mole inside organisations under journalistic investigation.', null, 'Continuing', 45, 46, '1987-10-30', 'tt1043090', null, null, 'https://m.media-amazon.com/images/M/MV5BOTNhMTQwMjYtODM5OS00YThhLWIyMjAtNzk0MGFlMTAzMDFkXkEyXkFqcGdeQXVyMjY4OTg2Nw@@._V1_SX300.jpg', 0, 'graphical/83231-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (92, 83232, 'Little Britain USA', 'This sketch comedy is from British comedians Matt Lucas and David Walliams, who made the original British version of the show. In this new show some of the old favourites are coming to the US and we will also be introduced to a host of new American characters.', null, 'Ended', 30, 25, '2008-09-28', 'tt0936458', null, null, 'https://m.media-amazon.com/images/M/MV5BNWE0YmY2MmQtNzkyZC00Y2EwLTkyMjktN2RiYzAwYWE3NDM3XkEyXkFqcGdeQXVyNjc4NTExMTk@._V1_SX300.jpg', 0, 'graphical/83232-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (93, 83234, 'Top Gear Australia', 'Based on the popular British version of Top Gear, Top Gear Australia looks to give a unique Aussie spin on the car scene while still having all thrills and spills that we all love. Plus there is the Stig''s Australian cousin. What more could we ask for!

In 2010 the show moved from SBS to the Nine Network.
', null, 'Ended', 60, 4, '2009-09-28', 'tt1251819', null, null, 'https://m.media-amazon.com/images/M/MV5BNmMxY2I5NmQtODBiNS00OGJlLTgxMTctMmU4NzM1NzEyZTJlXkEyXkFqcGdeQXVyMzI2MDEwNA@@._V1_SX300.jpg', 0, 'graphical/83234-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (94, 83237, 'Stargate Universe', 'The previously unknown purpose of the ninth chevron is revealed and takes a group of refugees on a one-way trip to a millions of years old Ancient-built ship. Led by Dr. Nicolas Rush and Colonel Everett Young, the refugees are trapped on the ship, unable to change its programmed mission.', null, 'Ended', 45, 71, '2009-10-02', 'tt1286039', null, null, 'https://m.media-amazon.com/images/M/MV5BOTEzNTY5NDY5M15BMl5BanBnXkFtZTcwMTY4MDQ3Mg@@._V1_SX300.jpg', 0, 'graphical/83237-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (95, 83238, 'Caméra Café', null, null, 'Ended', 7, 72, '2001-09-01', 'tt0296318', null, null, 'https://m.media-amazon.com/images/M/MV5BMTU3OTA1NzQxM15BMl5BanBnXkFtZTcwMjc4NzM0Mg@@._V1_SX300.jpg', 0, 'graphical/83238-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (96, 83242, 'Place of Execution', 'In 1963, young Alison Carter left her home in the small English village of Scardale and vanished. The mystery devastated the community and captivated police officer George Bennett. In modern day London, journalist Catherine Heathcote is putting the finishing touches on her documentary about the case. However, the previously helpful Bennett, now in his seventies, suddenly pulls out of the film. What makes him hesitant to discuss the case that made him a hero? The past and present interweave as both Bennett and Heathcote attempt to unravel the mysteries... ', null, 'Ended', 60, 61, '2008-09-22', 'tt1239129', null, null, 'https://m.media-amazon.com/images/M/MV5BYzQ4ZWJjYWItNDIyMC00NTI3LWFlNGEtYWFkNTcyMzM5NmZhXkEyXkFqcGdeQXVyNzQ5MzY0NjM@._V1_SX300.jpg', 0, 'graphical/83242-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (97, 83244, 'Dr. Mugg', 'Doktor Mugg is a Swedish television series, named after the program''s title character. The series takes place in the fictitious town Dasseborg (Outhouseburg) and revolves around toilet humor, mugg and dass being colloquial terms for toilet in the Swedish language. Other important main characters are Kapten Filling (Captain Skivvies) and Walter Closett.', null, 'Ended', 25, 73, '2002-03-03', 'tt0446524', null, null, 'https://m.media-amazon.com/images/M/MV5BNTYwODdjNjMtYjg3My00NGMxLWI4ODYtM2QwNmY4N2VhYzU2XkEyXkFqcGdeQXVyMTQzMjU1NjE@._V1_SX300.jpg', 0, 'graphical/83244-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (98, 83245, 'Cybuster', 'In 2040, the continuous pollution and the mysterious series of earthquakes left the city of Tokyo in ruins. A young man named Ken Ando is in training to become a member of DC, an army-like organization designed to investigate and protect the collapsing environment. Ken, with the support from his sick sister, Sayuri, gives his best to become a part of the elite group that the young longs for, but he receives the devastating news of being cut from the team because of his poor performances in the evaluation sessions. Then, an ominous monster suddenly appears from the sky with a blinding flash and starts mowing down DC''s working robots with mysterious invisible forces. Ken, eager to show what he is truly made of, gets into one of the working robots and imprudently engages in a battle with the monster.', null, 'Ended', 25, 74, '1999-05-03', '', null, null, null, 0, 'graphical/5ce16833c1ebb.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (99, 83246, 'Alas Smith and Jones', 'Alas Smith and Jones was a British comedy sketch television series featuring Mel Smith and Griff Rhys Jones. It was broadcast on the BBC from 1982 to 1998. From 1989 to 1995, it was called Smith and Jones.

The series followed in the footsteps of Not the Nine O''Clock News in its use of taboo-breaking material and sketches in questionable taste (as well as bad language), and also featured head-to-head ''duologues'' between Smith and Jones. The series shared several script writers with Not the Nine O''Clock News including Clive Anderson, Colin Bostock-Smith and used Chris Langham as a cast regular. Other writers included Andy Hamilton.', null, 'Ended', 30, 53, '1984-01-31', 'tt0088475', null, null, 'https://m.media-amazon.com/images/M/MV5BODBiZDFmODUtMTZiYy00YmU0LTk0Y2YtMjM4ZjVmMTk3NzZhXkEyXkFqcGdeQXVyNjc4NTExMTk@._V1_SX300.jpg', 0, 'graphical/83246-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (100, 83250, 'Het Zandkasteel', null, null, 'Ended', 20, 77, '2005-08-08', 'tt0796242', null, null, 'N/A', 0, 'graphical/83250-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (101, 83251, 'The Cho Show', 'Follow Margaret Cho and her eccentric entourage through the surreal Hollywood shuffle, where, even in the wild and crazy world of entertainment, they''re one of a kind.', null, 'Ended', 25, 78, '2008-08-21', 'tt1251100', null, null, 'https://m.media-amazon.com/images/M/MV5BMTA3Nzg2NjIzNTdeQTJeQWpwZ15BbWU4MDE4MDI3MDMx._V1_SX300.jpg', 0, 'graphical/83251-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (102, 83255, 'Färjan', null, null, 'Ended', 45, 79, '2009-09-29', '', null, null, null, 0, 'graphical/83255-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (103, 83256, 'Lama Gezocht', null, null, 'Ended', 35, 80, '2007-01-12', '', null, null, null, 0, 'graphical/83256-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (104, 83257, 'Huset Silfvercronas gåta', 'The popular youngsters serie about a magical journey through time.

In the castle Silfvercrona lives old Aunt Hedwig alone with her cat. When she is visited by youngsters Lasse and Lisa, she shows them reluctantly around in the dilapidated castle. But one of the rooms, she forbids them seriously to enter. Attracted by stories of a lost treasure, the youths can not help but embark on a journey of discovery. Somewhere on the road suddenly Lasse disappears and Lisa follows the tracks to the forbidden room. Suddenly the year is 1437 and she is seized by a grim castle guard. What follows is an amazing adventure through the centuries, where young people chase the mysterious treasure, and meets several interesting historical figures. They also learn soon that castle lord Silfvercrona is a very, very dangerous man.

 The house Silfvercronas Mystery is an exciting and informative meeting with our stormy Swedish history. Filmmaker Gunila Ambjörnsson, among other things wrote and directed the film "Stannar du så springer jag", but is also a renowned author of Fantasy books. She has written "Time Trilogy" and the book "Tiger Heart" and "Silver Monkey".

 "The house Silfvercronas mystery" was filmed outside Norrtälje on Penningby Castle whose oldest parts are from the 1400s.', null, 'Ended', 180, 76, '1974-10-01', '', null, null, null, 0, 'graphical/83257-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (105, 83258, 'XIII: The Conspiracy', 'Based on a Belgian comic book and a Ubisoft video game, this action mini-series is about a massive governmental conspiracy involving the assassination of the first female U.S. president. A man is found washed up on a beach with his memory gone. When elite special ops forces detect his location and track him down, he instinctively kills them one by one. Driven by the need to recover his memory...', null, 'Ended', 85, 81, '2008-10-06', 'tt1117667', null, null, 'https://m.media-amazon.com/images/M/MV5BZTk2ZTNhOTItZWMxNy00MTIwLWIwODYtNDg5ZGMzMmQ4NmRmXkEyXkFqcGdeQXVyMzI2ODkyNDg@._V1_SX300.jpg', 0, 'graphical/83258-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (106, 83259, 'Genesis Survivor Gaiarth', 'In a post-apocalyptic, dystopian future, Ital Del Labard sets out to avenge the death of Randis R. Khiezard, a war-roid whom raised Ital, that was killed by the beastmaster. For the first time in his life, Ital leaves his home and travels to distant lands looking for his surogate father''s killer. Along the way he teams up with another war-roid called Zaxon, and junk-hunter, femme fatale Sahari. Now the city of Bangor is under attack by the beastmaster and his army of autosoldiers, it is up to Ital and his friends to save the day.', null, 'Ended', 50, 1, '1992-04-22', '', null, null, null, 0, 'graphical/83259-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (107, 83262, 'Bonen no Xamudo', 'Sentan Island exists in a state of dreamlike tranquility; a small island, surrounded by the Yuden Sea, cut off from the war between the Northern Government and the Southern Continent Free Zone. Akiyuki Takehara lives on Sentan Island along with his mother Fusa. Despite his mother''s strained relationship with his father, Ryuzo, the town doctor, the bond between father and son remains strong. One day the island''s tranquility is shattered, when Akiyuki, along with his best friends Haru and Furuichi, are caught up in an explosion on a school bus. The explosion produces a mysterious light which enters Akiyuki''s arm. With no time to understand what has happened, Akiyuki is transformed into a creature called Xam''d. Akiyuki rampages through the city, only to be stopped by a mysterious girl who offers him a choice: come with her and live, or stay and turn to stone. Accepting her offer, Akiyuki embarks on a journey of discovery that will take him to new lands, and help him to understand the connection between himself and the lifeform known as Xam''d.', null, '', 1, 1, null, '', null, null, null, 0, 'graphical/83262-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (108, 83264, 'Ibiza', 'Experience Summer 2008 in Ibiza with LIVING, following the island''s holiday makers, biggest characters, wildest parties and most beautiful people.', null, 'Ended', 1, 82, '2008-07-12', 'tt1380823', null, null, 'N/A', 0, 'graphical/83264-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (109, 83265, 'Numberjacks', 'The Numberjacks are ten small superhero numbers: 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9.  They go about their everyday lives inside their sofa until a call comes in from a real-life child Agent, who reports a problem that needs solving. One or two of the Numberjacks fly out on location to investigate. The Numberjacks have to work out how to put things right, and thwart the dastardly intentions of the Meanies.   After much fun, adventure and powerful thinking the Numberjacks win the day - till next time. ', null, 'Ended', 15, 83, '2006-10-16', '', null, null, null, 0, 'graphical/83265-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (110, 83266, 'Crash', 'A spin-off of the Oscar-winning film about racial tensions in Los Angeles.', null, 'Ended', 50, 84, '2008-10-17', 'tt1178636', null, null, 'https://m.media-amazon.com/images/M/MV5BMjAyMTIwODM2MF5BMl5BanBnXkFtZTcwMjI0Njg3Mg@@._V1_SX300.jpg', 0, 'graphical/83266-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (111, 83267, 'The Pretenders (ES)', '"Los Simuladores" consists of a team of four associates who run a "simulation" business, solving the problems and the needs of their clients by staging simulacros (simulations). The simulations are aimed at confusing whoever is giving their clients a problem (bosses, criminals, husbands, wives, unscrupulous businessmen, etc), thus helping the client come on top of the situation. The price the team charges for its services is exactly two times the cost of the simulation, as well as the client''s compromise to participate in future simulations (this led to characters who appeared in previous episodes re-appearing in later episodes as secondary actors and helpers for the team, giving the show a sense of continuity). The underlying philosophy used by the team was that sometimes what''s legal is not fair, and sometimes what''s fair is not legal.', null, 'Ended', 50, 85, '2006-03-26', 'tt0794240', null, null, 'https://m.media-amazon.com/images/M/MV5BZDJmZTE0MjgtNjA3Mi00Mzk0LTkxNzUtMmUyZDg0OTdlNzA3XkEyXkFqcGdeQXVyMTQ4NzE0ODk@._V1_SX300.jpg', 0, 'graphical/83267-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (112, 83268, 'Star Wars: The Clone Wars', 'As The Clone Wars sweep through the galaxy, the heroic Jedi Knights struggle to maintain order and restore peace. More and more systems are falling prey to the forces of the dark side as the Galactic Republic slips further and further under the sway of the Separatists and their never-ending droid army.', null, 'Continuing', 25, 86, '2008-10-03', 'tt0458290', null, null, 'https://m.media-amazon.com/images/M/MV5BNjZmMDE2NTctNjNlNC00ZWJhLWJmZjUtZjlkNzljNzkzMmEwXkEyXkFqcGdeQXVyMjg5NDMwMQ@@._V1_SX300.jpg', 0, 'graphical/83268-g11.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (113, 83269, 'Merlin (1998)', 'The legend of King Arthur, this time, from the perspective of the King''s Wizard, Merlin. Merlin is a creature born of pagan magic, living in a world converting to Christianity. Merlin is beside Arthur as he gains Excalibur, builds Camelot and is betrayed by his wife, Guinevere. Merlin and Arthur are both menaced by the plots of Morgan Le Fey, her son by Arthur, Mordred, and their cohorts. Through it all, Merlin tries to keep Arthur from the destructive path set by fate.', null, 'Ended', 85, 70, '1998-04-26', 'tt0130414', null, null, 'https://m.media-amazon.com/images/M/MV5BMTYzNDExNjk2NF5BMl5BanBnXkFtZTcwMTQ3NjYxMQ@@._V1_SX300.jpg', 0, 'graphical/83269-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (114, 83271, 'Jamie''s Ministry Of Food', 'Jamie Oliver’s new TV series and campaign, Ministry of Food, is all about getting people cooking again. He wants to show us that anyone can learn to cook – and that it’s fun, cool, can save you money and help you, your family and friends to live a healthier life.', null, 'Ended', 60, 46, '2008-09-30', 'tt1319382', null, null, 'N/A', 0, 'graphical/83271-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (115, 83274, '4 Guys', null, null, 'Ended', 25, 87, '2007-02-22', 'tt0990417', null, null, 'https://m.media-amazon.com/images/M/MV5BZGYwNjkyYzItZGE2Yy00NjA4LWI0OGMtM2UzNGM1ODVjNmZmXkEyXkFqcGdeQXVyNTk3NDMxMTg@._V1_SX300.jpg', 0, 'graphical/83274-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (116, 83275, 'Brødrene Dal', 'Brødrene Dal are three fictive characters played by Lars Mjøen, Knut Lystad and Trond Kirkvaag in four TV-series. The brothers are named Gaus, Roms and Brumund after Norwegian valleys.
Tom Mathisen is also a central character in his role as the narrator.', null, 'Ended', 15, 33, '1979-01-27', '', null, null, null, 0, 'graphical/83275-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (117, 83276, 'Daddy Long Legs', 'Judy Abbott is an orphan who has been given the opportunity to study at the prestigious Lincoln Memorial High School by a mysterious benefactor whom she only knows as "John Smith". She has only seen his shadow once, and because of his long legs, she calls him "Daddy Long Legs". The only payment she is to give her benefactor is that she write him letters every month, with no expectation of them being responded to.

The anime covers 3 years of Judy''s life, starting with her leaving the John Grier Home orphanage, and ending with her finishing high school.', null, 'Ended', 25, 88, '1990-01-14', 'tt0168436', null, null, 'https://m.media-amazon.com/images/M/MV5BMTI0Njc3NjQ4MV5BMl5BanBnXkFtZTcwNjYyMzY2Mg@@._V1_SX300.jpg', 0, 'graphical/83276-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (118, 83277, 'Toradora!', 'Despite Ryuji Takasu''s gentle personality, his eyes make him look like an intimidating delinquent so he is utterly hopeless about his chances of getting a girlfriend anytime soon, and does not have many close friends either. After being greeted by his hungover mother in the morning, Ryuji goes to school and is happy to find that he gets to be in the same class as his best friend Yusaku Kitamura and crush Minori Kushieda. However, it is then that he unexpectedly knocks into "the school''s most dangerous animal of the highest risk level" — Taiga Aisaka — who just happens to also be in his class, and is a good friend of Minori.', null, 'Ended', 25, 74, '2008-10-02', 'tt1279024', null, null, 'https://m.media-amazon.com/images/M/MV5BNWEwMjE2MjQtZTQ3NC00OTUxLWEwMWUtMThjZjg4Zjc5ZDYwXkEyXkFqcGdeQXVyMzgxODM4NjM@._V1_SX300.jpg', 0, 'graphical/83277-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (119, 83278, 'Hermanos & Detectives', '"Hermanos & Detectives" (Brothers & Detectives) is an acclaimed argentine TV show created by the director of "Los Simuladores" (The Pretenders), another very popular argentine TV show. "Hermanos & Detectives" tells the story of Franco Montero who works in the police force. After the death of his father he finds out he has a half sibling, Lorenzo. The boy is only eleven years old and has no other alive relatives, so a judge determines he must live with Franco. But Lorenzo is a very particular boy: he has a very high IQ rate, so in a way, he is like a little Sherlock Holmes and will help Franco solve ver complicated murder cases. The TV show is done in a retro style, very much like the old series that people used to watch in the 60''s and 70''s, with some reminiscence of series like "Starsky & Hutch".', null, 'Ended', 60, 89, '2006-09-06', 'tt0931887', null, null, 'https://m.media-amazon.com/images/M/MV5BYmE4ZmRkYzItNzQ0OS00OTM0LWI2MzEtM2RkNDJiNTVmMDA2XkEyXkFqcGdeQXVyMzAzODY0NzE@._V1_SX300.jpg', 0, 'graphical/83278-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (120, 83279, 'Eutuxismenoi Mazi', null, null, 'Ended', 45, 67, '2007-10-01', '', null, null, null, 0, 'graphical/83279-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (121, 83281, 'Pluto BRB Nero', null, null, 'Ended', 35, 29, '2008-09-24', 'tt1245696', null, null, 'N/A', 0, 'graphical/83281-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (122, 83282, 'Iconoclasts', 'Iconoclasts joins some of today''s most influential celebrities with the visionaries that inspire them. The result is a unique, intimate look at both provocative personalities and a spotlight on the cultural contributions of each. Topics include fashion and food, acting and animation, journalism and sports, and more. Thought-provoking and innovative, this one represents celebrity obsession at its finest.', null, 'Ended', 25, 90, '2005-11-17', 'tt0472004', null, null, 'https://m.media-amazon.com/images/M/MV5BNTEzMTUwNzY2OV5BMl5BanBnXkFtZTcwMzQ4Mzk5Mw@@._V1_SX300.jpg', 0, 'graphical/83282-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (123, 83283, 'The New Detectives', 'Case Studies in Forensic Science
Forensic scientists work with a variety of methods (i.e. computer technology, anthropology, entomology) to solve crimes which would otherwise remain unsolved, through finding seemingly obscure clues such as tire tracks, bullet fragments and hair samples and then putting the pieces together. Interviews with forensic pathologists, cold case detectives, and victims families illustrate the process involved in solving cases. Three separate cases are spotlighted in each episode of this series. ', null, 'Ended', 45, 91, '1996-10-01', 'tt0279573', null, null, 'https://m.media-amazon.com/images/M/MV5BYTdkODliZTctNDhmMS00MTcwLWEzMTItZWVmOWQzOThhZjhiXkEyXkFqcGdeQXVyMTQyOTc3MTg@._V1_SX300.jpg', 0, 'graphical/83283-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (124, 83284, 'Coming of Age (2008)', 'Coming of Age is a brand new sitcom written by 19-year-old Tim Dawson. It takes a candid look into the outrageous world of a group of sixth form students living in Abingdon as they enjoy a final romp with adolescence.

Chloe, Matt, Jas, Ollie and DK are regular teenagers – their lives revolve around college, their bedrooms and, because they have nowhere else to hang out, Ollie’s garden shed.

Coming of Age shows life from a teenage perspective. It talks about being young openly, honestly, truthfully – loving for the first time, fancying your history teacher, and dealing with those pesky, unwanted erections in public places.

The series is a celebration of youth and, as well as being written by a teenager, stars five of the UK’s top young comedy actors: Anabel Barnston as Chloe; Tony Bignell as Matt; Hannah Job as Jas; Ceri Phillips as Ollie; and Joe Tracini as DK.', null, 'Ended', 30, 92, '2007-05-21', 'tt1046904', null, null, 'https://m.media-amazon.com/images/M/MV5BMTg0OTQwMDQxMV5BMl5BanBnXkFtZTcwMTU2ODc4Mw@@._V1_SX300.jpg', 0, 'graphical/83284-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (125, 83285, 'Clash of Wings: The Story of World War II in the Air', 'A comprehensive series detailing the Air War of the Second World War as it has never been told before. Featuring rarely seen aerial combat footage of all the major combat aircraft types from World War II.', null, 'Ended', 45, 1, '1998-01-01', 'tt1977184', null, null, 'N/A', 0, 'graphical/83285-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (126, 83286, 'Torture', 'Sometimes disturbing documentary series about torture.', null, 'Ended', 60, 46, '2005-02-28', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (127, 83288, 'It''s Me or the Dog', 'In just one minute dog behaviorist Victoria Stilwell can take control of any dog and she''s determined to bring Britain''s baddest dogs back in line. ', null, 'Ended', 25, 46, '2005-08-31', 'tt0482295', null, null, 'https://m.media-amazon.com/images/M/MV5BMTY2NDQ4NDUxNl5BMl5BanBnXkFtZTcwNjcyMjg4MQ@@._V1_SX300.jpg', 0, 'graphical/83288-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (128, 83289, 'SOS Gute', 'On Gotland, there are only 57,000 people, but over 700,000 people will visit the island every year, the vast majority of the summer. The SOS Gute we follow the emergency services on Gotland during a few hectic weeks in the summer. They work around the clock to take care of most accidents, fires, boating accidents, car accidents, medical emergencies or other emergencies.', null, 'Ended', 60, 79, '2008-10-02', '', null, null, null, 0, 'graphical/83289-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (129, 83290, 'The Secret Saturdays', 'The Secret Saturdays is about Doc, Drew, and Zak who are part of a network of scientists who work together to save the world by keeping hazardous secrets! They must fulfill their duties while trying to not get on each other''s nerves with the usual and plain family squabbles!', null, 'Ended', 25, 93, '2008-10-03', 'tt1291662', null, null, 'https://m.media-amazon.com/images/M/MV5BZWNkOGRiMTUtMDBhOC00YTZlLTkzMWItYTVlOTRhYTczYjExXkEyXkFqcGdeQXVyNjk1Njg5NTA@._V1_SX300.jpg', 0, 'graphical/83290-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (130, 83291, 'The Beiderbecke Tapes', 'Trevor Chaplin teaches woodwork and likes to listen to jazz. Jill Swinburne teaches English and wants to help save the planet. They live together and just want a quiet life. Then they meet John the barman who died but is much better now. John gave them a tape which led to meeting Dave the wimp. They find out about The Peoples Front For The Liberation of west Yorkshire. The man with no name called Mr Peterson came to see them. He was followed by the six men in grey suits. Jill goes to see The Oldest Suffragette In Town. Trevor and Jill go on a trip to Amsterdam with their class from "San Quentin High". Trevor and Jill meet The Honourable Order of Elks who are "looking for a bit of action".', null, 'Ended', 80, 61, '1987-12-13', 'tt0092629', null, null, 'https://m.media-amazon.com/images/M/MV5BMTIwMzIzMjY4NF5BMl5BanBnXkFtZTcwNzE3NzQyMQ@@._V1_SX300.jpg', 0, 'graphical/83291-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (131, 83292, 'Deltora Quest', 'Deltora is a land of Monsters and Magic...

The evil Shadow Lord is plotting to invade Deltora and enslave its people. All that stands against him is the magic Belt of Deltora with its seven gems of great and mysterious power. When the gems are stolen and hidden in dark, terrible places throughout the kingdom, the Shadow Lord triumphs and Deltora is lost.

In secrecy, with only a hand-drawn map to guide them, two unlikely companions set out on a perilous quest. Determined to recreate the magic Belt of Deltora and rid their land of the tyrant, they cross the continent in search of the gems', null, 'Ended', 25, 74, '2007-01-06', 'tt0926230', null, null, 'https://m.media-amazon.com/images/M/MV5BNzkyNzk4OTEwNF5BMl5BanBnXkFtZTgwOTA3MTc3MTE@._V1_SX300.jpg', 0, 'graphical/83292-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (132, 83293, 'Innocently Convicted', 'Markus Haglund (Mikael Persbrandt) is a controversial criminal law professor who works for those who have been unfairly treated or innocent, he is passionate about helping victims of injustice. Assisting Haglund are four talented and carefully selected law students Fia Jönsson (Sofia Ledarp), Anna Sjöstedt (Helena af Sandeberg), Belal Al-Mukhtar (Francisco Sobrado) and Roger Andersson (Leonard Terfelt).

At Uppsala University he holds, reluctantly, a course called unjustly sentenced (oskyldigt dömd in Swedish). He often takes the more unorthodox and risky practices, the best way to prove someone''s innocence is to find the real perpetrator. He fights in the courts, in prisons, in television and sofas in too many bars. Markus and his students shares a passion for solving mysteries and finding the truth which is not always easy. Can you break the law to uphold it?
', null, 'Ended', 45, 48, '2008-09-24', 'tt1257544', null, null, 'https://m.media-amazon.com/images/M/MV5BNzE1MDI4NDE0Ml5BMl5BanBnXkFtZTcwMjk5MTU0OQ@@._V1_SX300.jpg', 0, 'graphical/83293-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (133, 83294, 'Total Drama', 'Total Drama is a Canadian animated comedy television series which is a homage and parody to the conventions commonly found in reality television. The show and its sequel seasons are collectively referred to as the Total Drama series.', null, 'Continuing', 30, 94, '2007-07-08', 'tt1173427', null, null, 'https://m.media-amazon.com/images/M/MV5BZDlkMWIzMWYtMjQ1NS00MzNhLWJkMDYtNDJjZjZmMmI1M2I0XkEyXkFqcGdeQXVyNzMwOTY2NTI@._V1_SX300.jpg', 0, 'graphical/83294-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (134, 83295, 'Shingu: Secret of the Stellar Wars', 'The day after an apparent alien invasion of Tokyo is repelled by a mysterious being, middle schooler Murata Hajime discovers that his small town holds a strange secret when he witnesses transfer student Subaru Muryou fight another student using psychic powers. Since Hajime himself is relatively new to his town, he has been unaware that the leading families have been protecting the earth from alien invasion for centuries by using the ability of "Shingu," and that the current members of the middle school student council are also the chosen guardians of this generation. He also begins to discover that many of the town''s residents are in fact intergalactic diplomats. Hajime is drawn futher into this open secret as his friendship with Muryou and the "chosen" teenagers—especially tomboy Moriyama Nayuta—deepens and as he begins to discover that he has a role to play in Earth''s future.', null, 'Ended', 30, 95, '2001-05-08', 'tt1073234', null, null, 'https://m.media-amazon.com/images/M/MV5BMTQ0Mzk2NzcxM15BMl5BanBnXkFtZTgwODA4NjcwMzE@._V1_SX300.jpg', 0, 'graphical/83295-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (135, 83296, 'I liceali', null, null, 'Ended', 100, 96, '2008-03-23', 'tt1170383', null, null, 'https://m.media-amazon.com/images/M/MV5BOTM3ZTA4ZWItNjQwZS00NTU1LWEyMzgtOWU3ZmQ4NDU5M2EzXkEyXkFqcGdeQXVyNjU2OTUyODc@._V1_SX300.jpg', 0, 'graphical/83296-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (136, 83297, 'Jane and the Dragon', 'Twelve year old Jane lives in a medieval castle filled with eccentric and endearing friends, including Dragon (a giant green Dragon), Jester (the court jester), Pepper (the castle cook), Rake (the royal gardener) and Smithy (the blacksmith).
Together they star in a series of fun adventures set in medieval times. While Jane is studying to be a knight, she also has to look after clumsy Dragon and stick up for him when things go wrong. It''s a tough job, but Jane is a good friend and always knows the right thing to do.', null, 'Ended', 25, 97, '2009-11-18', '', null, null, null, 0, 'graphical/83297-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (137, 83298, 'The Complete Guide to Parenting', 'George Hartley is a Professor of Child Psychology and Father of seven year old Jamie. When his wife Phoebe takes a job in Paris he finds his parenting skills and theories are well and truly put to the test even with the help of his PA Karen and au-pair Korey.

Starring: Peter Davison, Josie Lawrence, Niky Wardley, Katie Lyons
', null, 'Ended', 30, 98, '2006-09-11', 'tt0810596', null, null, 'N/A', 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (138, 83299, 'Breaking the Magician''s Code: Magic''s Biggest Secrets Finally Revealed', 'This season, the magician''s sacred code of silence will be broken forever in all-new hour-long episodes. Nowhere else has a magician dared to expose the secrets behind the world''s most mystifying illusions. The Masked Magician returns to television to defy his fellow conjurers and disclose the tricks that have captivated audiences for centuries. Over 120 of magic’s most memorable illusions will be unveiled this season including the "Flying," "Train Levitation,” “Water Escape,” “Walking Through a Wall,” “Escaping Death by Wood Chipper,” “Walking on Water” and many more!', null, 'Ended', 45, 99, '1997-11-24', 'tt1257805', null, null, 'N/A', 0, 'graphical/83299-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (139, 83300, 'Easy Money', 'At Prestige Payday Loans, Bobette Buffkin, a business savvy family matriarch, runs the show and has made it into one of the best quick-cash companies in the entire Southwest. However, trouble soon comes when new competitors begin to set up shop, leaving middle son Morgan to deal with the tension the new competitors create around the house. Morgan''s own household tension leads him to pair up with Julia Miller to look into a childhood secret. Morgan''s older brother, Cooper goes head-to-head with corrupt Detective Yapp who ends up blackmailing Morgan. Now Morgan must find a way to both find the secrets of his past all while fending off Yapp''s investigatoin.
 ', null, 'Ended', 45, 100, '2008-10-05', 'tt1252367', null, null, 'https://m.media-amazon.com/images/M/MV5BMTc1Njg5Njg3M15BMl5BanBnXkFtZTcwNTU0NTY4MQ@@._V1_SX300.jpg', 0, 'graphical/83300-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (140, 83301, 'Mysteriet på Greveholm', 'The Olsson family move into a castle that turns out to be haunted. The kids, with their dim parents oblivious to all the strange things that are happening, are caught in the middle of a big mystery in the centuries old castle.', null, 'Ended', 10, 76, '1996-12-01', 'tt0115282', null, null, 'https://m.media-amazon.com/images/M/MV5BMGY2NTU3YWMtYTNlMi00N2I2LTg5YWEtNDA3ZjkxNzY1OTcxXkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg', 0, 'graphical/83301-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (141, 83303, 'Emma: A Victorian Romance', 'In late 19th century London, William Jones, a member of the gentry, meets and falls in love with Emma, and she with him. This chance meeting overturns both their lives - for Emma is a maid, and the barriers of class and wealth stand between them.', null, 'Ended', 25, 101, '2005-04-02', 'tt0466413', null, null, 'https://m.media-amazon.com/images/M/MV5BMTY0Njk3NDE5MV5BMl5BanBnXkFtZTgwNzE1MDAxMzE@._V1_SX300.jpg', 0, 'text/83303.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (142, 83306, 'Superjail!', 'Superjail is the largest and most brutal prison in the world. Built in an active volcano, this complex routinely has riots and murders, though nobody is ever able to escape. The Warden, who is in charge of the prison, has gone insane over the years and has decided to make his prison unlike any other in the world.

Superjail! will focus on the crazy antics that occur inside the prison. 
', null, 'Ended', 11, 102, '2007-05-13', 'tt1031283', null, null, 'https://m.media-amazon.com/images/M/MV5BMjMxMDIzNDA3NV5BMl5BanBnXkFtZTcwODU3ODg2OA@@._V1_SX300.jpg', 0, 'graphical/83306-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (143, 83307, 'In Harms Way', 'From the producers of Dirty Jobs comes In Harm''s Way, a reality show that looks at the lives of people with dangerous jobs. Each episode follows the individuals who risk their life on a day-to-day basis, from war photographers to Coast Guard divers to minesweepers. ', null, 'Ended', 45, 100, '2008-10-05', '', null, null, null, 0, 'graphical/83307-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (144, 83309, 'Devil Lady', 'Fudo Jun is a beautiful supermodel who is idolized by many. She also has a dark secret that not even she knows about at first, for within her veins run the genes that hold the next step in the evolution of mankind. The same blood as the beastlike superhumans that terrorize the city. Unlike the rest of them, though, Jun has managed to hold a tenuous grip onto her humanity, and she is recruited by the mysterious Asuka Ran, member of a secret organization within the government, aimed at controlling, if not eliminating, these berserk destroyers of mankind. Jun, as Devilman Lady, must now exterminate her own kind, but how much longer can she keep her sanity in a situation she never chose in the first place?', null, 'Ended', 30, 103, '1998-10-10', 'tt0409548', null, null, 'https://m.media-amazon.com/images/M/MV5BMTY0NDQ3MDQzMV5BMl5BanBnXkFtZTcwNzY4ODcyMQ@@._V1_SX300.jpg', 0, 'graphical/83309-g3.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (145, 83310, 'Papa Beaver''s Story Time', 'Papa Beaver''s Storytime is an animated television series tells of a single father beaver of three little beaver children of his own, two sons and one daughter, who would tell them different stories, either a fable or a fairytale to his children and at the end would tell them the moral of the story to teach them a lesson about their actions that have done before the story began.', null, 'Ended', 6, 104, '1993-04-22', 'tt0828274', null, null, 'N/A', 0, 'graphical/83310-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (146, 83311, 'Pacific Abyss', 'Underwater wildlife series. Kate Humble sets sail on a 2000-mile adventure across the Pacific with a team of top natural history filmmakers and deep water marine biologists.', null, 'Ended', 60, 53, '2008-08-17', '', null, null, null, 0, 'graphical/83311-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (147, 83312, 'De Pfaffs', 'This long-running, popular Flemish series follows the daily lives, both public and private, of the extended family of Belgium''s legendary soccer goalkeeper Jean-Marie, his wife and her in-living dad, their offspring and in-laws. Daughter Kelly Pfaff, a tall model and professional show-dancer, is married to physically measly serial pop-singer and general buffoon Sam Gooris; Kelly''s sisters Lindsay, whose partner Dave Volders was unknown before the series, and Debby, married to model Nicolas Liébaert, also have small children, all regular guests in (grand)pa''s conspicuous villa in Brasschaat near Antwerp.', null, 'Ended', 35, 105, '2002-09-06', '', null, null, null, 0, 'graphical/83312-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (148, 83313, 'Trexx and Flipside', 'Trexx and Flipside are wannabe hip hop stars but their music label - Wu Hah Records - is run by Mr Brilliance, who is more in tune with crooning than rap. Fortunately, his so-called assistant, Ollie, knows what she is doing and loves the boys'' work. But even she worries that their enthusiasm is doing more harm than good - when they crashed the British Rap Awards (Bras) in a borrowed strip limo shared with a hen party, for instance. And, when it comes to using a little muscle, the hip hop world is inhabited by the uninhibited, and gangsta rapper B-ICE has sworn to keep the boys exactly where he put them - in the gutter. Pitted against their rap rivals and backed by a no-hoper of a manager, will Trexx and Flipside ever make it?', null, 'Continuing', 30, 92, '2008-07-06', 'tt1263594', null, null, 'https://m.media-amazon.com/images/M/MV5BOGRjZjIwYTgtY2FiYi00MDIzLThjMzctZDU4YTYyNzZjN2U3XkEyXkFqcGdeQXVyNTg4NDI4NjE@._V1_SX300.jpg', 0, 'graphical/83313-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (149, 83314, 'Koihime Musou', 'Koihime Musou re-imagines the classic Chinese historical novel Romance of the Three Kingdoms in action/love comedy form with an all-female cast.', null, 'Ended', 25, 106, '2008-07-08', 'tt1277981', null, null, 'https://m.media-amazon.com/images/M/MV5BNGU5MjZjMWMtNjlkYS00NzM2LThjYWYtYzM4NDQ4NTVhYmMyXkEyXkFqcGdeQXVyMjM5ODMxODc@._V1_SX300.jpg', 0, 'graphical/83314-g5.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (150, 83315, 'Akane-Iro ni Somaru Saka', 'Jun''ichi Nagase attends a prestigious high school. He has the nickname Geno Killer since he was rebellious in middle school. This is used, inadvertently, to help a girl named Yuuhi Katagiri from trouble. She later transfers to his school. Jun''ichi then kisses her due to a misunderstanding. Outraged, because he stole her first kiss and embarrassed her, she screams at him. Subsequently, it turns out that Yuuhi is his fiancé as arranged by their parents. Their parents discuss the matter and order them to go out together for a month to restore their relationship. If their relationship does not get better, the engagement will then be cancelled.', null, 'Ended', 25, 106, '2008-10-02', 'tt1258215', null, null, 'https://m.media-amazon.com/images/M/MV5BNjJkZmMyNjMtMjIyYS00N2I1LTlhYTgtYzFiNWU2NTExYzAyXkEyXkFqcGdeQXVyMzgxODM4NjM@._V1_SX300.jpg', 0, 'graphical/83315-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (151, 83316, 'Casshern Sins', 'A reboot of the classic anime series Neo Human Casshern, Casshern Sins discards the previous continuity. Casshern is a cyborg subordinate of Buraiking Boss who was ordered to assassinate the savior of mankind, and has thus doomed the Earth to ruin.', null, 'Ended', 25, 103, '2008-10-02', 'tt0235119', null, null, 'https://m.media-amazon.com/images/M/MV5BNDEzYmVlYzgtYTEzNy00MzBkLWJhMTQtMTM2NTJmOTAxN2IxL2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg', 0, 'graphical/83316-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (152, 83317, 'Hyakko', 'On the first day of high school at Kamizono Academy, four girls meet each other while lost on the huge campus, and form a friendship. This story follows the daily school life of the four girls and their eccentric classmates.', null, 'Ended', 25, 74, '2008-10-02', 'tt1301842', null, null, 'https://m.media-amazon.com/images/M/MV5BZWFhYzY1ZGUtZDA2MS00YTY5LTg3N2UtZDk0NzI3ZmMyNGZmXkEyXkFqcGdeQXVyMjc2Nzg5OTQ@._V1_SX300.jpg', 0, 'graphical/83317-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (153, 83318, 'Kannagi: Crazy Shrine Maidens', 'In Short "Kannagi". In english translate "Shrine Maiden".  Base on Japanese Manga series written and illustrated by Eri Takenashi.  // An art student named Jin Mikuriya carves a statue from the wood of the Kannagi tree only to have the statue come to life in the form of a goddess, who has now taken over the statue. He and "Nagi" work together to destroy the impurities that are gathering in the town.', null, 'Ended', 25, 107, '2008-10-04', 'tt1244315', null, null, 'https://m.media-amazon.com/images/M/MV5BY2I2Njc3ZWYtZDE0ZC00MjdjLTlhYjItZmQ5MTIyOTc2YmE2XkEyXkFqcGdeQXVyNjIyNDgwMzM@._V1_SX300.jpg', 0, 'graphical/83318-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (154, 83319, 'Navy SEALS - BUDS Class 234', 'A Six Hour Series for The Discovery Channel that follows 80 candidates of Class 234 and their efforts to become US NAVY SEALS. You WILL feel the pain after watching the physical and mental challenges these candidates are faced with.
', null, 'Ended', 45, 1, '2000-10-19', 'tt0426761', null, null, 'https://m.media-amazon.com/images/M/MV5BZTY3YWYzZjctOTI4Ni00M2RkLWIxNzUtMGI4YWIzM2I3NmU2XkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg', 0, 'graphical/83319-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (155, 83320, 'Voyage to The Planets and Beyond', 'Join an international team of astronauts for a fictitious journey to the outer reaches of the solar system. Comprised of five astronauts from the world''s leading, space-faring nations, the crew embarks on a six-year journey to Mercury, Venus, Mars, Saturn, Jupiter, Pluto and the deadliest body in the solar system: the Sun. Using modern-day science, the crew demonstrates just how such a voyage might be possible and how future astronauts might survive the rigors of long-range spaceflight.

', null, 'Ended', 120, 53, '2004-11-19', '', null, null, null, 0, '');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (156, 83322, 'A Certain Magical Index', 'Set in Academy City, a city of scientifically advanced superhuman students, located to the west of Tokyo, in a world where magic is also real. Kamijou Touma''s right hand, the Imagine Breaker, can negate all magic, psychic, or divine powers, but not his own bad luck. One day he finds a young girl, Index, hanging on his balcony railing. She turns out to be a nun from the Church of England, and her mind has been implanted with the Index Librorum Prohibitorum — all the magical texts the Church has removed from circulation. His encounter leads him to meet others from the secret world of science and magic and right into an adventure where science and magic collide.', null, 'Ended', 25, 106, '2008-10-04', 'tt1308089', null, null, 'https://m.media-amazon.com/images/M/MV5BZDkxMTdmMDgtZmQ1NC00NzZlLWIxMjgtMjkyMTFlZjI3OWZiXkEyXkFqcGdeQXVyMjQ0OTA1Nzc@._V1_SX300.jpg', 0, 'graphical/83322-g4.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (157, 83323, 'Naked Josh', 'Naked Josh was a Canadian television series broadcast on Showcase. The show starred David Julian Hirsh as Josh Gould, a university professor in Montreal who, although he teaches a sexual anthropology course, struggles to understand the ever-shifting rules and expectations of the dating scene.

It premiered in the 2004-2005 television season with eight half hour episodes. It aired for a total of three seasons, however the last episode aired on July 18, 2006, and Showcase has announced that the show will not be renewed. The show''s first season briefly appeared on the Oxygen Network in the U.S.', null, 'Ended', 30, 108, '2004-04-04', '', null, null, null, 0, 'graphical/83323-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (158, 83324, 'UK Border Force', 'A factual TV series documenting the ongoing effort to protect the UKs borders from anything from illegal immigrants to Quarantine risks. Based upon Border Patrol (NZ) and Border Security (Australia).', null, 'Ended', 45, 109, '2008-09-09', '', null, null, null, 0, 'graphical/83324-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (159, 83325, 'Hero Ships', 'From the ship nicknamed "Old Ironsides" to today''s nuclear-powered marvels, these U.S. Navy legends and their crews have made a name for themselves as some of the most impressive fighting vessels in history. Admired at home and abroad, each has their own story to tell. Watch to find out why they''re called Hero Ships. ', null, 'Ended', 45, 110, null, 'tt1236227', null, null, 'https://ia.media-imdb.com/images/M/MV5BMjkwNjEzNzI1NF5BMl5BanBnXkFtZTcwNDA0NjYwMg@@._V1_SX300.jpg', 0, 'graphical/83325-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (160, 83326, 'Kimora: Life in the Fab Lane', 'Kimora Lee Simmons has been at home in the spotlight ever since style czar Karl Lagerfeld handpicked her to model for Chanel when she was only 13. Today, as CEO of the global clothing brand Baby Phat, she is a force to be reckoned with in both business and fashion. Kimora has it all--from the multimillion-dollar fashion empire to the priceless love of two darling daughters, Ming and Aoki. What''s the secret to her success? Wake up with the driven diva each week to find out.', null, '', 25, 24, '2007-08-05', '', null, null, null, 0, 'graphical/83326-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (161, 83327, 'Monaco Franze', 'Franz Muenchinger, called "Monaco", is married to Annete von Soettingen. But he can''t take his eyes of young girls and as a police officer he often goes out for "Fahndung". Always at his side is Manni Kopfeck, also policeman and always hoping that one of the girls Franz gets will be left for him.', null, 'Ended', 45, 111, '1983-03-03', 'tt0085058', null, null, 'https://m.media-amazon.com/images/M/MV5BMTMzNjQ4MTcxNF5BMl5BanBnXkFtZTcwNzcxODcyMQ@@._V1_SX300.jpg', 0, 'graphical/83327-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (162, 83328, 'MA 2412', 'MA 2412 is a fake service, inspired by the Magistral Department of Vienna (MA), and Christmas (12/24). The series is a parody of the work in an office in general, and mostly in an Austro-Viennese Office. It shows pretty much all the common clichés about offices.', null, 'Ended', 25, 87, '1998-12-31', 'tt0172022', null, null, 'https://m.media-amazon.com/images/M/MV5BMGExYjQ3ZDYtYTcwMi00OWVjLWIzYzEtNGU0NGI1ZDE4Y2Y2XkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg', 0, 'text/83328.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (163, 83329, 'The Amazing Hour', 'La Hora Chanante (The Whamming Hour or The Amazing Hour) is a Spanish comedy television show aired through the cable/satellite local version of the Paramount Comedy channel. Each episode is a half hour long and consists of a series of unrelated sketches (both acted out and animated) and a story featuring some celebrity which helps keep continuity throughout the program. Episodes used to be released on a monthly basis until 2006, when the show was discontinued. ', null, 'Ended', 30, 112, '2002-05-01', 'tt0331134', null, null, 'https://m.media-amazon.com/images/M/MV5BMTRmYTBiNDktMTIxMC00YjllLWI0NDItNTNlMDUzOWZkMTJkXkEyXkFqcGdeQXVyMTA0MjU0Ng@@._V1_SX300.jpg', 0, 'graphical/83329-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (164, 83330, 'History''s Mysteries', 'History''s Mysteries explores stories, events and legends that have intrigued us for generations and started debate in countless time periods. No subject is left untouched in this shows quest for answers.
 ', null, 'Ended', 45, 7, '1994-10-07', 'tt1229946', null, null, 'https://m.media-amazon.com/images/M/MV5BM2QyY2NiNGYtNDY2ZS00OWU0LTgzMzAtNTdlMDY0NDhhMzlkXkEyXkFqcGdeQXVyNTM3MDMyMDQ@._V1_SX300.jpg', 0, 'graphical/83330-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (165, 83331, 'MTV''s Fear', '"Fear" follows a group of five or more contestants being left at an allegedly haunted location and led them on a series of dares over two nights to explore and confirm whether or not the place is haunted.', null, 'Ended', 45, 113, '2000-09-01', 'tt0221741', null, null, 'https://m.media-amazon.com/images/M/MV5BZGE5M2MzNTktYTIwYy00ZDQwLTgyYjUtNTY3YzY0ZjBiYjdmXkEyXkFqcGdeQXVyNzc5NzkyMzA@._V1_SX300.jpg', 0, 'graphical/83331-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (166, 83332, 'Design Simon and Thomas', null, null, 'Continuing', 60, 114, null, '', null, null, null, 0, 'graphical/83332-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (167, 83333, 'History''s Lost & Found', 'History''s Lost and Found was a television show from the History Channel first aired in 1999. Each episode is divided into three different segments concerning a different "lost" item or artifact from history. Most of the time, the three segments do not relate. Each segment runs around 7 minutes and in this time we learn the history, of several famous lost artifacts such as the flags from the Battle of Iwo Jima, and other not so famous artifacts like the first TV Dinner tray. Some segments were reused in other episodes. Episodes of the show were released on VHS in 2001 and the first episode has been released on DVD. 2000 was the big year for the series as most of the episodes were created and aired during that year, but a few new episodes aired 4 years later in 2004.

', null, 'Ended', 25, 7, '1999-08-07', '', null, null, null, 0, 'graphical/83333-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (168, 83335, 'Tales of the Abyss', 'Tales of the Abyss takes place on Auldrant, a planet composed of elementary particles called Fonons. For much of Auldrant''s history, only six fonons were known to exist, representing the elements of Shadow, Earth, Wind, Water, Fire and Light; but eventually a seventh fonon, controlling Sound, is discovered. Its discovery brings great chaos: using this newest Seventh Fonon allows one to read the future. One such Seventh Fonist, Yulia Jue, puts in place a future for the world for thousands of years to come, with the promise of unlimited prosperity at its end. This prophecy of the future''s set path becomes known as the "Score" and is documented on "Fonstones" scattered throughout the world. The nations of Kimlasca-Lanvaldear and Malkuth have fought over the fragments of these tablets for generations, each uncovering them and hoping to discover the future before the other. Meanwhile, a holy order emerges dedicated to the reading of the Score and the keeping of the peace. This "Order of Lorelei" is headed by a Fon Master and maintains both religious/political and military branches. Finally, the Score and its promise of prosperity lead to a dangerous complacency within the general population of Auldrant; the slaughter of an entire people living on the island of Hod and the destruction of that landmass are countenanced because it was predicted in the Score.', null, 'Ended', 25, 107, '2008-10-03', 'tt1278280', null, null, 'https://m.media-amazon.com/images/M/MV5BYmRkMGNlMWQtYjYwMi00NzEzLTk2ZGQtZTQzNWNmZmZhOGFkXkEyXkFqcGdeQXVyNjExODE1MDc@._V1_SX300.jpg', 0, 'graphical/83335-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (169, 83337, 'The Merrick & Rosso Show', 'Each week the boys will front up before a live studio audience with their unique take on anything and everything. From what’s happening in the world of news and sport to the big questions like “Can you deep fry a watermelon?”

On THE MERRICK AND ROSSO SHOW, celebrities including Sophie Monk, Ian Thorpe and TV legend, Ray Martin will make regular guest appearances from in-studio interviews to recorded comedy pieces to show you a side of them never before seen. Into the mix will go plenty of studio audience interaction and more mayhem and stupidity than is legal in three states.

For perhaps the first time, Merrick Watts and Tim Ross will truly focus the energy and excitement of their legendary sell-out live comedy shows and bring that force to our screens.', null, '', 30, 115, null, '', null, null, null, 0, 'graphical/83337-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (170, 83338, 'Ace Of Cakes', 'Ace of Cakes is a reality series that follows a group of eclectic cake decorators in Baltimore, led by Food Network Challenge star Duff Goldman. With an attitude and personality more suited for rock stardom than running a specialty cakes business, Duff shuns the traditional approach to cake making and decorating. Using power tools and with the help of his artistic staff, Duff creates some of the most amazing cakes ever seen. From abstract wedding cakes to a cake shaped as a Jeep so detailed it looks like it could actually run, these cakes are more than delicious – they''re works of art.', null, 'Ended', 25, 116, '2006-08-17', 'tt0842903', null, null, 'https://m.media-amazon.com/images/M/MV5BMTY3MDk4MDI4NF5BMl5BanBnXkFtZTgwNTEzNzgzNDE@._V1_SX300.jpg', 0, 'graphical/83338-g2.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (171, 83339, 'Testees', 'Testees is a half-hour comedy from Kenny Hotz (creator of Kenny vs. Spenny) about two best friends and roommates who make a living as guinea pigs for "Testico," a drug and product testing facility.  In each episode, the guys just try to live their lives while dealing with the often surprising side effects and highly unusual occupational hazards.

The show is produced by FX Productions and Blueprint Entertainment Inc.', null, 'Ended', 25, 117, '2008-10-09', 'tt1262403', null, null, 'https://m.media-amazon.com/images/M/MV5BMTQzMjYwODk1N15BMl5BanBnXkFtZTcwODA5Mzk5Mw@@._V1_SX300.jpg', 0, 'graphical/83339-g.jpg');
INSERT INTO public.series (id, tvdbid, name, description, userrating, status, runtime, networkid, firstaired, id_imdb, added, updated, posterurl, followers, bannerurl) VALUES (172, 83340, 'My Lovely Sam-Soon', 'Kim Sam-soon is a baker who has a talent in making pastries and cakes. On Christmas Eve, she caught her boyfriend, Min Hyun-woo, cheating on her and breaks up. On that same night, she accidentally went into the men''s restroom and met Hyun Jin-hun. By sheer coincidence, Jin-hun needs a baker for his restaurant Bon Appetit and Sam-soon is unemployed. Sam-soon is hired as the restaurant''s chief baker and the two fight like a cat and dog.', null, 'Ended', 60, 17, '2005-06-01', 'tt0477524', null, null, 'https://m.media-amazon.com/images/M/MV5BMDc1YjNhODYtZTY3Ni00NzM5LWFmZTgtYTk2MWFlNzc2NzliXkEyXkFqcGdeQXVyNTI4MDA2NDE@._V1_SX300.jpg', 0, 'graphical/83340-g2.jpg');
